[
    {
        "commit": "afd16f966fda6831f337291388bb86b85c5ba472",
        "previous_commit": "776ab17653ec3a8dd472cb4b8ea715ec92147187",
        "date": 1554990199,
        "releases": {
            "previous": "afd16f966fda6831f337291388bb86b85c5ba472",
            "next": "afd16f966fda6831f337291388bb86b85c5ba472"
        },
        "commit_message": "Update ASM to 7.1 (#4095)\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "afd16f966fda6831f337291388bb86b85c5ba472": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/AnnotationWriter.java": [
                    "public void jersey.red.org.objectweb.asm.AnnotationWriter.visitEnd()",
                    "public void jersey.red.org.objectweb.asm.AnnotationWriter.visit(final String name, final Object value)",
                    "public AnnotationVisitor jersey.red.org.objectweb.asm.AnnotationWriter.visitArray(final String name)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Attribute.java": [
                    "protected Label[] jersey.red.org.objectweb.asm.Attribute.getLabels()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ByteVector.java": [
                    "private void jersey.red.org.objectweb.asm.ByteVector.enlarge(final int size)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassReader.java": [
                    "public String[] jersey.red.org.objectweb.asm.ClassReader.getInterfaces()",
                    "public int jersey.red.org.objectweb.asm.ClassReader.getItemCount()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassWriter.java": [
                    "public final void jersey.red.org.objectweb.asm.ClassWriter.visitInnerClass( final String name, final String outerName, final String innerName, final int access)",
                    "public byte[] jersey.red.org.objectweb.asm.ClassWriter.toByteArray()",
                    "public final void jersey.red.org.objectweb.asm.ClassWriter.visit( final int version, final int access, final String name, final String signature, final String superName, final String[] interfaces)",
                    "public int jersey.red.org.objectweb.asm.ClassWriter.newClass(final String value)",
                    "public final void jersey.red.org.objectweb.asm.ClassWriter.visitSource(final String file, final String debug)",
                    "protected String jersey.red.org.objectweb.asm.ClassWriter.getCommonSuperClass(final String type1, final String type2)",
                    "public int jersey.red.org.objectweb.asm.ClassWriter.newUTF8(final String value)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Frame.java": [
                    "private void jersey.red.org.objectweb.asm.Frame.pop(final int elements)",
                    "private int jersey.red.org.objectweb.asm.Frame.pop()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Handle.java": [
                    "public int jersey.red.org.objectweb.asm.Handle.hashCode()",
                    "public String jersey.red.org.objectweb.asm.Handle.getDesc()",
                    "public String jersey.red.org.objectweb.asm.Handle.toString()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Label.java": [
                    "public int jersey.red.org.objectweb.asm.Label.getOffset()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/MethodWriter.java": [
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitVarInsn(final int opcode, final int var)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitInsn(final int opcode)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitJumpInsn(final int opcode, final Label label)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitTryCatchBlock( final Label start, final Label end, final Label handler, final String type)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitTypeInsn(final int opcode, final String type)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitLabel(final Label label)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitLineNumber(final int line, final Label start)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitTableSwitchInsn( final int min, final int max, final Label dflt, final Label... labels)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitMaxs(final int maxStack, final int maxLocals)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitIntInsn(final int opcode, final int operand)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitIincInsn(final int var, final int increment)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitLookupSwitchInsn(final Label dflt, final int[] keys, final Label[] labels)",
                    "private void jersey.red.org.objectweb.asm.MethodWriter.visitSwitchInsn(final Label dflt, final Label[] labels)",
                    "public AnnotationVisitor jersey.red.org.objectweb.asm.MethodWriter.visitAnnotationDefault()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Type.java": [
                    "public static Type jersey.red.org.objectweb.asm.Type.getMethodType(final String methodDescriptor)",
                    "public int jersey.red.org.objectweb.asm.Type.hashCode()",
                    "public int jersey.red.org.objectweb.asm.Type.getOpcode(final int opcode)",
                    "public static Type jersey.red.org.objectweb.asm.Type.getReturnType(final String methodDescriptor)",
                    "public String jersey.red.org.objectweb.asm.Type.getDescriptor()",
                    "public int jersey.red.org.objectweb.asm.Type.getSort()",
                    "public static Type jersey.red.org.objectweb.asm.Type.getObjectType(final String internalName)",
                    "public int jersey.red.org.objectweb.asm.Type.getSize()",
                    "public String jersey.red.org.objectweb.asm.Type.getInternalName()",
                    "public String jersey.red.org.objectweb.asm.Type.getClassName()",
                    "public int jersey.red.org.objectweb.asm.Type.getDimensions()",
                    "public static Type[] jersey.red.org.objectweb.asm.Type.getArgumentTypes(final String methodDescriptor)",
                    "public static Type jersey.red.org.objectweb.asm.Type.getType(final String typeDescriptor)",
                    "public Type jersey.red.org.objectweb.asm.Type.getElementType()",
                    "public static String jersey.red.org.objectweb.asm.Type.getMethodDescriptor(final Type returnType, final Type... argumentTypes)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/TypePath.java": [
                    "public static TypePath jersey.red.org.objectweb.asm.TypePath.fromString(final String typePath)",
                    "public int jersey.red.org.objectweb.asm.TypePath.getLength()",
                    "public String jersey.red.org.objectweb.asm.TypePath.toString()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/TypeReference.java": [
                    "public int jersey.red.org.objectweb.asm.TypeReference.getTypeParameterBoundIndex()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getTypeArgumentIndex()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getFormalParameterIndex()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getValue()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getSort()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getTryCatchBlockIndex()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getExceptionIndex()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getSuperTypeIndex()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getTypeParameterIndex()"
                ]
            },
            "776ab17653ec3a8dd472cb4b8ea715ec92147187": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/AnnotationWriter.java": [
                    "public void jersey.red.org.objectweb.asm.AnnotationWriter.visitEnd()",
                    "public void jersey.red.org.objectweb.asm.AnnotationWriter.visit(final String name, final Object value)",
                    "public AnnotationVisitor jersey.red.org.objectweb.asm.AnnotationWriter.visitArray(final String name)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Attribute.java": [
                    "protected Label[] jersey.red.org.objectweb.asm.Attribute.getLabels()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ByteVector.java": [
                    "private void jersey.red.org.objectweb.asm.ByteVector.enlarge(final int size)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassReader.java": [
                    "public String[] jersey.red.org.objectweb.asm.ClassReader.getInterfaces()",
                    "public int jersey.red.org.objectweb.asm.ClassReader.getItemCount()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassWriter.java": [
                    "public byte[] jersey.red.org.objectweb.asm.ClassWriter.toByteArray()",
                    "public int jersey.red.org.objectweb.asm.ClassWriter.newClass(final String value)",
                    "public final void jersey.red.org.objectweb.asm.ClassWriter.visit(final int version, final int access, final String name, final String signature, final String superName, final String[] interfaces)",
                    "public final void jersey.red.org.objectweb.asm.ClassWriter.visitSource(final String file, final String debug)",
                    "protected String jersey.red.org.objectweb.asm.ClassWriter.getCommonSuperClass(final String type1, final String type2)",
                    "public int jersey.red.org.objectweb.asm.ClassWriter.newUTF8(final String value)",
                    "public final void jersey.red.org.objectweb.asm.ClassWriter.visitInnerClass(final String name, final String outerName, final String innerName, final int access)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Frame.java": [
                    "private void jersey.red.org.objectweb.asm.Frame.pop(final int elements)",
                    "private int jersey.red.org.objectweb.asm.Frame.pop()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Handle.java": [
                    "public int jersey.red.org.objectweb.asm.Handle.hashCode()",
                    "public String jersey.red.org.objectweb.asm.Handle.getDesc()",
                    "public String jersey.red.org.objectweb.asm.Handle.toString()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Label.java": [
                    "public int jersey.red.org.objectweb.asm.Label.getOffset()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/MethodWriter.java": [
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitVarInsn(final int opcode, final int var)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitInsn(final int opcode)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitJumpInsn(final int opcode, final Label label)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitLineNumber(final int line, final Label start)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitTypeInsn(final int opcode, final String type)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitLabel(final Label label)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitMaxs(final int maxStack, final int maxLocals)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitTableSwitchInsn(final int min, final int max, final Label dflt, final Label... labels)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitIntInsn(final int opcode, final int operand)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitIincInsn(final int var, final int increment)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitTryCatchBlock(final Label start, final Label end, final Label handler, final String type)",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitLookupSwitchInsn(final Label dflt, final int[] keys, final Label[] labels)",
                    "private void jersey.red.org.objectweb.asm.MethodWriter.visitSwitchInsn(final Label dflt, final Label[] labels)",
                    "public AnnotationVisitor jersey.red.org.objectweb.asm.MethodWriter.visitAnnotationDefault()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Type.java": [
                    "public static Type jersey.red.org.objectweb.asm.Type.getMethodType(final String methodDescriptor)",
                    "public int jersey.red.org.objectweb.asm.Type.hashCode()",
                    "public int jersey.red.org.objectweb.asm.Type.getOpcode(final int opcode)",
                    "public static Type jersey.red.org.objectweb.asm.Type.getReturnType(final String methodDescriptor)",
                    "public int jersey.red.org.objectweb.asm.Type.getSort()",
                    "public String jersey.red.org.objectweb.asm.Type.getDescriptor()",
                    "public static Type jersey.red.org.objectweb.asm.Type.getObjectType(final String internalName)",
                    "public int jersey.red.org.objectweb.asm.Type.getSize()",
                    "public String jersey.red.org.objectweb.asm.Type.getInternalName()",
                    "public String jersey.red.org.objectweb.asm.Type.getClassName()",
                    "public int jersey.red.org.objectweb.asm.Type.getDimensions()",
                    "public static Type[] jersey.red.org.objectweb.asm.Type.getArgumentTypes(final String methodDescriptor)",
                    "public static Type jersey.red.org.objectweb.asm.Type.getType(final String typeDescriptor)",
                    "public Type jersey.red.org.objectweb.asm.Type.getElementType()",
                    "public static String jersey.red.org.objectweb.asm.Type.getMethodDescriptor(final Type returnType, final Type... argumentTypes)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/TypePath.java": [
                    "public static TypePath jersey.red.org.objectweb.asm.TypePath.fromString(final String typePath)",
                    "public int jersey.red.org.objectweb.asm.TypePath.getLength()",
                    "public String jersey.red.org.objectweb.asm.TypePath.toString()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/TypeReference.java": [
                    "public int jersey.red.org.objectweb.asm.TypeReference.getTypeParameterBoundIndex()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getTypeArgumentIndex()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getFormalParameterIndex()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getValue()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getSort()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getTryCatchBlockIndex()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getExceptionIndex()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getSuperTypeIndex()",
                    "public int jersey.red.org.objectweb.asm.TypeReference.getTypeParameterIndex()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "82a85a1bffeaf5f78607cf5c0c0d4d4e6ba0457e",
        "previous_commit": "a7ea89bdbf09bd4439537c954c23a5b847818464",
        "date": 1572363100,
        "releases": {
            "previous": "82a85a1bffeaf5f78607cf5c0c0d4d4e6ba0457e",
            "next": "82a85a1bffeaf5f78607cf5c0c0d4d4e6ba0457e"
        },
        "commit_message": "Allow for using HeaderDelegateProvider service  (#4276)\n\n* Allow for using HeaderDelegateProvider service if CommonProperties#METAINF_SERVICES_LOOKUP_DISABLE is not true\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "82a85a1bffeaf5f78607cf5c0c0d4d4e6ba0457e": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "public ClientResponse org.glassfish.jersey.apache.connector.ApacheConnector.apply(final ClientRequest clientRequest)"
                ],
                "connectors/grizzly-connector/src/main/java/org/glassfish/jersey/grizzly/connector/GrizzlyConnector.java": [
                    "public STATE org.glassfish.jersey.grizzly.connector.GrizzlyConnector.onHeadersReceived(HttpResponseHeaders headers)",
                    "public Future<?> org.glassfish.jersey.grizzly.connector.GrizzlyConnector.apply(final ClientRequest request, final AsyncConnectorCallback callback)",
                    "public ClientResponse org.glassfish.jersey.grizzly.connector.GrizzlyConnector.apply(final ClientRequest request)"
                ],
                "connectors/jetty-connector/src/main/java/org/glassfish/jersey/jetty/connector/JettyConnector.java": [
                    "public Future<?> org.glassfish.jersey.jetty.connector.JettyConnector.apply(final ClientRequest jerseyRequest, final AsyncConnectorCallback callback)",
                    "public void org.glassfish.jersey.jetty.connector.JettyConnector.onHeaders(final Response jettyResponse)",
                    "private Map<String, String> org.glassfish.jersey.jetty.connector.JettyConnector.writeOutBoundHeaders(final MultivaluedMap<String, Object> headers, final Request request)",
                    "public ClientResponse org.glassfish.jersey.jetty.connector.JettyConnector.apply(final ClientRequest jerseyRequest)"
                ],
                "containers/grizzly2-http/src/main/java/org/glassfish/jersey/grizzly2/httpserver/GrizzlyHttpContainer.java": [
                    "public void org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainer.service(final Request request, final Response response)"
                ],
                "containers/jdk-http/src/main/java/org/glassfish/jersey/jdkhttp/JdkHttpHandlerContainer.java": [
                    "public void org.glassfish.jersey.jdkhttp.JdkHttpHandlerContainer.handle(final HttpExchange exchange)"
                ],
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/WebComponent.java": [
                    "ResponseWriter serviceImpl( final URI baseUri, final URI requestUri, final HttpServletRequest servletRequest, final HttpServletResponse servletResponse)"
                ],
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainer.java": [
                    "public void org.glassfish.jersey.jetty.JettyHttpContainer.handle(final String target, final Request request, final HttpServletRequest httpServletRequest, final HttpServletResponse httpServletResponse)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/HttpVersionChooser.java": [
                    "protected void org.glassfish.jersey.netty.httpserver.HttpVersionChooser.configurePipeline(ChannelHandlerContext ctx, String protocol)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyHttp2ServerHandler.java": [
                    "private ContainerRequest org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.createContainerRequest(ChannelHandlerContext ctx, Http2HeadersFrame http2Headers)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerHandler.java": [
                    "private ContainerRequest org.glassfish.jersey.netty.httpserver.JerseyServerHandler.createContainerRequest(ChannelHandlerContext ctx, HttpRequest req)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerInitializer.java": [
                    "private void org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.configureClearText(SocketChannel ch)",
                    "public void org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.initChannel(SocketChannel ch)",
                    "private void org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.configureSsl(SocketChannel ch)",
                    "public HttpServerUpgradeHandler.UpgradeCodec org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.newUpgradeCodec(CharSequence protocol)",
                    "protected void org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.channelRead0(ChannelHandlerContext ctx, HttpMessage msg)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/NettyHttpContainerProvider.java": [
                    "public static Channel org.glassfish.jersey.netty.httpserver.NettyHttpContainerProvider.createServer(final URI baseUri, final ResourceConfig configuration, SslContext sslContext, final boolean block)",
                    "public static Channel org.glassfish.jersey.netty.httpserver.NettyHttpContainerProvider.createHttp2Server(final URI baseUri, final ResourceConfig configuration, SslContext sslContext)"
                ],
                "containers/simple-http/src/main/java/org/glassfish/jersey/simple/SimpleContainer.java": [
                    "public void org.glassfish.jersey.simple.SimpleContainer.handle(final Request request, final Response response)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/ClientFilteringStages.java": [
                    "public Continuation<ClientRequest> org.glassfish.jersey.client.ClientFilteringStages.apply(ClientRequest requestContext)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java": [
                    "public MultivaluedMap<String, String> org.glassfish.jersey.client.ClientRequest.getRequestHeaders()",
                    "public List<String> org.glassfish.jersey.client.ClientRequest.getRequestHeader(String name)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/AbstractRuntimeDelegate.java": [
                    "public ResponseBuilder org.glassfish.jersey.internal.AbstractRuntimeDelegate.createResponseBuilder()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/AbstractServiceFinderConfigurator.java": [
                    "protected List<Class<T>> org.glassfish.jersey.internal.AbstractServiceFinderConfigurator<T>.loadImplementations(Map<String, Object> applicationProperties)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/ServiceFinderBinder.java": [
                    "protected void org.glassfish.jersey.internal.ServiceFinderBinder<T>.configure()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/HeaderUtils.java": [
                    "private static List<String> org.glassfish.jersey.message.internal.HeaderUtils.asStringList(final List<Object> headerValues, final RuntimeDelegate rd)",
                    "public static void org.glassfish.jersey.message.internal.HeaderUtils.checkHeaderChanges(final Map<String, String> headersSnapshot, final MultivaluedMap<String, Object> currentHeaders, final String connectorName, final Configuration configuration)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InboundMessageContext.java": [
                    "public InboundMessageContext org.glassfish.jersey.message.internal.InboundMessageContext.headers(String name, Object... values)",
                    "private List<String> org.glassfish.jersey.message.internal.InboundMessageContext.iterableToList(final Iterable<?> values)",
                    "public InboundMessageContext org.glassfish.jersey.message.internal.InboundMessageContext.header(String name, Object value)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/OutboundMessageContext.java": [
                    "public Set<Link> org.glassfish.jersey.message.internal.OutboundMessageContext.getLinks()",
                    "public MultivaluedMap<String, String> org.glassfish.jersey.message.internal.OutboundMessageContext.getStringHeaders()",
                    "public List<MediaType> org.glassfish.jersey.message.internal.OutboundMessageContext.getAcceptableMediaTypes()",
                    "public Map<String, Cookie> org.glassfish.jersey.message.internal.OutboundMessageContext.getRequestCookies()",
                    "public List<Locale> org.glassfish.jersey.message.internal.OutboundMessageContext.getAcceptableLanguages()",
                    "public String org.glassfish.jersey.message.internal.OutboundMessageContext.getHeaderString(String name)",
                    "public Map<String, NewCookie> org.glassfish.jersey.message.internal.OutboundMessageContext.getResponseCookies()"
                ],
                "examples/helloworld-benchmark/src/main/java/org/glassfish/jersey/examples/helloworld/HelloWorldBenchmark.java": [
                    "public void org.glassfish.jersey.examples.helloworld.HelloWorldBenchmark.request()"
                ]
            },
            "a7ea89bdbf09bd4439537c954c23a5b847818464": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "public ClientResponse org.glassfish.jersey.apache.connector.ApacheConnector.apply(final ClientRequest clientRequest)"
                ],
                "connectors/grizzly-connector/src/main/java/org/glassfish/jersey/grizzly/connector/GrizzlyConnector.java": [
                    "public STATE org.glassfish.jersey.grizzly.connector.GrizzlyConnector.onHeadersReceived(HttpResponseHeaders headers)",
                    "public Future<?> org.glassfish.jersey.grizzly.connector.GrizzlyConnector.apply(final ClientRequest request, final AsyncConnectorCallback callback)",
                    "public ClientResponse org.glassfish.jersey.grizzly.connector.GrizzlyConnector.apply(final ClientRequest request)"
                ],
                "connectors/jetty-connector/src/main/java/org/glassfish/jersey/jetty/connector/JettyConnector.java": [
                    "public Future<?> org.glassfish.jersey.jetty.connector.JettyConnector.apply(final ClientRequest jerseyRequest, final AsyncConnectorCallback callback)",
                    "public void org.glassfish.jersey.jetty.connector.JettyConnector.onHeaders(final Response jettyResponse)",
                    "private static Map<String, String> org.glassfish.jersey.jetty.connector.JettyConnector.writeOutBoundHeaders(final MultivaluedMap<String, Object> headers, final Request request)",
                    "public ClientResponse org.glassfish.jersey.jetty.connector.JettyConnector.apply(final ClientRequest jerseyRequest)"
                ],
                "containers/grizzly2-http/src/main/java/org/glassfish/jersey/grizzly2/httpserver/GrizzlyHttpContainer.java": [
                    "public void org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainer.service(final Request request, final Response response)"
                ],
                "containers/jdk-http/src/main/java/org/glassfish/jersey/jdkhttp/JdkHttpHandlerContainer.java": [
                    "public void org.glassfish.jersey.jdkhttp.JdkHttpHandlerContainer.handle(final HttpExchange exchange)"
                ],
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/WebComponent.java": [
                    "ResponseWriter serviceImpl( final URI baseUri, final URI requestUri, final HttpServletRequest servletRequest, final HttpServletResponse servletResponse)"
                ],
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainer.java": [
                    "public void org.glassfish.jersey.jetty.JettyHttpContainer.handle(final String target, final Request request, final HttpServletRequest httpServletRequest, final HttpServletResponse httpServletResponse)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/HttpVersionChooser.java": [
                    "protected void org.glassfish.jersey.netty.httpserver.HttpVersionChooser.configurePipeline(ChannelHandlerContext ctx, String protocol)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyHttp2ServerHandler.java": [
                    "private ContainerRequest org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.createContainerRequest(ChannelHandlerContext ctx, Http2HeadersFrame http2Headers)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerHandler.java": [
                    "private ContainerRequest org.glassfish.jersey.netty.httpserver.JerseyServerHandler.createContainerRequest(ChannelHandlerContext ctx, HttpRequest req)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerInitializer.java": [
                    "private void org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.configureClearText(SocketChannel ch)",
                    "public void org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.initChannel(SocketChannel ch)",
                    "private void org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.configureSsl(SocketChannel ch)",
                    "public HttpServerUpgradeHandler.UpgradeCodec org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.newUpgradeCodec(CharSequence protocol)",
                    "protected void org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.channelRead0(ChannelHandlerContext ctx, HttpMessage msg)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/NettyHttpContainerProvider.java": [
                    "public static Channel org.glassfish.jersey.netty.httpserver.NettyHttpContainerProvider.createServer(final URI baseUri, final ResourceConfig configuration, SslContext sslContext, final boolean block)",
                    "public static Channel org.glassfish.jersey.netty.httpserver.NettyHttpContainerProvider.createHttp2Server(final URI baseUri, final ResourceConfig configuration, SslContext sslContext)"
                ],
                "containers/simple-http/src/main/java/org/glassfish/jersey/simple/SimpleContainer.java": [
                    "public void org.glassfish.jersey.simple.SimpleContainer.handle(final Request request, final Response response)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/ClientFilteringStages.java": [
                    "public Continuation<ClientRequest> org.glassfish.jersey.client.ClientFilteringStages.apply(ClientRequest requestContext)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java": [
                    "public MultivaluedMap<String, String> org.glassfish.jersey.client.ClientRequest.getRequestHeaders()",
                    "public List<String> org.glassfish.jersey.client.ClientRequest.getRequestHeader(String name)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/AbstractRuntimeDelegate.java": [
                    "public ResponseBuilder org.glassfish.jersey.internal.AbstractRuntimeDelegate.createResponseBuilder()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/AbstractServiceFinderConfigurator.java": [
                    "protected List<Class<T>> org.glassfish.jersey.internal.AbstractServiceFinderConfigurator<T>.loadImplementations(Map<String, Object> applicationProperties)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/ServiceFinderBinder.java": [
                    "protected void org.glassfish.jersey.internal.ServiceFinderBinder<T>.configure()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/HeaderUtils.java": [
                    "public static void org.glassfish.jersey.message.internal.HeaderUtils.checkHeaderChanges(final Map<String, String> headersSnapshot, final MultivaluedMap<String, Object> currentHeaders, final String connectorName)",
                    "public static List<String> org.glassfish.jersey.message.internal.HeaderUtils.asStringList(final List<Object> headerValues, final RuntimeDelegate rd)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InboundMessageContext.java": [
                    "public InboundMessageContext org.glassfish.jersey.message.internal.InboundMessageContext.headers(String name, Object... values)",
                    "private static List<String> org.glassfish.jersey.message.internal.InboundMessageContext.iterableToList(final Iterable<?> values)",
                    "public InboundMessageContext org.glassfish.jersey.message.internal.InboundMessageContext.header(String name, Object value)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/OutboundMessageContext.java": [
                    "public Set<Link> org.glassfish.jersey.message.internal.OutboundMessageContext.getLinks()",
                    "public MultivaluedMap<String, String> org.glassfish.jersey.message.internal.OutboundMessageContext.getStringHeaders()",
                    "public List<MediaType> org.glassfish.jersey.message.internal.OutboundMessageContext.getAcceptableMediaTypes()",
                    "public Map<String, Cookie> org.glassfish.jersey.message.internal.OutboundMessageContext.getRequestCookies()",
                    "public List<Locale> org.glassfish.jersey.message.internal.OutboundMessageContext.getAcceptableLanguages()",
                    "public String org.glassfish.jersey.message.internal.OutboundMessageContext.getHeaderString(String name)",
                    "public Map<String, NewCookie> org.glassfish.jersey.message.internal.OutboundMessageContext.getResponseCookies()"
                ],
                "examples/helloworld-benchmark/src/main/java/org/glassfish/jersey/examples/helloworld/HelloWorldBenchmark.java": [
                    "public void org.glassfish.jersey.examples.helloworld.HelloWorldBenchmark.request()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "ac5feef09dfd44b6a805b57a1a9b8ec26e6375bc",
        "previous_commit": "5dec4484a61db8186cfe45582996db04c7badfdb",
        "date": 1559668234,
        "releases": {
            "previous": "ac5feef09dfd44b6a805b57a1a9b8ec26e6375bc",
            "next": "ac5feef09dfd44b6a805b57a1a9b8ec26e6375bc"
        },
        "commit_message": "Jersey is buildable on JDK 11 (#4135)\n\n* Jersey is buildable on JDK 11\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "ac5feef09dfd44b6a805b57a1a9b8ec26e6375bc": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/ChunkedBodyOutputStream.java": [
                    "protected void org.glassfish.jersey.jdk.connector.internal.ChunkedBodyOutputStream.write(final ByteBuffer byteBuffer)",
                    "protected ByteBuffer org.glassfish.jersey.jdk.connector.internal.ChunkedBodyOutputStream.encodeToHttp(ByteBuffer byteBuffer)",
                    "public void org.glassfish.jersey.jdk.connector.internal.ChunkedBodyOutputStream.write(int b)",
                    "public void org.glassfish.jersey.jdk.connector.internal.ChunkedBodyOutputStream.flush()",
                    "public void org.glassfish.jersey.jdk.connector.internal.ChunkedBodyOutputStream.write(byte[] b, int off, int len)",
                    "public void org.glassfish.jersey.jdk.connector.internal.ChunkedBodyOutputStream.completed(ByteBuffer result)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpParser.java": [
                    "private boolean org.glassfish.jersey.jdk.connector.internal.HttpParser.decodeInitialLineFromBuffer(final ByteBuffer input)",
                    "private boolean org.glassfish.jersey.jdk.connector.internal.HttpParser.parseHeader(ByteBuffer input)",
                    "private int org.glassfish.jersey.jdk.connector.internal.HttpParser.findSpace(final ByteBuffer input, int offset, final int packetLimit)",
                    "private int org.glassfish.jersey.jdk.connector.internal.HttpParser.checkEOL(final ByteBuffer input)",
                    "private boolean org.glassfish.jersey.jdk.connector.internal.HttpParser.parseHeaderFromBuffer(final ByteBuffer input, boolean parsingTrailerHeaders)",
                    "private void org.glassfish.jersey.jdk.connector.internal.HttpParser.saveRemaining(ByteBuffer input)",
                    "private boolean org.glassfish.jersey.jdk.connector.internal.HttpParser.parseHeaderName(final ByteBuffer input)",
                    "private int org.glassfish.jersey.jdk.connector.internal.HttpParser.parseHeaderValue(ByteBuffer input, boolean parsingTrailerHeaders)",
                    "private boolean org.glassfish.jersey.jdk.connector.internal.HttpParser.findEOL(final ByteBuffer input)",
                    "private String org.glassfish.jersey.jdk.connector.internal.HttpParser.parseString(ByteBuffer input, int startIdx, int endIdx)",
                    "void org.glassfish.jersey.jdk.connector.internal.HttpParser.reset(boolean expectContent)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpParserUtils.java": [
                    "static int org.glassfish.jersey.jdk.connector.internal.HttpParserUtils.skipSpaces(ByteBuffer input, int offset, int packetLimit)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpRequestEncoder.java": [
                    "static ByteBuffer org.glassfish.jersey.jdk.connector.internal.HttpRequestEncoder.encodeChunk(ByteBuffer data)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/SslFilter.java": [
                    "private boolean org.glassfish.jersey.jdk.connector.internal.SslFilter.handleRead(ByteBuffer networkData)",
                    "synchronized void org.glassfish.jersey.jdk.connector.internal.SslFilter.close()",
                    "void org.glassfish.jersey.jdk.connector.internal.SslFilter.resize()",
                    "private boolean org.glassfish.jersey.jdk.connector.internal.SslFilter.doHandshakeStep(ByteBuffer networkData)",
                    "boolean org.glassfish.jersey.jdk.connector.internal.SslFilter.processRead(ByteBuffer networkData)",
                    "private void org.glassfish.jersey.jdk.connector.internal.SslFilter.handleWrite(final ByteBuffer applicationData, final CompletionHandler<ByteBuffer> completionHandler)",
                    "void org.glassfish.jersey.jdk.connector.internal.SslFilter.append(ByteBuffer b)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/TransferEncodingParser.java": [
                    "private boolean org.glassfish.jersey.jdk.connector.internal.TransferEncodingParser.parseHttpChunkLength(final ByteBuffer input)",
                    "boolean org.glassfish.jersey.jdk.connector.internal.TransferEncodingParser.parse(ByteBuffer input)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/TransportFilter.java": [
                    "private void org.glassfish.jersey.jdk.connector.internal.TransportFilter._read(final ByteBuffer inputBuffer)",
                    "public void org.glassfish.jersey.jdk.connector.internal.TransportFilter.completed(Integer bytesRead, Void result)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/Utils.java": [
                    "static ByteBuffer org.glassfish.jersey.jdk.connector.internal.Utils.split(ByteBuffer buffer, int position)",
                    "static ByteBuffer org.glassfish.jersey.jdk.connector.internal.Utils.appendBuffers(ByteBuffer buffer, ByteBuffer buffer1, int incomingBufferSize, int BUFFER_STEP_SIZE)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/uri/UriComponent.java": [
                    "private static ByteBuffer org.glassfish.jersey.uri.UriComponent.decodePercentEncodedOctets(final String s, int i, ByteBuffer bb)",
                    "private static int org.glassfish.jersey.uri.UriComponent.decodeOctets(final int i, final ByteBuffer bb, final StringBuilder sb)"
                ]
            },
            "5dec4484a61db8186cfe45582996db04c7badfdb": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/ChunkedBodyOutputStream.java": [
                    "protected void org.glassfish.jersey.jdk.connector.internal.ChunkedBodyOutputStream.write(final ByteBuffer byteBuffer)",
                    "protected ByteBuffer org.glassfish.jersey.jdk.connector.internal.ChunkedBodyOutputStream.encodeToHttp(ByteBuffer byteBuffer)",
                    "public void org.glassfish.jersey.jdk.connector.internal.ChunkedBodyOutputStream.write(int b)",
                    "public void org.glassfish.jersey.jdk.connector.internal.ChunkedBodyOutputStream.flush()",
                    "public void org.glassfish.jersey.jdk.connector.internal.ChunkedBodyOutputStream.write(byte[] b, int off, int len)",
                    "public void org.glassfish.jersey.jdk.connector.internal.ChunkedBodyOutputStream.completed(ByteBuffer result)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpParser.java": [
                    "private boolean org.glassfish.jersey.jdk.connector.internal.HttpParser.decodeInitialLineFromBuffer(final ByteBuffer input)",
                    "private boolean org.glassfish.jersey.jdk.connector.internal.HttpParser.parseHeader(ByteBuffer input)",
                    "private int org.glassfish.jersey.jdk.connector.internal.HttpParser.findSpace(final ByteBuffer input, int offset, final int packetLimit)",
                    "private int org.glassfish.jersey.jdk.connector.internal.HttpParser.checkEOL(final ByteBuffer input)",
                    "private boolean org.glassfish.jersey.jdk.connector.internal.HttpParser.parseHeaderFromBuffer(final ByteBuffer input, boolean parsingTrailerHeaders)",
                    "private void org.glassfish.jersey.jdk.connector.internal.HttpParser.saveRemaining(ByteBuffer input)",
                    "private boolean org.glassfish.jersey.jdk.connector.internal.HttpParser.parseHeaderName(final ByteBuffer input)",
                    "private int org.glassfish.jersey.jdk.connector.internal.HttpParser.parseHeaderValue(ByteBuffer input, boolean parsingTrailerHeaders)",
                    "private boolean org.glassfish.jersey.jdk.connector.internal.HttpParser.findEOL(final ByteBuffer input)",
                    "private String org.glassfish.jersey.jdk.connector.internal.HttpParser.parseString(ByteBuffer input, int startIdx, int endIdx)",
                    "void org.glassfish.jersey.jdk.connector.internal.HttpParser.reset(boolean expectContent)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpParserUtils.java": [
                    "static int org.glassfish.jersey.jdk.connector.internal.HttpParserUtils.skipSpaces(ByteBuffer input, int offset, int packetLimit)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpRequestEncoder.java": [
                    "static ByteBuffer org.glassfish.jersey.jdk.connector.internal.HttpRequestEncoder.encodeChunk(ByteBuffer data)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/SslFilter.java": [
                    "private boolean org.glassfish.jersey.jdk.connector.internal.SslFilter.handleRead(ByteBuffer networkData)",
                    "synchronized void org.glassfish.jersey.jdk.connector.internal.SslFilter.close()",
                    "void org.glassfish.jersey.jdk.connector.internal.SslFilter.resize()",
                    "private boolean org.glassfish.jersey.jdk.connector.internal.SslFilter.doHandshakeStep(ByteBuffer networkData)",
                    "boolean org.glassfish.jersey.jdk.connector.internal.SslFilter.processRead(ByteBuffer networkData)",
                    "private void org.glassfish.jersey.jdk.connector.internal.SslFilter.handleWrite(final ByteBuffer applicationData, final CompletionHandler<ByteBuffer> completionHandler)",
                    "void org.glassfish.jersey.jdk.connector.internal.SslFilter.append(ByteBuffer b)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/TransferEncodingParser.java": [
                    "private boolean org.glassfish.jersey.jdk.connector.internal.TransferEncodingParser.parseHttpChunkLength(final ByteBuffer input)",
                    "boolean org.glassfish.jersey.jdk.connector.internal.TransferEncodingParser.parse(ByteBuffer input)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/TransportFilter.java": [
                    "private void org.glassfish.jersey.jdk.connector.internal.TransportFilter._read(final ByteBuffer inputBuffer)",
                    "public void org.glassfish.jersey.jdk.connector.internal.TransportFilter.completed(Integer bytesRead, Void result)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/Utils.java": [
                    "static ByteBuffer org.glassfish.jersey.jdk.connector.internal.Utils.split(ByteBuffer buffer, int position)",
                    "static ByteBuffer org.glassfish.jersey.jdk.connector.internal.Utils.appendBuffers(ByteBuffer buffer, ByteBuffer buffer1, int incomingBufferSize, int BUFFER_STEP_SIZE)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/uri/UriComponent.java": [
                    "private static ByteBuffer org.glassfish.jersey.uri.UriComponent.decodePercentEncodedOctets(final String s, int i, ByteBuffer bb)",
                    "private static int org.glassfish.jersey.uri.UriComponent.decodeOctets(final int i, final ByteBuffer bb, final StringBuilder sb)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e3c394199345fa0670bd0e1a0f8beb0448f2fac0",
        "previous_commit": "cacccd9abbcf17234da80e335bdcdebc866322e0",
        "date": 1692368811,
        "releases": {
            "previous": "e3c394199345fa0670bd0e1a0f8beb0448f2fac0",
            "next": "e3c394199345fa0670bd0e1a0f8beb0448f2fac0"
        },
        "commit_message": "Deprecate duplicated methods and fields in MBR/MBW\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e3c394199345fa0670bd0e1a0f8beb0448f2fac0": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/AbstractFormProvider.java": [
                    "public <M extends MultivaluedMap<String, String>> void org.glassfish.jersey.message.internal.AbstractFormProvider<T>.writeTo( M t, MediaType mediaType, OutputStream entityStream)",
                    "public <M extends MultivaluedMap<String, String>> M org.glassfish.jersey.message.internal.AbstractFormProvider<T>.readFrom(M map, MediaType mediaType, boolean decode, InputStream entityStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/BasicTypesMessageProvider.java": [
                    "public void org.glassfish.jersey.message.internal.BasicTypesMessageProvider.writeTo( Object o, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)",
                    "public Object org.glassfish.jersey.message.internal.BasicTypesMessageProvider.readFrom( Class<Object> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/ByteArrayProvider.java": [
                    "public byte[] org.glassfish.jersey.message.internal.ByteArrayProvider.readFrom( Class<byte[]> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/DataSourceProvider.java": [
                    "public void org.glassfish.jersey.message.internal.DataSourceProvider.writeTo( final DataSource t, final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/EnumMessageProvider.java": [
                    "public Enum org.glassfish.jersey.message.internal.EnumMessageProvider.readFrom( Class<Enum> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)",
                    "public void org.glassfish.jersey.message.internal.EnumMessageProvider.writeTo( Enum anEnum, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InputStreamProvider.java": [
                    "public void org.glassfish.jersey.message.internal.InputStreamProvider.writeTo( InputStream t, Class<?> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/ReaderProvider.java": [
                    "public void org.glassfish.jersey.message.internal.ReaderProvider.writeTo( final Reader t, final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)",
                    "public Reader org.glassfish.jersey.message.internal.ReaderProvider.readFrom( final Class<Reader> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, String> httpHeaders, final InputStream inputStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/ReaderWriter.java": [
                    "public static Charset org.glassfish.jersey.message.internal.ReaderWriter.getCharset(MediaType m)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/StringMessageProvider.java": [
                    "public String org.glassfish.jersey.message.internal.StringMessageProvider.readFrom( Class<String> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)",
                    "public void org.glassfish.jersey.message.internal.StringMessageProvider.writeTo( String t, Class<?> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/AbstractCollectionJaxbProvider.java": [
                    "public final void org.glassfish.jersey.jaxb.internal.AbstractCollectionJaxbProvider.writeTo( Object t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/AbstractJaxbElementProvider.java": [
                    "public final void org.glassfish.jersey.jaxb.internal.AbstractJaxbElementProvider.writeTo( JAXBElement<?> t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/AbstractRootElementJaxbProvider.java": [
                    "public final void org.glassfish.jersey.jaxb.internal.AbstractRootElementJaxbProvider.writeTo( Object t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "media/json-binding/src/main/java/org/glassfish/jersey/jsonb/internal/JsonBindingProvider.java": [
                    "public void org.glassfish.jersey.jsonb.internal.JsonBindingProvider.writeTo(Object o, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "media/json-gson/src/main/java/org/glassfish/jersey/gson/internal/JsonGsonProvider.java": [
                    "public Object org.glassfish.jersey.gson.internal.JsonGsonProvider.readFrom(Class<Object> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)",
                    "public void org.glassfish.jersey.gson.internal.JsonGsonProvider.writeTo(Object o, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "media/json-jettison/src/main/java/org/glassfish/jersey/jettison/internal/entity/JettisonArrayProvider.java": [
                    "public void org.glassfish.jersey.jettison.internal.entity.JettisonArrayProvider.writeTo( JSONArray t, Class<?> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)",
                    "public JSONArray org.glassfish.jersey.jettison.internal.entity.JettisonArrayProvider.readFrom( Class<JSONArray> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)"
                ],
                "media/json-jettison/src/main/java/org/glassfish/jersey/jettison/internal/entity/JettisonJaxbElementProvider.java": [
                    "protected final JAXBElement<?> org.glassfish.jersey.jettison.internal.entity.JettisonJaxbElementProvider.readFrom(Class<?> type, MediaType mediaType, Unmarshaller unmarshaller, InputStream entityStream)"
                ],
                "media/json-jettison/src/main/java/org/glassfish/jersey/jettison/internal/entity/JettisonListElementProvider.java": [
                    "protected final XMLStreamReader org.glassfish.jersey.jettison.internal.entity.JettisonListElementProvider.getXMLStreamReader(Class<?> elementType, MediaType mediaType, Unmarshaller u, InputStream entityStream)"
                ],
                "media/json-jettison/src/main/java/org/glassfish/jersey/jettison/internal/entity/JettisonObjectProvider.java": [
                    "public JSONObject org.glassfish.jersey.jettison.internal.entity.JettisonObjectProvider.readFrom( Class<JSONObject> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)",
                    "public void org.glassfish.jersey.jettison.internal.entity.JettisonObjectProvider.writeTo( JSONObject t, Class<?> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "media/json-jettison/src/main/java/org/glassfish/jersey/jettison/internal/entity/JettisonRootElementProvider.java": [
                    "protected final Object org.glassfish.jersey.jettison.internal.entity.JettisonRootElementProvider.readFrom(Class<Object> type, MediaType mediaType, Unmarshaller u, InputStream entityStream)"
                ]
            },
            "cacccd9abbcf17234da80e335bdcdebc866322e0": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/AbstractFormProvider.java": [
                    "public <M extends MultivaluedMap<String, String>> void org.glassfish.jersey.message.internal.AbstractFormProvider<T>.writeTo( M t, MediaType mediaType, OutputStream entityStream)",
                    "public <M extends MultivaluedMap<String, String>> M org.glassfish.jersey.message.internal.AbstractFormProvider<T>.readFrom(M map, MediaType mediaType, boolean decode, InputStream entityStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/BasicTypesMessageProvider.java": [
                    "public void org.glassfish.jersey.message.internal.BasicTypesMessageProvider.writeTo( Object o, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)",
                    "public Object org.glassfish.jersey.message.internal.BasicTypesMessageProvider.readFrom( Class<Object> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/ByteArrayProvider.java": [
                    "public byte[] org.glassfish.jersey.message.internal.ByteArrayProvider.readFrom( Class<byte[]> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/DataSourceProvider.java": [
                    "public void org.glassfish.jersey.message.internal.DataSourceProvider.writeTo( final DataSource t, final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/EnumMessageProvider.java": [
                    "public Enum org.glassfish.jersey.message.internal.EnumMessageProvider.readFrom( Class<Enum> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)",
                    "public void org.glassfish.jersey.message.internal.EnumMessageProvider.writeTo( Enum anEnum, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InputStreamProvider.java": [
                    "public void org.glassfish.jersey.message.internal.InputStreamProvider.writeTo( InputStream t, Class<?> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/ReaderProvider.java": [
                    "public void org.glassfish.jersey.message.internal.ReaderProvider.writeTo( final Reader t, final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)",
                    "public Reader org.glassfish.jersey.message.internal.ReaderProvider.readFrom( final Class<Reader> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, String> httpHeaders, final InputStream inputStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/ReaderWriter.java": [
                    "public static Charset org.glassfish.jersey.message.internal.ReaderWriter.getCharset(MediaType m)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/StringMessageProvider.java": [
                    "public String org.glassfish.jersey.message.internal.StringMessageProvider.readFrom( Class<String> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)",
                    "public void org.glassfish.jersey.message.internal.StringMessageProvider.writeTo( String t, Class<?> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/AbstractCollectionJaxbProvider.java": [
                    "public final void org.glassfish.jersey.jaxb.internal.AbstractCollectionJaxbProvider.writeTo( Object t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/AbstractJaxbElementProvider.java": [
                    "public final void org.glassfish.jersey.jaxb.internal.AbstractJaxbElementProvider.writeTo( JAXBElement<?> t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/AbstractRootElementJaxbProvider.java": [
                    "public final void org.glassfish.jersey.jaxb.internal.AbstractRootElementJaxbProvider.writeTo( Object t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "media/json-binding/src/main/java/org/glassfish/jersey/jsonb/internal/JsonBindingProvider.java": [
                    "public void org.glassfish.jersey.jsonb.internal.JsonBindingProvider.writeTo(Object o, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "media/json-gson/src/main/java/org/glassfish/jersey/gson/internal/JsonGsonProvider.java": [
                    "public Object org.glassfish.jersey.gson.internal.JsonGsonProvider.readFrom(Class<Object> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)",
                    "public void org.glassfish.jersey.gson.internal.JsonGsonProvider.writeTo(Object o, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "media/json-jettison/src/main/java/org/glassfish/jersey/jettison/internal/entity/JettisonArrayProvider.java": [
                    "public void org.glassfish.jersey.jettison.internal.entity.JettisonArrayProvider.writeTo( JSONArray t, Class<?> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)",
                    "public JSONArray org.glassfish.jersey.jettison.internal.entity.JettisonArrayProvider.readFrom( Class<JSONArray> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)"
                ],
                "media/json-jettison/src/main/java/org/glassfish/jersey/jettison/internal/entity/JettisonJaxbElementProvider.java": [
                    "protected final JAXBElement<?> org.glassfish.jersey.jettison.internal.entity.JettisonJaxbElementProvider.readFrom(Class<?> type, MediaType mediaType, Unmarshaller unmarshaller, InputStream entityStream)"
                ],
                "media/json-jettison/src/main/java/org/glassfish/jersey/jettison/internal/entity/JettisonListElementProvider.java": [
                    "protected final XMLStreamReader org.glassfish.jersey.jettison.internal.entity.JettisonListElementProvider.getXMLStreamReader(Class<?> elementType, MediaType mediaType, Unmarshaller u, InputStream entityStream)"
                ],
                "media/json-jettison/src/main/java/org/glassfish/jersey/jettison/internal/entity/JettisonObjectProvider.java": [
                    "public JSONObject org.glassfish.jersey.jettison.internal.entity.JettisonObjectProvider.readFrom( Class<JSONObject> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)",
                    "public void org.glassfish.jersey.jettison.internal.entity.JettisonObjectProvider.writeTo( JSONObject t, Class<?> type, Type genericType, Annotation annotations[], MediaType mediaType, MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)"
                ],
                "media/json-jettison/src/main/java/org/glassfish/jersey/jettison/internal/entity/JettisonRootElementProvider.java": [
                    "protected final Object org.glassfish.jersey.jettison.internal.entity.JettisonRootElementProvider.readFrom(Class<Object> type, MediaType mediaType, Unmarshaller u, InputStream entityStream)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "05a64a2718a09e651819581ad352b933afccd29d",
        "previous_commit": "584664c81b6983c2118f67b7f2d8db237cfee323",
        "date": 1570713852,
        "releases": {
            "previous": "05a64a2718a09e651819581ad352b933afccd29d",
            "next": "05a64a2718a09e651819581ad352b933afccd29d"
        },
        "commit_message": "Use locale insensitive case changes to ensure user code doesn't break\u2026 (#4268)\n\n* Use locale insensitive case changes to ensure user code doesn't break in other locales (i.e. Turkey)\r\n\r\nSigned-off-by: Michael Jameson <mjameson.se@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "05a64a2718a09e651819581ad352b933afccd29d": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/ProxyDigestAuthenticator.java": [
                    "private DigestScheme org.glassfish.jersey.jdk.connector.internal.ProxyDigestAuthenticator.parseAuthHeaders(final String authHeader)",
                    "public static Algorithm org.glassfish.jersey.jdk.connector.internal.ProxyDigestAuthenticator.parse(String val)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/NettyHttp2ResponseWriter.java": [
                    "public OutputStream org.glassfish.jersey.netty.httpserver.NettyHttp2ResponseWriter.writeResponseStatusAndHeaders(long contentLength, ContainerResponse responseContext)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "private void org.glassfish.jersey.client.JerseyInvocation.validateHttpMethodAndEntity(final ClientRequest request)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/BasicAuthenticator.java": [
                    "public boolean org.glassfish.jersey.client.authentication.BasicAuthenticator.filterResponseAndAuthenticate(ClientRequestContext request, ClientResponseContext response)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/DigestAuthenticator.java": [
                    "public static Algorithm org.glassfish.jersey.client.authentication.DigestAuthenticator.parse(String val)",
                    "private DigestScheme org.glassfish.jersey.client.authentication.DigestAuthenticator.parseAuthHeaders(final List<?> headers)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/HttpAuthenticationFilter.java": [
                    "public void org.glassfish.jersey.client.authentication.HttpAuthenticationFilter.filter(ClientRequestContext request, ClientResponseContext response)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private boolean org.glassfish.jersey.client.internal.HttpUrlConnector.isHeaderRestricted(String name, String value)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/util/PropertiesHelper.java": [
                    "public static String org.glassfish.jersey.internal.util.PropertiesHelper.getPropertyNameForRuntime(String key, RuntimeType runtimeType)",
                    "public static <T> T org.glassfish.jersey.internal.util.PropertiesHelper.getValue(Map<String, ?> properties, RuntimeType runtimeType, String key, Class<T> type, Map<String, String> legacyMap)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/CacheControlProvider.java": [
                    "private void org.glassfish.jersey.message.internal.CacheControlProvider.readDirective(CacheControl cacheControl, HttpHeaderReader reader)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/CookiesParser.java": [
                    "public static NewCookie org.glassfish.jersey.message.internal.CookiesParser.parseNewCookie(String header)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/HttpHeaderReader.java": [
                    "public static Map<String, String> org.glassfish.jersey.message.internal.HttpHeaderReader.readParameters(HttpHeaderReader reader, boolean fileNameFix)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InboundMessageContext.java": [
                    "public Set<String> org.glassfish.jersey.message.internal.InboundMessageContext.getAllowedMethods()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/MessageBodyFactory.java": [
                    "public int org.glassfish.jersey.message.internal.MessageBodyFactory.hash(final MediaType mt)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/filter/HttpMethodOverrideFilter.java": [
                    "private String org.glassfish.jersey.server.filter.HttpMethodOverrideFilter.getParamValue(final Source source, final MultivaluedMap<String, String> paramsMap, final String paramName)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/PackageNamesScanner.java": [
                    "private void org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(final UriSchemeResourceFinderFactory uriSchemeResourceFinderFactory)",
                    "private void org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(final URI u)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/config/WadlGeneratorLoader.java": [
                    "private static Callback org.glassfish.jersey.server.wadl.config.WadlGeneratorLoader.setProperty(final Object generator, final String propertyName, final Object propertyValue, final Class<?> osgiConfigClass)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/internal/WadlUtils.java": [
                    "public static boolean org.glassfish.jersey.server.wadl.internal.WadlUtils.isDetailedWadlRequested(UriInfo uriInfo)"
                ],
                "ext/mvc/src/main/java/org/glassfish/jersey/server/mvc/spi/AbstractTemplateProcessor.java": [
                    "private Collection<String> org.glassfish.jersey.server.mvc.spi.AbstractTemplateProcessor<T>.getTemplatePaths(final String name)"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/NounInflector.java": [
                    "public void org.glassfish.jersey.jaxb.internal.NounInflector.addUncountable(final String word)"
                ],
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/file/DefaultMediaTypePredictor.java": [
                    "public static MediaType org.glassfish.jersey.media.multipart.file.DefaultMediaTypePredictor.getMediaTypeFromFileName(final String fileName)"
                ],
                "security/oauth1-signature/src/main/java/org/glassfish/jersey/oauth1/signature/OAuth1Signature.java": [
                    "private String org.glassfish.jersey.oauth1.signature.OAuth1Signature.baseString(final OAuth1Request request, final OAuth1Parameters params)",
                    "private URI org.glassfish.jersey.oauth1.signature.OAuth1Signature.constructRequestURL(final OAuth1Request request)"
                ],
                "security/oauth2-client/src/main/java/org/glassfish/jersey/client/oauth2/AuthCodeGrantImpl.java": [
                    "private void org.glassfish.jersey.client.oauth2.AuthCodeGrantImpl.initDefaultProperties(final String redirectUri, final String scope)"
                ]
            },
            "584664c81b6983c2118f67b7f2d8db237cfee323": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/ProxyDigestAuthenticator.java": [
                    "private DigestScheme org.glassfish.jersey.jdk.connector.internal.ProxyDigestAuthenticator.parseAuthHeaders(final String authHeader)",
                    "public static Algorithm org.glassfish.jersey.jdk.connector.internal.ProxyDigestAuthenticator.parse(String val)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/NettyHttp2ResponseWriter.java": [
                    "public OutputStream org.glassfish.jersey.netty.httpserver.NettyHttp2ResponseWriter.writeResponseStatusAndHeaders(long contentLength, ContainerResponse responseContext)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "private void org.glassfish.jersey.client.JerseyInvocation.validateHttpMethodAndEntity(final ClientRequest request)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/BasicAuthenticator.java": [
                    "public boolean org.glassfish.jersey.client.authentication.BasicAuthenticator.filterResponseAndAuthenticate(ClientRequestContext request, ClientResponseContext response)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/DigestAuthenticator.java": [
                    "public static Algorithm org.glassfish.jersey.client.authentication.DigestAuthenticator.parse(String val)",
                    "private DigestScheme org.glassfish.jersey.client.authentication.DigestAuthenticator.parseAuthHeaders(final List<?> headers)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/HttpAuthenticationFilter.java": [
                    "public void org.glassfish.jersey.client.authentication.HttpAuthenticationFilter.filter(ClientRequestContext request, ClientResponseContext response)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private boolean org.glassfish.jersey.client.internal.HttpUrlConnector.isHeaderRestricted(String name, String value)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/util/PropertiesHelper.java": [
                    "public static String org.glassfish.jersey.internal.util.PropertiesHelper.getPropertyNameForRuntime(String key, RuntimeType runtimeType)",
                    "public static <T> T org.glassfish.jersey.internal.util.PropertiesHelper.getValue(Map<String, ?> properties, RuntimeType runtimeType, String key, Class<T> type, Map<String, String> legacyMap)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/CacheControlProvider.java": [
                    "private void org.glassfish.jersey.message.internal.CacheControlProvider.readDirective(CacheControl cacheControl, HttpHeaderReader reader)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/CookiesParser.java": [
                    "public static NewCookie org.glassfish.jersey.message.internal.CookiesParser.parseNewCookie(String header)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/HttpHeaderReader.java": [
                    "public static Map<String, String> org.glassfish.jersey.message.internal.HttpHeaderReader.readParameters(HttpHeaderReader reader, boolean fileNameFix)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InboundMessageContext.java": [
                    "public Set<String> org.glassfish.jersey.message.internal.InboundMessageContext.getAllowedMethods()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/MessageBodyFactory.java": [
                    "public int org.glassfish.jersey.message.internal.MessageBodyFactory.hash(final MediaType mt)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/filter/HttpMethodOverrideFilter.java": [
                    "private String org.glassfish.jersey.server.filter.HttpMethodOverrideFilter.getParamValue(final Source source, final MultivaluedMap<String, String> paramsMap, final String paramName)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/PackageNamesScanner.java": [
                    "private void org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(final UriSchemeResourceFinderFactory uriSchemeResourceFinderFactory)",
                    "private void org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(final URI u)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/config/WadlGeneratorLoader.java": [
                    "private static Callback org.glassfish.jersey.server.wadl.config.WadlGeneratorLoader.setProperty(final Object generator, final String propertyName, final Object propertyValue, final Class<?> osgiConfigClass)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/internal/WadlUtils.java": [
                    "public static boolean org.glassfish.jersey.server.wadl.internal.WadlUtils.isDetailedWadlRequested(UriInfo uriInfo)"
                ],
                "ext/mvc/src/main/java/org/glassfish/jersey/server/mvc/spi/AbstractTemplateProcessor.java": [
                    "private Collection<String> org.glassfish.jersey.server.mvc.spi.AbstractTemplateProcessor<T>.getTemplatePaths(final String name)"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/NounInflector.java": [
                    "public void org.glassfish.jersey.jaxb.internal.NounInflector.addUncountable(final String word)"
                ],
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/file/DefaultMediaTypePredictor.java": [
                    "public static MediaType org.glassfish.jersey.media.multipart.file.DefaultMediaTypePredictor.getMediaTypeFromFileName(final String fileName)"
                ],
                "security/oauth1-signature/src/main/java/org/glassfish/jersey/oauth1/signature/OAuth1Signature.java": [
                    "private String org.glassfish.jersey.oauth1.signature.OAuth1Signature.baseString(final OAuth1Request request, final OAuth1Parameters params)",
                    "private URI org.glassfish.jersey.oauth1.signature.OAuth1Signature.constructRequestURL(final OAuth1Request request)"
                ],
                "security/oauth2-client/src/main/java/org/glassfish/jersey/client/oauth2/AuthCodeGrantImpl.java": [
                    "private void org.glassfish.jersey.client.oauth2.AuthCodeGrantImpl.initDefaultProperties(final String redirectUri, final String scope)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "c30060f99fba9848b01574f1440d0b5d4265692c",
        "previous_commit": "8a484d26217c2f30e484f9f4b91436051d3ee94b",
        "date": 1670269445,
        "releases": {
            "previous": "c30060f99fba9848b01574f1440d0b5d4265692c",
            "next": "c30060f99fba9848b01574f1440d0b5d4265692c"
        },
        "commit_message": "Add caching and improve performance\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "c30060f99fba9848b01574f1440d0b5d4265692c": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/HeaderUtils.java": [
                    "public static MultivaluedMap<String, String> org.glassfish.jersey.message.internal.HeaderUtils.asStringHeaders( final MultivaluedMap<String, Object> headers, Configuration configuration)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/HttpHeaderReader.java": [
                    "public static List<QualitySourceMediaType> org.glassfish.jersey.message.internal.HttpHeaderReader.readQualitySourceMediaType(String header)",
                    "public static List<String> org.glassfish.jersey.message.internal.HttpHeaderReader.readStringList(String header)",
                    "public static List<MediaType> org.glassfish.jersey.message.internal.HttpHeaderReader.readMediaTypes(List<MediaType> l, String header)",
                    "public static List<AcceptableLanguageTag> org.glassfish.jersey.message.internal.HttpHeaderReader.readAcceptLanguage(String header)",
                    "public static List<AcceptableMediaType> org.glassfish.jersey.message.internal.HttpHeaderReader.readAcceptMediaType(String header)",
                    "public static List<AcceptableToken> org.glassfish.jersey.message.internal.HttpHeaderReader.readAcceptToken(String header)",
                    "public static List<AcceptableMediaType> org.glassfish.jersey.message.internal.HttpHeaderReader.readAcceptMediaType( final String header, final List<QualitySourceMediaType> priorityMediaTypes)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InboundMessageContext.java": [
                    "private List<String> org.glassfish.jersey.message.internal.InboundMessageContext.iterableToList(final Iterable<?> values)",
                    "List<AcceptableMediaType> getQualifiedAcceptableMediaTypes()",
                    "private <T> T org.glassfish.jersey.message.internal.InboundMessageContext.singleHeader(String name, Function<String, T> converter, boolean convertNull)",
                    "public InboundMessageContext org.glassfish.jersey.message.internal.InboundMessageContext.headers(String name, Object... values)",
                    "public MediaType org.glassfish.jersey.message.internal.InboundMessageContext.getMediaType()",
                    "public InboundMessageContext org.glassfish.jersey.message.internal.InboundMessageContext.header(String name, Object value)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/OutboundMessageContext.java": [
                    "public Map<String, Cookie> org.glassfish.jersey.message.internal.OutboundMessageContext.getRequestCookies()",
                    "public String org.glassfish.jersey.message.internal.OutboundMessageContext.getHeaderString(String name)",
                    "public Map<String, NewCookie> org.glassfish.jersey.message.internal.OutboundMessageContext.getResponseCookies()",
                    "private <T> T org.glassfish.jersey.message.internal.OutboundMessageContext.singleHeader(String name, Class<T> valueType, Function<String, T> converter, boolean convertNull)",
                    "public MediaType org.glassfish.jersey.message.internal.OutboundMessageContext.getMediaType()",
                    "public List<MediaType> org.glassfish.jersey.message.internal.OutboundMessageContext.getAcceptableMediaTypes()",
                    "public Set<Link> org.glassfish.jersey.message.internal.OutboundMessageContext.getLinks()",
                    "public List<Locale> org.glassfish.jersey.message.internal.OutboundMessageContext.getAcceptableLanguages()",
                    "void org.glassfish.jersey.message.internal.OutboundMessageContext.setConfiguration(Configuration configuration)",
                    "public MultivaluedMap<String, String> org.glassfish.jersey.message.internal.OutboundMessageContext.getStringHeaders()"
                ]
            },
            "8a484d26217c2f30e484f9f4b91436051d3ee94b": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/HeaderUtils.java": [
                    "public static MultivaluedMap<String, String> org.glassfish.jersey.message.internal.HeaderUtils.asStringHeaders( final MultivaluedMap<String, Object> headers, Configuration configuration)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/HttpHeaderReader.java": [
                    "public static List<QualitySourceMediaType> org.glassfish.jersey.message.internal.HttpHeaderReader.readQualitySourceMediaType(String header)",
                    "public static List<String> org.glassfish.jersey.message.internal.HttpHeaderReader.readStringList(String header)",
                    "public static List<MediaType> org.glassfish.jersey.message.internal.HttpHeaderReader.readMediaTypes(List<MediaType> l, String header)",
                    "public static List<AcceptableLanguageTag> org.glassfish.jersey.message.internal.HttpHeaderReader.readAcceptLanguage(String header)",
                    "public static List<AcceptableMediaType> org.glassfish.jersey.message.internal.HttpHeaderReader.readAcceptMediaType(String header)",
                    "public static List<AcceptableToken> org.glassfish.jersey.message.internal.HttpHeaderReader.readAcceptToken(String header)",
                    "public static List<AcceptableMediaType> org.glassfish.jersey.message.internal.HttpHeaderReader.readAcceptMediaType( final String header, final List<QualitySourceMediaType> priorityMediaTypes)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InboundMessageContext.java": [
                    "private List<String> org.glassfish.jersey.message.internal.InboundMessageContext.iterableToList(final Iterable<?> values)",
                    "public MediaType org.glassfish.jersey.message.internal.InboundMessageContext.apply(String input)",
                    "private <T> T org.glassfish.jersey.message.internal.InboundMessageContext.singleHeader(String name, Function<String, T> converter, boolean convertNull)",
                    "public List<AcceptableMediaType> org.glassfish.jersey.message.internal.InboundMessageContext.getQualifiedAcceptableMediaTypes()",
                    "public InboundMessageContext org.glassfish.jersey.message.internal.InboundMessageContext.headers(String name, Object... values)",
                    "public MediaType org.glassfish.jersey.message.internal.InboundMessageContext.getMediaType()",
                    "public InboundMessageContext org.glassfish.jersey.message.internal.InboundMessageContext.header(String name, Object value)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/OutboundMessageContext.java": [
                    "public Map<String, Cookie> org.glassfish.jersey.message.internal.OutboundMessageContext.getRequestCookies()",
                    "public String org.glassfish.jersey.message.internal.OutboundMessageContext.getHeaderString(String name)",
                    "public Map<String, NewCookie> org.glassfish.jersey.message.internal.OutboundMessageContext.getResponseCookies()",
                    "private <T> T org.glassfish.jersey.message.internal.OutboundMessageContext.singleHeader(String name, Class<T> valueType, Function<String, T> converter, boolean convertNull)",
                    "public MediaType org.glassfish.jersey.message.internal.OutboundMessageContext.getMediaType()",
                    "public List<MediaType> org.glassfish.jersey.message.internal.OutboundMessageContext.getAcceptableMediaTypes()",
                    "public Set<Link> org.glassfish.jersey.message.internal.OutboundMessageContext.getLinks()",
                    "public List<Locale> org.glassfish.jersey.message.internal.OutboundMessageContext.getAcceptableLanguages()",
                    "void org.glassfish.jersey.message.internal.OutboundMessageContext.setConfiguration(Configuration configuration)",
                    "public MultivaluedMap<String, String> org.glassfish.jersey.message.internal.OutboundMessageContext.getStringHeaders()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "81d03fcbe8fb3629e82f00925b6264829e2fb238",
        "previous_commit": "8cee8f4ac8d95ba1feae623b8adfa33f766569c0",
        "date": 1692088030,
        "releases": {
            "previous": "81d03fcbe8fb3629e82f00925b6264829e2fb238",
            "next": "81d03fcbe8fb3629e82f00925b6264829e2fb238"
        },
        "commit_message": "Using Java7+ NIO API for improved performance (#5350)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "81d03fcbe8fb3629e82f00925b6264829e2fb238": {
                "core-common/src/main/java/org/glassfish/jersey/SslConfigurator.java": [
                    "public SSLContext org.glassfish.jersey.SslConfigurator.createSSLContext()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/FileProvider.java": [
                    "public File org.glassfish.jersey.message.internal.FileProvider.readFrom(final Class<File> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, String> httpHeaders, final InputStream entityStream)",
                    "public void org.glassfish.jersey.message.internal.FileProvider.writeTo(final File t, final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/ReaderWriter.java": [
                    "public static void org.glassfish.jersey.message.internal.ReaderWriter.writeToAsString(String s, OutputStream out, MediaType type)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/FileSchemeResourceFinderFactory.java": [
                    "public InputStream org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.open()",
                    "private void org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.processFile(final File f)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/FilesScanner.java": [
                    "private void org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(final File f)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/JarZipSchemeResourceFinderFactory.java": [
                    "private InputStream org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(final String jarUrlString)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/internal/generators/WadlGeneratorApplicationDoc.java": [
                    "public void org.glassfish.jersey.server.wadl.internal.generators.WadlGeneratorApplicationDoc.init()"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/internal/generators/WadlGeneratorGrammarsSupport.java": [
                    "public void org.glassfish.jersey.server.wadl.internal.generators.WadlGeneratorGrammarsSupport.init()"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/internal/generators/resourcedoc/WadlGeneratorResourceDocSupport.java": [
                    "public void org.glassfish.jersey.server.wadl.internal.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()"
                ],
                "examples/oauth-client-twitter/src/main/java/org/glassfish/jersey/examples/oauth/twitterclient/App.java": [
                    "private static void org.glassfish.jersey.examples.oauth.twitterclient.App.loadSettings()",
                    "private static void org.glassfish.jersey.examples.oauth.twitterclient.App.storeSettings()"
                ],
                "examples/reload/src/main/java/org/glassfish/jersey/examples/reload/App.java": [
                    "private static List<JavaFile> org.glassfish.jersey.examples.reload.App.getJavaFiles(File configFile)"
                ],
                "examples/sse-twitter-aggregator/src/main/java/org/glassfish/jersey/examples/aggregator/App.java": [
                    "public void org.glassfish.jersey.examples.aggregator.App.service(Request request, Response response)",
                    "private static Properties org.glassfish.jersey.examples.aggregator.App.loadSettings()"
                ],
                "ext/mvc/src/main/java/org/glassfish/jersey/server/mvc/spi/AbstractTemplateProcessor.java": [
                    "private T org.glassfish.jersey.server.mvc.spi.AbstractTemplateProcessor<T>.resolve(final String name)"
                ],
                "ext/wadl-doclet/src/main/java/org/glassfish/jersey/wadl/doclet/DocletUtils.java": [
                    "static boolean org.glassfish.jersey.wadl.doclet.DocletUtils.createOutputFile(String filePath, DocProcessor docProcessor, ResourceDocType result)"
                ],
                "tools/jersey-doc-modulelist-maven-plugin/src/main/java/org/glassfish/jersey/tools/plugins/GenerateJerseyModuleListMojo.java": [
                    "public String org.glassfish.jersey.tools.plugins.GenerateJerseyModuleListMojo.readFile(String fileName)"
                ]
            },
            "8cee8f4ac8d95ba1feae623b8adfa33f766569c0": {
                "core-common/src/main/java/org/glassfish/jersey/SslConfigurator.java": [
                    "public SSLContext org.glassfish.jersey.SslConfigurator.createSSLContext()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/FileProvider.java": [
                    "public File org.glassfish.jersey.message.internal.FileProvider.readFrom(final Class<File> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, String> httpHeaders, final InputStream entityStream)",
                    "public void org.glassfish.jersey.message.internal.FileProvider.writeTo(final File t, final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/ReaderWriter.java": [
                    "public static void org.glassfish.jersey.message.internal.ReaderWriter.writeToAsString(String s, OutputStream out, MediaType type)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/FileSchemeResourceFinderFactory.java": [
                    "public InputStream org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.open()",
                    "private void org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.processFile(final File f)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/FilesScanner.java": [
                    "private void org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(final File f)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/JarZipSchemeResourceFinderFactory.java": [
                    "private InputStream org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(final String jarUrlString)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/internal/generators/WadlGeneratorApplicationDoc.java": [
                    "public void org.glassfish.jersey.server.wadl.internal.generators.WadlGeneratorApplicationDoc.init()"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/internal/generators/WadlGeneratorGrammarsSupport.java": [
                    "public void org.glassfish.jersey.server.wadl.internal.generators.WadlGeneratorGrammarsSupport.init()"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/internal/generators/resourcedoc/WadlGeneratorResourceDocSupport.java": [
                    "public void org.glassfish.jersey.server.wadl.internal.generators.resourcedoc.WadlGeneratorResourceDocSupport.init()"
                ],
                "examples/oauth-client-twitter/src/main/java/org/glassfish/jersey/examples/oauth/twitterclient/App.java": [
                    "private static void org.glassfish.jersey.examples.oauth.twitterclient.App.loadSettings()",
                    "private static void org.glassfish.jersey.examples.oauth.twitterclient.App.storeSettings()"
                ],
                "examples/reload/src/main/java/org/glassfish/jersey/examples/reload/App.java": [
                    "private static List<JavaFile> org.glassfish.jersey.examples.reload.App.getJavaFiles(File configFile)"
                ],
                "examples/sse-twitter-aggregator/src/main/java/org/glassfish/jersey/examples/aggregator/App.java": [
                    "public void org.glassfish.jersey.examples.aggregator.App.service(Request request, Response response)",
                    "private static Properties org.glassfish.jersey.examples.aggregator.App.loadSettings()"
                ],
                "ext/mvc/src/main/java/org/glassfish/jersey/server/mvc/spi/AbstractTemplateProcessor.java": [
                    "private T org.glassfish.jersey.server.mvc.spi.AbstractTemplateProcessor<T>.resolve(final String name)"
                ],
                "ext/wadl-doclet/src/main/java/org/glassfish/jersey/wadl/doclet/DocletUtils.java": [
                    "static boolean org.glassfish.jersey.wadl.doclet.DocletUtils.createOutputFile(String filePath, DocProcessor docProcessor, ResourceDocType result)"
                ],
                "tools/jersey-doc-modulelist-maven-plugin/src/main/java/org/glassfish/jersey/tools/plugins/GenerateJerseyModuleListMojo.java": [
                    "public String org.glassfish.jersey.tools.plugins.GenerateJerseyModuleListMojo.readFile(String fileName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "122b5a34439274817b71dc49fa6513818b896f21",
        "previous_commit": "7b4cfa2c4b526c2478afdfc0926545a13c443c4c",
        "date": 1560256042,
        "releases": {
            "previous": "122b5a34439274817b71dc49fa6513818b896f21",
            "next": "122b5a34439274817b71dc49fa6513818b896f21"
        },
        "commit_message": "MP rest client review comments implemented\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "122b5a34439274817b71dc49fa6513818b896f21": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/BeanClassModel.java": [
                    "BeanClassModel org.glassfish.jersey.microprofile.restclient.Builder.build()",
                    "static BeanClassModel org.glassfish.jersey.microprofile.restclient.BeanClassModel.fromClass(InterfaceModel interfaceModel, Class<?> beanClass)",
                    "private void org.glassfish.jersey.microprofile.restclient.Builder.processFieldsByParameterClass(Class<? extends Annotation> parameterClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/BeanParamModel.java": [
                    "public boolean org.glassfish.jersey.microprofile.restclient.BeanParamModel.handles(Class<Annotation> annotation)",
                    "public Object org.glassfish.jersey.microprofile.restclient.BeanParamModel.handleParameter(Object requestPart, Class<?> annotationClass, Object instance)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ConfigWrapper.java": [
                    "public Map<Class<?>, Integer> org.glassfish.jersey.microprofile.restclient.ConfigWrapper.getContracts(Class<?> componentClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterfaceModel.java": [
                    "static InterfaceModel org.glassfish.jersey.microprofile.restclient.InterfaceModel.from(Class<?> restClientClass, Set<ResponseExceptionMapper> responseExceptionMappers, Set<ParamConverterProvider> paramConverterProviders, List<AsyncInvocationInterceptor> asyncInterceptors, InjectionManager injectionManager, BeanManager beanManager)",
                    "InterfaceModel org.glassfish.jersey.microprofile.restclient.InterfaceModel.build()"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "MethodModel org.glassfish.jersey.microprofile.restclient.MethodModel.build()",
                    "private CompletableFuture org.glassfish.jersey.microprofile.restclient.MethodModel.asynchronousCall(Invocation.Builder builder, Object entity, Method method)",
                    "private Object org.glassfish.jersey.microprofile.restclient.MethodModel.synchronousCall(Invocation.Builder builder, Object entity, Method method)",
                    "static MethodModel org.glassfish.jersey.microprofile.restclient.MethodModel.from(InterfaceModel interfaceModel, Method method)",
                    "Object org.glassfish.jersey.microprofile.restclient.MethodModel.invokeMethod(WebTarget classLevelTarget, Method method, Object[] args)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ParamModel.java": [
                    "static ParamModel org.glassfish.jersey.microprofile.restclient.ParamModel<T>.from(InterfaceModel interfaceModel, Type type, AnnotatedElement annotatedElement, Parameter parameter, int position)",
                    "ParamModel org.glassfish.jersey.microprofile.restclient.ParamModel<T>.build()"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ]
            },
            "7b4cfa2c4b526c2478afdfc0926545a13c443c4c": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/BeanClassModel.java": [
                    "BeanClassModel org.glassfish.jersey.microprofile.restclient.Builder.build()",
                    "static BeanClassModel org.glassfish.jersey.microprofile.restclient.BeanClassModel.fromClass(InterfaceModel interfaceModel, Class<?> beanClass)",
                    "private Builder org.glassfish.jersey.microprofile.restclient.Builder.processFieldsByParameterClass(Class<? extends Annotation> parameterClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/BeanParamModel.java": [
                    "public boolean org.glassfish.jersey.microprofile.restclient.BeanParamModel.handles(Class<Annotation> annotation)",
                    "public Object org.glassfish.jersey.microprofile.restclient.BeanParamModel.handleParameter(Object requestPart, Class<?> annotationClass, Object instance)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ConfigWrapper.java": [
                    "public Map<Class<?>, Integer> org.glassfish.jersey.microprofile.restclient.ConfigWrapper.getContracts(Class<?> componentClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterfaceModel.java": [
                    "static InterfaceModel org.glassfish.jersey.microprofile.restclient.InterfaceModel.from(Class<?> restClientClass, Set<ResponseExceptionMapper> responseExceptionMappers, Set<ParamConverterProvider> paramConverterProviders, List<AsyncInvocationInterceptor> asyncInterceptors, InjectionManager injectionManager, BeanManager beanManager)",
                    "InterfaceModel org.glassfish.jersey.microprofile.restclient.InterfaceModel.build()"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "MethodModel org.glassfish.jersey.microprofile.restclient.MethodModel.build()",
                    "private CompletableFuture org.glassfish.jersey.microprofile.restclient.MethodModel.asynchronousCall(Invocation.Builder builder, Object entity, Method method)",
                    "private Object org.glassfish.jersey.microprofile.restclient.MethodModel.synchronousCall(Invocation.Builder builder, Object entity, Method method)",
                    "static MethodModel org.glassfish.jersey.microprofile.restclient.MethodModel.from(InterfaceModel interfaceModel, Method method)",
                    "Object org.glassfish.jersey.microprofile.restclient.MethodModel.invokeMethod(WebTarget classLevelTarget, Method method, Object[] args)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ParamModel.java": [
                    "static ParamModel org.glassfish.jersey.microprofile.restclient.ParamModel<T>.from(InterfaceModel interfaceModel, Type type, AnnotatedElement annotatedElement, Parameter parameter, int position)",
                    "ParamModel org.glassfish.jersey.microprofile.restclient.ParamModel<T>.build()"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "cb031c7cff8152c665db287e2d8e21181928149b",
        "previous_commit": "3035f37f1092e5f8ce41d4d5a746f24cfd41b887",
        "date": 1692169864,
        "releases": {
            "previous": "cb031c7cff8152c665db287e2d8e21181928149b",
            "next": "cb031c7cff8152c665db287e2d8e21181928149b"
        },
        "commit_message": "RFC 6570 implementation\nReworked UriTemplateParser & UriTemplate to be better extendable and processed just once\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "cb031c7cff8152c665db287e2d8e21181928149b": {
                "core-common/src/main/java/org/glassfish/jersey/uri/UriComponent.java": [
                    "private static boolean[][] org.glassfish.jersey.uri.UriComponent.initEncodingTables()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/uri/UriTemplate.java": [
                    "public static String org.glassfish.jersey.uri.UriTemplate.createURIWithStringValues( final String scheme, final String authority, final String userInfo, final String host, final String port, final String path, final String query, final String fragment, final Map<String, ?> values, final boolean encode, final boolean encodeSlashInPath)",
                    "public final boolean org.glassfish.jersey.uri.UriTemplate.isTemplateVariablePresent(String name)",
                    "public final String org.glassfish.jersey.uri.UriTemplate.createURI(final Map<String, String> values)",
                    "public final List<String> org.glassfish.jersey.uri.UriTemplate.getTemplateVariables()",
                    "public final String org.glassfish.jersey.uri.UriTemplate.createURI(final String[] values, final int offset, final int length)",
                    "public final boolean org.glassfish.jersey.uri.UriTemplate.match(CharSequence uri, Map<String, String> templateVariableToValue)",
                    "public static String org.glassfish.jersey.uri.UriTemplate.createURI( final String scheme, String authority, final String userInfo, final String host, final String port, final String path, final String query, final String fragment, final Map<String, ?> values, final boolean encode, final boolean encodeSlashInPath)",
                    "public static String org.glassfish.jersey.uri.UriTemplate.resolveTemplateValues(final UriComponent.Type type, String template, final boolean encode, final Map<String, ?> _mapValues)",
                    "public static String org.glassfish.jersey.uri.UriTemplate.createURIWithStringValues( final String scheme, final String authority, final String userInfo, final String host, final String port, final String path, final String query, final String fragment, final String[] values, final boolean encode, final boolean encodeSlashInPath)",
                    "public static String org.glassfish.jersey.uri.UriTemplate.createURI( final String scheme, String authority, final String userInfo, final String host, final String port, final String path, final String query, final String fragment, final Object[] values, final boolean encode, final boolean encodeSlashInPath)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/uri/internal/UriTemplateParser.java": [
                    "private void org.glassfish.jersey.uri.internal.UriTemplateParser.processLiteralCharacters()",
                    "private int org.glassfish.jersey.uri.internal.UriTemplateParser.parseName(final CharacterIterator ci, int skipGroup)"
                ],
                "incubator/declarative-linking/src/main/java/org/glassfish/jersey/linking/ELLinkBuilder.java": [
                    "static URI org.glassfish.jersey.linking.ELLinkBuilder.buildURI(InjectLinkDescriptor link, Object entity, Object resource, Object instance, UriInfo uriInfo, ResourceMappingContext rmc)",
                    "private static Map<String, Object> org.glassfish.jersey.linking.ELLinkBuilder.getParameterValues(List<UriPart> parameterNames, InjectLinkDescriptor linkField, LinkELContext context, UriInfo uriInfo)"
                ]
            },
            "3035f37f1092e5f8ce41d4d5a746f24cfd41b887": {
                "core-common/src/main/java/org/glassfish/jersey/uri/UriComponent.java": [
                    "private static boolean[][] org.glassfish.jersey.uri.UriComponent.initEncodingTables()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/uri/UriTemplate.java": [
                    "public static String org.glassfish.jersey.uri.UriTemplate.createURIWithStringValues( final String scheme, final String authority, final String userInfo, final String host, final String port, final String path, final String query, final String fragment, final Map<String, ?> values, final boolean encode, final boolean encodeSlashInPath)",
                    "public final boolean org.glassfish.jersey.uri.UriTemplate.isTemplateVariablePresent(String name)",
                    "public final String org.glassfish.jersey.uri.UriTemplate.createURI(final Map<String, String> values)",
                    "public final List<String> org.glassfish.jersey.uri.UriTemplate.getTemplateVariables()",
                    "public final String org.glassfish.jersey.uri.UriTemplate.createURI(final String[] values, final int offset, final int length)",
                    "public final boolean org.glassfish.jersey.uri.UriTemplate.match(CharSequence uri, Map<String, String> templateVariableToValue)",
                    "public static String org.glassfish.jersey.uri.UriTemplate.createURI( final String scheme, String authority, final String userInfo, final String host, final String port, final String path, final String query, final String fragment, final Map<String, ?> values, final boolean encode, final boolean encodeSlashInPath)",
                    "public static String org.glassfish.jersey.uri.UriTemplate.resolveTemplateValues(final UriComponent.Type type, String template, final boolean encode, final Map<String, ?> _mapValues)",
                    "public static String org.glassfish.jersey.uri.UriTemplate.createURIWithStringValues( final String scheme, final String authority, final String userInfo, final String host, final String port, final String path, final String query, final String fragment, final String[] values, final boolean encode, final boolean encodeSlashInPath)",
                    "public static String org.glassfish.jersey.uri.UriTemplate.createURI( final String scheme, String authority, final String userInfo, final String host, final String port, final String path, final String query, final String fragment, final Object[] values, final boolean encode, final boolean encodeSlashInPath)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/uri/internal/UriTemplateParser.java": [
                    "private void org.glassfish.jersey.uri.internal.UriTemplateParser.processLiteralCharacters()",
                    "private int org.glassfish.jersey.uri.internal.UriTemplateParser.parseName(final CharacterIterator ci, int skipGroup)"
                ],
                "incubator/declarative-linking/src/main/java/org/glassfish/jersey/linking/ELLinkBuilder.java": [
                    "private static Map<String, Object> org.glassfish.jersey.linking.ELLinkBuilder.getParameterValues(List<String> parameterNames, InjectLinkDescriptor linkField, LinkELContext context, UriInfo uriInfo)",
                    "static URI org.glassfish.jersey.linking.ELLinkBuilder.buildURI(InjectLinkDescriptor link, Object entity, Object resource, Object instance, UriInfo uriInfo, ResourceMappingContext rmc)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "a19a446bd6428d62db181349775d99fe8b687c49",
        "previous_commit": "e5af7d692ceb00d98c37980f7be65344dc948d46",
        "date": 1582108563,
        "releases": {
            "previous": "a19a446bd6428d62db181349775d99fe8b687c49",
            "next": "a19a446bd6428d62db181349775d99fe8b687c49"
        },
        "commit_message": "netty connector/container modifications (#4387)\n\n* netty connector/container modifications\r\n\r\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "a19a446bd6428d62db181349775d99fe8b687c49": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.exceptionCaught(ChannelHandlerContext ctx, final Throwable cause)",
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelRead0(ChannelHandlerContext ctx, HttpObject msg)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "public void org.glassfish.jersey.netty.connector.NettyConnector.operationComplete(io.netty.util.concurrent.Future<? super Void> future)",
                    "public void org.glassfish.jersey.netty.connector.NettyConnector.run()",
                    "public Future<?> org.glassfish.jersey.netty.connector.NettyConnector.apply(final ClientRequest jerseyRequest, final AsyncConnectorCallback jerseyCallback)",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)",
                    "public ClientResponse org.glassfish.jersey.netty.connector.NettyConnector.apply(ClientRequest jerseyRequest)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/internal/NettyInputStream.java": [
                    "public void org.glassfish.jersey.netty.connector.internal.NettyInputStream.close()",
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.read(byte[] b, int off, int len)",
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.read()",
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.available()"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyHttp2ServerHandler.java": [
                    "public void org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.operationComplete(Future<? super Void> future)",
                    "private void org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.onDataRead(ChannelHandlerContext ctx, Http2DataFrame data)",
                    "private ContainerRequest org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.createContainerRequest(ChannelHandlerContext ctx, Http2HeadersFrame http2Headers)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerHandler.java": [
                    "public void org.glassfish.jersey.netty.httpserver.JerseyServerHandler.channelRead(final ChannelHandlerContext ctx, Object msg)"
                ]
            },
            "e5af7d692ceb00d98c37980f7be65344dc948d46": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.exceptionCaught(ChannelHandlerContext ctx, final Throwable cause)",
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelRead0(ChannelHandlerContext ctx, HttpObject msg)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "public void org.glassfish.jersey.netty.connector.NettyConnector.operationComplete(io.netty.util.concurrent.Future<? super Void> future)",
                    "public void org.glassfish.jersey.netty.connector.NettyConnector.run()",
                    "public Future<?> org.glassfish.jersey.netty.connector.NettyConnector.apply(final ClientRequest jerseyRequest, final AsyncConnectorCallback jerseyCallback)",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)",
                    "public ClientResponse org.glassfish.jersey.netty.connector.NettyConnector.apply(ClientRequest jerseyRequest)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/internal/NettyInputStream.java": [
                    "public void org.glassfish.jersey.netty.connector.internal.NettyInputStream.close()",
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.read(byte[] b, int off, int len)",
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.read()",
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.available()"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyHttp2ServerHandler.java": [
                    "public void org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.operationComplete(Future<? super Void> future)",
                    "private void org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.onDataRead(ChannelHandlerContext ctx, Http2DataFrame data)",
                    "private ContainerRequest org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.createContainerRequest(ChannelHandlerContext ctx, Http2HeadersFrame http2Headers)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerHandler.java": [
                    "public void org.glassfish.jersey.netty.httpserver.JerseyServerHandler.channelRead(final ChannelHandlerContext ctx, Object msg)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "7bf9e5da763490129975eb2237214b924983ca71",
        "previous_commit": "0056615d967888e863300302dbf438b62a3e25c8",
        "date": 1611661045,
        "releases": {
            "previous": "7bf9e5da763490129975eb2237214b924983ca71",
            "next": "7bf9e5da763490129975eb2237214b924983ca71"
        },
        "commit_message": "Allow for having CDI on pure Jersey Client without Jersey Server (#4695)\n\n* Allow for having CDI on pure Jersey Client without Jersey Server jars dependencies\r\n\r\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "7bf9e5da763490129975eb2237214b924983ca71": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientConfig.java": [
                    "private ClientRuntime org.glassfish.jersey.client.ClientConfig.initRuntime()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ProviderBinder.java": [
                    "public static void bindProviders(ComponentBag componentBag, RuntimeType constrainedTo, Set<Class<?>> registeredClasses, InjectionManager injectionManager)",
                    "static void bindProviders(final ComponentBag componentBag, final InjectionManager injectionManager)",
                    "public static void bindProviders(ComponentBag componentBag, RuntimeType constrainedTo, Set<Class<?>> registeredClasses, InjectionManager injectionManager, Collection<ComponentProvider> componentProviders)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/ResourceModelConfigurator.java": [
                    "private boolean org.glassfish.jersey.server.ResourceModelConfigurator.bindWithComponentProvider( Class<?> component, ContractProvider providerModel, Iterable<ComponentProvider> componentProviders)"
                ],
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "private static boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.containsJaxRsFieldInjection(final AnnotatedType annotatedType)",
                    "public Set<InjectionPoint> org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.getInjectionPoints()",
                    "public Boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.apply(final Class<?> clazz)",
                    "public boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.bind(final Class<?> clazz, final Set<Class<?>> providerContracts)",
                    "private static boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.containsJaxRsMethodInjection(final AnnotatedType annotatedType)",
                    "private AnnotatedConstructor<?> org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.enrichedConstructor(final AnnotatedConstructor<?> ctor)",
                    "private void org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.beforeBeanDiscovery(@Observes final BeforeBeanDiscovery beforeBeanDiscovery, final BeanManager beanManager)",
                    "private static boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.containsJaxRsConstructorInjection(final AnnotatedType annotatedType)",
                    "public List<AnnotatedParameter> org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.getParameters()"
                ]
            },
            "0056615d967888e863300302dbf438b62a3e25c8": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientConfig.java": [
                    "private ClientRuntime org.glassfish.jersey.client.ClientConfig.initRuntime()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ProviderBinder.java": [
                    "public static void bindProviders(ComponentBag componentBag, RuntimeType constrainedTo, Set<Class<?>> registeredClasses, InjectionManager injectionManager)",
                    "static void bindProviders(final ComponentBag componentBag, final InjectionManager injectionManager)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/ResourceModelConfigurator.java": [
                    "private boolean org.glassfish.jersey.server.ResourceModelConfigurator.bindWithComponentProvider( Class<?> component, ContractProvider providerModel, Iterable<ComponentProvider> componentProviders)"
                ],
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "public Set<InjectionPoint> org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.getInjectionPoints()",
                    "private boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.containsJaxRsConstructorInjection(final AnnotatedType annotatedType)",
                    "public Boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.apply(final Class<?> clazz)",
                    "private boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.containsJaxRsFieldInjection(final AnnotatedType annotatedType)",
                    "private static AnnotatedConstructor<?> org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.enrichedConstructor(final AnnotatedConstructor<?> ctor)",
                    "public boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.bind(final Class<?> clazz, final Set<Class<?>> providerContracts)",
                    "private void org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.beforeBeanDiscovery(@Observes final BeforeBeanDiscovery beforeBeanDiscovery, final BeanManager beanManager)",
                    "private boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.containsJaxRsMethodInjection(final AnnotatedType annotatedType)",
                    "public List<AnnotatedParameter> org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.getParameters()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e4c3bf59a4a37f5a9dc0f07b8f62bb9866c41faa",
        "previous_commit": "ed2548696d59a22bd5697413eeb1510166f2f595",
        "date": 1704974133,
        "releases": {
            "previous": "e4c3bf59a4a37f5a9dc0f07b8f62bb9866c41faa",
            "next": "e4c3bf59a4a37f5a9dc0f07b8f62bb9866c41faa"
        },
        "commit_message": "Add URL of KeyStore and TrustStore to SslConfigurator\nPut back some Nio Paths usages reverted in 5392\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e4c3bf59a4a37f5a9dc0f07b8f62bb9866c41faa": {
                "core-common/src/main/java/org/glassfish/jersey/SslConfigurator.java": [
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.trustStore(KeyStore trustStore)",
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.trustStoreBytes(byte[] payload)",
                    "public boolean org.glassfish.jersey.SslConfigurator.equals(Object o)",
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.trustStoreFile(String fileName)",
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.keyStore(KeyStore keyStore)",
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.keyStoreFile(String fileName)",
                    "public SSLContext org.glassfish.jersey.SslConfigurator.createSSLContext()",
                    "public int org.glassfish.jersey.SslConfigurator.hashCode()",
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.keyStoreBytes(byte[] payload)",
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.retrieve()",
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.retrieve(Properties props)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/JarZipSchemeResourceFinderFactory.java": [
                    "private InputStream org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(final String jarUrlString)"
                ],
                "ext/mvc/src/main/java/org/glassfish/jersey/server/mvc/spi/AbstractTemplateProcessor.java": [
                    "private T org.glassfish.jersey.server.mvc.spi.AbstractTemplateProcessor<T>.resolve(final String name)"
                ]
            },
            "ed2548696d59a22bd5697413eeb1510166f2f595": {
                "core-common/src/main/java/org/glassfish/jersey/SslConfigurator.java": [
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.trustStore(KeyStore trustStore)",
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.trustStoreBytes(byte[] payload)",
                    "public boolean org.glassfish.jersey.SslConfigurator.equals(Object o)",
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.trustStoreFile(String fileName)",
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.keyStore(KeyStore keyStore)",
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.keyStoreFile(String fileName)",
                    "public SSLContext org.glassfish.jersey.SslConfigurator.createSSLContext()",
                    "public int org.glassfish.jersey.SslConfigurator.hashCode()",
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.keyStoreBytes(byte[] payload)",
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.retrieve()",
                    "public SslConfigurator org.glassfish.jersey.SslConfigurator.retrieve(Properties props)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/JarZipSchemeResourceFinderFactory.java": [
                    "private InputStream org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(final String jarUrlString)"
                ],
                "ext/mvc/src/main/java/org/glassfish/jersey/server/mvc/spi/AbstractTemplateProcessor.java": [
                    "private T org.glassfish.jersey.server.mvc.spi.AbstractTemplateProcessor<T>.resolve(final String name)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "0f65e5d6428098dfa724c0ef3510a8aea77f74fc",
        "previous_commit": "56a5634fd4d8ef5857de612684e8761667269d51",
        "date": 1600879203,
        "releases": {
            "previous": "0f65e5d6428098dfa724c0ef3510a8aea77f74fc",
            "next": "0f65e5d6428098dfa724c0ef3510a8aea77f74fc"
        },
        "commit_message": "SSE Flow.Subscriber injectable as event sink\n\n  * Java Flow api used only by JerseyEventSink in java 11+\n  * Reactive streams tck tests for JerseyEventSink\n  * Cancel on close propagation\n  * Remove tests contradicting reactive streams spec https://github.com/reactive-streams/reactive-streams-jvm#2.13\n\nSigned-off-by: Daniel Kec <daniel.kec@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "0f65e5d6428098dfa724c0ef3510a8aea77f74fc": {
                "core-server/src/main/java/org/glassfish/jersey/server/ChunkedOutput.java": [
                    "protected void org.glassfish.jersey.server.ChunkedOutput<T>.flushQueue()"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/model/IntrospectionModeller.java": [
                    "private static void org.glassfish.jersey.server.model.IntrospectionModeller.introspectAsyncFeatures(AnnotatedMethod am, ResourceMethod.Builder resourceMethodBuilder)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/model/ResourceMethodValidator.java": [
                    "private void org.glassfish.jersey.server.model.ResourceMethodValidator.checkMethod(ResourceMethod method)",
                    "private boolean org.glassfish.jersey.server.model.ResourceMethodValidator.isSseInjected(final Invocable invocable)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/model/internal/JavaResourceMethodDispatcherProvider.java": [
                    "public ResourceMethodDispatcher org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider.create(final Invocable resourceMethod, final InvocationHandler invocationHandler, final ConfiguredValidator validator)"
                ],
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseyEventSink.java": [
                    "public void org.glassfish.jersey.media.sse.internal.JerseyEventSink.close()",
                    "public void org.glassfish.jersey.media.sse.internal.JerseyEventSink.onComplete()",
                    "public void org.glassfish.jersey.media.sse.internal.JerseyEventSink.onSubscribe(final Flow.Subscription subscription)",
                    "private void org.glassfish.jersey.media.sse.internal.JerseyEventSink.checkClosed()",
                    "public void org.glassfish.jersey.media.sse.internal.JerseyEventSink.onError(final Throwable throwable)",
                    "public CompletionStage<?> org.glassfish.jersey.media.sse.internal.JerseyEventSink.send(OutboundSseEvent event)"
                ],
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/SseEventSinkValueParamProvider.java": [
                    "protected Function<ContainerRequest, SseEventSink> org.glassfish.jersey.media.sse.internal.SseEventSinkValueParamProvider.createValueProvider(Parameter parameter)"
                ]
            },
            "56a5634fd4d8ef5857de612684e8761667269d51": {
                "core-server/src/main/java/org/glassfish/jersey/server/ChunkedOutput.java": [
                    "protected void org.glassfish.jersey.server.ChunkedOutput<T>.flushQueue()"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/model/IntrospectionModeller.java": [
                    "private static void org.glassfish.jersey.server.model.IntrospectionModeller.introspectAsyncFeatures(AnnotatedMethod am, ResourceMethod.Builder resourceMethodBuilder)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/model/ResourceMethodValidator.java": [
                    "private void org.glassfish.jersey.server.model.ResourceMethodValidator.checkMethod(ResourceMethod method)",
                    "private boolean org.glassfish.jersey.server.model.ResourceMethodValidator.isSseInjected(final Invocable invocable)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/model/internal/JavaResourceMethodDispatcherProvider.java": [
                    "public ResourceMethodDispatcher org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider.create(final Invocable resourceMethod, final InvocationHandler invocationHandler, final ConfiguredValidator validator)"
                ],
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseyEventSink.java": [
                    "public void org.glassfish.jersey.media.sse.internal.JerseyEventSink.close()",
                    "public void org.glassfish.jersey.media.sse.internal.JerseyEventSink.onComplete()",
                    "public void org.glassfish.jersey.media.sse.internal.JerseyEventSink.onSubscribe(final Flow.Subscription subscription)",
                    "private void org.glassfish.jersey.media.sse.internal.JerseyEventSink.checkClosed()",
                    "public void org.glassfish.jersey.media.sse.internal.JerseyEventSink.onError(final Throwable throwable)",
                    "public CompletionStage<?> org.glassfish.jersey.media.sse.internal.JerseyEventSink.send(OutboundSseEvent event)"
                ],
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/SseEventSinkValueParamProvider.java": [
                    "protected Function<ContainerRequest, SseEventSink> org.glassfish.jersey.media.sse.internal.SseEventSinkValueParamProvider.createValueProvider(Parameter parameter)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8dcfed4836d26c57ef78be68214d186e9ca78b84",
        "previous_commit": "6510bb901d121b93e2b72789160beae23d2cca12",
        "date": 1575014282,
        "releases": {
            "previous": "8dcfed4836d26c57ef78be68214d186e9ca78b84",
            "next": "8dcfed4836d26c57ef78be68214d186e9ca78b84"
        },
        "commit_message": "Rewritten Netty Jersey implementation using direct ByteBuf consumption (#4312)\n\nSigned-off-by: Venkat Ganesh <010gvr@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "8dcfed4836d26c57ef78be68214d186e9ca78b84": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.exceptionCaught(ChannelHandlerContext ctx, final Throwable cause)",
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.operationComplete(Future<? super Void> future)",
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelRead0(ChannelHandlerContext ctx, HttpObject msg)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/internal/NettyInputStream.java": [
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.read(byte[] b, int off, int len)",
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.read()",
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.available()"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyHttp2ServerHandler.java": [
                    "public void org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.operationComplete(Future<? super Void> future)",
                    "private void org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.onDataRead(ChannelHandlerContext ctx, Http2DataFrame data)",
                    "private ContainerRequest org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.createContainerRequest(ChannelHandlerContext ctx, Http2HeadersFrame http2Headers)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerHandler.java": [
                    "public void org.glassfish.jersey.netty.httpserver.JerseyServerHandler.channelRead(final ChannelHandlerContext ctx, Object msg)",
                    "private ContainerRequest org.glassfish.jersey.netty.httpserver.JerseyServerHandler.createContainerRequest(ChannelHandlerContext ctx, HttpRequest req)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/NettyResponseWriter.java": [
                    "public synchronized OutputStream org.glassfish.jersey.netty.httpserver.NettyResponseWriter.writeResponseStatusAndHeaders(long contentLength, ContainerResponse responseContext)"
                ]
            },
            "6510bb901d121b93e2b72789160beae23d2cca12": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.exceptionCaught(ChannelHandlerContext ctx, final Throwable cause)",
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.operationComplete(Future<? super Void> future)",
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelRead0(ChannelHandlerContext ctx, HttpObject msg)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/internal/NettyInputStream.java": [
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.read(byte[] b, int off, int len)",
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.read()",
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.available()"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyHttp2ServerHandler.java": [
                    "public void org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.operationComplete(Future<? super Void> future)",
                    "private void org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.onDataRead(ChannelHandlerContext ctx, Http2DataFrame data)",
                    "private ContainerRequest org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.createContainerRequest(ChannelHandlerContext ctx, Http2HeadersFrame http2Headers)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerHandler.java": [
                    "public void org.glassfish.jersey.netty.httpserver.JerseyServerHandler.channelRead(final ChannelHandlerContext ctx, Object msg)",
                    "private ContainerRequest org.glassfish.jersey.netty.httpserver.JerseyServerHandler.createContainerRequest(ChannelHandlerContext ctx, HttpRequest req)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/NettyResponseWriter.java": [
                    "public synchronized OutputStream org.glassfish.jersey.netty.httpserver.NettyResponseWriter.writeResponseStatusAndHeaders(long contentLength, ContainerResponse responseContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "839fb27fc45ca77cc03829f306e8fd50669454e7",
        "previous_commit": "e3cc62371d00c938a432083c4cf2c3d8013beb78",
        "date": 1599713232,
        "releases": {
            "previous": "839fb27fc45ca77cc03829f306e8fd50669454e7",
            "next": "839fb27fc45ca77cc03829f306e8fd50669454e7"
        },
        "commit_message": "Allow for specifying Feature processing order\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "839fb27fc45ca77cc03829f306e8fd50669454e7": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Object component, final int bindingPriority)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Object component, final Map<Class<?>, Integer> contracts)",
                    "private void org.glassfish.jersey.model.internal.CommonConfig.processFeatureRegistration(final Object component, final Class<?> componentClass, int priority)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Class<?> componentClass, final Map<Class<?>, Integer> contracts)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Class<?> componentClass, final int bindingPriority)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Object component)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.loadFrom(final Configuration config)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Class<?> componentClass)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Object component, final Class<?>... contracts)",
                    "private void org.glassfish.jersey.model.internal.CommonConfig.configureFeatures(InjectionManager injectionManager, Set<FeatureRegistration> processed, List<FeatureRegistration> unprocessed, ManagedObjectsFinalizer managedObjectsFinalizer)",
                    "public void org.glassfish.jersey.model.internal.CommonConfig.configureMetaProviders(InjectionManager injectionManager, ManagedObjectsFinalizer finalizer)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Class<?> componentClass, final Class<?>... contracts)"
                ]
            },
            "e3cc62371d00c938a432083c4cf2c3d8013beb78": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Object component, final int bindingPriority)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Object component, final Map<Class<?>, Integer> contracts)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Class<?> componentClass, final Map<Class<?>, Integer> contracts)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Class<?> componentClass, final int bindingPriority)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Object component)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.loadFrom(final Configuration config)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Class<?> componentClass)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Object component, final Class<?>... contracts)",
                    "private void org.glassfish.jersey.model.internal.CommonConfig.processFeatureRegistration(final Object component, final Class<?> componentClass)",
                    "private void org.glassfish.jersey.model.internal.CommonConfig.configureFeatures(InjectionManager injectionManager, Set<FeatureRegistration> processed, List<FeatureRegistration> unprocessed, ManagedObjectsFinalizer managedObjectsFinalizer)",
                    "public void org.glassfish.jersey.model.internal.CommonConfig.configureMetaProviders(InjectionManager injectionManager, ManagedObjectsFinalizer finalizer)",
                    "public CommonConfig org.glassfish.jersey.model.internal.CommonConfig.register(final Class<?> componentClass, final Class<?>... contracts)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "96028068b6379ad923cf26ab018f372f3ea040f6",
        "previous_commit": "663242ee0302797a663211f09557b610ee1e92d6",
        "date": 1710180849,
        "releases": {
            "previous": "96028068b6379ad923cf26ab018f372f3ea040f6",
            "next": "96028068b6379ad923cf26ab018f372f3ea040f6"
        },
        "commit_message": "Propagate Future.cancel() to connectors\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "96028068b6379ad923cf26ab018f372f3ea040f6": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "public void org.glassfish.jersey.apache.connector.ApacheConnector.close()",
                    "public ClientResponse org.glassfish.jersey.apache.connector.ApacheConnector.apply(final ClientRequest clientRequest)"
                ],
                "connectors/apache5-connector/src/main/java/org/glassfish/jersey/apache5/connector/Apache5Connector.java": [
                    "public void org.glassfish.jersey.apache5.connector.Apache5Connector.close()",
                    "public ClientResponse org.glassfish.jersey.apache5.connector.Apache5Connector.apply(final ClientRequest clientRequest)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelRead0(ChannelHandlerContext ctx, HttpObject msg)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.submit(final Class<T> responseType)",
                    "public Future<Response> org.glassfish.jersey.client.JerseyInvocation.submit()",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.submit(final GenericType<T> responseType, final InvocationCallback<T> callback)",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.submit(final GenericType<T> responseType)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private static InputStream org.glassfish.jersey.client.internal.HttpUrlConnector.getInputStream(final HttpURLConnection uc, final ClientRequest clientRequest)",
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)",
                    "private void org.glassfish.jersey.client.internal.HttpUrlConnector.throwIOExceptionIfClosed()"
                ]
            },
            "663242ee0302797a663211f09557b610ee1e92d6": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "public void org.glassfish.jersey.apache.connector.ApacheConnector.close()",
                    "public ClientResponse org.glassfish.jersey.apache.connector.ApacheConnector.apply(final ClientRequest clientRequest)"
                ],
                "connectors/apache5-connector/src/main/java/org/glassfish/jersey/apache5/connector/Apache5Connector.java": [
                    "public void org.glassfish.jersey.apache5.connector.Apache5Connector.close()",
                    "public ClientResponse org.glassfish.jersey.apache5.connector.Apache5Connector.apply(final ClientRequest clientRequest)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelRead0(ChannelHandlerContext ctx, HttpObject msg)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.submit(final Class<T> responseType)",
                    "public Future<Response> org.glassfish.jersey.client.JerseyInvocation.submit()",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.submit(final GenericType<T> responseType, final InvocationCallback<T> callback)",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.submit(final GenericType<T> responseType)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)",
                    "private static InputStream org.glassfish.jersey.client.internal.HttpUrlConnector.getInputStream(final HttpURLConnection uc)",
                    "private void org.glassfish.jersey.client.internal.HttpUrlConnector.throwIOExceptionIfClosed()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "48c4fb8e03b1656f4a68d8b5d71ed7aebe89b44b",
        "previous_commit": "741aad4fb064c1824325339f78d22b2a5c3dac20",
        "date": 1613650292,
        "releases": {
            "previous": "48c4fb8e03b1656f4a68d8b5d71ed7aebe89b44b",
            "next": "48c4fb8e03b1656f4a68d8b5d71ed7aebe89b44b"
        },
        "commit_message": "Rest client 2.0 updates (#4724)\n\n* RestClient updates\r\n\r\nSigned-off-by: David Kral <david.k.kral@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "48c4fb8e03b1656f4a68d8b5d71ed7aebe89b44b": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyWebTarget.java": [
                    "public JerseyWebTarget org.glassfish.jersey.client.JerseyWebTarget.queryParam(String name, Object... values)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/uri/internal/JerseyUriBuilder.java": [
                    "public JerseyUriBuilder org.glassfish.jersey.uri.internal.JerseyUriBuilder.queryParam(String name, final Object... values)",
                    "private URI org.glassfish.jersey.uri.internal.JerseyUriBuilder._build(final boolean encode, final boolean encodeSlashInPath, final Object... values)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterfaceModel.java": [
                    "private void org.glassfish.jersey.microprofile.restclient.InterfaceModel.filterAllInterceptorAnnotations()",
                    "Object org.glassfish.jersey.microprofile.restclient.InterfaceModel.resolveParamValue(Object arg, Parameter parameter)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private void org.glassfish.jersey.microprofile.restclient.MethodModel.evaluateResponse(Response response, Method method)",
                    "private CompletableFuture org.glassfish.jersey.microprofile.restclient.MethodModel.asynchronousCall(Invocation.Builder builder, Object entity, Method method, MultivaluedMap<String, Object> customHeaders)",
                    "private void org.glassfish.jersey.microprofile.restclient.MethodModel.filterAllInterceptorAnnotations()",
                    "private MultivaluedMap<String, String> org.glassfish.jersey.microprofile.restclient.MethodModel.resolveCustomHeaders(Object[] args)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientProducer.java": [
                    "public Object org.glassfish.jersey.microprofile.restclient.RestClientProducer.create(CreationalContext<Object> creationalContext)"
                ]
            },
            "741aad4fb064c1824325339f78d22b2a5c3dac20": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyWebTarget.java": [
                    "public JerseyWebTarget org.glassfish.jersey.client.JerseyWebTarget.queryParam(String name, Object... values)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/uri/internal/JerseyUriBuilder.java": [
                    "public JerseyUriBuilder org.glassfish.jersey.uri.internal.JerseyUriBuilder.queryParam(String name, final Object... values)",
                    "private URI org.glassfish.jersey.uri.internal.JerseyUriBuilder._build(final boolean encode, final boolean encodeSlashInPath, final Object... values)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterfaceModel.java": [
                    "private void org.glassfish.jersey.microprofile.restclient.InterfaceModel.filterAllInterceptorAnnotations()",
                    "Object org.glassfish.jersey.microprofile.restclient.InterfaceModel.resolveParamValue(Object arg, Parameter parameter)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private void org.glassfish.jersey.microprofile.restclient.MethodModel.evaluateResponse(Response response, Method method)",
                    "private CompletableFuture org.glassfish.jersey.microprofile.restclient.MethodModel.asynchronousCall(Invocation.Builder builder, Object entity, Method method, MultivaluedMap<String, Object> customHeaders)",
                    "private void org.glassfish.jersey.microprofile.restclient.MethodModel.filterAllInterceptorAnnotations()",
                    "private MultivaluedMap<String, String> org.glassfish.jersey.microprofile.restclient.MethodModel.resolveCustomHeaders(Object[] args)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientProducer.java": [
                    "public Object org.glassfish.jersey.microprofile.restclient.RestClientProducer.create(CreationalContext<Object> creationalContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "11d6c112a5391aed95ecc58d41058ac2f13e23bc",
        "previous_commit": "1c68a582ca0a0653eb54cc8e152c9ca0a83d709b",
        "date": 1589482707,
        "releases": {
            "previous": "11d6c112a5391aed95ecc58d41058ac2f13e23bc",
            "next": "11d6c112a5391aed95ecc58d41058ac2f13e23bc"
        },
        "commit_message": "Offer the Client (partial) response in ProcessingException. (#4460)\n\nOffer the user (partial) response in ProcessingException.\r\nIn the HttpUrlConnector, when there is a response,\r\nthrow ResponseProcessingException instead of a simple\r\nProcessingException.\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "11d6c112a5391aed95ecc58d41058ac2f13e23bc": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientRuntime.java": [
                    "public ClientResponse invoke(final ClientRequest request)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "public void org.glassfish.jersey.client.JerseyInvocation.completed(final ClientResponse response, final RequestScope scope)",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.submit(final GenericType<T> responseType)",
                    "public <T> T org.glassfish.jersey.client.JerseyInvocation.invoke(final Class<T> responseType)",
                    "public void org.glassfish.jersey.client.JerseyInvocation.failed(final ProcessingException error)",
                    "public Response org.glassfish.jersey.client.JerseyInvocation.invoke()",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.submit(final Class<T> responseType)",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.submit(final GenericType<T> responseType, final InvocationCallback<T> callback)",
                    "public Future<Response> org.glassfish.jersey.client.JerseyInvocation.submit()",
                    "public <T> T org.glassfish.jersey.client.JerseyInvocation.invoke(final GenericType<T> responseType)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            },
            "1c68a582ca0a0653eb54cc8e152c9ca0a83d709b": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientRuntime.java": [
                    "public ClientResponse invoke(final ClientRequest request)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "public void org.glassfish.jersey.client.JerseyInvocation.completed(final ClientResponse response, final RequestScope scope)",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.submit(final GenericType<T> responseType)",
                    "public <T> T org.glassfish.jersey.client.JerseyInvocation.invoke(final Class<T> responseType)",
                    "public void org.glassfish.jersey.client.JerseyInvocation.failed(final ProcessingException error)",
                    "public Response org.glassfish.jersey.client.JerseyInvocation.invoke()",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.submit(final Class<T> responseType)",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.submit(final GenericType<T> responseType, final InvocationCallback<T> callback)",
                    "public Future<Response> org.glassfish.jersey.client.JerseyInvocation.submit()",
                    "public <T> T org.glassfish.jersey.client.JerseyInvocation.invoke(final GenericType<T> responseType)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "1c329c8862611fc57ab65efe9db7c87800861f14",
        "previous_commit": "56167602cfc8cc7fe38f5007dfa2488863545f72",
        "date": 1700648855,
        "releases": {
            "previous": "1c329c8862611fc57ab65efe9db7c87800861f14",
            "next": "1c329c8862611fc57ab65efe9db7c87800861f14"
        },
        "commit_message": "Allow @Priority for ExceptionMapper\nCentralized working with @Priority value.\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "1c329c8862611fc57ab65efe9db7c87800861f14": {
                "core-common/src/main/java/org/glassfish/jersey/internal/ExceptionMapperFactory.java": [
                    "private <T extends Throwable> ExceptionMapper<T> org.glassfish.jersey.internal.ExceptionMapperFactory.find(final Class<T> type, final T exceptionInstance)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/config/ExternalPropertiesConfigurationFactory.java": [
                    "public int org.glassfish.jersey.internal.config.ExternalPropertiesConfigurationFactory.compare(ExternalConfigurationProvider config1, ExternalConfigurationProvider config2)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/Providers.java": [
                    "private static int org.glassfish.jersey.internal.inject.Providers.getPriority(Class<?> serviceClass)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/TracingLogger.java": [
                    "private static String org.glassfish.jersey.message.internal.TracingLogger.formatInstance(final Object instance)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "public void org.glassfish.jersey.model.internal.CommonConfig.configureAutoDiscoverableProviders(final InjectionManager injectionManager, final Collection<AutoDiscoverable> autoDiscoverables, final boolean forcedOnly)",
                    "private static int org.glassfish.jersey.model.internal.CommonConfig.priority(Class<? extends Feature> featureClass, int priority)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/model/internal/RankedProvider.java": [
                    "private int org.glassfish.jersey.model.internal.RankedProvider<T>.computeRank(final T provider, final int rank)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "private int org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.getProviderPriority(Class<?> restClientInterface, Class<?> providerClass)",
                    "Integer org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.getPriority()"
                ],
                "incubator/cdi-inject-weld/src/main/java/org/glassfish/jersey/inject/weld/internal/bean/JerseyBean.java": [
                    "public int org.glassfish.jersey.inject.weld.internal.bean.JerseyBean<T>.getRank()"
                ],
                "inject/cdi2-se/src/main/java/org/glassfish/jersey/inject/cdi/se/bean/JerseyBean.java": [
                    "public int org.glassfish.jersey.inject.cdi.se.bean.JerseyBean<T>.getRank()"
                ]
            },
            "56167602cfc8cc7fe38f5007dfa2488863545f72": {
                "core-common/src/main/java/org/glassfish/jersey/internal/ExceptionMapperFactory.java": [
                    "private <T extends Throwable> ExceptionMapper<T> org.glassfish.jersey.internal.ExceptionMapperFactory.find(final Class<T> type, final T exceptionInstance)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/config/ExternalPropertiesConfigurationFactory.java": [
                    "public int org.glassfish.jersey.internal.config.ExternalPropertiesConfigurationFactory.compare(ExternalConfigurationProvider config1, ExternalConfigurationProvider config2)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/Providers.java": [
                    "private static int org.glassfish.jersey.internal.inject.Providers.getPriority(Class<?> serviceClass)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/TracingLogger.java": [
                    "private static String org.glassfish.jersey.message.internal.TracingLogger.formatInstance(final Object instance)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "public void org.glassfish.jersey.model.internal.CommonConfig.configureAutoDiscoverableProviders(final InjectionManager injectionManager, final Collection<AutoDiscoverable> autoDiscoverables, final boolean forcedOnly)",
                    "private static int org.glassfish.jersey.model.internal.CommonConfig.priority(Class<? extends Feature> featureClass, int priority)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/model/internal/RankedProvider.java": [
                    "private int org.glassfish.jersey.model.internal.RankedProvider<T>.computeRank(final T provider, final int rank)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "private int org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.getProviderPriority(Class<?> restClientInterface, Class<?> providerClass)",
                    "Integer org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.getPriority()"
                ],
                "incubator/cdi-inject-weld/src/main/java/org/glassfish/jersey/inject/weld/internal/bean/JerseyBean.java": [
                    "public int org.glassfish.jersey.inject.weld.internal.bean.JerseyBean<T>.getRank()"
                ],
                "inject/cdi2-se/src/main/java/org/glassfish/jersey/inject/cdi/se/bean/JerseyBean.java": [
                    "public int org.glassfish.jersey.inject.cdi.se.bean.JerseyBean<T>.getRank()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "0c2f28ae96bf1f89f944b9a7d901e34861d85633",
        "previous_commit": "f2f95f94b965744be9d0f007f141b1e222d7e759",
        "date": 1665649138,
        "releases": {
            "previous": "0c2f28ae96bf1f89f944b9a7d901e34861d85633",
            "next": "0c2f28ae96bf1f89f944b9a7d901e34861d85633"
        },
        "commit_message": "Fix Container#reload\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "0c2f28ae96bf1f89f944b9a7d901e34861d85633": {
                "containers/grizzly2-http/src/main/java/org/glassfish/jersey/grizzly2/httpserver/GrizzlyHttpContainer.java": [
                    "public void org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainer.reload()"
                ],
                "containers/jdk-http/src/main/java/org/glassfish/jersey/jdkhttp/JdkHttpHandlerContainer.java": [
                    "public void org.glassfish.jersey.jdkhttp.JdkHttpHandlerContainer.reload()"
                ],
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java": [
                    "public void org.glassfish.jersey.servlet.ServletContainer.reload()"
                ],
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainer.java": [
                    "public void org.glassfish.jersey.jetty.JettyHttpContainer.reload()"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/NettyHttpContainer.java": [
                    "public void org.glassfish.jersey.netty.httpserver.NettyHttpContainer.reload()"
                ],
                "containers/simple-http/src/main/java/org/glassfish/jersey/simple/SimpleContainer.java": [
                    "public void org.glassfish.jersey.simple.SimpleContainer.reload()"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/ServerRuntime.java": [
                    "public void org.glassfish.jersey.server.ServerRuntime.process(final ContainerRequest request)"
                ],
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "public Object org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.create(final CreationalContext creationalContext)",
                    "public void org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.inject(final Object t, final CreationalContext cc)"
                ],
                "inject/hk2/src/main/java/org/glassfish/jersey/inject/hk2/AbstractHk2InjectionManager.java": [
                    "public void org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.shutdown()"
                ]
            },
            "f2f95f94b965744be9d0f007f141b1e222d7e759": {
                "containers/grizzly2-http/src/main/java/org/glassfish/jersey/grizzly2/httpserver/GrizzlyHttpContainer.java": [
                    "public void org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainer.reload()"
                ],
                "containers/jdk-http/src/main/java/org/glassfish/jersey/jdkhttp/JdkHttpHandlerContainer.java": [
                    "public void org.glassfish.jersey.jdkhttp.JdkHttpHandlerContainer.reload()"
                ],
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java": [
                    "public void org.glassfish.jersey.servlet.ServletContainer.reload()"
                ],
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainer.java": [
                    "public void org.glassfish.jersey.jetty.JettyHttpContainer.reload()"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/NettyHttpContainer.java": [
                    "public void org.glassfish.jersey.netty.httpserver.NettyHttpContainer.reload()"
                ],
                "containers/simple-http/src/main/java/org/glassfish/jersey/simple/SimpleContainer.java": [
                    "public void org.glassfish.jersey.simple.SimpleContainer.reload()"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/ServerRuntime.java": [
                    "public void org.glassfish.jersey.server.ServerRuntime.process(final ContainerRequest request)"
                ],
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "public Object org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.create(final CreationalContext creationalContext)",
                    "public void org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.inject(final Object t, final CreationalContext cc)"
                ],
                "inject/hk2/src/main/java/org/glassfish/jersey/inject/hk2/AbstractHk2InjectionManager.java": [
                    "public void org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.shutdown()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "65b1770f5852430cba3b07107e70f4539f1c97a5",
        "previous_commit": "b238b285723d370aacdd5bff8069d4638bf2abe1",
        "date": 1571670893,
        "releases": {
            "previous": "65b1770f5852430cba3b07107e70f4539f1c97a5",
            "next": "65b1770f5852430cba3b07107e70f4539f1c97a5"
        },
        "commit_message": "Enable to use AsyncInvoker in Rx client\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "65b1770f5852430cba3b07107e70f4539f1c97a5": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "public <T> CompletableFuture<T> org.glassfish.jersey.client.JerseyInvocation.method(final String name, final Entity<?> entity, final Class<T> responseType)",
                    "public <T> CompletableFuture<T> org.glassfish.jersey.client.JerseyInvocation.method(final String name, final Entity<?> entity, final GenericType<T> responseType)",
                    "public <T> CompletableFuture<T> org.glassfish.jersey.client.JerseyInvocation.method(final String name, final GenericType<T> responseType)",
                    "public <T> CompletableFuture<T> org.glassfish.jersey.client.JerseyInvocation.method(final String name, final InvocationCallback<T> callback)",
                    "public <T> CompletableFuture<T> org.glassfish.jersey.client.JerseyInvocation.method(final String name, final Class<T> responseType)",
                    "public <T extends RxInvoker> T org.glassfish.jersey.client.JerseyInvocation.rx(Class<T> clazz)",
                    "public CompletableFuture<Response> org.glassfish.jersey.client.JerseyInvocation.method(final String name, final Entity<?> entity)",
                    "public <T> CompletableFuture<T> org.glassfish.jersey.client.JerseyInvocation.method(final String name, final Entity<?> entity, final InvocationCallback<T> callback)",
                    "public CompletionStageRxInvoker org.glassfish.jersey.client.JerseyInvocation.rx()"
                ]
            },
            "b238b285723d370aacdd5bff8069d4638bf2abe1": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.method(final String name, final Entity<?> entity, final Class<T> responseType)",
                    "public Future<Response> org.glassfish.jersey.client.JerseyInvocation.method(final String name, final Entity<?> entity)",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.method(final String name, final GenericType<T> responseType)",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.method(final String name, final InvocationCallback<T> callback)",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.method(final String name, final Entity<?> entity, final GenericType<T> responseType)",
                    "public <T extends RxInvoker> T org.glassfish.jersey.client.JerseyInvocation.rx(Class<T> clazz)",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.method(final String name, final Class<T> responseType)",
                    "public <T> Future<T> org.glassfish.jersey.client.JerseyInvocation.method(final String name, final Entity<?> entity, final InvocationCallback<T> callback)",
                    "public CompletionStageRxInvoker org.glassfish.jersey.client.JerseyInvocation.rx()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "7b4cfa2c4b526c2478afdfc0926545a13c443c4c",
        "previous_commit": "00f804c23821e1d528f55cfc071e967e053dda49",
        "date": 1560255972,
        "releases": {
            "previous": "7b4cfa2c4b526c2478afdfc0926545a13c443c4c",
            "next": "7b4cfa2c4b526c2478afdfc0926545a13c443c4c"
        },
        "commit_message": "Add MP Rest Client to jersey-bom\nSimplify CDI Extension\nThe default injection can be solved by explicitly specifying qualifiers Default and Any\nPrefer looking up BeanManager in JNDI\nThis aligns the behavior with DefaultBeanManagerProvider and also works better\nin more complicated classloader constellations.\nSupport Boolean in PrimitiveValueOfInserter\n\nSigned-off-by: Patrik Dudits <patrik.dudits@payara.fish>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "7b4cfa2c4b526c2478afdfc0926545a13c443c4c": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterfaceModel.java": [
                    "static InterfaceModel org.glassfish.jersey.microprofile.restclient.InterfaceModel.from(Class<?> restClientClass, Set<ResponseExceptionMapper> responseExceptionMappers, Set<ParamConverterProvider> paramConverterProviders, List<AsyncInvocationInterceptor> asyncInterceptors, InjectionManager injectionManager, BeanManager beanManager)",
                    "private void org.glassfish.jersey.microprofile.restclient.InterfaceModel.filterAllInterceptorAnnotations()"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private void org.glassfish.jersey.microprofile.restclient.MethodModel.filterAllInterceptorAnnotations()"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientExtension.java": [
                    "public void org.glassfish.jersey.microprofile.restclient.RestClientExtension.restClientRegistration(@Observes AfterBeanDiscovery abd, BeanManager bm)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientModel.java": [
                    "static RestClientModel org.glassfish.jersey.microprofile.restclient.RestClientModel.from(Class<?> restClientClass, Set<ResponseExceptionMapper> responseExceptionMappers, Set<ParamConverterProvider> paramConverterProviders, List<AsyncInvocationInterceptor> asyncInterceptors, InjectionManager injectionManager, BeanManager beanManager)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientProducer.java": [
                    "public Set<Annotation> org.glassfish.jersey.microprofile.restclient.RestClientProducer.getQualifiers()",
                    "public Object org.glassfish.jersey.microprofile.restclient.RestClientProducer.create(CreationalContext<Object> creationalContext)",
                    "public String org.glassfish.jersey.microprofile.restclient.RestClientProducer.getName()"
                ]
            },
            "00f804c23821e1d528f55cfc071e967e053dda49": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterfaceModel.java": [
                    "private void org.glassfish.jersey.microprofile.restclient.InterfaceModel.filterAllInterceptorAnnotations()",
                    "static InterfaceModel org.glassfish.jersey.microprofile.restclient.InterfaceModel.from(Class<?> restClientClass, Set<ResponseExceptionMapper> responseExceptionMappers, Set<ParamConverterProvider> paramConverterProviders, List<AsyncInvocationInterceptor> asyncInterceptors, InjectionManager injectionManager)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private void org.glassfish.jersey.microprofile.restclient.MethodModel.filterAllInterceptorAnnotations()"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientExtension.java": [
                    "public void org.glassfish.jersey.microprofile.restclient.RestClientExtension.restClientRegistration(@Observes AfterBeanDiscovery abd, BeanManager bm)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientModel.java": [
                    "static RestClientModel org.glassfish.jersey.microprofile.restclient.RestClientModel.from(Class<?> restClientClass, Set<ResponseExceptionMapper> responseExceptionMappers, Set<ParamConverterProvider> paramConverterProviders, List<AsyncInvocationInterceptor> asyncInterceptors, InjectionManager injectionManager)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientProducer.java": [
                    "public Set<Annotation> org.glassfish.jersey.microprofile.restclient.RestClientProducer.getQualifiers()",
                    "public Object org.glassfish.jersey.microprofile.restclient.RestClientProducer.create(CreationalContext<Object> creationalContext)",
                    "public String org.glassfish.jersey.microprofile.restclient.RestClientProducer.getName()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "4c1d91595a7110f548de2703514cae2983125ce1",
        "previous_commit": "82320497530b4b1e479eda9b58d8f817d4515721",
        "date": 1697632818,
        "releases": {
            "previous": "4c1d91595a7110f548de2703514cae2983125ce1",
            "next": "4c1d91595a7110f548de2703514cae2983125ce1"
        },
        "commit_message": "Adopt ASM 9.6\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "4c1d91595a7110f548de2703514cae2983125ce1": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Frame.java": [
                    "private int jersey.red.org.objectweb.asm.Frame.getInitializedType(final SymbolTable symbolTable, final int abstractType)",
                    "static int jersey.red.org.objectweb.asm.Frame.getAbstractTypeFromApiFormat(final SymbolTable symbolTable, final Object type)",
                    "static void jersey.red.org.objectweb.asm.Frame.putAbstractType( final SymbolTable symbolTable, final int abstractType, final ByteVector output)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Label.java": [
                    "final boolean jersey.red.org.objectweb.asm.Label.resolve( final byte[] code, final ByteVector stackMapTableEntries, final int bytecodeOffset)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/MethodWriter.java": [
                    "public AnnotationVisitor jersey.red.org.objectweb.asm.MethodWriter.visitParameterAnnotation( final int parameter, final String annotationDescriptor, final boolean visible)",
                    "private void jersey.red.org.objectweb.asm.MethodWriter.endCurrentBasicBlockWithNoSuccessor()",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitLabel(final Label label)",
                    "private void jersey.red.org.objectweb.asm.MethodWriter.putFrameType(final Object type)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Type.java": [
                    "public static Type[] jersey.red.org.objectweb.asm.Type.getArgumentTypes(final String methodDescriptor)"
                ]
            },
            "82320497530b4b1e479eda9b58d8f817d4515721": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Frame.java": [
                    "private int jersey.red.org.objectweb.asm.Frame.getInitializedType(final SymbolTable symbolTable, final int abstractType)",
                    "static int jersey.red.org.objectweb.asm.Frame.getAbstractTypeFromApiFormat(final SymbolTable symbolTable, final Object type)",
                    "static void jersey.red.org.objectweb.asm.Frame.putAbstractType( final SymbolTable symbolTable, final int abstractType, final ByteVector output)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Label.java": [
                    "final boolean jersey.red.org.objectweb.asm.Label.resolve(final byte[] code, final int bytecodeOffset)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/MethodWriter.java": [
                    "public AnnotationVisitor jersey.red.org.objectweb.asm.MethodWriter.visitParameterAnnotation( final int parameter, final String annotationDescriptor, final boolean visible)",
                    "private void jersey.red.org.objectweb.asm.MethodWriter.endCurrentBasicBlockWithNoSuccessor()",
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitLabel(final Label label)",
                    "private void jersey.red.org.objectweb.asm.MethodWriter.putFrameType(final Object type)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Type.java": [
                    "public static Type[] jersey.red.org.objectweb.asm.Type.getArgumentTypes(final String methodDescriptor)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "ce9b1bd6a09ecbf11f5298b06fe69f9e7781496d",
        "previous_commit": "dc51308638f96d4cf562b91ce22cd54d464dbf62",
        "date": 1675949448,
        "releases": {
            "previous": "ce9b1bd6a09ecbf11f5298b06fe69f9e7781496d",
            "next": "ce9b1bd6a09ecbf11f5298b06fe69f9e7781496d"
        },
        "commit_message": "Add SNI Support based on Host header\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "ce9b1bd6a09ecbf11f5298b06fe69f9e7781496d": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "private HttpClientConnectionManager org.glassfish.jersey.apache.connector.ApacheConnector.createConnectionManager( final Client client, final Configuration config, final SSLContext sslContext, final boolean useSystemProperties)",
                    "public ClientResponse org.glassfish.jersey.apache.connector.ApacheConnector.apply(final ClientRequest clientRequest)"
                ],
                "connectors/apache5-connector/src/main/java/org/glassfish/jersey/apache5/connector/Apache5Connector.java": [
                    "private HttpClientConnectionManager org.glassfish.jersey.apache5.connector.Apache5Connector.createConnectionManager( final Client client, final Configuration config, final SSLContext sslContext, final boolean useSystemProperties)",
                    "public ClientResponse org.glassfish.jersey.apache5.connector.Apache5Connector.apply(final ClientRequest clientRequest)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpConnection.java": [
                    "protected Filter<HttpRequest, HttpResponse, HttpRequest, HttpResponse> org.glassfish.jersey.jdk.connector.internal.HttpConnection.createFilterChain(URI uri, ConnectorConfiguration configuration)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpConnectionPool.java": [
                    "void org.glassfish.jersey.jdk.connector.internal.HttpConnectionPool.send(HttpRequest httpRequest, CompletionHandler<HttpResponse> completionHandler)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            },
            "dc51308638f96d4cf562b91ce22cd54d464dbf62": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "private HttpClientConnectionManager org.glassfish.jersey.apache.connector.ApacheConnector.createConnectionManager( final Client client, final Configuration config, final SSLContext sslContext, final boolean useSystemProperties)",
                    "public ClientResponse org.glassfish.jersey.apache.connector.ApacheConnector.apply(final ClientRequest clientRequest)"
                ],
                "connectors/apache5-connector/src/main/java/org/glassfish/jersey/apache5/connector/Apache5Connector.java": [
                    "private HttpClientConnectionManager org.glassfish.jersey.apache5.connector.Apache5Connector.createConnectionManager( final Client client, final Configuration config, final SSLContext sslContext, final boolean useSystemProperties)",
                    "public ClientResponse org.glassfish.jersey.apache5.connector.Apache5Connector.apply(final ClientRequest clientRequest)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpConnection.java": [
                    "protected Filter<HttpRequest, HttpResponse, HttpRequest, HttpResponse> org.glassfish.jersey.jdk.connector.internal.HttpConnection.createFilterChain(URI uri, ConnectorConfiguration configuration)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpConnectionPool.java": [
                    "void org.glassfish.jersey.jdk.connector.internal.HttpConnectionPool.send(HttpRequest httpRequest, CompletionHandler<HttpResponse> completionHandler)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "2299c0bd7e32420b08857a2aba16dd77dd13f7a1",
        "previous_commit": "9dbc693eaff403e4a1b285cac77361fd96b9b694",
        "date": 1644570890,
        "releases": {
            "previous": "2299c0bd7e32420b08857a2aba16dd77dd13f7a1",
            "next": "2299c0bd7e32420b08857a2aba16dd77dd13f7a1"
        },
        "commit_message": "Allow for passing in additional property files to configure additional configs\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "2299c0bd7e32420b08857a2aba16dd77dd13f7a1": {
                "core-common/src/main/java/org/glassfish/jersey/internal/config/ExternalPropertiesConfigurationFactory.java": [
                    "static Map<String, Object> org.glassfish.jersey.internal.config.ExternalPropertiesConfigurationFactory.readExternalPropertiesMap()",
                    "public static boolean org.glassfish.jersey.internal.config.ExternalPropertiesConfigurationFactory.configure(Configurable config)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/config/SystemPropertiesConfigurationModel.java": [
                    "private static String org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.getPropertyNameByField(Field field)",
                    "private Map<String, Object> org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.getExpectedSystemProperties()",
                    "public ExternalConfigurationModel org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.mergeProperties(Map<String, Object> inputProperties)",
                    "public <T> T org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.as(String name, Class<T> clazz)",
                    "public Collection<String> org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.getPropertyNames()",
                    "public Map<String, Object> org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.getProperties()",
                    "public boolean org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.isProperty(String name)"
                ]
            },
            "9dbc693eaff403e4a1b285cac77361fd96b9b694": {
                "core-common/src/main/java/org/glassfish/jersey/internal/config/ExternalPropertiesConfigurationFactory.java": [
                    "static Map<String, Object> org.glassfish.jersey.internal.config.ExternalPropertiesConfigurationFactory.readExternalPropertiesMap()",
                    "public static boolean org.glassfish.jersey.internal.config.ExternalPropertiesConfigurationFactory.configure(Configurable config)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/config/SystemPropertiesConfigurationModel.java": [
                    "private Map<String, Object> org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.getExpectedSystemProperties()",
                    "private String org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.getPropertyNameByField(Field field)",
                    "public ExternalConfigurationModel org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.mergeProperties(Map<String, Object> inputProperties)",
                    "public <T> T org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.as(String name, Class<T> clazz)",
                    "public Collection<String> org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.getPropertyNames()",
                    "public Map<String, Object> org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.getProperties()",
                    "public boolean org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.isProperty(String name)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "d88025ba0700837808125956cd8acde9d2be6e42",
        "previous_commit": "950ce6ce91bd7aafeabb939c487f72f73e77dc71",
        "date": 1587122097,
        "releases": {
            "previous": "d88025ba0700837808125956cd8acde9d2be6e42",
            "next": "d88025ba0700837808125956cd8acde9d2be6e42"
        },
        "commit_message": "Adopt ASM 8.0 (#4431)\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "d88025ba0700837808125956cd8acde9d2be6e42": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassReader.java": [
                    "private int jersey.red.org.objectweb.asm.ClassReader.readMethod( final ClassVisitor classVisitor, final Context context, final int methodInfoOffset)",
                    "public void jersey.red.org.objectweb.asm.ClassReader.accept( final ClassVisitor classVisitor, final Attribute[] attributePrototypes, final int parsingOptions)",
                    "private void jersey.red.org.objectweb.asm.ClassReader.readCode( final MethodVisitor methodVisitor, final Context context, final int codeOffset)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassWriter.java": [
                    "private byte[] jersey.red.org.objectweb.asm.ClassWriter.replaceAsmInstructions(final byte[] classFile, final boolean hasFrames)",
                    "public byte[] jersey.red.org.objectweb.asm.ClassWriter.toByteArray()",
                    "private Attribute[] jersey.red.org.objectweb.asm.ClassWriter.getAttributePrototypes()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/MethodVisitor.java": [
                    "public void jersey.red.org.objectweb.asm.MethodVisitor.visitLdcInsn(final Object value)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/SymbolTable.java": [
                    "Symbol jersey.red.org.objectweb.asm.SymbolTable.addBootstrapMethod( final Handle bootstrapMethodHandle, final Object... bootstrapMethodArguments)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/AnnotationAcceptingListener.java": [
                    "public void org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.process(final String name, final InputStream in)"
                ]
            },
            "950ce6ce91bd7aafeabb939c487f72f73e77dc71": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassReader.java": [
                    "private int jersey.red.org.objectweb.asm.ClassReader.readMethod( final ClassVisitor classVisitor, final Context context, final int methodInfoOffset)",
                    "public void jersey.red.org.objectweb.asm.ClassReader.accept( final ClassVisitor classVisitor, final Attribute[] attributePrototypes, final int parsingOptions)",
                    "private void jersey.red.org.objectweb.asm.ClassReader.readCode( final MethodVisitor methodVisitor, final Context context, final int codeOffset)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassWriter.java": [
                    "private byte[] jersey.red.org.objectweb.asm.ClassWriter.replaceAsmInstructions(final byte[] classFile, final boolean hasFrames)",
                    "public byte[] jersey.red.org.objectweb.asm.ClassWriter.toByteArray()",
                    "private Attribute[] jersey.red.org.objectweb.asm.ClassWriter.getAttributePrototypes()"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/MethodVisitor.java": [
                    "public void jersey.red.org.objectweb.asm.MethodVisitor.visitLdcInsn(final Object value)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/SymbolTable.java": [
                    "Symbol jersey.red.org.objectweb.asm.SymbolTable.addBootstrapMethod( final Handle bootstrapMethodHandle, final Object... bootstrapMethodArguments)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/AnnotationAcceptingListener.java": [
                    "public void org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.process(final String name, final InputStream in)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "d3b2d63f9e04769b84f7992e3857218d90a9d8a0",
        "previous_commit": "14e8f181a4b584461cd7609bf916ba9123ccb7c8",
        "date": 1565874486,
        "releases": {
            "previous": "d3b2d63f9e04769b84f7992e3857218d90a9d8a0",
            "next": "d3b2d63f9e04769b84f7992e3857218d90a9d8a0"
        },
        "commit_message": "Upgrade of MP Rest client to 1.3.3.\nFirst refactoring steps to fix generics declarations.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "d3b2d63f9e04769b84f7992e3857218d90a9d8a0": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterfaceModel.java": [
                    "Builder org.glassfish.jersey.microprofile.restclient.InterfaceModel.produces(Produces produces)",
                    "Builder org.glassfish.jersey.microprofile.restclient.InterfaceModel.consumes(Consumes consumes)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private static List<ParamModel> org.glassfish.jersey.microprofile.restclient.MethodModel.parameterModels(InterfaceModel classModel, Method method)",
                    "private static String org.glassfish.jersey.microprofile.restclient.MethodModel.parseHttpMethod(InterfaceModel classModel, Method method)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ParamModel.java": [
                    "ParamModel org.glassfish.jersey.microprofile.restclient.ParamModel<T>.build()"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ProxyInvocationHandler.java": [
                    "public Object org.glassfish.jersey.microprofile.restclient.ProxyInvocationHandler.invoke(Object proxy, Method method, Object[] args)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ReflectionUtil.java": [
                    "static <T> T org.glassfish.jersey.microprofile.restclient.ReflectionUtil.createInstance(Class<T> tClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientProducer.java": [
                    "public Object org.glassfish.jersey.microprofile.restclient.RestClientProducer.create(CreationalContext<Object> creationalContext)"
                ]
            },
            "14e8f181a4b584461cd7609bf916ba9123ccb7c8": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterfaceModel.java": [
                    "Builder org.glassfish.jersey.microprofile.restclient.InterfaceModel.produces(Produces produces)",
                    "Builder org.glassfish.jersey.microprofile.restclient.InterfaceModel.consumes(Consumes consumes)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private static List<ParamModel> org.glassfish.jersey.microprofile.restclient.MethodModel.parameterModels(InterfaceModel classModel, Method method)",
                    "private static String org.glassfish.jersey.microprofile.restclient.MethodModel.parseHttpMethod(InterfaceModel classModel, Method method)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ParamModel.java": [
                    "ParamModel org.glassfish.jersey.microprofile.restclient.ParamModel<T>.build()"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ProxyInvocationHandler.java": [
                    "public Object org.glassfish.jersey.microprofile.restclient.ProxyInvocationHandler.invoke(Object proxy, Method method, Object[] args)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ReflectionUtil.java": [
                    "static <T> T org.glassfish.jersey.microprofile.restclient.ReflectionUtil.createInstance(Class<T> tClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientProducer.java": [
                    "public Object org.glassfish.jersey.microprofile.restclient.RestClientProducer.create(CreationalContext<Object> creationalContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "0d58cf900aab0a34a424f5b88a8874df45601082",
        "previous_commit": "6b87643f8b974af6bd600e4d58a026c3a0f5e33d",
        "date": 1618215666,
        "releases": {
            "previous": "0d58cf900aab0a34a424f5b88a8874df45601082",
            "next": "0d58cf900aab0a34a424f5b88a8874df45601082"
        },
        "commit_message": "Logging delimiter parametrized (#4745)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "0d58cf900aab0a34a424f5b88a8874df45601082": {
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingFeature.java": [
                    "private LoggingInterceptor org.glassfish.jersey.logging.LoggingFeature.createLoggingFilter(FeatureContext context, RuntimeType runtimeType)",
                    "public boolean org.glassfish.jersey.logging.LoggingFeature.configure(FeatureContext context)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingFeatureAutoDiscoverable.java": [
                    "private boolean org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable.clientConfigured(Map properties)",
                    "private boolean org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable.serverConfigured(Map properties)",
                    "private boolean org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable.commonPropertyConfigured(Map properties)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingInterceptor.java": [
                    "void org.glassfish.jersey.logging.LoggingInterceptor.printRequestLine(final StringBuilder b, final String note, final long id, final String method, final URI uri)",
                    "void org.glassfish.jersey.logging.LoggingInterceptor.printResponseLine(final StringBuilder b, final String note, final long id, final int status)",
                    "void org.glassfish.jersey.logging.LoggingInterceptor.printPrefixedHeaders(final StringBuilder b, final long id, final String prefix, final MultivaluedMap<String, String> headers)"
                ]
            },
            "6b87643f8b974af6bd600e4d58a026c3a0f5e33d": {
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingFeature.java": [
                    "private LoggingInterceptor org.glassfish.jersey.logging.LoggingFeature.createLoggingFilter(FeatureContext context, RuntimeType runtimeType)",
                    "public boolean org.glassfish.jersey.logging.LoggingFeature.configure(FeatureContext context)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingFeatureAutoDiscoverable.java": [
                    "private boolean org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable.clientConfigured(Map properties)",
                    "private boolean org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable.serverConfigured(Map properties)",
                    "private boolean org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable.commonPropertyConfigured(Map properties)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingInterceptor.java": [
                    "void org.glassfish.jersey.logging.LoggingInterceptor.printRequestLine(final StringBuilder b, final String note, final long id, final String method, final URI uri)",
                    "void org.glassfish.jersey.logging.LoggingInterceptor.printResponseLine(final StringBuilder b, final String note, final long id, final int status)",
                    "void org.glassfish.jersey.logging.LoggingInterceptor.printPrefixedHeaders(final StringBuilder b, final long id, final String prefix, final MultivaluedMap<String, String> headers)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "73bdf5ff2deb24e72e7fd5c8dfa78017bb581387",
        "previous_commit": "5a2b2512c9f2480f5a8b792a7ff934045be7f288",
        "date": 1694095185,
        "releases": {
            "previous": "73bdf5ff2deb24e72e7fd5c8dfa78017bb581387",
            "next": "73bdf5ff2deb24e72e7fd5c8dfa78017bb581387"
        },
        "commit_message": "Allowing using SSLContext supplier per request by the NettyConnector\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "73bdf5ff2deb24e72e7fd5c8dfa78017bb581387": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyClientBuilder.java": [
                    "public JerseyClient org.glassfish.jersey.client.JerseyClientBuilder.build()",
                    "public JerseyClientBuilder org.glassfish.jersey.client.JerseyClientBuilder.sslContext(SSLContext sslContext)",
                    "public JerseyClientBuilder org.glassfish.jersey.client.JerseyClientBuilder.keyStore(KeyStore keyStore, char[] password)",
                    "public JerseyClientBuilder org.glassfish.jersey.client.JerseyClientBuilder.trustStore(KeyStore trustStore)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "public SSLSocketFactory org.glassfish.jersey.client.internal.HttpUrlConnector.get()",
                    "private void org.glassfish.jersey.client.internal.HttpUrlConnector.secureConnection( final ClientRequest clientRequest, final HttpURLConnection uc, final SSLParamConfigurator sniConfig)"
                ]
            },
            "5a2b2512c9f2480f5a8b792a7ff934045be7f288": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyClientBuilder.java": [
                    "public JerseyClient org.glassfish.jersey.client.JerseyClientBuilder.build()",
                    "public JerseyClientBuilder org.glassfish.jersey.client.JerseyClientBuilder.sslContext(SSLContext sslContext)",
                    "public JerseyClientBuilder org.glassfish.jersey.client.JerseyClientBuilder.keyStore(KeyStore keyStore, char[] password)",
                    "public JerseyClientBuilder org.glassfish.jersey.client.JerseyClientBuilder.trustStore(KeyStore trustStore)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "public SSLSocketFactory org.glassfish.jersey.client.internal.HttpUrlConnector.get()",
                    "private void org.glassfish.jersey.client.internal.HttpUrlConnector.secureConnection( final ClientRequest clientRequest, final HttpURLConnection uc, final SSLParamConfigurator sniConfig)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "bdb0dd05560d7611b1650ef35fab468323da8a56",
        "previous_commit": "9c8628a9f249653e844f8d03d49ace97ac92be02",
        "date": 1639581500,
        "releases": {
            "previous": "bdb0dd05560d7611b1650ef35fab468323da8a56",
            "next": "bdb0dd05560d7611b1650ef35fab468323da8a56"
        },
        "commit_message": "Replace usage of deprecated beanManager.createInjectionTarget\n\nSigned-off-by: arjantijms <arjan.tijms@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "bdb0dd05560d7611b1650ef35fab468323da8a56": {
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/hibernate/DestructibleBeanInstance.java": [
                    "private InjectionTarget<T> org.glassfish.jersey.server.validation.internal.hibernate.DestructibleBeanInstance<T>.createInjectionTarget(BeanManager beanManager, Class<T> type)"
                ],
                "ext/cdi/jersey-cdi1x-servlet/src/main/java/org/glassfish/jersey/ext/cdi1x/servlet/internal/CdiExternalRequestScopeExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.servlet.internal.CdiExternalRequestScopeExtension.afterBeanDiscovery(@Observes AfterBeanDiscovery afterBeanDiscovery, BeanManager beanManager)"
                ],
                "ext/cdi/jersey-cdi1x-validation/src/main/java/org/glassfish/jersey/ext/cdi1x/validation/internal/CdiInterceptorWrapperExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.validation.internal.CdiInterceptorWrapperExtension.afterBeanDiscovery(@Observes AfterBeanDiscovery afterBeanDiscovery, BeanManager beanManager)"
                ],
                "incubator/cdi-inject-weld/src/main/java/org/glassfish/jersey/inject/weld/internal/bean/BeanHelper.java": [
                    "public static <T> BindingBeanPair org.glassfish.jersey.inject.weld.internal.bean.BeanHelper.registerBean(RuntimeType runtimeType, ClassBinding<T> binding, AfterBeanDiscovery abd, Collection<InjectionResolver> resolvers, BeanManager beanManager)"
                ],
                "incubator/cdi-inject-weld/src/main/java/org/glassfish/jersey/inject/weld/internal/managed/CdiInjectionManager.java": [
                    "public void org.glassfish.jersey.inject.weld.internal.managed.CdiInjectionManager.inject(Object instance)"
                ],
                "inject/cdi2-se/src/main/java/org/glassfish/jersey/inject/cdi/se/CdiSeInjectionManager.java": [
                    "public void org.glassfish.jersey.inject.cdi.se.CdiSeInjectionManager.inject(Object instance)"
                ],
                "inject/cdi2-se/src/main/java/org/glassfish/jersey/inject/cdi/se/bean/BeanHelper.java": [
                    "public static <T> void org.glassfish.jersey.inject.cdi.se.bean.BeanHelper.registerBean(ClassBinding<T> binding, AfterBeanDiscovery abd, Collection<InjectionResolver> resolvers, BeanManager beanManager)"
                ]
            },
            "9c8628a9f249653e844f8d03d49ace97ac92be02": {
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/hibernate/DestructibleBeanInstance.java": [
                    "private InjectionTarget<T> org.glassfish.jersey.server.validation.internal.hibernate.DestructibleBeanInstance<T>.createInjectionTarget(BeanManager beanManager, Class<T> type)"
                ],
                "ext/cdi/jersey-cdi1x-servlet/src/main/java/org/glassfish/jersey/ext/cdi1x/servlet/internal/CdiExternalRequestScopeExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.servlet.internal.CdiExternalRequestScopeExtension.afterBeanDiscovery(@Observes AfterBeanDiscovery afterBeanDiscovery, BeanManager beanManager)"
                ],
                "ext/cdi/jersey-cdi1x-validation/src/main/java/org/glassfish/jersey/ext/cdi1x/validation/internal/CdiInterceptorWrapperExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.validation.internal.CdiInterceptorWrapperExtension.afterBeanDiscovery(@Observes AfterBeanDiscovery afterBeanDiscovery, BeanManager beanManager)"
                ],
                "incubator/cdi-inject-weld/src/main/java/org/glassfish/jersey/inject/weld/internal/bean/BeanHelper.java": [
                    "public static <T> BindingBeanPair org.glassfish.jersey.inject.weld.internal.bean.BeanHelper.registerBean(RuntimeType runtimeType, ClassBinding<T> binding, AfterBeanDiscovery abd, Collection<InjectionResolver> resolvers, BeanManager beanManager)"
                ],
                "incubator/cdi-inject-weld/src/main/java/org/glassfish/jersey/inject/weld/internal/managed/CdiInjectionManager.java": [
                    "public void org.glassfish.jersey.inject.weld.internal.managed.CdiInjectionManager.inject(Object instance)"
                ],
                "inject/cdi2-se/src/main/java/org/glassfish/jersey/inject/cdi/se/CdiSeInjectionManager.java": [
                    "public void org.glassfish.jersey.inject.cdi.se.CdiSeInjectionManager.inject(Object instance)"
                ],
                "inject/cdi2-se/src/main/java/org/glassfish/jersey/inject/cdi/se/bean/BeanHelper.java": [
                    "public static <T> void org.glassfish.jersey.inject.cdi.se.bean.BeanHelper.registerBean(ClassBinding<T> binding, AfterBeanDiscovery abd, Collection<InjectionResolver> resolvers, BeanManager beanManager)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "959b4e799721796668f0e185ea3eb9a67ac442c7",
        "previous_commit": "1c3b8d5e031814da04c5a0050ca1e6a1c0faf52c",
        "date": 1570092338,
        "releases": {
            "previous": "959b4e799721796668f0e185ea3eb9a67ac442c7",
            "next": "959b4e799721796668f0e185ea3eb9a67ac442c7"
        },
        "commit_message": "AsyncInvocationinverceptors not properly created for each request (#4272)\n\n* Fixes #4264 - AsyncInvocationinverceptors not properly created for each request\r\n\r\nSigned-off-by: David Kral <david.k.kral@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "959b4e799721796668f0e185ea3eb9a67ac442c7": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ExecutorServiceWrapper.java": [
                    "private static <T> Collection<? extends Callable<T>> org.glassfish.jersey.microprofile.restclient.ExecutorServiceWrapper.wrap(Collection<? extends Callable<T>> tasks)",
                    "private static <T> Callable<T> org.glassfish.jersey.microprofile.restclient.ExecutorServiceWrapper.wrap(Callable<T> task)",
                    "private static Runnable org.glassfish.jersey.microprofile.restclient.ExecutorServiceWrapper.wrap(Runnable task)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private CompletableFuture org.glassfish.jersey.microprofile.restclient.MethodModel.asynchronousCall(Invocation.Builder builder, Object entity, Method method, MultivaluedMap<String, Object> customHeaders)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public RestClientBuilder org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.register(Object component)",
                    "private void org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.registerCustomProvider(Object instance, Integer priority)",
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ]
            },
            "1c3b8d5e031814da04c5a0050ca1e6a1c0faf52c": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ExecutorServiceWrapper.java": [
                    "private <T> Collection<? extends Callable<T>> org.glassfish.jersey.microprofile.restclient.ExecutorServiceWrapper.wrap(Collection<? extends Callable<T>> tasks)",
                    "private Runnable org.glassfish.jersey.microprofile.restclient.ExecutorServiceWrapper.wrap(Runnable task)",
                    "private <T> Callable<T> org.glassfish.jersey.microprofile.restclient.ExecutorServiceWrapper.wrap(Callable<T> task)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private CompletableFuture org.glassfish.jersey.microprofile.restclient.MethodModel.asynchronousCall(Invocation.Builder builder, Object entity, Method method, MultivaluedMap<String, Object> customHeaders)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public RestClientBuilder org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.register(Object component)",
                    "private void org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.registerCustomProvider(Object instance, int priority)",
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "2eacfcc4eb498ea93ca9fd9912aa8a67b800ac20",
        "previous_commit": "dc74036d2c3609de0b71646cab79faf15250d5ba",
        "date": 1683116337,
        "releases": {
            "previous": "2eacfcc4eb498ea93ca9fd9912aa8a67b800ac20",
            "next": "2eacfcc4eb498ea93ca9fd9912aa8a67b800ac20"
        },
        "commit_message": "Guard list of headers for modifications\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "2eacfcc4eb498ea93ca9fd9912aa8a67b800ac20": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/collection/GuardianStringKeyMultivaluedMap.java": [
                    "public Collection<List<V>> org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.values()",
                    "public boolean org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.isEmpty()",
                    "public V org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.getFirst(String key)",
                    "public List<V> org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.get(Object key)",
                    "public void org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.clear()",
                    "public Set<Entry<String, List<V>>> org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.entrySet()",
                    "public int org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.size()"
                ]
            },
            "dc74036d2c3609de0b71646cab79faf15250d5ba": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/collection/GuardianStringKeyMultivaluedMap.java": [
                    "public Collection<List<V>> org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.values()",
                    "public boolean org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.isEmpty()",
                    "public V org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.getFirst(String key)",
                    "public List<V> org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.get(Object key)",
                    "public void org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.clear()",
                    "public Set<Entry<String, List<V>>> org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.entrySet()",
                    "public int org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.size()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8da311447d1b87942a186d185b7e0a68e96e4abf",
        "previous_commit": "5f9510978b1c8077f3ed54cf8cbce0776e64cbba",
        "date": 1618406857,
        "releases": {
            "previous": "8da311447d1b87942a186d185b7e0a68e96e4abf",
            "next": "8da311447d1b87942a186d185b7e0a68e96e4abf"
        },
        "commit_message": "Stop filling monitoring queues when processor fails (#4697)\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "8da311447d1b87942a186d185b7e0a68e96e4abf": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/monitoring/MonitoringEventListener.java": [
                    "public void org.glassfish.jersey.server.internal.monitoring.MonitoringEventListener.onEvent(final RequestEvent event)",
                    "public void org.glassfish.jersey.server.internal.monitoring.MonitoringEventListener.onEvent(final ApplicationEvent event)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/monitoring/MonitoringStatisticsProcessor.java": [
                    "private void org.glassfish.jersey.server.internal.monitoring.MonitoringStatisticsProcessor.processRequestItems()",
                    "private void org.glassfish.jersey.server.internal.monitoring.MonitoringStatisticsProcessor.processResponseCodeEvents()",
                    "public void org.glassfish.jersey.server.internal.monitoring.MonitoringStatisticsProcessor.run()",
                    "public void org.glassfish.jersey.server.internal.monitoring.MonitoringStatisticsProcessor.startMonitoringWorker()",
                    "private void org.glassfish.jersey.server.internal.monitoring.MonitoringStatisticsProcessor.processExceptionMapperEvents()"
                ]
            },
            "5f9510978b1c8077f3ed54cf8cbce0776e64cbba": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/monitoring/MonitoringEventListener.java": [
                    "public void org.glassfish.jersey.server.internal.monitoring.MonitoringEventListener.onEvent(final RequestEvent event)",
                    "public void org.glassfish.jersey.server.internal.monitoring.MonitoringEventListener.onEvent(final ApplicationEvent event)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/monitoring/MonitoringStatisticsProcessor.java": [
                    "private void org.glassfish.jersey.server.internal.monitoring.MonitoringStatisticsProcessor.processRequestItems()",
                    "private void org.glassfish.jersey.server.internal.monitoring.MonitoringStatisticsProcessor.processResponseCodeEvents()",
                    "public void org.glassfish.jersey.server.internal.monitoring.MonitoringStatisticsProcessor.run()",
                    "public void org.glassfish.jersey.server.internal.monitoring.MonitoringStatisticsProcessor.startMonitoringWorker()",
                    "private void org.glassfish.jersey.server.internal.monitoring.MonitoringStatisticsProcessor.processExceptionMapperEvents()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "4ae3004dc2ffb9f44aceb6853661c3ed741650ac",
        "previous_commit": "72b1a8cc20ee800ae3192394a76361f179d6cc22",
        "date": 1550575675,
        "releases": {
            "previous": "4ae3004dc2ffb9f44aceb6853661c3ed741650ac",
            "next": "4ae3004dc2ffb9f44aceb6853661c3ed741650ac"
        },
        "commit_message": "Cleanup old JDK collection compatibility classes\n\nSigned-off-by: mszabo-wikia <mszabo@wikia-inc.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "4ae3004dc2ffb9f44aceb6853661c3ed741650ac": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/JdkVersion.java": [
                    "public static JdkVersion org.glassfish.jersey.internal.util.JdkVersion.parseVersion(String versionString)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/util/collection/DataStructures.java": [
                    "public static <K, V> ConcurrentMap<K, V> org.glassfish.jersey.internal.util.collection.DataStructures.createConcurrentMap( final Map<? extends K, ? extends V> map)",
                    "public static <K, V> ConcurrentMap<K, V> org.glassfish.jersey.internal.util.collection.DataStructures.createConcurrentMap( final int initialCapacity, final float loadFactor, final int concurrencyLevel)",
                    "public static <K, V> ConcurrentMap<K, V> org.glassfish.jersey.internal.util.collection.DataStructures.createConcurrentMap()",
                    "public static <E> BlockingQueue<E> org.glassfish.jersey.internal.util.collection.DataStructures.createLinkedTransferQueue()",
                    "public static <K, V> ConcurrentMap<K, V> org.glassfish.jersey.internal.util.collection.DataStructures.createConcurrentMap( final int initialCapacity)"
                ]
            },
            "72b1a8cc20ee800ae3192394a76361f179d6cc22": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/JdkVersion.java": [
                    "public static JdkVersion org.glassfish.jersey.internal.util.JdkVersion.parseVersion(String versionString)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/util/collection/DataStructures.java": [
                    "public static <K, V> ConcurrentMap<K, V> org.glassfish.jersey.internal.util.collection.DataStructures.createConcurrentMap( final Map<? extends K, ? extends V> map)",
                    "public static <K, V> ConcurrentMap<K, V> org.glassfish.jersey.internal.util.collection.DataStructures.createConcurrentMap( final int initialCapacity, final float loadFactor, final int concurrencyLevel)",
                    "public static <K, V> ConcurrentMap<K, V> org.glassfish.jersey.internal.util.collection.DataStructures.createConcurrentMap()",
                    "public static <E> BlockingQueue<E> org.glassfish.jersey.internal.util.collection.DataStructures.createLinkedTransferQueue()",
                    "public static <K, V> ConcurrentMap<K, V> org.glassfish.jersey.internal.util.collection.DataStructures.createConcurrentMap( final int initialCapacity)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "549fc6888efadb6549b1fde85fb7d2780ad19e9c",
        "previous_commit": "0e7eb12366c04512647fecc87200a7c0496d6b8d",
        "date": 1589799430,
        "releases": {
            "previous": "549fc6888efadb6549b1fde85fb7d2780ad19e9c",
            "next": "549fc6888efadb6549b1fde85fb7d2780ad19e9c"
        },
        "commit_message": "Set additional security features on SecureSaxParserFactory. (#4472)\n\nProvide a way to override\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "549fc6888efadb6549b1fde85fb7d2780ad19e9c": {
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/DocumentBuilderFactoryInjectionProvider.java": [
                    "public DocumentBuilderFactory org.glassfish.jersey.jaxb.internal.DocumentBuilderFactoryInjectionProvider.get()"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/SaxParserFactoryInjectionProvider.java": [
                    "public SAXParserFactory org.glassfish.jersey.jaxb.internal.SaxParserFactoryInjectionProvider.get()"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/SecureSaxParserFactory.java": [
                    "public XMLReader org.glassfish.jersey.jaxb.internal.SecureSaxParserFactory.getXMLReader()",
                    "public SAXParser org.glassfish.jersey.jaxb.internal.SecureSaxParserFactory.newSAXParser()"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/TransformerFactoryInjectionProvider.java": [
                    "public TransformerFactory org.glassfish.jersey.jaxb.internal.TransformerFactoryInjectionProvider.get()"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/XmlInputFactoryInjectionProvider.java": [
                    "public XMLInputFactory org.glassfish.jersey.jaxb.internal.XmlInputFactoryInjectionProvider.get()"
                ]
            },
            "0e7eb12366c04512647fecc87200a7c0496d6b8d": {
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/DocumentBuilderFactoryInjectionProvider.java": [
                    "public DocumentBuilderFactory org.glassfish.jersey.jaxb.internal.DocumentBuilderFactoryInjectionProvider.get()"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/SaxParserFactoryInjectionProvider.java": [
                    "public SAXParserFactory org.glassfish.jersey.jaxb.internal.SaxParserFactoryInjectionProvider.get()"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/SecureSaxParserFactory.java": [
                    "public XMLReader org.glassfish.jersey.jaxb.internal.SecureSaxParserFactory.getXMLReader()",
                    "public SAXParser org.glassfish.jersey.jaxb.internal.SecureSaxParserFactory.newSAXParser()"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/TransformerFactoryInjectionProvider.java": [
                    "public TransformerFactory org.glassfish.jersey.jaxb.internal.TransformerFactoryInjectionProvider.get()"
                ],
                "media/jaxb/src/main/java/org/glassfish/jersey/jaxb/internal/XmlInputFactoryInjectionProvider.java": [
                    "public XMLInputFactory org.glassfish.jersey.jaxb.internal.XmlInputFactoryInjectionProvider.get()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "635d16d0f3c10d8e5b2bc2f7388245e1b6ddbadb",
        "previous_commit": "08a85c755d63d318e0f2f64cc7442d0042ababcd",
        "date": 1686844086,
        "releases": {
            "previous": "635d16d0f3c10d8e5b2bc2f7388245e1b6ddbadb",
            "next": "635d16d0f3c10d8e5b2bc2f7388245e1b6ddbadb"
        },
        "commit_message": "Allow for setting connector provider via properties (#5345)\n\n* Allow for setting connector provider via properties\r\n\r\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "635d16d0f3c10d8e5b2bc2f7388245e1b6ddbadb": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyClientBuilder.java": [
                    "public JerseyClient org.glassfish.jersey.client.JerseyClientBuilder.build()"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/innate/inject/NonInjectionManager.java": [
                    "T org.glassfish.jersey.client.innate.inject.NonInjectionManager.create(boolean throwWhenNoBinding)",
                    "protected X org.glassfish.jersey.client.innate.inject.NonInjectionManager.getInstance()",
                    "public <T> T org.glassfish.jersey.client.innate.inject.NonInjectionManager.create(Class<T> createMe)",
                    "X org.glassfish.jersey.client.innate.inject.NonInjectionManager.create(boolean throwWhenNoBinding)",
                    "public <T> T org.glassfish.jersey.client.innate.inject.NonInjectionManager.createAndInitialize(Class<T> createMe)"
                ]
            },
            "08a85c755d63d318e0f2f64cc7442d0042ababcd": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyClientBuilder.java": [
                    "public JerseyClient org.glassfish.jersey.client.JerseyClientBuilder.build()"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/innate/inject/NonInjectionManager.java": [
                    "T org.glassfish.jersey.client.innate.inject.NonInjectionManager.create()",
                    "protected X org.glassfish.jersey.client.innate.inject.NonInjectionManager.getInstance()",
                    "public <T> T org.glassfish.jersey.client.innate.inject.NonInjectionManager.create(Class<T> createMe)",
                    "public <T> T org.glassfish.jersey.client.innate.inject.NonInjectionManager.createAndInitialize(Class<T> createMe)",
                    "X org.glassfish.jersey.client.innate.inject.NonInjectionManager.create()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "82320497530b4b1e479eda9b58d8f817d4515721",
        "previous_commit": "b074c47ce70d28cfc9e6cb0b1077890b289d7247",
        "date": 1697632778,
        "releases": {
            "previous": "82320497530b4b1e479eda9b58d8f817d4515721",
            "next": "82320497530b4b1e479eda9b58d8f817d4515721"
        },
        "commit_message": "Add constants of Reponse Statuses and Http Header Names\nReview filtered headers in Netty connector to be filtered\nImplement Netty Redirect based on RELATIVE location\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "82320497530b4b1e479eda9b58d8f817d4515721": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "protected void org.glassfish.jersey.netty.connector.JerseyClientHandler.notifyResponse()",
                    "public boolean org.glassfish.jersey.netty.connector.JerseyClientHandler.test(String headerName)",
                    "private void org.glassfish.jersey.netty.connector.JerseyClientHandler.restrictRedirectRequest(ClientRequest newRequest, ClientResponse response)",
                    "private void org.glassfish.jersey.netty.connector.JerseyClientHandler.removeContentHeaders(MultivaluedMap<String, Object> headers)",
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelRead0(ChannelHandlerContext ctx, HttpObject msg)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "private static HttpHeaders org.glassfish.jersey.netty.connector.NettyConnector.setHeaders(ClientRequest jerseyRequest, HttpHeaders headers, boolean proxyOnly)"
                ]
            },
            "b074c47ce70d28cfc9e6cb0b1077890b289d7247": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "protected void org.glassfish.jersey.netty.connector.JerseyClientHandler.notifyResponse()",
                    "public boolean org.glassfish.jersey.netty.connector.JerseyClientHandler.test(String headerName)",
                    "private void org.glassfish.jersey.netty.connector.JerseyClientHandler.restrictRedirectRequest(ClientRequest newRequest, ClientResponse response)",
                    "private void org.glassfish.jersey.netty.connector.JerseyClientHandler.removeContentHeaders(MultivaluedMap<String, Object> headers)",
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelRead0(ChannelHandlerContext ctx, HttpObject msg)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "private static HttpHeaders org.glassfish.jersey.netty.connector.NettyConnector.setHeaders(ClientRequest jerseyRequest, HttpHeaders headers, boolean proxyOnly)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e129ced692959513a14a8d2d0e4e117aeaaee8ee",
        "previous_commit": "74e2279c55bed4d6abe6a7968f7e52e16af8ffa6",
        "date": 1620646988,
        "releases": {
            "previous": "e129ced692959513a14a8d2d0e4e117aeaaee8ee",
            "next": "e129ced692959513a14a8d2d0e4e117aeaaee8ee"
        },
        "commit_message": "JDK16 Support (#4785)\n\n* JDK16 Support\r\n\r\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e129ced692959513a14a8d2d0e4e117aeaaee8ee": {
                "examples/reload/src/main/java/org/glassfish/jersey/examples/reload/App.java": [
                    "private void org.glassfish.jersey.examples.reload.App.registerWatcher(WatchService watcher, Path directory)"
                ],
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/ValidationInterceptorExecutor.java": [
                    "public void org.glassfish.jersey.server.validation.internal.ValidationInterceptorExecutor.setArgs(final Object[] args)"
                ],
                "ext/cdi/jersey-cdi1x-validation/src/main/java/org/glassfish/jersey/ext/cdi1x/validation/internal/CdiInterceptorWrapper.java": [
                    "public void org.glassfish.jersey.ext.cdi1x.validation.internal.CdiInterceptorWrapper.validateConstructorInvocation(InvocationContext ctx)",
                    "public Object org.glassfish.jersey.ext.cdi1x.validation.internal.CdiInterceptorWrapper.validateMethodInvocation(InvocationContext ctx)"
                ],
                "ext/cdi/jersey-cdi1x-validation/src/main/java/org/glassfish/jersey/ext/cdi1x/validation/internal/CdiInterceptorWrapperExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.validation.internal.CdiInterceptorWrapperExtension.afterTypeDiscovery(@Observes final AfterTypeDiscovery afterTypeDiscovery)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ReflectionUtil.java": [
                    "static <T> T org.glassfish.jersey.microprofile.restclient.ReflectionUtil.createProxyInstance(Class<T> restClientClass)"
                ]
            },
            "74e2279c55bed4d6abe6a7968f7e52e16af8ffa6": {
                "examples/reload/src/main/java/org/glassfish/jersey/examples/reload/App.java": [
                    "private void org.glassfish.jersey.examples.reload.App.registerWatcher(WatchService watcher, Path directory)"
                ],
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/ValidationInterceptorExecutor.java": [
                    "public void org.glassfish.jersey.server.validation.internal.ValidationInterceptorExecutor.setArgs(final Object[] args)"
                ],
                "ext/cdi/jersey-cdi1x-validation/src/main/java/org/glassfish/jersey/ext/cdi1x/validation/internal/CdiInterceptorWrapper.java": [
                    "public void org.glassfish.jersey.ext.cdi1x.validation.internal.CdiInterceptorWrapper.validateConstructorInvocation(InvocationContext ctx)",
                    "public Object org.glassfish.jersey.ext.cdi1x.validation.internal.CdiInterceptorWrapper.validateMethodInvocation(InvocationContext ctx)"
                ],
                "ext/cdi/jersey-cdi1x-validation/src/main/java/org/glassfish/jersey/ext/cdi1x/validation/internal/CdiInterceptorWrapperExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.validation.internal.CdiInterceptorWrapperExtension.afterTypeDiscovery(@Observes final AfterTypeDiscovery afterTypeDiscovery)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ReflectionUtil.java": [
                    "static <T> T org.glassfish.jersey.microprofile.restclient.ReflectionUtil.createProxyInstance(Class<T> restClientClass)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "951723493c91886e609ce4d025f0cc6fb780dda3",
        "previous_commit": "89df8e33232151e4849b86e721f817dc42c4a527",
        "date": 1589979472,
        "releases": {
            "previous": "951723493c91886e609ce4d025f0cc6fb780dda3",
            "next": "951723493c91886e609ce4d025f0cc6fb780dda3"
        },
        "commit_message": "Be able to use invocation interceptor for multiple requests within a singe ClientRuntime\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "951723493c91886e609ce4d025f0cc6fb780dda3": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientFilteringStages.java": [
                    "private static <T> Iterable<T> org.glassfish.jersey.client.ClientFilteringStages.prependFilter(T filter, Iterable<T> filters)",
                    "public Iterator<T> org.glassfish.jersey.client.ClientFilteringStages.iterator()"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/InvocationInterceptorStages.java": [
                    "boolean org.glassfish.jersey.client.InvocationInterceptorStages.hasPreInvocationInterceptors()",
                    "ClientResponse org.glassfish.jersey.client.InvocationInterceptorStages.afterRequest(ClientRequest request, ClientResponse response, Throwable previousException)",
                    "void org.glassfish.jersey.client.InvocationInterceptorStages.beforeRequest(ClientRequest request)",
                    "boolean org.glassfish.jersey.client.InvocationInterceptorStages.hasPostInvocationInterceptor()"
                ]
            },
            "89df8e33232151e4849b86e721f817dc42c4a527": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientFilteringStages.java": [
                    "private static <T> Iterable<T> org.glassfish.jersey.client.ClientFilteringStages.prependFilter(T filter, Iterable<T> filters)",
                    "public Iterator<T> org.glassfish.jersey.client.ClientFilteringStages.iterator()"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/InvocationInterceptorStages.java": [
                    "boolean org.glassfish.jersey.client.InvocationInterceptorStages.hasPreInvocationInterceptors()",
                    "ClientResponse org.glassfish.jersey.client.InvocationInterceptorStages.afterRequest(ClientRequest request, ClientResponse response, Throwable previousException)",
                    "void org.glassfish.jersey.client.InvocationInterceptorStages.beforeRequest(ClientRequest request)",
                    "boolean org.glassfish.jersey.client.InvocationInterceptorStages.hasPostInvocationInterceptor()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e4fbf49383b3a187ad24725774e10018625ed7b0",
        "previous_commit": "682f66cbd0e8dc6ce14222f8c225267dde9826eb",
        "date": 1553771340,
        "releases": {
            "previous": "e4fbf49383b3a187ad24725774e10018625ed7b0",
            "next": "e4fbf49383b3a187ad24725774e10018625ed7b0"
        },
        "commit_message": "Allow for determining media type for RequestContext#abortWith (#4087)\n\n* Move media type determination logic from core-server to core-common to be used on both client and server\r\n* Added package-info files to new packages\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e4fbf49383b3a187ad24725774e10018625ed7b0": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientFilteringStages.java": [
                    "public Continuation<ClientRequest> org.glassfish.jersey.client.ClientFilteringStages.apply(ClientRequest requestContext)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/routing/MethodSelectingRouter.java": [
                    "private void org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.reportMethodSelectionAmbiguity(List<AcceptableMediaType> acceptableTypes, RequestSpecificConsumesProducesAcceptor<MethodRouting> selected, List<RequestSpecificConsumesProducesAcceptor> sameFitnessAcceptors)",
                    "public String org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.toString()",
                    "private MethodSelector org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.selectMethod(final List<AcceptableMediaType> acceptableMediaTypes, final List<ConsumesProducesAcceptor> satisfyingAcceptors, final MediaType effectiveContentType, final boolean singleInvokableMethod)",
                    "private List<Router> org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.getMethodRouter(final RequestProcessingContext context)",
                    "private static boolean org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.usePreSelectedMediaType(final RequestSpecificConsumesProducesAcceptor<MethodRouting> selectedMethod, final List<AcceptableMediaType> acceptableMediaTypes)"
                ]
            },
            "682f66cbd0e8dc6ce14222f8c225267dde9826eb": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientFilteringStages.java": [
                    "public Continuation<ClientRequest> org.glassfish.jersey.client.ClientFilteringStages.apply(ClientRequest requestContext)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/routing/MethodSelectingRouter.java": [
                    "public String org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.toString()",
                    "private MethodSelector org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.selectMethod(final List<AcceptableMediaType> acceptableMediaTypes, final List<ConsumesProducesAcceptor> satisfyingAcceptors, final MediaType effectiveContentType, final boolean singleInvokableMethod)",
                    "private static boolean org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.usePreSelectedMediaType(final RequestSpecificConsumesProducesAcceptor selectedMethod, final List<AcceptableMediaType> acceptableMediaTypes)",
                    "private void org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.reportMethodSelectionAmbiguity(List<AcceptableMediaType> acceptableTypes, RequestSpecificConsumesProducesAcceptor selected, List<RequestSpecificConsumesProducesAcceptor> sameFitnessAcceptors)",
                    "private List<Router> org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.getMethodRouter(final RequestProcessingContext context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "b074c47ce70d28cfc9e6cb0b1077890b289d7247",
        "previous_commit": "a837087020aeb0964c68bbbe7c205c709f95567c",
        "date": 1697544801,
        "releases": {
            "previous": "b074c47ce70d28cfc9e6cb0b1077890b289d7247",
            "next": "b074c47ce70d28cfc9e6cb0b1077890b289d7247"
        },
        "commit_message": "Support multipart by Jetty & Netty\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "b074c47ce70d28cfc9e6cb0b1077890b289d7247": {
                "connectors/jetty-connector/src/main/java/org/glassfish/jersey/jetty/connector/JettyConnector.java": [
                    "public ClientResponse org.glassfish.jersey.jetty.connector.JettyConnector.apply(final ClientRequest jerseyRequest)",
                    "private Map<String, String> org.glassfish.jersey.jetty.connector.JettyConnector.writeOutBoundHeaders(final MultivaluedMap<String, Object> headers, final Request request)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyExpectContinueHandler.java": [
                    "CompletableFuture<HttpResponseStatus> org.glassfish.jersey.netty.connector.JerseyExpectContinueHandler.processExpect100ContinueRequest(HttpRequest nettyRequest, ClientRequest jerseyRequest, Channel ch, Integer timeout)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "public void org.glassfish.jersey.netty.connector.NettyConnector.run()",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "public OutputStream org.glassfish.jersey.netty.connector.NettyConnector.getOutputStream(int contentLength)"
                ]
            },
            "a837087020aeb0964c68bbbe7c205c709f95567c": {
                "connectors/jetty-connector/src/main/java/org/glassfish/jersey/jetty/connector/JettyConnector.java": [
                    "public ClientResponse org.glassfish.jersey.jetty.connector.JettyConnector.apply(final ClientRequest jerseyRequest)",
                    "private Map<String, String> org.glassfish.jersey.jetty.connector.JettyConnector.writeOutBoundHeaders(final MultivaluedMap<String, Object> headers, final Request request)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyExpectContinueHandler.java": [
                    "CompletableFuture<HttpResponseStatus> org.glassfish.jersey.netty.connector.JerseyExpectContinueHandler.processExpect100ContinueRequest(HttpRequest nettyRequest, ClientRequest jerseyRequest, Channel ch, Integer timeout)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "public void org.glassfish.jersey.netty.connector.NettyConnector.run()",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "public OutputStream org.glassfish.jersey.netty.connector.NettyConnector.getOutputStream(int contentLength)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "366d0790b997535af9732e5e2cd141a9106293f0",
        "previous_commit": "01c6a32a2064aeff2caa8133472e33affeb8a29a",
        "date": 1602674309,
        "releases": {
            "previous": "366d0790b997535af9732e5e2cd141a9106293f0",
            "next": "366d0790b997535af9732e5e2cd141a9106293f0"
        },
        "commit_message": "Rest client inbound headers provider added (#4593)\n\n* Rest client inbound headers provider added\r\n\r\nSigned-off-by: David Kral <david.k.kral@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "366d0790b997535af9732e5e2cd141a9106293f0": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterfaceModel.java": [
                    "static InterfaceModel org.glassfish.jersey.microprofile.restclient.InterfaceModel.from(Class<?> restClientClass, Set<ResponseExceptionMapper> responseExceptionMappers, Set<ParamConverterProvider> paramConverterProviders, Set<InboundHeadersProvider> inboundHeadersProviders, List<AsyncInvocationInterceptorFactory> asyncInterceptorFactories, InjectionManager injectionManager, BeanManager beanManager)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private MultivaluedMap<String, String> org.glassfish.jersey.microprofile.restclient.MethodModel.resolveCustomHeaders(Object[] args)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "private void org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.registerCustomProvider(Object instance, Integer priority)",
                    "private boolean org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.isSupportedCustomProvider(Class<?> providerClass)",
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientModel.java": [
                    "static RestClientModel org.glassfish.jersey.microprofile.restclient.RestClientModel.from(Class<?> restClientClass, Set<ResponseExceptionMapper> responseExceptionMappers, Set<ParamConverterProvider> paramConverterProviders, Set<InboundHeadersProvider> inboundHeadersProviders, List<AsyncInvocationInterceptorFactory> asyncInterceptorFactories, InjectionManager injectionManager, BeanManager beanManager)"
                ]
            },
            "01c6a32a2064aeff2caa8133472e33affeb8a29a": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterfaceModel.java": [
                    "static InterfaceModel org.glassfish.jersey.microprofile.restclient.InterfaceModel.from(Class<?> restClientClass, Set<ResponseExceptionMapper> responseExceptionMappers, Set<ParamConverterProvider> paramConverterProviders, List<AsyncInvocationInterceptorFactory> asyncInterceptorFactories, InjectionManager injectionManager, BeanManager beanManager)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private MultivaluedMap<String, String> org.glassfish.jersey.microprofile.restclient.MethodModel.resolveCustomHeaders(Object[] args)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "private void org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.registerCustomProvider(Object instance, Integer priority)",
                    "private boolean org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.isSupportedCustomProvider(Class<?> providerClass)",
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientModel.java": [
                    "static RestClientModel org.glassfish.jersey.microprofile.restclient.RestClientModel.from(Class<?> restClientClass, Set<ResponseExceptionMapper> responseExceptionMappers, Set<ParamConverterProvider> paramConverterProviders, List<AsyncInvocationInterceptorFactory> asyncInterceptorFactories, InjectionManager injectionManager, BeanManager beanManager)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "d8f3e0fba99262feffed245f5b22d1836da7ea10",
        "previous_commit": "2ee39d5d7f832f2b00cde4e8bb867684d39e3d86",
        "date": 1718018759,
        "releases": {
            "previous": "d8f3e0fba99262feffed245f5b22d1836da7ea10",
            "next": "d8f3e0fba99262feffed245f5b22d1836da7ea10"
        },
        "commit_message": "prevent calling ServletRequest#getInputStream if FILTER_FORWARD_ON_404\nIntroduce InputStreamWrapper\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "d8f3e0fba99262feffed245f5b22d1836da7ea10": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "public void org.glassfish.jersey.apache.connector.ApacheConnector.close()"
                ],
                "connectors/apache5-connector/src/main/java/org/glassfish/jersey/apache5/connector/Apache5Connector.java": [
                    "public void org.glassfish.jersey.apache5.connector.Apache5Connector.close()"
                ],
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/WebComponent.java": [
                    "private void initContainerRequest( final ContainerRequest requestContext, final HttpServletRequest servletRequest, final HttpServletResponse servletResponse, final ResponseWriter responseWriter)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/ReaderInterceptorExecutor.java": [
                    "public static InputStream org.glassfish.jersey.message.internal.ReaderInterceptorExecutor.closeableInputStream(InputStream inputStream)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/JarFileScanner.java": [
                    "public void org.glassfish.jersey.server.internal.scanning.JarFileScanner.reset()",
                    "public InputStream org.glassfish.jersey.server.internal.scanning.JarFileScanner.open()"
                ]
            },
            "2ee39d5d7f832f2b00cde4e8bb867684d39e3d86": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "public void org.glassfish.jersey.apache.connector.ApacheConnector.close()"
                ],
                "connectors/apache5-connector/src/main/java/org/glassfish/jersey/apache5/connector/Apache5Connector.java": [
                    "public void org.glassfish.jersey.apache5.connector.Apache5Connector.close()"
                ],
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/WebComponent.java": [
                    "private void initContainerRequest( final ContainerRequest requestContext, final HttpServletRequest servletRequest, final HttpServletResponse servletResponse, final ResponseWriter responseWriter)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/ReaderInterceptorExecutor.java": [
                    "public static InputStream org.glassfish.jersey.message.internal.ReaderInterceptorExecutor.closeableInputStream(InputStream inputStream)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/JarFileScanner.java": [
                    "public void org.glassfish.jersey.server.internal.scanning.JarFileScanner.reset()",
                    "public InputStream org.glassfish.jersey.server.internal.scanning.JarFileScanner.open()",
                    "public synchronized void org.glassfish.jersey.server.internal.scanning.JarFileScanner.reset()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "20ed0f5cbe30bc799ededa95fe5ef4e7ad3a50b8",
        "previous_commit": "4459ebb11aaa9d84986b0b15d7209a1e86632128",
        "date": 1668606081,
        "releases": {
            "previous": "20ed0f5cbe30bc799ededa95fe5ef4e7ad3a50b8",
            "next": "20ed0f5cbe30bc799ededa95fe5ef4e7ad3a50b8"
        },
        "commit_message": "Dependencies versions update\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "20ed0f5cbe30bc799ededa95fe5ef4e7ad3a50b8": {
                "examples/open-tracing/src/main/java/org/glassfish/jersey/examples/opentracing/App.java": [
                    "public void org.glassfish.jersey.examples.opentracing.App.filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)",
                    "public void org.glassfish.jersey.examples.opentracing.App.filter(ContainerRequestContext requestContext)"
                ],
                "incubator/open-tracing/src/main/java/org/glassfish/jersey/opentracing/OpenTracingApplicationEventListener.java": [
                    "public void org.glassfish.jersey.opentracing.OpenTracingApplicationEventListener.onEvent(RequestEvent event)",
                    "private Span org.glassfish.jersey.opentracing.OpenTracingApplicationEventListener.handleRequestStart(ContainerRequest request)"
                ],
                "incubator/open-tracing/src/main/java/org/glassfish/jersey/opentracing/OpenTracingClientRequestFilter.java": [
                    "public void org.glassfish.jersey.opentracing.OpenTracingClientRequestFilter.filter(ClientRequestContext requestContext)"
                ],
                "incubator/open-tracing/src/main/java/org/glassfish/jersey/opentracing/OpenTracingUtils.java": [
                    "public static Span org.glassfish.jersey.opentracing.OpenTracingUtils.getRequestChildSpan(final ContainerRequestContext context, final String spanName)"
                ]
            },
            "4459ebb11aaa9d84986b0b15d7209a1e86632128": {
                "examples/open-tracing/src/main/java/org/glassfish/jersey/examples/opentracing/App.java": [
                    "public void org.glassfish.jersey.examples.opentracing.App.filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)",
                    "public void org.glassfish.jersey.examples.opentracing.App.filter(ContainerRequestContext requestContext)"
                ],
                "incubator/open-tracing/src/main/java/org/glassfish/jersey/opentracing/OpenTracingApplicationEventListener.java": [
                    "public void org.glassfish.jersey.opentracing.OpenTracingApplicationEventListener.onEvent(RequestEvent event)",
                    "private Span org.glassfish.jersey.opentracing.OpenTracingApplicationEventListener.handleRequestStart(ContainerRequest request)"
                ],
                "incubator/open-tracing/src/main/java/org/glassfish/jersey/opentracing/OpenTracingClientRequestFilter.java": [
                    "public void org.glassfish.jersey.opentracing.OpenTracingClientRequestFilter.filter(ClientRequestContext requestContext)"
                ],
                "incubator/open-tracing/src/main/java/org/glassfish/jersey/opentracing/OpenTracingUtils.java": [
                    "public static Span org.glassfish.jersey.opentracing.OpenTracingUtils.getRequestChildSpan(final ContainerRequestContext context, final String spanName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "705144a4b10f66d783a88c851fe7ee19f3081a61",
        "previous_commit": "236b6f3903c659b2864623e86a3cce020c554bcf",
        "date": 1713770074,
        "releases": {
            "previous": "705144a4b10f66d783a88c851fe7ee19f3081a61",
            "next": "705144a4b10f66d783a88c851fe7ee19f3081a61"
        },
        "commit_message": "Allow for overriding the SNIHostName or turn it off. Allow for Domain Fronting.\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "705144a4b10f66d783a88c851fe7ee19f3081a61": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "protected void org.glassfish.jersey.apache.connector.ApacheConnector.prepareSocket(SSLSocket socket)"
                ],
                "connectors/apache5-connector/src/main/java/org/glassfish/jersey/apache5/connector/Apache5Connector.java": [
                    "protected void org.glassfish.jersey.apache5.connector.Apache5Connector.prepareSocket(SSLSocket socket)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpConnectionPool.java": [
                    "void org.glassfish.jersey.jdk.connector.internal.HttpConnectionPool.send(HttpRequest httpRequest, CompletionHandler<HttpResponse> completionHandler)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/innate/http/SniConfigurator.java": [
                    "static Optional<SniConfigurator> org.glassfish.jersey.client.innate.http.SniConfigurator.createWhenHostHeader(URI hostUri, Map<String, List<Object>> headers, boolean whenDiffer)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            },
            "236b6f3903c659b2864623e86a3cce020c554bcf": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "protected void org.glassfish.jersey.apache.connector.ApacheConnector.prepareSocket(SSLSocket socket)"
                ],
                "connectors/apache5-connector/src/main/java/org/glassfish/jersey/apache5/connector/Apache5Connector.java": [
                    "protected void org.glassfish.jersey.apache5.connector.Apache5Connector.prepareSocket(SSLSocket socket)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpConnectionPool.java": [
                    "void org.glassfish.jersey.jdk.connector.internal.HttpConnectionPool.send(HttpRequest httpRequest, CompletionHandler<HttpResponse> completionHandler)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/innate/http/SniConfigurator.java": [
                    "static Optional<SniConfigurator> org.glassfish.jersey.client.innate.http.SniConfigurator.createWhenHostHeader(URI hostUri, Map<String, List<Object>> headers, boolean whenDiffer)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8174fede93025f7f7deac7b25f63f5893624a534",
        "previous_commit": "80951a42235dddefad901c664b67ca4edfcb05d7",
        "date": 1721132893,
        "releases": {
            "previous": "8174fede93025f7f7deac7b25f63f5893624a534",
            "next": "8174fede93025f7f7deac7b25f63f5893624a534"
        },
        "commit_message": "Support Multipart with Buffered Entity and Netty Connector\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "8174fede93025f7f7deac7b25f63f5893624a534": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "public String org.glassfish.jersey.netty.connector.NettyConnector.getName()"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/internal/NettyEntityWriter.java": [
                    "public long org.glassfish.jersey.netty.connector.internal.DelayedEntityWriter.getLength()",
                    "public long org.glassfish.jersey.netty.connector.internal.DirectEntityWriter.getLength()",
                    "public void org.glassfish.jersey.netty.connector.internal.DelayedEntityWriter._flush()",
                    "private void org.glassfish.jersey.netty.connector.internal.DelayedEntityWriter._flush()",
                    "public void org.glassfish.jersey.netty.connector.internal.DelayedEntityWriter.write(byte[] b, int off, int len)"
                ]
            },
            "80951a42235dddefad901c664b67ca4edfcb05d7": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "public String org.glassfish.jersey.netty.connector.NettyConnector.getName()"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/internal/NettyEntityWriter.java": [
                    "public long org.glassfish.jersey.netty.connector.internal.DelayedEntityWriter.getLength()",
                    "public long org.glassfish.jersey.netty.connector.internal.DirectEntityWriter.getLength()",
                    "private void org.glassfish.jersey.netty.connector.internal.DelayedEntityWriter._flush()",
                    "public void org.glassfish.jersey.netty.connector.internal.DelayedEntityWriter.write(byte[] b, int off, int len)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "fb806515e791e12a12f8c724224cbda93f40ac70",
        "previous_commit": "ae1631d270ad95e1f989db0f97100f65c46e19f7",
        "date": 1596636416,
        "releases": {
            "previous": "fb806515e791e12a12f8c724224cbda93f40ac70",
            "next": "fb806515e791e12a12f8c724224cbda93f40ac70"
        },
        "commit_message": "Make Kryo use setRegistrationRequired(true) by default\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "fb806515e791e12a12f8c724224cbda93f40ac70": {
                "incubator/kryo/src/main/java/org/glassfish/jersey/kryo/KryoFeature.java": [
                    "public boolean org.glassfish.jersey.kryo.KryoFeature.configure(final FeatureContext context)"
                ],
                "incubator/kryo/src/main/java/org/glassfish/jersey/kryo/internal/KryoMessageBodyProvider.java": [
                    "public void org.glassfish.jersey.kryo.internal.KryoMessageBodyProvider.writeTo(final Object object, final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)",
                    "public boolean org.glassfish.jersey.kryo.internal.KryoMessageBodyProvider.isWriteable(final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType)",
                    "public Kryo org.glassfish.jersey.kryo.internal.KryoMessageBodyProvider.create()",
                    "public Object readFrom(final Class<Object> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, String> httpHeaders, final InputStream entityStream)"
                ]
            },
            "ae1631d270ad95e1f989db0f97100f65c46e19f7": {
                "incubator/kryo/src/main/java/org/glassfish/jersey/kryo/KryoFeature.java": [
                    "public boolean org.glassfish.jersey.kryo.KryoFeature.configure(final FeatureContext context)"
                ],
                "incubator/kryo/src/main/java/org/glassfish/jersey/kryo/internal/KryoMessageBodyProvider.java": [
                    "public boolean org.glassfish.jersey.kryo.internal.KryoMessageBodyProvider.isReadable(final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType)",
                    "public void org.glassfish.jersey.kryo.internal.KryoMessageBodyProvider.writeTo(final Object object, final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)",
                    "public boolean org.glassfish.jersey.kryo.internal.KryoMessageBodyProvider.isWriteable(final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType)",
                    "public Object org.glassfish.jersey.kryo.internal.KryoMessageBodyProvider.readFrom(final Class<Object> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, String> httpHeaders, final InputStream entityStream)",
                    "public Kryo org.glassfish.jersey.kryo.internal.KryoMessageBodyProvider.create()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "b8e7c8b760573182afdb4ee2811d98f2296917d0",
        "previous_commit": "b0e7b1e3ed0495a8ec737961583fc81a38011ec4",
        "date": 1650436941,
        "releases": {
            "previous": "b8e7c8b760573182afdb4ee2811d98f2296917d0",
            "next": "b8e7c8b760573182afdb4ee2811d98f2296917d0"
        },
        "commit_message": "reduce usage of Guava (#5038)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "b8e7c8b760573182afdb4ee2811d98f2296917d0": {
                "examples/rx-client-webapp/src/main/java/org/glassfish/jersey/examples/rx/agent/ListenableFutureAgentResource.java": [
                    "ListenableFuture<List<Recommendation>> calculations(final ListenableFuture<List<Recommendation>> recommendations)",
                    "private ListenableFuture<List<Recommendation>> org.glassfish.jersey.examples.rx.agent.ListenableFutureAgentResource.forecasts(final ListenableFuture<List<Recommendation>> recommendations)",
                    "private ListenableFuture<AgentResponse> org.glassfish.jersey.examples.rx.agent.ListenableFutureAgentResource.recommended(final AgentResponse response)",
                    "public void org.glassfish.jersey.examples.rx.agent.ListenableFutureAgentResource.listenable(@Suspended final AsyncResponse async)",
                    "private ListenableFuture<AgentResponse> org.glassfish.jersey.examples.rx.agent.ListenableFutureAgentResource.visited(final AgentResponse response)"
                ]
            },
            "b0e7b1e3ed0495a8ec737961583fc81a38011ec4": {
                "examples/rx-client-webapp/src/main/java/org/glassfish/jersey/examples/rx/agent/ListenableFutureAgentResource.java": [
                    "ListenableFuture<List<Recommendation>> calculations(final ListenableFuture<List<Recommendation>> recommendations)",
                    "private ListenableFuture<List<Recommendation>> org.glassfish.jersey.examples.rx.agent.ListenableFutureAgentResource.forecasts(final ListenableFuture<List<Recommendation>> recommendations)",
                    "private ListenableFuture<AgentResponse> org.glassfish.jersey.examples.rx.agent.ListenableFutureAgentResource.recommended(final AgentResponse response)",
                    "public void org.glassfish.jersey.examples.rx.agent.ListenableFutureAgentResource.listenable(@Suspended final AsyncResponse async)",
                    "private ListenableFuture<AgentResponse> org.glassfish.jersey.examples.rx.agent.ListenableFutureAgentResource.visited(final AgentResponse response)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "63506be436173c8890c3f2995c607d5d6d8773c8",
        "previous_commit": "e2994ff60b22daaf992d29208c5abc902aa91e33",
        "date": 1716442071,
        "releases": {
            "previous": "63506be436173c8890c3f2995c607d5d6d8773c8",
            "next": "63506be436173c8890c3f2995c607d5d6d8773c8"
        },
        "commit_message": "Unify the SniConfigurator with other branches\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "63506be436173c8890c3f2995c607d5d6d8773c8": {
                "core-client/src/main/java/org/glassfish/jersey/client/innate/http/SSLParamConfigurator.java": [
                    "public Builder org.glassfish.jersey.client.innate.http.SSLParamConfigurator.headers(Map<String, List<Object>> httpHeaders)",
                    "public Builder org.glassfish.jersey.client.innate.http.SSLParamConfigurator.request(ClientRequest clientRequest)",
                    "public Builder org.glassfish.jersey.client.innate.http.SSLParamConfigurator.setSNIHostName(Configuration configuration)",
                    "public Builder org.glassfish.jersey.client.innate.http.SSLParamConfigurator.uri(URI uri)",
                    "public Builder org.glassfish.jersey.client.innate.http.SSLParamConfigurator.setSNIHostName(PropertiesResolver resolver)"
                ]
            },
            "e2994ff60b22daaf992d29208c5abc902aa91e33": {
                "core-client/src/main/java/org/glassfish/jersey/client/innate/http/SSLParamConfigurator.java": [
                    "public Builder org.glassfish.jersey.client.innate.http.SSLParamConfigurator.headers(Map<String, List<Object>> httpHeaders)",
                    "public Builder org.glassfish.jersey.client.innate.http.SSLParamConfigurator.request(ClientRequest clientRequest)",
                    "public Builder org.glassfish.jersey.client.innate.http.SSLParamConfigurator.setSNIHostName(Configuration configuration)",
                    "public Builder org.glassfish.jersey.client.innate.http.SSLParamConfigurator.uri(URI uri)",
                    "public Builder org.glassfish.jersey.client.innate.http.SSLParamConfigurator.setSNIHostName(PropertiesResolver resolver)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "dbbf057ea1ebb38d80924b2cbf3b4ae859238d43",
        "previous_commit": "cbda4fce14f61b33fe96c39e3e1b252be00ce3f3",
        "date": 1697092059,
        "releases": {
            "previous": "dbbf057ea1ebb38d80924b2cbf3b4ae859238d43",
            "next": "dbbf057ea1ebb38d80924b2cbf3b4ae859238d43"
        },
        "commit_message": "Expect:100-continue fixes for Netty\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "dbbf057ea1ebb38d80924b2cbf3b4ae859238d43": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/Expect100ContinueConnectorExtension.java": [
                    "public void org.glassfish.jersey.netty.connector.Expect100ContinueConnectorExtension.invoke(ClientRequest request, HttpRequest extensionParam)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/HttpVersionChooser.java": [
                    "protected void org.glassfish.jersey.netty.httpserver.HttpVersionChooser.configurePipeline(ChannelHandlerContext ctx, String protocol)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerHandler.java": [
                    "public void org.glassfish.jersey.netty.httpserver.JerseyServerHandler.channelRead(final ChannelHandlerContext ctx, Object msg)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerInitializer.java": [
                    "public void org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.initChannel(SocketChannel ch)"
                ]
            },
            "cbda4fce14f61b33fe96c39e3e1b252be00ce3f3": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/Expect100ContinueConnectorExtension.java": [
                    "public void org.glassfish.jersey.netty.connector.Expect100ContinueConnectorExtension.invoke(ClientRequest request, HttpRequest extensionParam)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/HttpVersionChooser.java": [
                    "protected void org.glassfish.jersey.netty.httpserver.HttpVersionChooser.configurePipeline(ChannelHandlerContext ctx, String protocol)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerHandler.java": [
                    "public void org.glassfish.jersey.netty.httpserver.JerseyServerHandler.channelRead(final ChannelHandlerContext ctx, Object msg)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerInitializer.java": [
                    "public void org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.initChannel(SocketChannel ch)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e8cb0d8caf86aa9580b153d57757dd249739b503",
        "previous_commit": "4cc873aee4f3ae15a562fd6682085f67d7a523af",
        "date": 1532615350,
        "releases": {
            "previous": "e8cb0d8caf86aa9580b153d57757dd249739b503",
            "next": "e8cb0d8caf86aa9580b153d57757dd249739b503"
        },
        "commit_message": "Let #executorService() takes precedence over #register() (#3886)\n\n* Let ClientBuilder#executorService takes precedence over ClientBuilder#register(<@ClientAsyncExecutor>)\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e8cb0d8caf86aa9580b153d57757dd249739b503": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyClient.java": [
                    "public ScheduledExecutorService org.glassfish.jersey.client.JerseyClient.getScheduledExecutorService()",
                    "public ExecutorService org.glassfish.jersey.client.JerseyClient.getExecutorService()"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyClientBuilder.java": [
                    "public ClientBuilder org.glassfish.jersey.client.JerseyClientBuilder.executorService(ExecutorService executorService)",
                    "public JerseyClient org.glassfish.jersey.client.JerseyClientBuilder.build()",
                    "public ClientBuilder org.glassfish.jersey.client.JerseyClientBuilder.scheduledExecutorService(ScheduledExecutorService scheduledExecutorService)"
                ]
            },
            "4cc873aee4f3ae15a562fd6682085f67d7a523af": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyClient.java": [
                    "public ScheduledExecutorService org.glassfish.jersey.client.JerseyClient.getScheduledExecutorService()",
                    "public ExecutorService org.glassfish.jersey.client.JerseyClient.getExecutorService()"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyClientBuilder.java": [
                    "public ClientBuilder org.glassfish.jersey.client.JerseyClientBuilder.executorService(ExecutorService executorService)",
                    "public JerseyClient org.glassfish.jersey.client.JerseyClientBuilder.build()",
                    "public ClientBuilder org.glassfish.jersey.client.JerseyClientBuilder.scheduledExecutorService(ScheduledExecutorService scheduledExecutorService)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "06b1a6cae5d7720897bc726197de838f42441b04",
        "previous_commit": "7b6d2f84391f24310baae7d8e55e644703642826",
        "date": 1618507627,
        "releases": {
            "previous": "06b1a6cae5d7720897bc726197de838f42441b04",
            "next": "06b1a6cae5d7720897bc726197de838f42441b04"
        },
        "commit_message": "Allow to use @Inject instead of @Context with CDI (#4749)\n\n* Allow to use @Inject instead of @Context with CDI\r\n\r\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "06b1a6cae5d7720897bc726197de838f42441b04": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/process/RequestProcessingConfigurator.java": [
                    "protected void org.glassfish.jersey.server.internal.process.RequestProcessingConfigurator.configure()"
                ],
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/AbstractCdiBeanSupplier.java": [
                    "public T org.glassfish.jersey.ext.cdi1x.internal.AbstractCdiBeanSupplier<T>.getInstance(final Class<T> clazz)"
                ],
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "public Object org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.create(final CreationalContext creationalContext)",
                    "private Set<InjectionPoint> org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.filterHk2InjectionPointsOut(final Set<InjectionPoint> originalInjectionPoints)",
                    "public void org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.inject(final Object t, final CreationalContext cc)"
                ]
            },
            "7b6d2f84391f24310baae7d8e55e644703642826": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/process/RequestProcessingConfigurator.java": [
                    "protected void org.glassfish.jersey.server.internal.process.RequestProcessingConfigurator.configure()"
                ],
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/AbstractCdiBeanSupplier.java": [
                    "public T org.glassfish.jersey.ext.cdi1x.internal.AbstractCdiBeanSupplier<T>.getInstance(final Class<T> clazz)"
                ],
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "public Object org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.create(final CreationalContext creationalContext)",
                    "private Set<InjectionPoint> org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.filterHk2InjectionPointsOut(final Set<InjectionPoint> originalInjectionPoints)",
                    "public void org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.inject(final Object t, final CreationalContext cc)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "54afae0da5f6e66eb87a4b9e0fc5bc0b841abec6",
        "previous_commit": "3f8ed1647e7cf6ec364d19a81e7d3eced2979743",
        "date": 1613057785,
        "releases": {
            "previous": "54afae0da5f6e66eb87a4b9e0fc5bc0b841abec6",
            "next": "54afae0da5f6e66eb87a4b9e0fc5bc0b841abec6"
        },
        "commit_message": "MicroProfile Rest Client 2.0 support (#4699)\n\n* JERSEY-4654 MP Rest Client 2.0 - QueryParamStyle,  FOLLOW_REDIRECTS, PROXY_ADDRESS, SSE support\r\n\r\nSigned-off-by: Gaurav Gupta <gaurav.gupta@payara.fish>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "54afae0da5f6e66eb87a4b9e0fc5bc0b841abec6": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyWebTarget.java": [
                    "public JerseyWebTarget org.glassfish.jersey.client.JerseyWebTarget.queryParam(String name, Object... values)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/uri/internal/JerseyUriBuilder.java": [
                    "public JerseyUriBuilder org.glassfish.jersey.uri.internal.JerseyUriBuilder.queryParam(String name, final Object... values)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/QueryParamModel.java": [
                    "public Map<String, Object[]> org.glassfish.jersey.microprofile.restclient.QueryParamModel.handleParameter(Map<String, Object[]> requestPart, Class<? extends Annotation> annotationClass, Object instance)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientProducer.java": [
                    "public Object org.glassfish.jersey.microprofile.restclient.RestClientProducer.create(CreationalContext<Object> creationalContext)"
                ]
            },
            "3f8ed1647e7cf6ec364d19a81e7d3eced2979743": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyWebTarget.java": [
                    "public JerseyWebTarget org.glassfish.jersey.client.JerseyWebTarget.queryParam(String name, Object... values)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/uri/internal/JerseyUriBuilder.java": [
                    "public JerseyUriBuilder org.glassfish.jersey.uri.internal.JerseyUriBuilder.queryParam(String name, final Object... values)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/QueryParamModel.java": [
                    "public Map<String, Object[]> org.glassfish.jersey.microprofile.restclient.QueryParamModel.handleParameter(Map<String, Object[]> requestPart, Class<? extends Annotation> annotationClass, Object instance)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientProducer.java": [
                    "public Object org.glassfish.jersey.microprofile.restclient.RestClientProducer.create(CreationalContext<Object> creationalContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "73a775de0394f04f9c999eef2f2b8ce710ff0965",
        "previous_commit": "14c5c43ff227ba34bc27aa41c81f84d5f1f3080d",
        "date": 1716327484,
        "releases": {
            "previous": "73a775de0394f04f9c999eef2f2b8ce710ff0965",
            "next": "73a775de0394f04f9c999eef2f2b8ce710ff0965"
        },
        "commit_message": "Support for Virtual Threads in Executor Services (#5648)\n\n* Support for Virtual Threads in Executor Services\r\n\r\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "73a775de0394f04f9c999eef2f2b8ce710ff0965": {
                "containers/grizzly2-http/src/main/java/org/glassfish/jersey/grizzly2/httpserver/GrizzlyHttpServerFactory.java": [
                    "public static HttpServer org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpServerFactory.createHttpServer(final URI uri, final GrizzlyHttpContainer handler, final boolean secure, final SSLEngineConfigurator sslEngineConfigurator, final boolean start)"
                ],
                "containers/grizzly2-servlet/src/main/java/org/glassfish/jersey/grizzly2/servlet/GrizzlyWebContainerFactory.java": [
                    "private static HttpServer org.glassfish.jersey.grizzly2.servlet.GrizzlyWebContainerFactory.create(URI u, Class<? extends Servlet> c, Servlet servlet, Map<String, String> initParams, Map<String, String> contextInitParams)"
                ],
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainerFactory.java": [
                    "public static Server org.glassfish.jersey.jetty.JettyHttpContainerFactory.createServer(final URI uri, final SslContextFactory sslContextFactory, final JettyHttpContainer handler, final boolean start)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/ClientExecutorProvidersConfigurator.java": [
                    "public void org.glassfish.jersey.client.ClientExecutorProvidersConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/ServerExecutorProvidersConfigurator.java": [
                    "public void org.glassfish.jersey.server.ServerExecutorProvidersConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ]
            },
            "14c5c43ff227ba34bc27aa41c81f84d5f1f3080d": {
                "containers/grizzly2-http/src/main/java/org/glassfish/jersey/grizzly2/httpserver/GrizzlyHttpServerFactory.java": [
                    "public static HttpServer org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpServerFactory.createHttpServer(final URI uri, final GrizzlyHttpContainer handler, final boolean secure, final SSLEngineConfigurator sslEngineConfigurator, final boolean start)"
                ],
                "containers/grizzly2-servlet/src/main/java/org/glassfish/jersey/grizzly2/servlet/GrizzlyWebContainerFactory.java": [
                    "private static HttpServer org.glassfish.jersey.grizzly2.servlet.GrizzlyWebContainerFactory.create(URI u, Class<? extends Servlet> c, Servlet servlet, Map<String, String> initParams, Map<String, String> contextInitParams)"
                ],
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainerFactory.java": [
                    "public static Server org.glassfish.jersey.jetty.JettyHttpContainerFactory.createServer(final URI uri, final SslContextFactory sslContextFactory, final JettyHttpContainer handler, final boolean start)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/ClientExecutorProvidersConfigurator.java": [
                    "public void org.glassfish.jersey.client.ClientExecutorProvidersConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/ServerExecutorProvidersConfigurator.java": [
                    "public void org.glassfish.jersey.server.ServerExecutorProvidersConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "a73db94d1afe5034ccbf8ebc61ddff61971c4b4c",
        "previous_commit": "0f65e5d6428098dfa724c0ef3510a8aea77f74fc",
        "date": 1600935516,
        "releases": {
            "previous": "a73db94d1afe5034ccbf8ebc61ddff61971c4b4c",
            "next": "a73db94d1afe5034ccbf8ebc61ddff61971c4b4c"
        },
        "commit_message": "Support TLSv1.3 (#4528)\n\n* Support TLSv 1.3\r\n\r\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "a73db94d1afe5034ccbf8ebc61ddff61971c4b4c": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/SslFilter.java": [
                    "private boolean org.glassfish.jersey.jdk.connector.internal.SslFilter.handleRead(ByteBuffer networkData)",
                    "private void org.glassfish.jersey.jdk.connector.internal.SslFilter.handleHandshakeFinished()",
                    "private boolean org.glassfish.jersey.jdk.connector.internal.SslFilter.doHandshakeStep(ByteBuffer networkData)",
                    "private void org.glassfish.jersey.jdk.connector.internal.SslFilter.handleWrite(final ByteBuffer applicationData, final CompletionHandler<ByteBuffer> completionHandler)",
                    "void org.glassfish.jersey.jdk.connector.internal.SslFilter.startSsl()"
                ]
            },
            "0f65e5d6428098dfa724c0ef3510a8aea77f74fc": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/SslFilter.java": [
                    "private boolean org.glassfish.jersey.jdk.connector.internal.SslFilter.handleRead(ByteBuffer networkData)",
                    "private void org.glassfish.jersey.jdk.connector.internal.SslFilter.handleHandshakeFinished()",
                    "private boolean org.glassfish.jersey.jdk.connector.internal.SslFilter.doHandshakeStep(ByteBuffer networkData)",
                    "private void org.glassfish.jersey.jdk.connector.internal.SslFilter.handleWrite(final ByteBuffer applicationData, final CompletionHandler<ByteBuffer> completionHandler)",
                    "void org.glassfish.jersey.jdk.connector.internal.SslFilter.startSsl()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "b84ec4859720138c286c9e05464a724950affda2",
        "previous_commit": "da7c5c5619fe75fa92dd54872a061c15098eae5c",
        "date": 1551956560,
        "releases": {
            "previous": "b84ec4859720138c286c9e05464a724950affda2",
            "next": "b84ec4859720138c286c9e05464a724950affda2"
        },
        "commit_message": "Fix for the issue 3796\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "b84ec4859720138c286c9e05464a724950affda2": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ProviderBinder.java": [
                    "public static void bindProvider(Object providerInstance, ContractProvider model, InjectionManager injectionManager)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "private void org.glassfish.jersey.model.internal.CommonConfig.configureFeatures(InjectionManager injectionManager, Set<FeatureRegistration> processed, List<FeatureRegistration> unprocessed, ManagedObjectsFinalizer managedObjectsFinalizer)"
                ],
                "inject/cdi2-se/src/main/java/org/glassfish/jersey/inject/cdi/se/CdiSeInjectionManager.java": [
                    "public void org.glassfish.jersey.inject.cdi.se.CdiSeInjectionManager.inject(Object instance)",
                    "public <T> T org.glassfish.jersey.inject.cdi.se.CdiSeInjectionManager.createAndInitialize(Class<T> createMe)",
                    "private <T> T org.glassfish.jersey.inject.cdi.se.CdiSeInjectionManager.getInstanceInternal(Type contractOrImpl, Annotation... qualifiers)"
                ]
            },
            "da7c5c5619fe75fa92dd54872a061c15098eae5c": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ProviderBinder.java": [
                    "public static void bindProvider(Object providerInstance, ContractProvider model, InjectionManager injectionManager)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "private void org.glassfish.jersey.model.internal.CommonConfig.configureFeatures(InjectionManager injectionManager, Set<FeatureRegistration> processed, List<FeatureRegistration> unprocessed, ManagedObjectsFinalizer managedObjectsFinalizer)"
                ],
                "inject/cdi2-se/src/main/java/org/glassfish/jersey/inject/cdi/se/CdiSeInjectionManager.java": [
                    "public void org.glassfish.jersey.inject.cdi.se.CdiSeInjectionManager.inject(Object instance)",
                    "public <T> T org.glassfish.jersey.inject.cdi.se.CdiSeInjectionManager.createAndInitialize(Class<T> createMe)",
                    "private <T> T org.glassfish.jersey.inject.cdi.se.CdiSeInjectionManager.getInstanceInternal(Type contractOrImpl, Annotation... qualifiers)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "cfa1734cfc1f8bf285f539517ac66829928c231c",
        "previous_commit": "eefa1e74fbaeec4d7a320f60b8c2a580c89c3c28",
        "date": 1574323288,
        "releases": {
            "previous": "cfa1734cfc1f8bf285f539517ac66829928c231c",
            "next": "cfa1734cfc1f8bf285f539517ac66829928c231c"
        },
        "commit_message": "New client PreInvocationInterceptor and PostInvocationInterceptor SPI (#4301)\n\n* New client PreInvocationInterceptor and PostInvocationInterceptor SPI executed around the request\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "cfa1734cfc1f8bf285f539517ac66829928c231c": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientFilteringStages.java": [
                    "public Continuation<ClientRequest> org.glassfish.jersey.client.ClientFilteringStages.apply(ClientRequest requestContext)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/ClientRuntime.java": [
                    "public void org.glassfish.jersey.client.ClientRuntime.response(final ClientResponse response)",
                    "public ClientResponse invoke(final ClientRequest request)",
                    "public void org.glassfish.jersey.client.ClientRuntime.failure(final Throwable failure)",
                    "Runnable org.glassfish.jersey.client.ClientRuntime.createRunnableForAsyncProcessing(ClientRequest request, final ResponseCallback callback)"
                ]
            },
            "eefa1e74fbaeec4d7a320f60b8c2a580c89c3c28": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientFilteringStages.java": [
                    "public Continuation<ClientRequest> org.glassfish.jersey.client.ClientFilteringStages.apply(ClientRequest requestContext)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/ClientRuntime.java": [
                    "public void org.glassfish.jersey.client.ClientRuntime.response(final ClientResponse response)",
                    "public ClientResponse invoke(final ClientRequest request)",
                    "public void org.glassfish.jersey.client.ClientRuntime.failure(final Throwable failure)",
                    "Runnable org.glassfish.jersey.client.ClientRuntime.createRunnableForAsyncProcessing(ClientRequest request, final ResponseCallback callback)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "9d96068c8c7f020fa4742e540649b38d986f9f1a",
        "previous_commit": "e3c394199345fa0670bd0e1a0f8beb0448f2fac0",
        "date": 1692368828,
        "releases": {
            "previous": "9d96068c8c7f020fa4742e540649b38d986f9f1a",
            "next": "9d96068c8c7f020fa4742e540649b38d986f9f1a"
        },
        "commit_message": "Fix nio failures on Windows\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "9d96068c8c7f020fa4742e540649b38d986f9f1a": {
                "core-common/src/main/java/org/glassfish/jersey/SslConfigurator.java": [
                    "public SSLContext org.glassfish.jersey.SslConfigurator.createSSLContext()"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/JarZipSchemeResourceFinderFactory.java": [
                    "private InputStream org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(final String jarUrlString)"
                ],
                "ext/mvc/src/main/java/org/glassfish/jersey/server/mvc/spi/AbstractTemplateProcessor.java": [
                    "private T org.glassfish.jersey.server.mvc.spi.AbstractTemplateProcessor<T>.resolve(final String name)"
                ],
                "ext/wadl-doclet/src/main/java/org/glassfish/jersey/wadl/doclet/DocletUtils.java": [
                    "static boolean org.glassfish.jersey.wadl.doclet.DocletUtils.createOutputFile(String filePath, DocProcessor docProcessor, ResourceDocType result)"
                ],
                "tools/jersey-doc-modulelist-maven-plugin/src/main/java/org/glassfish/jersey/tools/plugins/GenerateJerseyModuleListMojo.java": [
                    "public String org.glassfish.jersey.tools.plugins.GenerateJerseyModuleListMojo.readFile(String fileName)"
                ]
            },
            "e3c394199345fa0670bd0e1a0f8beb0448f2fac0": {
                "core-common/src/main/java/org/glassfish/jersey/SslConfigurator.java": [
                    "public SSLContext org.glassfish.jersey.SslConfigurator.createSSLContext()"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/JarZipSchemeResourceFinderFactory.java": [
                    "private InputStream org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(final String jarUrlString)"
                ],
                "ext/mvc/src/main/java/org/glassfish/jersey/server/mvc/spi/AbstractTemplateProcessor.java": [
                    "private T org.glassfish.jersey.server.mvc.spi.AbstractTemplateProcessor<T>.resolve(final String name)"
                ],
                "ext/wadl-doclet/src/main/java/org/glassfish/jersey/wadl/doclet/DocletUtils.java": [
                    "static boolean org.glassfish.jersey.wadl.doclet.DocletUtils.createOutputFile(String filePath, DocProcessor docProcessor, ResourceDocType result)"
                ],
                "tools/jersey-doc-modulelist-maven-plugin/src/main/java/org/glassfish/jersey/tools/plugins/GenerateJerseyModuleListMojo.java": [
                    "public String org.glassfish.jersey.tools.plugins.GenerateJerseyModuleListMojo.readFile(String fileName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "43a9e18418388a8dad13e2bcf81e6fce0d45bc00",
        "previous_commit": "79f5547caaaea1e8ad8bc5ecb7a0584355abcc4a",
        "date": 1651489088,
        "releases": {
            "previous": "43a9e18418388a8dad13e2bcf81e6fce0d45bc00",
            "next": "43a9e18418388a8dad13e2bcf81e6fce0d45bc00"
        },
        "commit_message": "Redact HTTP headers on LoggingFeature (#5025)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "43a9e18418388a8dad13e2bcf81e6fce0d45bc00": {
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingFeature.java": [
                    "private static LoggingFeatureBuilder org.glassfish.jersey.logging.LoggingFeature.configureBuilderParameters(LoggingFeatureBuilder builder, FeatureContext context, RuntimeType runtimeType)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingFeatureAutoDiscoverable.java": [
                    "private boolean org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable.serverConfigured(Map properties)",
                    "private boolean org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable.clientConfigured(Map properties)",
                    "private boolean org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable.commonPropertyConfigured(Map properties)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingInterceptor.java": [
                    "void org.glassfish.jersey.logging.LoggingInterceptor.printPrefixedHeaders(final StringBuilder b, final long id, final String prefix, final MultivaluedMap<String, String> headers)"
                ]
            },
            "79f5547caaaea1e8ad8bc5ecb7a0584355abcc4a": {
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingFeature.java": [
                    "private static LoggingFeatureBuilder org.glassfish.jersey.logging.LoggingFeature.configureBuilderParameters(LoggingFeatureBuilder builder, FeatureContext context, RuntimeType runtimeType)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingFeatureAutoDiscoverable.java": [
                    "private boolean org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable.serverConfigured(Map properties)",
                    "private boolean org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable.clientConfigured(Map properties)",
                    "private boolean org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable.commonPropertyConfigured(Map properties)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingInterceptor.java": [
                    "void org.glassfish.jersey.logging.LoggingInterceptor.printPrefixedHeaders(final StringBuilder b, final long id, final String prefix, final MultivaluedMap<String, String> headers)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "b752b3c0bc60a24a9a67a9bcb8d09b66b2e30d1e",
        "previous_commit": "e254ae81ff9240d27adcb9abff70a12b80a9f8f8",
        "date": 1723971453,
        "releases": {
            "previous": "b752b3c0bc60a24a9a67a9bcb8d09b66b2e30d1e",
            "next": "b752b3c0bc60a24a9a67a9bcb8d09b66b2e30d1e"
        },
        "commit_message": "Allow SupplierClassBinding in ThreadScope in CDI\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "b752b3c0bc60a24a9a67a9bcb8d09b66b2e30d1e": {
                "incubator/cdi-inject-weld/src/main/java/org/glassfish/jersey/inject/weld/internal/bean/BeanHelper.java": [
                    "public static <T> BindingBeanPair org.glassfish.jersey.inject.weld.internal.bean.BeanHelper.registerSupplier(RuntimeType runtimeType, SupplierClassBinding<T> binding, AfterBeanDiscovery abd, Collection<InjectionResolver> resolvers, BeanManager beanManager)",
                    "public static <T> void org.glassfish.jersey.inject.weld.internal.bean.BeanHelper.registerSupplier(RuntimeType runtimeType, InitializableSupplierInstanceBinding<T> binding, AfterBeanDiscovery abd, BeanManager beanManager)"
                ],
                "incubator/cdi-inject-weld/src/main/java/org/glassfish/jersey/inject/weld/internal/managed/BinderRegisterExtension.java": [
                    "private void org.glassfish.jersey.inject.weld.internal.managed.BinderRegisterExtension.registerBeans(RuntimeType runtimeType, CachingBinder binder, AfterBeanDiscovery abd, BeanManager beanManager)"
                ],
                "inject/cdi2-se/src/main/java/org/glassfish/jersey/inject/cdi/se/bean/BeanHelper.java": [
                    "public static <T> void org.glassfish.jersey.inject.cdi.se.bean.BeanHelper.registerSupplier(SupplierInstanceBinding<T> binding, AfterBeanDiscovery abd, BeanManager beanManager)",
                    "public static <T> void org.glassfish.jersey.inject.cdi.se.bean.BeanHelper.registerSupplier(SupplierClassBinding<T> binding, AfterBeanDiscovery abd, Collection<InjectionResolver> resolvers, BeanManager beanManager)"
                ]
            },
            "e254ae81ff9240d27adcb9abff70a12b80a9f8f8": {
                "incubator/cdi-inject-weld/src/main/java/org/glassfish/jersey/inject/weld/internal/bean/BeanHelper.java": [
                    "public static <T> BindingBeanPair org.glassfish.jersey.inject.weld.internal.bean.BeanHelper.registerSupplier(RuntimeType runtimeType, SupplierClassBinding<T> binding, AfterBeanDiscovery abd, Collection<InjectionResolver> resolvers, BeanManager beanManager)",
                    "public static <T> void org.glassfish.jersey.inject.weld.internal.bean.BeanHelper.registerSupplier(RuntimeType runtimeType, InitializableSupplierInstanceBinding<T> binding, AfterBeanDiscovery abd, BeanManager beanManager)"
                ],
                "incubator/cdi-inject-weld/src/main/java/org/glassfish/jersey/inject/weld/internal/managed/BinderRegisterExtension.java": [
                    "private void org.glassfish.jersey.inject.weld.internal.managed.BinderRegisterExtension.registerBeans(RuntimeType runtimeType, CachingBinder binder, AfterBeanDiscovery abd, BeanManager beanManager)"
                ],
                "inject/cdi2-se/src/main/java/org/glassfish/jersey/inject/cdi/se/bean/BeanHelper.java": [
                    "public static <T> void org.glassfish.jersey.inject.cdi.se.bean.BeanHelper.registerSupplier(SupplierInstanceBinding<T> binding, AfterBeanDiscovery abd, BeanManager beanManager)",
                    "public static <T> void org.glassfish.jersey.inject.cdi.se.bean.BeanHelper.registerSupplier(SupplierClassBinding<T> binding, AfterBeanDiscovery abd, Collection<InjectionResolver> resolvers, BeanManager beanManager)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "9edb3d4c29049eb824fa93c3499be88d8cf49b93",
        "previous_commit": "21e8fafc34829c41e2b0bef27ddc2f90b09704aa",
        "date": 1607982883,
        "releases": {
            "previous": "9edb3d4c29049eb824fa93c3499be88d8cf49b93",
            "next": "9edb3d4c29049eb824fa93c3499be88d8cf49b93"
        },
        "commit_message": "Make JAX-B API optional (#4634)\n\n* Make JAX-B API optional\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "9edb3d4c29049eb824fa93c3499be88d8cf49b93": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/MessagingBinders.java": [
                    "private void org.glassfish.jersey.message.internal.MessagingBinders.bindToBinder(AbstractBinder binder)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/WadlFeature.java": [
                    "public boolean org.glassfish.jersey.server.wadl.WadlFeature.configure(FeatureContext context)"
                ],
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/ValidationErrorMessageBodyWriter.java": [
                    "public void org.glassfish.jersey.server.validation.internal.ValidationErrorMessageBodyWriter.writeTo(final Object entity, final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)",
                    "private static boolean org.glassfish.jersey.server.validation.internal.ValidationErrorMessageBodyWriter.isSupportedType(final Class<?> type, final Type genericType)"
                ],
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/ValidationExceptionMapper.java": [
                    "public Response org.glassfish.jersey.server.validation.internal.ValidationExceptionMapper.toResponse(final ValidationException exception)"
                ]
            },
            "21e8fafc34829c41e2b0bef27ddc2f90b09704aa": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/MessagingBinders.java": [
                    "private void org.glassfish.jersey.message.internal.MessagingBinders.bindToBinder(AbstractBinder binder)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/WadlFeature.java": [
                    "public boolean org.glassfish.jersey.server.wadl.WadlFeature.configure(FeatureContext context)"
                ],
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/ValidationErrorMessageBodyWriter.java": [
                    "public void org.glassfish.jersey.server.validation.internal.ValidationErrorMessageBodyWriter.writeTo(final Object entity, final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)",
                    "private static boolean org.glassfish.jersey.server.validation.internal.ValidationErrorMessageBodyWriter.isSupportedType(final Class<?> type, final Type genericType)"
                ],
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/ValidationExceptionMapper.java": [
                    "public Response org.glassfish.jersey.server.validation.internal.ValidationExceptionMapper.toResponse(final ValidationException exception)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "3af74de7f3bb59a2bc6ccfefbaa4d1f3d9eb1c19",
        "previous_commit": "d8f177f6c0ebe581531649449d3f5b1731dc9143",
        "date": 1601025394,
        "releases": {
            "previous": "3af74de7f3bb59a2bc6ccfefbaa4d1f3d9eb1c19",
            "next": "3af74de7f3bb59a2bc6ccfefbaa4d1f3d9eb1c19"
        },
        "commit_message": "Support Apache HttpEntity as an entity type when using Apache Connector\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "3af74de7f3bb59a2bc6ccfefbaa4d1f3d9eb1c19": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "private HttpEntity org.glassfish.jersey.apache.connector.ApacheConnector.getHttpEntity(final ClientRequest clientRequest, final boolean bufferingEnabled)",
                    "public boolean org.glassfish.jersey.apache.connector.ApacheConnector.isRepeatable()",
                    "public InputStream org.glassfish.jersey.apache.connector.ApacheConnector.getContent()",
                    "public boolean org.glassfish.jersey.apache.connector.ApacheConnector.isStreaming()",
                    "public long org.glassfish.jersey.apache.connector.ApacheConnector.getContentLength()"
                ]
            },
            "d8f177f6c0ebe581531649449d3f5b1731dc9143": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "private HttpEntity org.glassfish.jersey.apache.connector.ApacheConnector.getHttpEntity(final ClientRequest clientRequest, final boolean bufferingEnabled)",
                    "public boolean org.glassfish.jersey.apache.connector.ApacheConnector.isRepeatable()",
                    "public InputStream org.glassfish.jersey.apache.connector.ApacheConnector.getContent()",
                    "public boolean org.glassfish.jersey.apache.connector.ApacheConnector.isStreaming()",
                    "public long org.glassfish.jersey.apache.connector.ApacheConnector.getContentLength()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "6fcec23407fe2ca2a665c82bf617b1ac821d72f6",
        "previous_commit": "8174fede93025f7f7deac7b25f63f5893624a534",
        "date": 1721132948,
        "releases": {
            "previous": "6fcec23407fe2ca2a665c82bf617b1ac821d72f6",
            "next": "6fcec23407fe2ca2a665c82bf617b1ac821d72f6"
        },
        "commit_message": "Wrap call of deprecated HttpServletResponse#setStatus into try catch\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "6fcec23407fe2ca2a665c82bf617b1ac821d72f6": {
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java": [
                    "private void org.glassfish.jersey.servlet.ServletContainer.setResponseForInvalidUri(final HttpServletResponse response, final Throwable throwable)"
                ],
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/WebComponent.java": [
                    "ResponseWriter serviceImpl( final URI baseUri, final URI requestUri, final HttpServletRequest servletRequest, final HttpServletResponse servletResponse)"
                ],
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/internal/ResponseWriter.java": [
                    "public void org.glassfish.jersey.servlet.internal.ResponseWriter.failure(final Throwable error)",
                    "public OutputStream org.glassfish.jersey.servlet.internal.ResponseWriter.writeResponseStatusAndHeaders(final long contentLength, final ContainerResponse responseContext)"
                ]
            },
            "8174fede93025f7f7deac7b25f63f5893624a534": {
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java": [
                    "private void org.glassfish.jersey.servlet.ServletContainer.setResponseForInvalidUri(final HttpServletResponse response, final Throwable throwable)"
                ],
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/WebComponent.java": [
                    "ResponseWriter serviceImpl( final URI baseUri, final URI requestUri, final HttpServletRequest servletRequest, final HttpServletResponse servletResponse)"
                ],
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/internal/ResponseWriter.java": [
                    "public void org.glassfish.jersey.servlet.internal.ResponseWriter.failure(final Throwable error)",
                    "public OutputStream org.glassfish.jersey.servlet.internal.ResponseWriter.writeResponseStatusAndHeaders(final long contentLength, final ContainerResponse responseContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e5af7d692ceb00d98c37980f7be65344dc948d46",
        "previous_commit": "38d081986b07ba56c4c5dfb29a8f266880cdaec1",
        "date": 1582024654,
        "releases": {
            "previous": "e5af7d692ceb00d98c37980f7be65344dc948d46",
            "next": "e5af7d692ceb00d98c37980f7be65344dc948d46"
        },
        "commit_message": "Fix #3433 - Multiple cookies with same name are not supported (#4390)\n\n* Fix 3433 - Multiple cookies with same name are not supported\r\n\r\nSigned-off-by: tvallin <thibault.vallin@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e5af7d692ceb00d98c37980f7be65344dc948d46": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/CookiesParser.java": [
                    "public static NewCookie org.glassfish.jersey.message.internal.CookiesParser.parseNewCookie(String header)",
                    "public static Map<String, Cookie> org.glassfish.jersey.message.internal.CookiesParser.parseCookies(String header)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InboundMessageContext.java": [
                    "public Map<String, NewCookie> org.glassfish.jersey.message.internal.InboundMessageContext.getResponseCookies()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/OutboundMessageContext.java": [
                    "public Map<String, NewCookie> org.glassfish.jersey.message.internal.OutboundMessageContext.getResponseCookies()"
                ]
            },
            "38d081986b07ba56c4c5dfb29a8f266880cdaec1": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/CookiesParser.java": [
                    "public static NewCookie org.glassfish.jersey.message.internal.CookiesParser.parseNewCookie(String header)",
                    "public static Map<String, Cookie> org.glassfish.jersey.message.internal.CookiesParser.parseCookies(String header)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InboundMessageContext.java": [
                    "public Map<String, NewCookie> org.glassfish.jersey.message.internal.InboundMessageContext.getResponseCookies()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/OutboundMessageContext.java": [
                    "public Map<String, NewCookie> org.glassfish.jersey.message.internal.OutboundMessageContext.getResponseCookies()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "7d69a424da408c7322dc8e90b1facf46fad27043",
        "previous_commit": "d8f3e0fba99262feffed245f5b22d1836da7ea10",
        "date": 1718018787,
        "releases": {
            "previous": "7d69a424da408c7322dc8e90b1facf46fad27043",
            "next": "7d69a424da408c7322dc8e90b1facf46fad27043"
        },
        "commit_message": "Support missing Content-Length header\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "7d69a424da408c7322dc8e90b1facf46fad27043": {
                "connectors/apache5-connector/src/main/java/org/glassfish/jersey/apache5/connector/Apache5Connector.java": [
                    "public ClientResponse org.glassfish.jersey.apache5.connector.Apache5Connector.apply(final ClientRequest clientRequest)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpParser.java": [
                    "private void org.glassfish.jersey.jdk.connector.internal.HttpParser.decideTransferEncoding()"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelRead0(ChannelHandlerContext ctx, HttpObject msg)",
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelInactive(ChannelHandlerContext ctx)"
                ]
            },
            "d8f3e0fba99262feffed245f5b22d1836da7ea10": {
                "connectors/apache5-connector/src/main/java/org/glassfish/jersey/apache5/connector/Apache5Connector.java": [
                    "public ClientResponse org.glassfish.jersey.apache5.connector.Apache5Connector.apply(final ClientRequest clientRequest)"
                ],
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpParser.java": [
                    "private void org.glassfish.jersey.jdk.connector.internal.HttpParser.decideTransferEncoding()"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelRead0(ChannelHandlerContext ctx, HttpObject msg)",
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelInactive(ChannelHandlerContext ctx)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "351a578bcb561cead07eea1c6c1c9c02668fd697",
        "previous_commit": "5b611fceef7637f671c6f8d9db06c929275f723d",
        "date": 1585316548,
        "releases": {
            "previous": "351a578bcb561cead07eea1c6c1c9c02668fd697",
            "next": "351a578bcb561cead07eea1c6c1c9c02668fd697"
        },
        "commit_message": "Allow to use HeaderDelegateProvider to parse the response MediaType\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "351a578bcb561cead07eea1c6c1c9c02668fd697": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InboundMessageContext.java": [
                    "private <T> T org.glassfish.jersey.message.internal.InboundMessageContext.singleHeader(String name, Function<String, T> converter, boolean convertNull)",
                    "public MediaType org.glassfish.jersey.message.internal.InboundMessageContext.getMediaType()",
                    "public MediaType org.glassfish.jersey.message.internal.InboundMessageContext.apply(String input)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/OutboundMessageContext.java": [
                    "public MediaType org.glassfish.jersey.message.internal.OutboundMessageContext.getMediaType()"
                ]
            },
            "5b611fceef7637f671c6f8d9db06c929275f723d": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InboundMessageContext.java": [
                    "private <T> T org.glassfish.jersey.message.internal.InboundMessageContext.singleHeader(String name, Function<String, T> converter, boolean convertNull)",
                    "public MediaType org.glassfish.jersey.message.internal.InboundMessageContext.getMediaType()",
                    "public MediaType org.glassfish.jersey.message.internal.InboundMessageContext.apply(String input)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/OutboundMessageContext.java": [
                    "public MediaType org.glassfish.jersey.message.internal.OutboundMessageContext.getMediaType()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "584664c81b6983c2118f67b7f2d8db237cfee323",
        "previous_commit": "94945df6e94f328f26b1d8b4608c19e9e4c9ded0",
        "date": 1570103633,
        "releases": {
            "previous": "584664c81b6983c2118f67b7f2d8db237cfee323",
            "next": "584664c81b6983c2118f67b7f2d8db237cfee323"
        },
        "commit_message": "Update ASM to 7.2 (#4279)\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "584664c81b6983c2118f67b7f2d8db237cfee323": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/MethodWriter.java": [
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitFrame( final int type, final int numLocal, final Object[] local, final int numStack, final Object[] stack)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Type.java": [
                    "public static Type[] jersey.red.org.objectweb.asm.Type.getArgumentTypes(final String methodDescriptor)",
                    "static int jersey.red.org.objectweb.asm.Type.getReturnTypeOffset(final String methodDescriptor)",
                    "public static int jersey.red.org.objectweb.asm.Type.getArgumentsAndReturnSizes(final String methodDescriptor)"
                ]
            },
            "94945df6e94f328f26b1d8b4608c19e9e4c9ded0": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/MethodWriter.java": [
                    "public void jersey.red.org.objectweb.asm.MethodWriter.visitFrame( final int type, final int numLocal, final Object[] local, final int numStack, final Object[] stack)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Type.java": [
                    "public static Type[] jersey.red.org.objectweb.asm.Type.getArgumentTypes(final String methodDescriptor)",
                    "static int jersey.red.org.objectweb.asm.Type.getReturnTypeOffset(final String methodDescriptor)",
                    "public static int jersey.red.org.objectweb.asm.Type.getArgumentsAndReturnSizes(final String methodDescriptor)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "876c83d28462feb943d7c68f9063aa1ab97f738b",
        "previous_commit": "ff92b7e628bd398011aaae0f3c7b1aa148ea2bc4",
        "date": 1722248565,
        "releases": {
            "previous": "876c83d28462feb943d7c68f9063aa1ab97f738b",
            "next": "876c83d28462feb943d7c68f9063aa1ab97f738b"
        },
        "commit_message": "Propagate WebApplicationException from SseEventSource to provided error handler\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "876c83d28462feb943d7c68f9063aa1ab97f738b": {
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/EventProcessor.java": [
                    "public void org.glassfish.jersey.media.sse.internal.EventProcessor.run()"
                ],
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseySseEventSource.java": [
                    "public void org.glassfish.jersey.media.sse.internal.JerseySseEventSource.register(final Consumer<InboundSseEvent> onEvent, final Consumer<Throwable> onError, final Runnable onComplete)",
                    "public void org.glassfish.jersey.media.sse.internal.JerseySseEventSource.register(final Consumer<InboundSseEvent> onEvent, final Consumer<Throwable> onError)",
                    "public void org.glassfish.jersey.media.sse.internal.JerseySseEventSource.open()"
                ]
            },
            "ff92b7e628bd398011aaae0f3c7b1aa148ea2bc4": {
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/EventProcessor.java": [
                    "public void org.glassfish.jersey.media.sse.internal.EventProcessor.run()"
                ],
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseySseEventSource.java": [
                    "public void org.glassfish.jersey.media.sse.internal.JerseySseEventSource.register(final Consumer<InboundSseEvent> onEvent, final Consumer<Throwable> onError, final Runnable onComplete)",
                    "public void org.glassfish.jersey.media.sse.internal.JerseySseEventSource.register(final Consumer<InboundSseEvent> onEvent, final Consumer<Throwable> onError)",
                    "public void org.glassfish.jersey.media.sse.internal.JerseySseEventSource.open()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e2ee2e2d6da4dbb3a4c0f5417c621f402d792280",
        "previous_commit": "0ee0533409b3b32b700f4f38f4c9c3846d38eb70",
        "date": 1554899366,
        "releases": {
            "previous": "e2ee2e2d6da4dbb3a4c0f5417c621f402d792280",
            "next": "e2ee2e2d6da4dbb3a4c0f5417c621f402d792280"
        },
        "commit_message": " Upgrade Netty and expose Netty Context (#3983)\n\n* Upgrade Netty and expose Netty Context\r\nBumped netty version to latest\r\nUpdated API usage to match\r\nEnhanced returned SecurityContext to include Netty information\r\n\r\nSigned-off-by: Ian <eclipse@wut.to>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e2ee2e2d6da4dbb3a4c0f5417c621f402d792280": {
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/HttpVersionChooser.java": [
                    "protected void org.glassfish.jersey.netty.httpserver.HttpVersionChooser.configurePipeline(ChannelHandlerContext ctx, String protocol)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerHandler.java": [
                    "private ContainerRequest org.glassfish.jersey.netty.httpserver.JerseyServerHandler.createContainerRequest(ChannelHandlerContext ctx, HttpRequest req)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerInitializer.java": [
                    "private void org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.configureClearText(SocketChannel ch)",
                    "public HttpServerUpgradeHandler.UpgradeCodec org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.newUpgradeCodec(CharSequence protocol)"
                ]
            },
            "0ee0533409b3b32b700f4f38f4c9c3846d38eb70": {
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/HttpVersionChooser.java": [
                    "protected void org.glassfish.jersey.netty.httpserver.HttpVersionChooser.configurePipeline(ChannelHandlerContext ctx, String protocol)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerHandler.java": [
                    "private ContainerRequest org.glassfish.jersey.netty.httpserver.JerseyServerHandler.createContainerRequest(ChannelHandlerContext ctx, HttpRequest req)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerInitializer.java": [
                    "private void org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.configureClearText(SocketChannel ch)",
                    "public HttpServerUpgradeHandler.UpgradeCodec org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.newUpgradeCodec(CharSequence protocol)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "f6e849b086a3e057db0042f89279ba8cfb9f4c36",
        "previous_commit": "99042d68a65c7ae30138d06ec75a0c61863a67cf",
        "date": 1684265464,
        "releases": {
            "previous": "f6e849b086a3e057db0042f89279ba8cfb9f4c36",
            "next": "f6e849b086a3e057db0042f89279ba8cfb9f4c36"
        },
        "commit_message": "Additional logging for SNI\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "f6e849b086a3e057db0042f89279ba8cfb9f4c36": {
                "core-client/src/main/java/org/glassfish/jersey/client/innate/http/SniConfigurator.java": [
                    "private SSLParameters org.glassfish.jersey.client.innate.http.SniConfigurator.updateSSLParameters(SSLParameters sslParameters)",
                    "void org.glassfish.jersey.client.innate.http.SniConfigurator.setServerNames(SSLEngine sslEngine)",
                    "void org.glassfish.jersey.client.innate.http.SniConfigurator.setServerNames(SSLSocket sslSocket)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            },
            "99042d68a65c7ae30138d06ec75a0c61863a67cf": {
                "core-client/src/main/java/org/glassfish/jersey/client/innate/http/SniConfigurator.java": [
                    "private SSLParameters org.glassfish.jersey.client.innate.http.SniConfigurator.updateSSLParameters(SSLParameters sslParameters)",
                    "void org.glassfish.jersey.client.innate.http.SniConfigurator.setServerNames(SSLEngine sslEngine)",
                    "void org.glassfish.jersey.client.innate.http.SniConfigurator.setServerNames(SSLSocket sslSocket)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "f42459fcb1777e02566d936b5474c3fac615b377",
        "previous_commit": "ad57277aeec15b35fb3b996eb44885355aa130e4",
        "date": 1682629332,
        "releases": {
            "previous": "f42459fcb1777e02566d936b5474c3fac615b377",
            "next": "f42459fcb1777e02566d936b5474c3fac615b377"
        },
        "commit_message": "Adopt ASM 9.5\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "f42459fcb1777e02566d936b5474c3fac615b377": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassReader.java": [
                    "private void jersey.red.org.objectweb.asm.ClassReader.readCode( final MethodVisitor methodVisitor, final Context context, final int codeOffset)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Frame.java": [
                    "private static int jersey.red.org.objectweb.asm.Frame.getAbstractTypeFromDescriptor( final SymbolTable symbolTable, final String buffer, final int offset)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Label.java": [
                    "final void jersey.red.org.objectweb.asm.Label.addLineNumber(final int lineNumber)",
                    "final void jersey.red.org.objectweb.asm.Label.accept(final MethodVisitor methodVisitor, final boolean visitLineNumbers)"
                ]
            },
            "ad57277aeec15b35fb3b996eb44885355aa130e4": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassReader.java": [
                    "private void jersey.red.org.objectweb.asm.ClassReader.readCode( final MethodVisitor methodVisitor, final Context context, final int codeOffset)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Frame.java": [
                    "private static int jersey.red.org.objectweb.asm.Frame.getAbstractTypeFromDescriptor( final SymbolTable symbolTable, final String buffer, final int offset)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Label.java": [
                    "final void jersey.red.org.objectweb.asm.Label.addLineNumber(final int lineNumber)",
                    "final void jersey.red.org.objectweb.asm.Label.accept(final MethodVisitor methodVisitor, final boolean visitLineNumbers)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "c0ed81dd7ffa686d9181f86c9e1469ff6312f038",
        "previous_commit": "d5b682384968e19f6ae21ea9b1b37edfc6963737",
        "date": 1652796358,
        "releases": {
            "previous": "c0ed81dd7ffa686d9181f86c9e1469ff6312f038",
            "next": "c0ed81dd7ffa686d9181f86c9e1469ff6312f038"
        },
        "commit_message": "Netty Connector doesn't support Followredirects (#5048)\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "c0ed81dd7ffa686d9181f86c9e1469ff6312f038": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "protected void org.glassfish.jersey.netty.connector.JerseyClientHandler.notifyResponse()"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "public ClientResponse org.glassfish.jersey.netty.connector.NettyConnector.apply(ClientRequest jerseyRequest)",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "public Future<?> org.glassfish.jersey.netty.connector.NettyConnector.apply(final ClientRequest jerseyRequest, final AsyncConnectorCallback jerseyCallback)"
                ]
            },
            "d5b682384968e19f6ae21ea9b1b37edfc6963737": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "protected void org.glassfish.jersey.netty.connector.JerseyClientHandler.notifyResponse()"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "public ClientResponse org.glassfish.jersey.netty.connector.NettyConnector.apply(ClientRequest jerseyRequest)",
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)",
                    "public Future<?> org.glassfish.jersey.netty.connector.NettyConnector.apply(final ClientRequest jerseyRequest, final AsyncConnectorCallback jerseyCallback)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "bdf6c38fceb16b1b4ae3fa7cf58f49e7bff0c104",
        "previous_commit": "cb3d1cf99f9e738b5b512031d69a58b24c7cc452",
        "date": 1604050149,
        "releases": {
            "previous": "bdf6c38fceb16b1b4ae3fa7cf58f49e7bff0c104",
            "next": "bdf6c38fceb16b1b4ae3fa7cf58f49e7bff0c104"
        },
        "commit_message": "Adopt ASM 9\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "bdf6c38fceb16b1b4ae3fa7cf58f49e7bff0c104": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassReader.java": [
                    "public void jersey.red.org.objectweb.asm.ClassReader.accept( final ClassVisitor classVisitor, final Attribute[] attributePrototypes, final int parsingOptions)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassVisitor.java": [
                    "public void jersey.red.org.objectweb.asm.ClassVisitor.visit( final int version, final int access, final String name, final String signature, final String superName, final String[] interfaces)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassWriter.java": [
                    "private byte[] jersey.red.org.objectweb.asm.ClassWriter.replaceAsmInstructions(final byte[] classFile, final boolean hasFrames)",
                    "public byte[] jersey.red.org.objectweb.asm.ClassWriter.toByteArray()"
                ]
            },
            "cb3d1cf99f9e738b5b512031d69a58b24c7cc452": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassReader.java": [
                    "public void jersey.red.org.objectweb.asm.ClassReader.accept( final ClassVisitor classVisitor, final Attribute[] attributePrototypes, final int parsingOptions)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassVisitor.java": [
                    "public void jersey.red.org.objectweb.asm.ClassVisitor.visit( final int version, final int access, final String name, final String signature, final String superName, final String[] interfaces)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassWriter.java": [
                    "private byte[] jersey.red.org.objectweb.asm.ClassWriter.replaceAsmInstructions(final byte[] classFile, final boolean hasFrames)",
                    "public byte[] jersey.red.org.objectweb.asm.ClassWriter.toByteArray()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "149650d032b195a632277d9862e8587645b093eb",
        "previous_commit": "55b7aa933be048905d981578f5bac563035921a7",
        "date": 1676541759,
        "releases": {
            "previous": "149650d032b195a632277d9862e8587645b093eb",
            "next": "149650d032b195a632277d9862e8587645b093eb"
        },
        "commit_message": "Optional Injection-less client side for SE (#5232)\n\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "149650d032b195a632277d9862e8587645b093eb": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientConfig.java": [
                    "private ClientRuntime org.glassfish.jersey.client.ClientConfig.initRuntime()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/Injections.java": [
                    "public static InjectionManager org.glassfish.jersey.internal.inject.Injections.createInjectionManager()",
                    "public static InjectionManager org.glassfish.jersey.internal.inject.Injections.createInjectionManager(Object parent)",
                    "public static InjectionManager org.glassfish.jersey.internal.inject.Injections.createInjectionManager(Binder binder)"
                ]
            },
            "55b7aa933be048905d981578f5bac563035921a7": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientConfig.java": [
                    "private ClientRuntime org.glassfish.jersey.client.ClientConfig.initRuntime()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/Injections.java": [
                    "public static InjectionManager org.glassfish.jersey.internal.inject.Injections.createInjectionManager()",
                    "public static InjectionManager org.glassfish.jersey.internal.inject.Injections.createInjectionManager(Object parent)",
                    "public static InjectionManager org.glassfish.jersey.internal.inject.Injections.createInjectionManager(Binder binder)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "c9260df8c31285795e71217c3074bf6ff74288a4",
        "previous_commit": "3dca77c2e0920aa9df9f76e7fc7ae6f01afb9b5f",
        "date": 1559224126,
        "releases": {
            "previous": "c9260df8c31285795e71217c3074bf6ff74288a4",
            "next": "c9260df8c31285795e71217c3074bf6ff74288a4"
        },
        "commit_message": "Allow for matching multiple resources with equal paths as in 4119 (#4132)\n\n* Allow for matching multiple resources with equal paths as reported in 4119.\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "c9260df8c31285795e71217c3074bf6ff74288a4": {
                "core-common/src/main/java/org/glassfish/jersey/uri/UriTemplate.java": [
                    "public int org.glassfish.jersey.uri.UriTemplate.compare(UriTemplate o1, UriTemplate o2)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/routing/PathMatchingRouter.java": [
                    "public Router.Continuation org.glassfish.jersey.server.internal.routing.PathMatchingRouter.apply(final RequestProcessingContext context)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/routing/PathMatchingRouterBuilder.java": [
                    "public PathMatchingRouterBuilder org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder.to(final Router router)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/model/RuntimeResource.java": [
                    "public int org.glassfish.jersey.server.model.RuntimeResource.compare(RuntimeResource o1, RuntimeResource o2)"
                ]
            },
            "3dca77c2e0920aa9df9f76e7fc7ae6f01afb9b5f": {
                "core-common/src/main/java/org/glassfish/jersey/uri/UriTemplate.java": [
                    "public int org.glassfish.jersey.uri.UriTemplate.compare(UriTemplate o1, UriTemplate o2)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/routing/PathMatchingRouter.java": [
                    "public Router.Continuation org.glassfish.jersey.server.internal.routing.PathMatchingRouter.apply(final RequestProcessingContext context)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/routing/PathMatchingRouterBuilder.java": [
                    "public PathMatchingRouterBuilder org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder.to(final Router router)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/model/RuntimeResource.java": [
                    "public int org.glassfish.jersey.server.model.RuntimeResource.compare(RuntimeResource o1, RuntimeResource o2)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "14e8f181a4b584461cd7609bf916ba9123ccb7c8",
        "previous_commit": "0a867e9be9450b94b864e2b7e6f0c58d25e8f4f2",
        "date": 1565691449,
        "releases": {
            "previous": "14e8f181a4b584461cd7609bf916ba9123ccb7c8",
            "next": "14e8f181a4b584461cd7609bf916ba9123ccb7c8"
        },
        "commit_message": "Fix NettyInputStream ByteBuf leak (#4222)\n\n* Fix NettyInputStream ByteBuf leak in jersey/netty HTTP2 Handler\r\n\r\nSigned-off-by: Franck S\u00e9h\u00e9dic <franck.sehedic@ledger.fr>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "14e8f181a4b584461cd7609bf916ba9123ccb7c8": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/internal/NettyInputStream.java": [
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.read(byte[] b, int off, int len)",
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.read()"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyHttp2ServerHandler.java": [
                    "private void org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.onDataRead(ChannelHandlerContext ctx, Http2DataFrame data)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerHandler.java": [
                    "public void org.glassfish.jersey.netty.httpserver.JerseyServerHandler.channelRead(final ChannelHandlerContext ctx, Object msg)"
                ]
            },
            "0a867e9be9450b94b864e2b7e6f0c58d25e8f4f2": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/internal/NettyInputStream.java": [
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.read(byte[] b, int off, int len)",
                    "public int org.glassfish.jersey.netty.connector.internal.NettyInputStream.read()"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyHttp2ServerHandler.java": [
                    "private void org.glassfish.jersey.netty.httpserver.JerseyHttp2ServerHandler.onDataRead(ChannelHandlerContext ctx, Http2DataFrame data)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerHandler.java": [
                    "public void org.glassfish.jersey.netty.httpserver.JerseyServerHandler.channelRead(final ChannelHandlerContext ctx, Object msg)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "f40c630b60f018da7938d63895f5c29ef13ce0f5",
        "previous_commit": "31f6557fce90b7dade46afacfc4c97b65883bb2c",
        "date": 1653643487,
        "releases": {
            "previous": "f40c630b60f018da7938d63895f5c29ef13ce0f5",
            "next": "f40c630b60f018da7938d63895f5c29ef13ce0f5"
        },
        "commit_message": "Prevent LoggingFeature timeout on context#hasEntity for HEADERS_ONLY\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "f40c630b60f018da7938d63895f5c29ef13ce0f5": {
                "core-common/src/main/java/org/glassfish/jersey/logging/ClientLoggingFilter.java": [
                    "public void org.glassfish.jersey.logging.ClientLoggingFilter.filter(final ClientRequestContext requestContext, final ClientResponseContext responseContext)",
                    "public void org.glassfish.jersey.logging.ClientLoggingFilter.filter(final ClientRequestContext context)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/logging/ServerLoggingFilter.java": [
                    "public void org.glassfish.jersey.logging.ServerLoggingFilter.filter(final ContainerRequestContext requestContext, final ContainerResponseContext responseContext)",
                    "public void org.glassfish.jersey.logging.ServerLoggingFilter.filter(final ContainerRequestContext context)"
                ]
            },
            "31f6557fce90b7dade46afacfc4c97b65883bb2c": {
                "core-common/src/main/java/org/glassfish/jersey/logging/ClientLoggingFilter.java": [
                    "public void org.glassfish.jersey.logging.ClientLoggingFilter.filter(final ClientRequestContext requestContext, final ClientResponseContext responseContext)",
                    "public void org.glassfish.jersey.logging.ClientLoggingFilter.filter(final ClientRequestContext context)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/logging/ServerLoggingFilter.java": [
                    "public void org.glassfish.jersey.logging.ServerLoggingFilter.filter(final ContainerRequestContext requestContext, final ContainerResponseContext responseContext)",
                    "public void org.glassfish.jersey.logging.ServerLoggingFilter.filter(final ContainerRequestContext context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8126cdca659510b40dfc09a33dff12c411ae59f1",
        "previous_commit": "22aa92e8531d78c71c2a0693ce5d0174fb41bd2f",
        "date": 1714464375,
        "releases": {
            "previous": "8126cdca659510b40dfc09a33dff12c411ae59f1",
            "next": "8126cdca659510b40dfc09a33dff12c411ae59f1"
        },
        "commit_message": "Lazy Load TracingLogger to track MATCH_RESOURCE_METHOD\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "8126cdca659510b40dfc09a33dff12c411ae59f1": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/routing/UriRoutingContext.java": [
                    "public void org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchedResource(final Object resource)",
                    "public void org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchedLocator(final ResourceMethod resourceLocator)",
                    "public void org.glassfish.jersey.server.internal.routing.UriRoutingContext.setMatchedResourceMethod(final ResourceMethod resourceMethod)",
                    "public void org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchedRuntimeResource(final RuntimeResource runtimeResource)"
                ]
            },
            "22aa92e8531d78c71c2a0693ce5d0174fb41bd2f": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/routing/UriRoutingContext.java": [
                    "public void org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchedResource(final Object resource)",
                    "public void org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchedLocator(final ResourceMethod resourceLocator)",
                    "public void org.glassfish.jersey.server.internal.routing.UriRoutingContext.setMatchedResourceMethod(final ResourceMethod resourceMethod)",
                    "public void org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchedRuntimeResource(final RuntimeResource runtimeResource)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "4964825028b346adfd21bd5d3ddd7fe49cf5c222",
        "previous_commit": "6bd50c8130393aaf7806ced1f99020b10be62582",
        "date": 1679563358,
        "releases": {
            "previous": "4964825028b346adfd21bd5d3ddd7fe49cf5c222",
            "next": "4964825028b346adfd21bd5d3ddd7fe49cf5c222"
        },
        "commit_message": "Get media type fix (#5282)\n\n* Fixed caching of content_type\r\n\r\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "4964825028b346adfd21bd5d3ddd7fe49cf5c222": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/collection/GuardianStringKeyMultivaluedMap.java": [
                    "private void org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.observe(String key)",
                    "public boolean org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.isObservedAndReset(String key)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/ReaderWriter.java": [
                    "private static byte[] org.glassfish.jersey.message.internal.ReaderWriter.readAllBytes(InputStream inputStream)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/routing/MethodSelectingRouter.java": [
                    "private List<Router> org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.getMethodRouter(final RequestProcessingContext context)"
                ]
            },
            "6bd50c8130393aaf7806ced1f99020b10be62582": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/collection/GuardianStringKeyMultivaluedMap.java": [
                    "private void org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.observe(String key)",
                    "public boolean org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.isObservedAndReset(String key)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/message/internal/ReaderWriter.java": [
                    "private static byte[] org.glassfish.jersey.message.internal.ReaderWriter.readAllBytes(InputStream inputStream)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/routing/MethodSelectingRouter.java": [
                    "private List<Router> org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.getMethodRouter(final RequestProcessingContext context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "75a9755a062da0765a216ed3d188570eba3cc012",
        "previous_commit": "705144a4b10f66d783a88c851fe7ee19f3081a61",
        "date": 1713784538,
        "releases": {
            "previous": "75a9755a062da0765a216ed3d188570eba3cc012",
            "next": "75a9755a062da0765a216ed3d188570eba3cc012"
        },
        "commit_message": "Add missing metrics for cases of client errors\n\nChanges ported from micrometer-metrics: https://github.com/micrometer-metrics/micrometer/pull/4326\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "75a9755a062da0765a216ed3d188570eba3cc012": {
                "ext/micrometer/src/main/java/org/glassfish/jersey/micrometer/server/JerseyTags.java": [
                    "static String org.glassfish.jersey.micrometer.server.JerseyTags.getMatchingPattern(RequestEvent event)",
                    "public static Tag org.glassfish.jersey.micrometer.server.JerseyTags.uri(RequestEvent event)"
                ],
                "ext/micrometer/src/main/java/org/glassfish/jersey/micrometer/server/MetricsRequestEventListener.java": [
                    "public void org.glassfish.jersey.micrometer.server.MetricsRequestEventListener.onEvent(RequestEvent event)"
                ]
            },
            "705144a4b10f66d783a88c851fe7ee19f3081a61": {
                "ext/micrometer/src/main/java/org/glassfish/jersey/micrometer/server/JerseyTags.java": [
                    "static String org.glassfish.jersey.micrometer.server.JerseyTags.getMatchingPattern(RequestEvent event)",
                    "public static Tag org.glassfish.jersey.micrometer.server.JerseyTags.uri(RequestEvent event)"
                ],
                "ext/micrometer/src/main/java/org/glassfish/jersey/micrometer/server/MetricsRequestEventListener.java": [
                    "public void org.glassfish.jersey.micrometer.server.MetricsRequestEventListener.onEvent(RequestEvent event)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "73206d9f963014fe4be5d4ab97bd78f69792d08a",
        "previous_commit": "0d58cf900aab0a34a424f5b88a8874df45601082",
        "date": 1618215879,
        "releases": {
            "previous": "73206d9f963014fe4be5d4ab97bd78f69792d08a",
            "next": "73206d9f963014fe4be5d4ab97bd78f69792d08a"
        },
        "commit_message": "Adopt ASM 9.1 to support JDK 17\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "73206d9f963014fe4be5d4ab97bd78f69792d08a": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassReader.java": [
                    "private int[] jersey.red.org.objectweb.asm.ClassReader.readBootstrapMethodsAttribute(final int maxStringLength)",
                    "public void jersey.red.org.objectweb.asm.ClassReader.accept( final ClassVisitor classVisitor, final Attribute[] attributePrototypes, final int parsingOptions)",
                    "private void jersey.red.org.objectweb.asm.ClassReader.readCode( final MethodVisitor methodVisitor, final Context context, final int codeOffset)"
                ]
            },
            "0d58cf900aab0a34a424f5b88a8874df45601082": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassReader.java": [
                    "private int[] jersey.red.org.objectweb.asm.ClassReader.readBootstrapMethodsAttribute(final int maxStringLength)",
                    "public void jersey.red.org.objectweb.asm.ClassReader.accept( final ClassVisitor classVisitor, final Attribute[] attributePrototypes, final int parsingOptions)",
                    "private void jersey.red.org.objectweb.asm.ClassReader.readCode( final MethodVisitor methodVisitor, final Context context, final int codeOffset)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8a63706db096dcadd0e13195515c56b9cb394279",
        "previous_commit": "376e94db8db2b78f336dcb6f83b1baf686f5a72d",
        "date": 1695638954,
        "releases": {
            "previous": "8a63706db096dcadd0e13195515c56b9cb394279",
            "next": "8a63706db096dcadd0e13195515c56b9cb394279"
        },
        "commit_message": "Netty Expect:100-continue feature support (#5412)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "8a63706db096dcadd0e13195515c56b9cb394279": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerInitializer.java": [
                    "private void org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.configureClearText(SocketChannel ch)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            },
            "376e94db8db2b78f336dcb6f83b1baf686f5a72d": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)"
                ],
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/JerseyServerInitializer.java": [
                    "private void org.glassfish.jersey.netty.httpserver.JerseyServerInitializer.configureClearText(SocketChannel ch)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "9e8a293c41cee6b4626a77889cdee5f66bf10cb7",
        "previous_commit": "02a869f992098d108e2336d26528cea086f1b5a8",
        "date": 1701936147,
        "releases": {
            "previous": "9e8a293c41cee6b4626a77889cdee5f66bf10cb7",
            "next": "9e8a293c41cee6b4626a77889cdee5f66bf10cb7"
        },
        "commit_message": "Catch Exception\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "9e8a293c41cee6b4626a77889cdee5f66bf10cb7": {
                "core-server/src/main/java/org/glassfish/jersey/server/ChunkedOutput.java": [
                    "protected void org.glassfish.jersey.server.ChunkedOutput<T>.flushQueue()",
                    "public Void org.glassfish.jersey.server.ChunkedOutput<T>.call()"
                ],
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseyEventSink.java": [
                    "public CompletionStage<?> org.glassfish.jersey.media.sse.internal.JerseyEventSink.send(OutboundSseEvent event)"
                ]
            },
            "02a869f992098d108e2336d26528cea086f1b5a8": {
                "core-server/src/main/java/org/glassfish/jersey/server/ChunkedOutput.java": [
                    "protected void org.glassfish.jersey.server.ChunkedOutput<T>.flushQueue()",
                    "public Void org.glassfish.jersey.server.ChunkedOutput<T>.call()"
                ],
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseyEventSink.java": [
                    "public CompletionStage<?> org.glassfish.jersey.media.sse.internal.JerseyEventSink.send(OutboundSseEvent event)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "532dd1efe98894b9868d450c03df5cd46ad9c194",
        "previous_commit": "8c9acd65357993cf1fd313fe103d182171e7df17",
        "date": 1625759654,
        "releases": {
            "previous": "532dd1efe98894b9868d450c03df5cd46ad9c194",
            "next": "532dd1efe98894b9868d450c03df5cd46ad9c194"
        },
        "commit_message": "Add support for custom parameter types with `Optional<T>`\n\nCloses #4798\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "532dd1efe98894b9868d450c03df5cd46ad9c194": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverterConfigurator.java": [
                    "public void org.glassfish.jersey.internal.inject.ParamConverterConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverters.java": [
                    "public <T> ParamConverter<T> org.glassfish.jersey.internal.inject.ParamConverters.getConverter(Class<T> rawType, Type genericType, Annotation[] annotations)",
                    "public T org.glassfish.jersey.internal.inject.ParamConverters.fromString(String value)"
                ]
            },
            "8c9acd65357993cf1fd313fe103d182171e7df17": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverterConfigurator.java": [
                    "public void org.glassfish.jersey.internal.inject.ParamConverterConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverters.java": [
                    "public <T> ParamConverter<T> org.glassfish.jersey.internal.inject.ParamConverters.getConverter(Class<T> rawType, Type genericType, Annotation[] annotations)",
                    "public T org.glassfish.jersey.internal.inject.ParamConverters.fromString(String value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "52a0dcc1d130a734f66106a3fe5cba5c42aecfa6",
        "previous_commit": "02f2cb6bbccb8c19354aeb57a62b8137d95c1fa6",
        "date": 1529333447,
        "releases": {
            "previous": "52a0dcc1d130a734f66106a3fe5cba5c42aecfa6",
            "next": "52a0dcc1d130a734f66106a3fe5cba5c42aecfa6"
        },
        "commit_message": "Properly close the Apache response so that connections can be reused\n\nSigned-off-by: agherardi <alessandro.gherardi@yahoo.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "52a0dcc1d130a734f66106a3fe5cba5c42aecfa6": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "private static InputStream org.glassfish.jersey.apache.connector.ApacheConnector.getInputStream(final CloseableHttpResponse response)",
                    "public ClientResponse org.glassfish.jersey.apache.connector.ApacheConnector.apply(final ClientRequest clientRequest)",
                    "public void org.glassfish.jersey.apache.connector.ApacheConnector.close()"
                ]
            },
            "02f2cb6bbccb8c19354aeb57a62b8137d95c1fa6": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "private static InputStream org.glassfish.jersey.apache.connector.ApacheConnector.getInputStream(final CloseableHttpResponse response)",
                    "public ClientResponse org.glassfish.jersey.apache.connector.ApacheConnector.apply(final ClientRequest clientRequest)",
                    "public void org.glassfish.jersey.apache.connector.ApacheConnector.close()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "31f6557fce90b7dade46afacfc4c97b65883bb2c",
        "previous_commit": "c0ed81dd7ffa686d9181f86c9e1469ff6312f038",
        "date": 1652874870,
        "releases": {
            "previous": "31f6557fce90b7dade46afacfc4c97b65883bb2c",
            "next": "31f6557fce90b7dade46afacfc4c97b65883bb2c"
        },
        "commit_message": "Adopt ASM 9.3\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "31f6557fce90b7dade46afacfc4c97b65883bb2c": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ByteVector.java": [
                    "private void jersey.red.org.objectweb.asm.ByteVector.enlarge(final int size)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassReader.java": [
                    "private static byte[] jersey.red.org.objectweb.asm.ClassReader.readStream(final InputStream inputStream, final boolean close)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Type.java": [
                    "private static Type jersey.red.org.objectweb.asm.Type.getTypeInternal( final String descriptorBuffer, final int descriptorBegin, final int descriptorEnd)"
                ]
            },
            "c0ed81dd7ffa686d9181f86c9e1469ff6312f038": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ByteVector.java": [
                    "private void jersey.red.org.objectweb.asm.ByteVector.enlarge(final int size)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassReader.java": [
                    "private static byte[] jersey.red.org.objectweb.asm.ClassReader.readStream(final InputStream inputStream, final boolean close)"
                ],
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/Type.java": [
                    "private static Type jersey.red.org.objectweb.asm.Type.getTypeInternal( final String descriptorBuffer, final int descriptorBegin, final int descriptorEnd)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "007f574b76bfa908a6839dad892443da4b5b7c11",
        "previous_commit": "571b767a41b442d1a4ba47a2e7ca3087f6e18c18",
        "date": 1560810962,
        "releases": {
            "previous": "007f574b76bfa908a6839dad892443da4b5b7c11",
            "next": "007f574b76bfa908a6839dad892443da4b5b7c11"
        },
        "commit_message": "Fix typo\n\nSigned-off-by: Issam El-atif <issam.elatif@gmail.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "007f574b76bfa908a6839dad892443da4b5b7c11": {
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/internal/ApplicationDescription.java": [
                    "public ExternalGrammar org.glassfish.jersey.server.wadl.internal.ApplicationDescription.getExternalGrammar(String path)",
                    "public QName org.glassfish.jersey.server.wadl.internal.ApplicationDescription.resolve(Class type)",
                    "public Set<String> org.glassfish.jersey.server.wadl.internal.ApplicationDescription.getExternalMetadataKeys()"
                ]
            },
            "571b767a41b442d1a4ba47a2e7ca3087f6e18c18": {
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/internal/ApplicationDescription.java": [
                    "public ExternalGrammar org.glassfish.jersey.server.wadl.internal.ApplicationDescription.getExternalGrammar(String path)",
                    "public QName org.glassfish.jersey.server.wadl.internal.ApplicationDescription.resolve(Class type)",
                    "public Set<String> org.glassfish.jersey.server.wadl.internal.ApplicationDescription.getExternalMetadataKeys()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "2445c46611d82bbccc28fe9087b1818a90ba8f9e",
        "previous_commit": "f6e849b086a3e057db0042f89279ba8cfb9f4c36",
        "date": 1684265499,
        "releases": {
            "previous": "2445c46611d82bbccc28fe9087b1818a90ba8f9e",
            "next": "2445c46611d82bbccc28fe9087b1818a90ba8f9e"
        },
        "commit_message": "Better support inheritance in Resource Methods\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "2445c46611d82bbccc28fe9087b1818a90ba8f9e": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/ReflectionHelper.java": [
                    "public static boolean org.glassfish.jersey.internal.util.ReflectionHelper.isGetter(final Method method)",
                    "public static boolean org.glassfish.jersey.internal.util.ReflectionHelper.isSetter(final Method method)",
                    "public static PrivilegedAction org.glassfish.jersey.internal.util.ReflectionHelper.setAccessibleMethodPA(final Method m)"
                ]
            },
            "f6e849b086a3e057db0042f89279ba8cfb9f4c36": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/ReflectionHelper.java": [
                    "public static boolean org.glassfish.jersey.internal.util.ReflectionHelper.isGetter(final Method method)",
                    "public static boolean org.glassfish.jersey.internal.util.ReflectionHelper.isSetter(final Method method)",
                    "public static PrivilegedAction org.glassfish.jersey.internal.util.ReflectionHelper.setAccessibleMethodPA(final Method m)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "21e8fafc34829c41e2b0bef27ddc2f90b09704aa",
        "previous_commit": "fad4061c9fb450da199b5a89434af645723f0e8c",
        "date": 1607347870,
        "releases": {
            "previous": "21e8fafc34829c41e2b0bef27ddc2f90b09704aa",
            "next": "21e8fafc34829c41e2b0bef27ddc2f90b09704aa"
        },
        "commit_message": "Enable CompletionStage unwrap in MBW\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "21e8fafc34829c41e2b0bef27ddc2f90b09704aa": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java": [
                    "public <T> T org.glassfish.jersey.client.ClientRequest.resolveProperty(final String name, final T defaultValue)",
                    "public <T> T org.glassfish.jersey.client.ClientRequest.resolveProperty(final String name, final Class<T> type)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/model/ResourceMethodInvoker.java": [
                    "private Response org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(final RequestProcessingContext context, final Object resource)"
                ]
            },
            "fad4061c9fb450da199b5a89434af645723f0e8c": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java": [
                    "public <T> T org.glassfish.jersey.client.ClientRequest.resolveProperty(final String name, final T defaultValue)",
                    "public <T> T org.glassfish.jersey.client.ClientRequest.resolveProperty(final String name, final Class<T> type)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/model/ResourceMethodInvoker.java": [
                    "private Response org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(final RequestProcessingContext context, final Object resource)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "b38e6e885b7d793ee99018dc229be2963dd9f2fa",
        "previous_commit": "b99f43557542a9b7395649b54b9a0bf1d7e695fd",
        "date": 1567782473,
        "releases": {
            "previous": "b38e6e885b7d793ee99018dc229be2963dd9f2fa",
            "next": "b38e6e885b7d793ee99018dc229be2963dd9f2fa"
        },
        "commit_message": "Fixes #4239 MediaType in method parameter not overridden by annotation (#4243)\n\n* Fixes #4239 MediaType in method parameter not overridden by annotation\r\n\r\nSigned-off-by: David Kral <david.k.kral@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "b38e6e885b7d793ee99018dc229be2963dd9f2fa": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private MultivaluedMap<String, Object> org.glassfish.jersey.microprofile.restclient.MethodModel.addCustomHeaders(Object[] args)",
                    "Object org.glassfish.jersey.microprofile.restclient.MethodModel.invokeMethod(WebTarget classLevelTarget, Method method, Object[] args)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientProducer.java": [
                    "private InputStream org.glassfish.jersey.microprofile.restclient.RestClientProducer.locationToStream(String location)"
                ]
            },
            "b99f43557542a9b7395649b54b9a0bf1d7e695fd": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private MultivaluedMap<String, Object> org.glassfish.jersey.microprofile.restclient.MethodModel.addCustomHeaders(Object[] args)",
                    "Object org.glassfish.jersey.microprofile.restclient.MethodModel.invokeMethod(WebTarget classLevelTarget, Method method, Object[] args)"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientProducer.java": [
                    "private InputStream org.glassfish.jersey.microprofile.restclient.RestClientProducer.locationToStream(String location)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "aac1cac48afc4aa7dd516283a1f1005a1810a8be",
        "previous_commit": "a83d288f3952b92a6a713ffc74ac22165a973fbd",
        "date": 1658406312,
        "releases": {
            "previous": "aac1cac48afc4aa7dd516283a1f1005a1810a8be",
            "next": "aac1cac48afc4aa7dd516283a1f1005a1810a8be"
        },
        "commit_message": "Move Proxy parsing logic from connectors to a common class\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "aac1cac48afc4aa7dd516283a1f1005a1810a8be": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            },
            "a83d288f3952b92a6a713ffc74ac22165a973fbd": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "cbda4fce14f61b33fe96c39e3e1b252be00ce3f3",
        "previous_commit": "065584beed8787b86d1153c8262802d2f133ce34",
        "date": 1697029615,
        "releases": {
            "previous": "cbda4fce14f61b33fe96c39e3e1b252be00ce3f3",
            "next": "cbda4fce14f61b33fe96c39e3e1b252be00ce3f3"
        },
        "commit_message": "Filter headers for netty HTTP redirect and CONNECT requests\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "cbda4fce14f61b33fe96c39e3e1b252be00ce3f3": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "protected void org.glassfish.jersey.netty.connector.JerseyClientHandler.notifyResponse()"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "private static ProxyHandler org.glassfish.jersey.netty.connector.NettyConnector.createProxyHandler(ClientRequest jerseyRequest, SocketAddress proxyAddr, String userName, String password, long connectTimeout)"
                ]
            },
            "065584beed8787b86d1153c8262802d2f133ce34": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "protected void org.glassfish.jersey.netty.connector.JerseyClientHandler.notifyResponse()"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "private static ProxyHandler org.glassfish.jersey.netty.connector.NettyConnector.createProxyHandler(ClientRequest jerseyRequest, SocketAddress proxyAddr, String userName, String password, long connectTimeout)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "809c7ebe6ed99fe5275aa2c161aeecdba7e44b45",
        "previous_commit": "4ca1e78e7a6ea4c3d24a7b39d7b1ad9d907db01c",
        "date": 1709749434,
        "releases": {
            "previous": "809c7ebe6ed99fe5275aa2c161aeecdba7e44b45",
            "next": "809c7ebe6ed99fe5275aa2c161aeecdba7e44b45"
        },
        "commit_message": "Add a logger for a request notifying Jersey Container is involved\nMessage copied from Grizzly\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "809c7ebe6ed99fe5275aa2c161aeecdba7e44b45": {
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java": [
                    "private void org.glassfish.jersey.servlet.ServletContainer.doFilter(final HttpServletRequest request, final HttpServletResponse response, final FilterChain chain, final String requestURI, final String servletPath, final String queryString)",
                    "protected void org.glassfish.jersey.servlet.ServletContainer.service(final HttpServletRequest request, final HttpServletResponse response)"
                ],
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainer.java": [
                    "public void org.glassfish.jersey.jetty.JettyHttpContainer.handle(final String target, final Request request, final HttpServletRequest httpServletRequest, final HttpServletResponse httpServletResponse)"
                ]
            },
            "4ca1e78e7a6ea4c3d24a7b39d7b1ad9d907db01c": {
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java": [
                    "private void org.glassfish.jersey.servlet.ServletContainer.doFilter(final HttpServletRequest request, final HttpServletResponse response, final FilterChain chain, final String requestURI, final String servletPath, final String queryString)",
                    "protected void org.glassfish.jersey.servlet.ServletContainer.service(final HttpServletRequest request, final HttpServletResponse response)"
                ],
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainer.java": [
                    "public void org.glassfish.jersey.jetty.JettyHttpContainer.handle(final String target, final Request request, final HttpServletRequest httpServletRequest, final HttpServletResponse httpServletResponse)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "3381fe05ae4cd123a5c45f368e289bf0e06e59d7",
        "previous_commit": "2eacfcc4eb498ea93ca9fd9912aa8a67b800ac20",
        "date": 1683202133,
        "releases": {
            "previous": "3381fe05ae4cd123a5c45f368e289bf0e06e59d7",
            "next": "3381fe05ae4cd123a5c45f368e289bf0e06e59d7"
        },
        "commit_message": "Support NettyConnector & RequestEntityProcessing.BUFFERED\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "3381fe05ae4cd123a5c45f368e289bf0e06e59d7": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "public void org.glassfish.jersey.netty.connector.NettyConnector.run()",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "public OutputStream org.glassfish.jersey.netty.connector.NettyConnector.getOutputStream(int contentLength)"
                ]
            },
            "2eacfcc4eb498ea93ca9fd9912aa8a67b800ac20": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "public void org.glassfish.jersey.netty.connector.NettyConnector.run()",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "public OutputStream org.glassfish.jersey.netty.connector.NettyConnector.getOutputStream(int contentLength)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "f5caafb221ce62a74f9ac16b565c1fd995645286",
        "previous_commit": "a73db94d1afe5034ccbf8ebc61ddff61971c4b4c",
        "date": 1600935951,
        "releases": {
            "previous": "f5caafb221ce62a74f9ac16b565c1fd995645286",
            "next": "f5caafb221ce62a74f9ac16b565c1fd995645286"
        },
        "commit_message": "TimeOut property for Netty Connector\nMaxConnections for Netty Connector\nMaxConnectionsTotal for NettyConnector\n\nFixes #4548\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "f5caafb221ce62a74f9ac16b565c1fd995645286": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelInactive(ChannelHandlerContext ctx)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)",
                    "public ClientResponse org.glassfish.jersey.netty.connector.NettyConnector.apply(ClientRequest jerseyRequest)"
                ]
            },
            "a73db94d1afe5034ccbf8ebc61ddff61971c4b4c": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelInactive(ChannelHandlerContext ctx)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)",
                    "public ClientResponse org.glassfish.jersey.netty.connector.NettyConnector.apply(ClientRequest jerseyRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "6510bb901d121b93e2b72789160beae23d2cca12",
        "previous_commit": "cfa1734cfc1f8bf285f539517ac66829928c231c",
        "date": 1574689799,
        "releases": {
            "previous": "6510bb901d121b93e2b72789160beae23d2cca12",
            "next": "6510bb901d121b93e2b72789160beae23d2cca12"
        },
        "commit_message": "new InvocationBuilderListener SPI (#4313)\n\n* new InvocationBuilderListener SPI\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "6510bb901d121b93e2b72789160beae23d2cca12": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyWebTarget.java": [
                    "public JerseyInvocation.Builder org.glassfish.jersey.client.JerseyWebTarget.request(String... acceptedResponseTypes)",
                    "public JerseyInvocation.Builder org.glassfish.jersey.client.JerseyWebTarget.request(MediaType... acceptedResponseTypes)",
                    "public JerseyInvocation.Builder org.glassfish.jersey.client.JerseyWebTarget.request()"
                ]
            },
            "cfa1734cfc1f8bf285f539517ac66829928c231c": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyWebTarget.java": [
                    "public JerseyInvocation.Builder org.glassfish.jersey.client.JerseyWebTarget.request(String... acceptedResponseTypes)",
                    "public JerseyInvocation.Builder org.glassfish.jersey.client.JerseyWebTarget.request(MediaType... acceptedResponseTypes)",
                    "public JerseyInvocation.Builder org.glassfish.jersey.client.JerseyWebTarget.request()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "b06385c0628cacd5aa179a3079ca3d6daf89ff97",
        "previous_commit": "0c2f28ae96bf1f89f944b9a7d901e34861d85633",
        "date": 1666727661,
        "releases": {
            "previous": "b06385c0628cacd5aa179a3079ca3d6daf89ff97",
            "next": "b06385c0628cacd5aa179a3079ca3d6daf89ff97"
        },
        "commit_message": "Better @Inject support.  For servlet classes, a qualifier is used.\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "b06385c0628cacd5aa179a3079ca3d6daf89ff97": {
                "ext/cdi/jersey-cdi-rs-inject/src/main/java/org/glassfish/jersey/ext/cdi1x/inject/internal/InjectExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.inject.internal.InjectExtension.beforeDiscoveryObserver(@Observes final BeforeBeanDiscovery bbf, final BeanManager beanManager)",
                    "private static Set<Class<?>> org.glassfish.jersey.ext.cdi1x.inject.internal.InjectExtension.sumNonJerseyBoundInjectables()"
                ],
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "public boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.equals(Object o)"
                ]
            },
            "0c2f28ae96bf1f89f944b9a7d901e34861d85633": {
                "ext/cdi/jersey-cdi-rs-inject/src/main/java/org/glassfish/jersey/ext/cdi1x/inject/internal/InjectExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.inject.internal.InjectExtension.beforeDiscoveryObserver(@Observes final BeforeBeanDiscovery bbf, final BeanManager beanManager)",
                    "private static Set<Class<?>> org.glassfish.jersey.ext.cdi1x.inject.internal.InjectExtension.sumNonJerseyBoundInjectables()"
                ],
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "public boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.equals(Object o)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "bc67ee3a47b2da87fe8ba6aab11bcd82d458b278",
        "previous_commit": "2c5d5b6ed93240b5eb9a9592a46be66313a1006d",
        "date": 1576245098,
        "releases": {
            "previous": "bc67ee3a47b2da87fe8ba6aab11bcd82d458b278",
            "next": "bc67ee3a47b2da87fe8ba6aab11bcd82d458b278"
        },
        "commit_message": "ConnectorProvider support added to mp rest client (#4347)\n\n* ConnectorProvider support added to mp rest client\r\n\r\nSigned-off-by: David Kral <david.k.kral@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "bc67ee3a47b2da87fe8ba6aab11bcd82d458b278": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "private void org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.registerCustomProvider(Object instance, Integer priority)",
                    "private boolean org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.isSupportedCustomProvider(Class<?> providerClass)",
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ]
            },
            "2c5d5b6ed93240b5eb9a9592a46be66313a1006d": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "private void org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.registerCustomProvider(Object instance, Integer priority)",
                    "private boolean org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.isSupportedCustomProvider(Class<?> providerClass)",
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "29913b90f63a29bfdd35bf465c553e07b0a6c99c",
        "previous_commit": "51abc78ecf8e67bbb53dff821e95f66d0e981ae6",
        "date": 1576598206,
        "releases": {
            "previous": "29913b90f63a29bfdd35bf465c553e07b0a6c99c",
            "next": "29913b90f63a29bfdd35bf465c553e07b0a6c99c"
        },
        "commit_message": "Prevent HK2 AbstractBinder from being configured twice.\nRevert the change that introduced BinderConfigurationFactory SPI.\nAdded possibility to register HK2 AbstractBinder class along with the instance option.\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "29913b90f63a29bfdd35bf465c553e07b0a6c99c": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "public void org.glassfish.jersey.model.internal.CommonConfig.configureMetaProviders(InjectionManager injectionManager, ManagedObjectsFinalizer finalizer)"
                ],
                "inject/hk2/src/main/java/org/glassfish/jersey/inject/hk2/DelayedHk2InjectionManager.java": [
                    "public void org.glassfish.jersey.inject.hk2.DelayedHk2InjectionManager.register(Object provider)"
                ],
                "inject/hk2/src/main/java/org/glassfish/jersey/inject/hk2/ImmediateHk2InjectionManager.java": [
                    "public void org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.register(Object provider)"
                ]
            },
            "51abc78ecf8e67bbb53dff821e95f66d0e981ae6": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "public void org.glassfish.jersey.model.internal.CommonConfig.configureMetaProviders(InjectionManager injectionManager, ManagedObjectsFinalizer finalizer)"
                ],
                "inject/hk2/src/main/java/org/glassfish/jersey/inject/hk2/DelayedHk2InjectionManager.java": [
                    "public void org.glassfish.jersey.inject.hk2.DelayedHk2InjectionManager.register(Object provider)"
                ],
                "inject/hk2/src/main/java/org/glassfish/jersey/inject/hk2/ImmediateHk2InjectionManager.java": [
                    "public void org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.register(Object provider)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "01b88feb1d160e5f9877c323b3917f7d0878c1d8",
        "previous_commit": "1b93b50750f2147808d4e78c140f0eb16256d9fa",
        "date": 1650876635,
        "releases": {
            "previous": "01b88feb1d160e5f9877c323b3917f7d0878c1d8",
            "next": "01b88feb1d160e5f9877c323b3917f7d0878c1d8"
        },
        "commit_message": "Release MessageBodyWorkers when Response gets closed. (#5039)\n\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "01b88feb1d160e5f9877c323b3917f7d0878c1d8": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InboundMessageContext.java": [
                    "public void org.glassfish.jersey.message.internal.InboundMessageContext.close()",
                    "public MessageBodyWorkers org.glassfish.jersey.message.internal.InboundMessageContext.getWorkers()"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/ContainerResponse.java": [
                    "public void org.glassfish.jersey.server.ContainerResponse.close()"
                ]
            },
            "1b93b50750f2147808d4e78c140f0eb16256d9fa": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InboundMessageContext.java": [
                    "public void org.glassfish.jersey.message.internal.InboundMessageContext.close()",
                    "public MessageBodyWorkers org.glassfish.jersey.message.internal.InboundMessageContext.getWorkers()"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/ContainerResponse.java": [
                    "public void org.glassfish.jersey.server.ContainerResponse.close()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "5c4303b077f2cbe566d205996ada18ecf59faf86",
        "previous_commit": "6c64522d67564670185161af5a38b997e87b5750",
        "date": 1585306140,
        "releases": {
            "previous": "5c4303b077f2cbe566d205996ada18ecf59faf86",
            "next": "5c4303b077f2cbe566d205996ada18ecf59faf86"
        },
        "commit_message": "Use request scope ClientProperties.READ_TIMEOUT in Jetty && Netty (#4415)\n\nFixes 4405\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "5c4303b077f2cbe566d205996ada18ecf59faf86": {
                "connectors/jetty-connector/src/main/java/org/glassfish/jersey/jetty/connector/JettyConnector.java": [
                    "private Request org.glassfish.jersey.jetty.connector.JettyConnector.translateRequest(final ClientRequest clientRequest)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)",
                    "public ClientResponse org.glassfish.jersey.netty.connector.NettyConnector.apply(ClientRequest jerseyRequest)"
                ]
            },
            "6c64522d67564670185161af5a38b997e87b5750": {
                "connectors/jetty-connector/src/main/java/org/glassfish/jersey/jetty/connector/JettyConnector.java": [
                    "private Request org.glassfish.jersey.jetty.connector.JettyConnector.translateRequest(final ClientRequest clientRequest)"
                ],
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)",
                    "public ClientResponse org.glassfish.jersey.netty.connector.NettyConnector.apply(ClientRequest jerseyRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "100db1369e72cb6d6c712567a9a9231da77b0249",
        "previous_commit": "7aebbcfc67a99c06cc170736b9ebe203ab922b80",
        "date": 1544451286,
        "releases": {
            "previous": "100db1369e72cb6d6c712567a9a9231da77b0249",
            "next": "100db1369e72cb6d6c712567a9a9231da77b0249"
        },
        "commit_message": "Uptake Jakarta Dependencies: istack commons, GF, Copyright plugin & mimepull (#4002)\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "100db1369e72cb6d6c712567a9a9231da77b0249": {
                "core-common/src/main/java/org/glassfish/jersey/internal/l10n/LocalizableMessage.java": [
                    "public Object[] org.glassfish.jersey.internal.l10n.LocalizableMessage.getArguments()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/l10n/LocalizableMessageFactory.java": [
                    "public Localizable org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(String key, Object... args)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/l10n/Localizer.java": [
                    "public String org.glassfish.jersey.internal.l10n.Localizer.localize(Localizable l)"
                ]
            },
            "7aebbcfc67a99c06cc170736b9ebe203ab922b80": {
                "core-common/src/main/java/org/glassfish/jersey/internal/l10n/LocalizableMessage.java": [
                    "public Object[] org.glassfish.jersey.internal.l10n.LocalizableMessage.getArguments()"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/l10n/LocalizableMessageFactory.java": [
                    "public Localizable org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(String key, Object... args)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/l10n/Localizer.java": [
                    "public String org.glassfish.jersey.internal.l10n.Localizer.localize(Localizable l)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "181fd5dbef07c745fc2ac0006802c651f13bfccd",
        "previous_commit": "02f2cb6bbccb8c19354aeb57a62b8137d95c1fa6",
        "date": 1529507627,
        "releases": {
            "previous": "181fd5dbef07c745fc2ac0006802c651f13bfccd",
            "next": "181fd5dbef07c745fc2ac0006802c651f13bfccd"
        },
        "commit_message": "Exclude query parameters when caching authentication info\n\nSigned-off-by: agherardi <alessandro.gherardi@yahoo.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "181fd5dbef07c745fc2ac0006802c651f13bfccd": {
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/DigestAuthenticator.java": [
                    "public boolean org.glassfish.jersey.client.authentication.DigestAuthenticator.filterResponse(final ClientRequestContext request, final ClientResponseContext response)",
                    "boolean org.glassfish.jersey.client.authentication.DigestAuthenticator.filterRequest(final ClientRequestContext request)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/HttpAuthenticationFilter.java": [
                    "private String org.glassfish.jersey.client.authentication.HttpAuthenticationFilter.getCacheKey(ClientRequestContext request)"
                ]
            },
            "02f2cb6bbccb8c19354aeb57a62b8137d95c1fa6": {
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/DigestAuthenticator.java": [
                    "public boolean org.glassfish.jersey.client.authentication.DigestAuthenticator.filterResponse(final ClientRequestContext request, final ClientResponseContext response)",
                    "boolean org.glassfish.jersey.client.authentication.DigestAuthenticator.filterRequest(final ClientRequestContext request)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/HttpAuthenticationFilter.java": [
                    "private String org.glassfish.jersey.client.authentication.HttpAuthenticationFilter.getCacheKey(ClientRequestContext request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "599a54d8a8ad3ec32c364c5e821258f702d69172",
        "previous_commit": "44c05a5d32d84b3ee41f9015554eda92d2aa6e31",
        "date": 1560196629,
        "releases": {
            "previous": "599a54d8a8ad3ec32c364c5e821258f702d69172",
            "next": "599a54d8a8ad3ec32c364c5e821258f702d69172"
        },
        "commit_message": "PAYARA-2956 - Fix warnings when checking CDI bean is JAX-RS resource (#3906)\n\nSigned-off-by: arjantijms <arjan.tijms@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "599a54d8a8ad3ec32c364c5e821258f702d69172": {
                "core-server/src/main/java/org/glassfish/jersey/server/model/IntrospectionModeller.java": [
                    "private void org.glassfish.jersey.server.model.IntrospectionModeller.checkResourceClassFields(final boolean encodedFlag, boolean isInSingleton, Collection<Parameter> injectableParameters)",
                    "private void org.glassfish.jersey.server.model.IntrospectionModeller.checkResourceClassSetters(final MethodList methodList, final boolean encodedFlag, Collection<Parameter> injectableParameters)"
                ]
            },
            "44c05a5d32d84b3ee41f9015554eda92d2aa6e31": {
                "core-server/src/main/java/org/glassfish/jersey/server/model/IntrospectionModeller.java": [
                    "private void org.glassfish.jersey.server.model.IntrospectionModeller.checkResourceClassFields(final boolean encodedFlag, boolean isInSingleton, Collection<Parameter> injectableParameters)",
                    "private void org.glassfish.jersey.server.model.IntrospectionModeller.checkResourceClassSetters(final MethodList methodList, final boolean encodedFlag, Collection<Parameter> injectableParameters)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "b7f355ea86e9cb2cbfb7f072fd5196f4b565205d",
        "previous_commit": "d29b2dab091dc7fcc6dad27056390651afd0e013",
        "date": 1715689393,
        "releases": {
            "previous": "b7f355ea86e9cb2cbfb7f072fd5196f4b565205d",
            "next": "b7f355ea86e9cb2cbfb7f072fd5196f4b565205d"
        },
        "commit_message": "Allow having multiple annotations for multipart endpoint with @FormDataParam in any order (#5639)\n\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "b7f355ea86e9cb2cbfb7f072fd5196f4b565205d": {
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/internal/FormDataParamValueParamProvider.java": [
                    "protected Function<ContainerRequest, ?> org.glassfish.jersey.media.multipart.internal.FormDataParamValueParamProvider.createValueProvider(Parameter parameter)",
                    "public Object org.glassfish.jersey.media.multipart.internal.FormDataParamValueParamProvider.apply(ContainerRequest request)"
                ]
            },
            "d29b2dab091dc7fcc6dad27056390651afd0e013": {
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/internal/FormDataParamValueParamProvider.java": [
                    "protected Function<ContainerRequest, ?> org.glassfish.jersey.media.multipart.internal.FormDataParamValueParamProvider.createValueProvider(Parameter parameter)",
                    "public Object org.glassfish.jersey.media.multipart.internal.FormDataParamValueParamProvider.apply(ContainerRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "3035f37f1092e5f8ce41d4d5a746f24cfd41b887",
        "previous_commit": "81d03fcbe8fb3629e82f00925b6264829e2fb238",
        "date": 1692116870,
        "releases": {
            "previous": "3035f37f1092e5f8ce41d4d5a746f24cfd41b887",
            "next": "3035f37f1092e5f8ce41d4d5a746f24cfd41b887"
        },
        "commit_message": "Issue #3493 - backport BeanParam support from 3.x\n\nCo-Authored-By: Richard Obersheimer <richard.obersheimer@anderscore.com>\nSigned-off-by: Denis Karabetsky <karabetsky@gmail.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "3035f37f1092e5f8ce41d4d5a746f24cfd41b887": {
                "ext/proxy-client/src/main/java/org/glassfish/jersey/client/proxy/WebResourceFactory.java": [
                    "public Object org.glassfish.jersey.client.proxy.WebResourceFactory.invoke(final Object proxy, final Method method, final Object[] args)",
                    "public static <C> C org.glassfish.jersey.client.proxy.WebResourceFactory.newResource(final Class<C> resourceInterface, final WebTarget target)"
                ]
            },
            "81d03fcbe8fb3629e82f00925b6264829e2fb238": {
                "ext/proxy-client/src/main/java/org/glassfish/jersey/client/proxy/WebResourceFactory.java": [
                    "public Object org.glassfish.jersey.client.proxy.WebResourceFactory.invoke(final Object proxy, final Method method, final Object[] args)",
                    "public static <C> C org.glassfish.jersey.client.proxy.WebResourceFactory.newResource(final Class<C> resourceInterface, final WebTarget target)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "f9a8431854f87fa652576a4cc32ad7e26c145afe",
        "previous_commit": "519879cc1bcd50c0afac0d0dd89916541030414e",
        "date": 1588171245,
        "releases": {
            "previous": "f9a8431854f87fa652576a4cc32ad7e26c145afe",
            "next": "f9a8431854f87fa652576a4cc32ad7e26c145afe"
        },
        "commit_message": "When no JAX-B RI on CP warn and disable WADL\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "f9a8431854f87fa652576a4cc32ad7e26c145afe": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/MessagingBinders.java": [
                    "private void org.glassfish.jersey.message.internal.MessagingBinders.bindToBinder(AbstractBinder binder)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/WadlFeature.java": [
                    "public boolean org.glassfish.jersey.server.wadl.WadlFeature.configure(FeatureContext context)"
                ]
            },
            "519879cc1bcd50c0afac0d0dd89916541030414e": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/MessagingBinders.java": [
                    "private void org.glassfish.jersey.message.internal.MessagingBinders.bindToBinder(AbstractBinder binder)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/WadlFeature.java": [
                    "public boolean org.glassfish.jersey.server.wadl.WadlFeature.configure(FeatureContext context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e2994ff60b22daaf992d29208c5abc902aa91e33",
        "previous_commit": "73a775de0394f04f9c999eef2f2b8ce710ff0965",
        "date": 1716360377,
        "releases": {
            "previous": "e2994ff60b22daaf992d29208c5abc902aa91e33",
            "next": "e2994ff60b22daaf992d29208c5abc902aa91e33"
        },
        "commit_message": "MAX_HEADER_SIZE for the Netty connector (#5649)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e2994ff60b22daaf992d29208c5abc902aa91e33": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)"
                ]
            },
            "73a775de0394f04f9c999eef2f2b8ce710ff0965": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "728e7538b9c348c45c6611e22e8b42eb4a294eda",
        "previous_commit": "2df2133a4e828d74d99fbebb24ab84674c924dcc",
        "date": 1611301077,
        "releases": {
            "previous": "728e7538b9c348c45c6611e22e8b42eb4a294eda",
            "next": "728e7538b9c348c45c6611e22e8b42eb4a294eda"
        },
        "commit_message": "Add a ParamConverterProvider for java.util.Optional parameters\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "728e7538b9c348c45c6611e22e8b42eb4a294eda": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverters.java": [
                    "public String org.glassfish.jersey.internal.inject.ParamConverters.toString(T value)",
                    "public T org.glassfish.jersey.internal.inject.ParamConverters.fromString(String value)"
                ]
            },
            "2df2133a4e828d74d99fbebb24ab84674c924dcc": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverters.java": [
                    "public String org.glassfish.jersey.internal.inject.ParamConverters.toString(T value)",
                    "public T org.glassfish.jersey.internal.inject.ParamConverters.fromString(String value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "01cb90387058204ed40430a84e2710e07297296c",
        "previous_commit": "1719b46305879cef401028b1a9601ac35d096bbb",
        "date": 1561384224,
        "releases": {
            "previous": "01cb90387058204ed40430a84e2710e07297296c",
            "next": "01cb90387058204ed40430a84e2710e07297296c"
        },
        "commit_message": "Rename ParameterInserters to ParameterUpdaters (#4170)\n\n* Rename ParameterInserters to ParameterUpdaters to better fit the functionality name\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "01cb90387058204ed40430a84e2710e07297296c": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientConfig.java": [
                    "private ClientRuntime org.glassfish.jersey.client.ClientConfig.initRuntime()"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterfaceModel.java": [
                    "Object org.glassfish.jersey.microprofile.restclient.InterfaceModel.resolveParamValue(Object arg, Parameter parameter)"
                ]
            },
            "1719b46305879cef401028b1a9601ac35d096bbb": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientConfig.java": [
                    "private ClientRuntime org.glassfish.jersey.client.ClientConfig.initRuntime()"
                ],
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterfaceModel.java": [
                    "Object org.glassfish.jersey.microprofile.restclient.InterfaceModel.resolveParamValue(Object arg, Parameter parameter)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "55b7aa933be048905d981578f5bac563035921a7",
        "previous_commit": "1c218be271e1f587fb6edd77e54ab464601b0470",
        "date": 1676280259,
        "releases": {
            "previous": "55b7aa933be048905d981578f5bac563035921a7",
            "next": "55b7aa933be048905d981578f5bac563035921a7"
        },
        "commit_message": "Use useSystemProperties with Apache connectors\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "55b7aa933be048905d981578f5bac563035921a7": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "private HttpClientConnectionManager org.glassfish.jersey.apache.connector.ApacheConnector.getConnectionManager(final Client client, final Configuration config, final SSLContext sslContext, final boolean useSystemProperties)"
                ],
                "connectors/apache5-connector/src/main/java/org/glassfish/jersey/apache5/connector/Apache5Connector.java": [
                    "private HttpClientConnectionManager org.glassfish.jersey.apache5.connector.Apache5Connector.getConnectionManager(final Client client, final Configuration config, final SSLContext sslContext, final boolean useSystemProperties)"
                ]
            },
            "1c218be271e1f587fb6edd77e54ab464601b0470": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "private HttpClientConnectionManager org.glassfish.jersey.apache.connector.ApacheConnector.getConnectionManager(final Client client, final Configuration config, final SSLContext sslContext)"
                ],
                "connectors/apache5-connector/src/main/java/org/glassfish/jersey/apache5/connector/Apache5Connector.java": [
                    "private HttpClientConnectionManager org.glassfish.jersey.apache5.connector.Apache5Connector.getConnectionManager(final Client client, final Configuration config, final SSLContext sslContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "78ea6dc1d6b64e5118a218797fe1b89d0cdd4efa",
        "previous_commit": "6abd64c8124b03100ca67b48c06d0fe31f8d64cb",
        "date": 1654774763,
        "releases": {
            "previous": "78ea6dc1d6b64e5118a218797fe1b89d0cdd4efa",
            "next": "78ea6dc1d6b64e5118a218797fe1b89d0cdd4efa"
        },
        "commit_message": "Make JacksonFeature configurable (#5074)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "78ea6dc1d6b64e5118a218797fe1b89d0cdd4efa": {
                "core-common/src/main/java/org/glassfish/jersey/CommonProperties.java": [
                    "public static <T> T org.glassfish.jersey.CommonProperties.getValue(final Map<String, ?> properties, final String propertyName, final Class<T> type)"
                ],
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/DefaultJacksonJaxbJsonProvider.java": [
                    "private void org.glassfish.jersey.jackson.internal.DefaultJacksonJaxbJsonProvider.findAndRegisterModules()"
                ]
            },
            "6abd64c8124b03100ca67b48c06d0fe31f8d64cb": {
                "core-common/src/main/java/org/glassfish/jersey/CommonProperties.java": [
                    "public static <T> T org.glassfish.jersey.CommonProperties.getValue(final Map<String, ?> properties, final RuntimeType runtime, final String propertyName, final Class<T> type)"
                ],
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/DefaultJacksonJaxbJsonProvider.java": [
                    "private void org.glassfish.jersey.jackson.internal.DefaultJacksonJaxbJsonProvider.findAndRegisterModules()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "be13798788ba24af0d7de151bb2d763de85cce8a",
        "previous_commit": "75a9755a062da0765a216ed3d188570eba3cc012",
        "date": 1714069004,
        "releases": {
            "previous": "be13798788ba24af0d7de151bb2d763de85cce8a",
            "next": "be13798788ba24af0d7de151bb2d763de85cce8a"
        },
        "commit_message": "Add ability to configure the queue capacity for ChunkedOutput (#5621)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "be13798788ba24af0d7de151bb2d763de85cce8a": {
                "core-server/src/main/java/org/glassfish/jersey/server/ChunkedOutput.java": [
                    "protected void org.glassfish.jersey.server.ChunkedOutput<T>.onClose(Exception e)",
                    "public void org.glassfish.jersey.server.ChunkedOutput<T>.write(final T chunk)"
                ]
            },
            "75a9755a062da0765a216ed3d188570eba3cc012": {
                "core-server/src/main/java/org/glassfish/jersey/server/ChunkedOutput.java": [
                    "protected void org.glassfish.jersey.server.ChunkedOutput<T>.onClose(Exception e)",
                    "public void org.glassfish.jersey.server.ChunkedOutput<T>.write(final T chunk)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "86ad8fb9b4f6df1f76816eea1e707f8d8ad3c43f",
        "previous_commit": "191d3ffff8be782588620c068fd4d98576631dd4",
        "date": 1527748478,
        "releases": {
            "previous": "86ad8fb9b4f6df1f76816eea1e707f8d8ad3c43f",
            "next": "86ad8fb9b4f6df1f76816eea1e707f8d8ad3c43f"
        },
        "commit_message": "Travis CI build script\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "86ad8fb9b4f6df1f76816eea1e707f8d8ad3c43f": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpConnection.java": [
                    "void org.glassfish.jersey.jdk.connector.internal.HttpConnection.processConnectionClosed()",
                    "private void org.glassfish.jersey.jdk.connector.internal.HttpConnection.changeState(State newState)"
                ]
            },
            "191d3ffff8be782588620c068fd4d98576631dd4": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpConnection.java": [
                    "void org.glassfish.jersey.jdk.connector.internal.HttpConnection.processConnectionClosed()",
                    "private void org.glassfish.jersey.jdk.connector.internal.HttpConnection.changeState(State newState)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "84b7eba4b62ff7ed8f1cbc39cade7a8469ad688c",
        "previous_commit": "bd0b2db893392a1ffb6a6702677daa2140858eea",
        "date": 1613735435,
        "releases": {
            "previous": "84b7eba4b62ff7ed8f1cbc39cade7a8469ad688c",
            "next": "84b7eba4b62ff7ed8f1cbc39cade7a8469ad688c"
        },
        "commit_message": "Custom schedulers to execute @PreDestroy methods (#4716)\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "84b7eba4b62ff7ed8f1cbc39cade7a8469ad688c": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientExecutorProvidersConfigurator.java": [
                    "public void org.glassfish.jersey.client.ClientExecutorProvidersConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/ServerExecutorProvidersConfigurator.java": [
                    "public void org.glassfish.jersey.server.ServerExecutorProvidersConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ]
            },
            "bd0b2db893392a1ffb6a6702677daa2140858eea": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientExecutorProvidersConfigurator.java": [
                    "public void org.glassfish.jersey.client.ClientExecutorProvidersConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/ServerExecutorProvidersConfigurator.java": [
                    "public void org.glassfish.jersey.server.ServerExecutorProvidersConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "ab217b3415286b11f381cf6f23acca1b44b57a96",
        "previous_commit": "0cca13bc5e996629d6fe63351777faf09e745a61",
        "date": 1697695527,
        "releases": {
            "previous": "ab217b3415286b11f381cf6f23acca1b44b57a96",
            "next": "ab217b3415286b11f381cf6f23acca1b44b57a96"
        },
        "commit_message": "proper way of removing a handler\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "ab217b3415286b11f381cf6f23acca1b44b57a96": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyExpectContinueHandler.java": [
                    "CompletableFuture<HttpResponseStatus> org.glassfish.jersey.netty.connector.JerseyExpectContinueHandler.processExpect100ContinueRequest(HttpRequest nettyRequest, ClientRequest jerseyRequest, Channel ch, Integer timeout)",
                    "public void org.glassfish.jersey.netty.connector.JerseyExpectContinueHandler.channelRead(ChannelHandlerContext ctx, Object msg)"
                ]
            },
            "0cca13bc5e996629d6fe63351777faf09e745a61": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyExpectContinueHandler.java": [
                    "CompletableFuture<HttpResponseStatus> org.glassfish.jersey.netty.connector.JerseyExpectContinueHandler.processExpect100ContinueRequest(HttpRequest nettyRequest, ClientRequest jerseyRequest, Channel ch, Integer timeout)",
                    "public void org.glassfish.jersey.netty.connector.JerseyExpectContinueHandler.channelRead(ChannelHandlerContext ctx, Object msg)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8105415f9a6356de774c8ffe6ab5dfa77934b69f",
        "previous_commit": "1c329c8862611fc57ab65efe9db7c87800861f14",
        "date": 1700730706,
        "releases": {
            "previous": "8105415f9a6356de774c8ffe6ab5dfa77934b69f",
            "next": "8105415f9a6356de774c8ffe6ab5dfa77934b69f"
        },
        "commit_message": "RegularExpression in Uri Template IS NOT optional\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "8105415f9a6356de774c8ffe6ab5dfa77934b69f": {
                "core-common/src/main/java/org/glassfish/jersey/uri/internal/UriTemplateParser.java": [
                    "private void org.glassfish.jersey.uri.internal.UriTemplateParser.parse(CharacterIterator ci, String template)",
                    "private int org.glassfish.jersey.uri.internal.UriTemplateParser.parseName(final CharacterIterator ci, int skipGroup)"
                ]
            },
            "1c329c8862611fc57ab65efe9db7c87800861f14": {
                "core-common/src/main/java/org/glassfish/jersey/uri/internal/UriTemplateParser.java": [
                    "private void org.glassfish.jersey.uri.internal.UriTemplateParser.parse(CharacterIterator ci, String template)",
                    "private int org.glassfish.jersey.uri.internal.UriTemplateParser.parseName(final CharacterIterator ci, int skipGroup)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "2645eb0dd23d78c21c2f0b6eb6b4b5415f9a8a00",
        "previous_commit": "61b9fbf8efb1fdcdb046b58d0fdabc3c352d0fcc",
        "date": 1561378062,
        "releases": {
            "previous": "2645eb0dd23d78c21c2f0b6eb6b4b5415f9a8a00",
            "next": "2645eb0dd23d78c21c2f0b6eb6b4b5415f9a8a00"
        },
        "commit_message": "CDI duplicate lookup fix\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "2645eb0dd23d78c21c2f0b6eb6b4b5415f9a8a00": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/Providers.java": [
                    "public static <T> Collection<ServiceHolder<T>> org.glassfish.jersey.internal.inject.Providers.getAllServiceHolders(InjectionManager injectionManager, Class<T> contract)",
                    "public static <T> Iterable<RankedProvider<T>> org.glassfish.jersey.internal.inject.Providers.getAllRankedProviders(InjectionManager injectionManager, Class<T> contract)"
                ]
            },
            "61b9fbf8efb1fdcdb046b58d0fdabc3c352d0fcc": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/Providers.java": [
                    "public static <T> Collection<ServiceHolder<T>> org.glassfish.jersey.internal.inject.Providers.getAllServiceHolders(InjectionManager injectionManager, Class<T> contract)",
                    "public static <T> Iterable<RankedProvider<T>> org.glassfish.jersey.internal.inject.Providers.getAllRankedProviders(InjectionManager injectionManager, Class<T> contract)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "f8ae76724ad7fccb22670f255cef3a0bb866df80",
        "previous_commit": "3b1d207c9dc1379410713ac930c7675e132efb58",
        "date": 1600945368,
        "releases": {
            "previous": "f8ae76724ad7fccb22670f255cef3a0bb866df80",
            "next": "f8ae76724ad7fccb22670f255cef3a0bb866df80"
        },
        "commit_message": "resolve properties fix\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "f8ae76724ad7fccb22670f255cef3a0bb866df80": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java": [
                    "private <T> T org.glassfish.jersey.client.ClientRequest.resolveProperty(final String name, Object defaultValue, final Class<T> type)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private static void org.glassfish.jersey.client.internal.HttpUrlConnector.processExpect100Continue(ClientRequest request, HttpURLConnection uc, long length, RequestEntityProcessing entityProcessing)"
                ]
            },
            "3b1d207c9dc1379410713ac930c7675e132efb58": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java": [
                    "private <T> T org.glassfish.jersey.client.ClientRequest.resolveProperty(final String name, Object defaultValue, final Class<T> type)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private void org.glassfish.jersey.client.internal.HttpUrlConnector.processExpect100Continue(ClientRequest request, HttpURLConnection uc, long length, RequestEntityProcessing entityProcessing)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "356a4ef4cafa754d3101f9948719e20655035f86",
        "previous_commit": "0233ef1a7328ba469a4655ade0e1475e8ebeecf8",
        "date": 1627292143,
        "releases": {
            "previous": "356a4ef4cafa754d3101f9948719e20655035f86",
            "next": "356a4ef4cafa754d3101f9948719e20655035f86"
        },
        "commit_message": "Support more optionals (#4783)\n\n* Support more optionals (OptionalInt, OptionalDouble, OptionalLong)\r\n\r\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "356a4ef4cafa754d3101f9948719e20655035f86": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverters.java": [
                    "public <T> ParamConverter<T> org.glassfish.jersey.internal.inject.ParamConverters.getConverter(Class<T> rawType, Type genericType, Annotation[] annotations)",
                    "public T org.glassfish.jersey.internal.inject.ParamConverters.fromString(String value)"
                ]
            },
            "0233ef1a7328ba469a4655ade0e1475e8ebeecf8": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverters.java": [
                    "public <T> ParamConverter<T> org.glassfish.jersey.internal.inject.ParamConverters.getConverter(Class<T> rawType, Type genericType, Annotation[] annotations)",
                    "public T org.glassfish.jersey.internal.inject.ParamConverters.fromString(String value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "1719b46305879cef401028b1a9601ac35d096bbb",
        "previous_commit": "a843c05f14c328b59d5f66d2f2d4eb7d97d0d2b6",
        "date": 1561384131,
        "releases": {
            "previous": "1719b46305879cef401028b1a9601ac35d096bbb",
            "next": "1719b46305879cef401028b1a9601ac35d096bbb"
        },
        "commit_message": "PAYARA-3119 NullPointerException when starting Jersey/EJB Containers in Order (#3949)\n\nSigned-off-by: Gaurav Gupta <gaurav.gupta.jc@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "1719b46305879cef401028b1a9601ac35d096bbb": {
                "containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java": [
                    "public boolean org.glassfish.jersey.gf.ejb.internal.EjbComponentProvider.bind(Class<?> component, Set<Class<?>> providerContracts)",
                    "private void org.glassfish.jersey.gf.ejb.internal.EjbComponentProvider.registerEjbInterceptor(Class<?> component)"
                ]
            },
            "a843c05f14c328b59d5f66d2f2d4eb7d97d0d2b6": {
                "containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java": [
                    "public boolean org.glassfish.jersey.gf.ejb.internal.EjbComponentProvider.bind(Class<?> component, Set<Class<?>> providerContracts)",
                    "private void org.glassfish.jersey.gf.ejb.internal.EjbComponentProvider.registerEjbInterceptor()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "56a5634fd4d8ef5857de612684e8761667269d51",
        "previous_commit": "e6aadc58d6aae483bee8caf00a3a30d01c5c5474",
        "date": 1600864785,
        "releases": {
            "previous": "56a5634fd4d8ef5857de612684e8761667269d51",
            "next": "56a5634fd4d8ef5857de612684e8761667269d51"
        },
        "commit_message": "Prevent race condition\nFixes 4493\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "56a5634fd4d8ef5857de612684e8761667269d51": {
                "core-server/src/main/java/org/glassfish/jersey/server/ChunkedOutput.java": [
                    "protected void org.glassfish.jersey.server.ChunkedOutput<T>.flushQueue()",
                    "public Void org.glassfish.jersey.server.ChunkedOutput<T>.call()"
                ]
            },
            "e6aadc58d6aae483bee8caf00a3a30d01c5c5474": {
                "core-server/src/main/java/org/glassfish/jersey/server/ChunkedOutput.java": [
                    "protected void org.glassfish.jersey.server.ChunkedOutput<T>.flushQueue()",
                    "public Void org.glassfish.jersey.server.ChunkedOutput<T>.call()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "531653680538ca9e74bddc29d5d13aa9e07424f7",
        "previous_commit": "d60da249fdd06a5059472c6d9c1d8a757588e710",
        "date": 1686072163,
        "releases": {
            "previous": "531653680538ca9e74bddc29d5d13aa9e07424f7",
            "next": "531653680538ca9e74bddc29d5d13aa9e07424f7"
        },
        "commit_message": "Redirect GuardianList#toString to original toString\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "531653680538ca9e74bddc29d5d13aa9e07424f7": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/collection/GuardianStringKeyMultivaluedMap.java": [
                    "public int org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.hashCode()",
                    "public String org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.toString()"
                ]
            },
            "d60da249fdd06a5059472c6d9c1d8a757588e710": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/collection/GuardianStringKeyMultivaluedMap.java": [
                    "public int org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.hashCode()",
                    "public String org.glassfish.jersey.internal.util.collection.GuardianStringKeyMultivaluedMap<V>.toString()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "1f0dbfa40243126fea3bfac6d9f7332450de247d",
        "previous_commit": "635d16d0f3c10d8e5b2bc2f7388245e1b6ddbadb",
        "date": 1687242078,
        "releases": {
            "previous": "1f0dbfa40243126fea3bfac6d9f7332450de247d",
            "next": "1f0dbfa40243126fea3bfac6d9f7332450de247d"
        },
        "commit_message": "Parametrize ParamConverters to allow throwing IAE (#5349)\n\n* Parametrize ParamConverters to allow throwing IAE\r\n\r\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "1f0dbfa40243126fea3bfac6d9f7332450de247d": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverters.java": [
                    "public String org.glassfish.jersey.internal.inject.ParamConverters.toString(final T value)",
                    "public T org.glassfish.jersey.internal.inject.ParamConverters.fromString(final String value)"
                ]
            },
            "635d16d0f3c10d8e5b2bc2f7388245e1b6ddbadb": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverters.java": [
                    "public String org.glassfish.jersey.internal.inject.ParamConverters.toString(final T value)",
                    "public T org.glassfish.jersey.internal.inject.ParamConverters.fromString(final String value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "eafb9bdcb82dfa3fd76dd957d307b99d4a22c87f",
        "previous_commit": "4125a33598a0b19dab74d14a1c592ef428813817",
        "date": 1530005490,
        "releases": {
            "previous": "eafb9bdcb82dfa3fd76dd957d307b99d4a22c87f",
            "next": "eafb9bdcb82dfa3fd76dd957d307b99d4a22c87f"
        },
        "commit_message": "Replaced internal Base64 by java.util.Base64 (#3803) (#3829)\n\n* Replaced core-common.src.main.java.org.glassfish.jersey.internal.util.Base64 with java.util.Base64\r\n* fixed conversion to String after decoding of Base64 encode message\r\nSigned-off-by: Michael Durawa <michael.durawa@boehringer-ingelheim.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "eafb9bdcb82dfa3fd76dd957d307b99d4a22c87f": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/ProxyBasicAuthenticator.java": [
                    "static String org.glassfish.jersey.jdk.connector.internal.ProxyBasicAuthenticator.generateAuthorizationHeader(String userName, String password)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/BasicAuthenticator.java": [
                    "private String org.glassfish.jersey.client.authentication.BasicAuthenticator.calculateAuthentication(HttpAuthenticationFilter.Credentials credentials)"
                ]
            },
            "4125a33598a0b19dab74d14a1c592ef428813817": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/ProxyBasicAuthenticator.java": [
                    "static String org.glassfish.jersey.jdk.connector.internal.ProxyBasicAuthenticator.generateAuthorizationHeader(String userName, String password)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/BasicAuthenticator.java": [
                    "private String org.glassfish.jersey.client.authentication.BasicAuthenticator.calculateAuthentication(HttpAuthenticationFilter.Credentials credentials)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "fd07a382e64455cd8896d53e2536bb5b0de949d9",
        "previous_commit": "8a4d5c5901925426947f0f3560a1008bf66b178c",
        "date": 1669889883,
        "releases": {
            "previous": "fd07a382e64455cd8896d53e2536bb5b0de949d9",
            "next": "fd07a382e64455cd8896d53e2536bb5b0de949d9"
        },
        "commit_message": "Fix optionals when empty (#5194)\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "fd07a382e64455cd8896d53e2536bb5b0de949d9": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverters.java": [
                    "public <T> ParamConverter<T> org.glassfish.jersey.internal.inject.ParamConverters.getConverter(Class<T> rawType, Type genericType, Annotation[] annotations)",
                    "public T org.glassfish.jersey.internal.inject.ParamConverters.fromString(String value)"
                ]
            },
            "8a4d5c5901925426947f0f3560a1008bf66b178c": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverters.java": [
                    "public <T> ParamConverter<T> org.glassfish.jersey.internal.inject.ParamConverters.getConverter(Class<T> rawType, Type genericType, Annotation[] annotations)",
                    "public T org.glassfish.jersey.internal.inject.ParamConverters.fromString(String value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "3d04682047c29a636c00494492af7acec3f6f611",
        "previous_commit": "d88025ba0700837808125956cd8acde9d2be6e42",
        "date": 1587122256,
        "releases": {
            "previous": "3d04682047c29a636c00494492af7acec3f6f611",
            "next": "3d04682047c29a636c00494492af7acec3f6f611"
        },
        "commit_message": "Make sure the RX invoker gets ExecutorService from ExecutorServiceProvider (#4429)\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "3d04682047c29a636c00494492af7acec3f6f611": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "public <T extends RxInvoker> T org.glassfish.jersey.client.JerseyInvocation.rx(Class<T> clazz)",
                    "public CompletionStageRxInvoker org.glassfish.jersey.client.JerseyInvocation.rx()"
                ]
            },
            "d88025ba0700837808125956cd8acde9d2be6e42": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "public <T extends RxInvoker> T org.glassfish.jersey.client.JerseyInvocation.rx(Class<T> clazz)",
                    "public CompletionStageRxInvoker org.glassfish.jersey.client.JerseyInvocation.rx()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "38c19579664c51af3a67b1e64297f5a46b744c9b",
        "previous_commit": "66f5cfa1804e4e29dac456744d41bc7e8b66ad57",
        "date": 1566990636,
        "releases": {
            "previous": "38c19579664c51af3a67b1e64297f5a46b744c9b",
            "next": "38c19579664c51af3a67b1e64297f5a46b744c9b"
        },
        "commit_message": "Using configured executor service for client.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "38c19579664c51af3a67b1e64297f5a46b744c9b": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "public <T extends RxInvoker> T org.glassfish.jersey.client.JerseyInvocation.rx(Class<T> clazz)",
                    "public CompletionStageRxInvoker org.glassfish.jersey.client.JerseyInvocation.rx()"
                ]
            },
            "66f5cfa1804e4e29dac456744d41bc7e8b66ad57": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "public <T extends RxInvoker> T org.glassfish.jersey.client.JerseyInvocation.rx(Class<T> clazz)",
                    "public CompletionStageRxInvoker org.glassfish.jersey.client.JerseyInvocation.rx()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "3819184d92bcf7eadab11f1a7318486d9df33fb8",
        "previous_commit": "30acc40d84632e1595f1a858fc46fc40da475d96",
        "date": 1689251848,
        "releases": {
            "previous": "3819184d92bcf7eadab11f1a7318486d9df33fb8",
            "next": "3819184d92bcf7eadab11f1a7318486d9df33fb8"
        },
        "commit_message": "Save time by not inspecting configuration for property when in PropertiesDelegate\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "3819184d92bcf7eadab11f1a7318486d9df33fb8": {
                "core-common/src/main/java/org/glassfish/jersey/internal/PropertiesResolver.java": [
                    "private <T> T org.glassfish.jersey.internal..resolveProperty(final String name, Object defaultValue, final Class<T> type)",
                    "public static PropertiesResolver create(Configuration configuration, PropertiesDelegate delegate)"
                ]
            },
            "30acc40d84632e1595f1a858fc46fc40da475d96": {
                "core-common/src/main/java/org/glassfish/jersey/internal/PropertiesResolver.java": [
                    "private <T> T org.glassfish.jersey.internal..resolveProperty(final String name, Object defaultValue, final Class<T> type)",
                    "public static PropertiesResolver create(Configuration configuration, PropertiesDelegate delegate)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "6abd64c8124b03100ca67b48c06d0fe31f8d64cb",
        "previous_commit": "bf6dd3db9f52f2511ed66430a5d51a6464754ace",
        "date": 1654752562,
        "releases": {
            "previous": "6abd64c8124b03100ca67b48c06d0fe31f8d64cb",
            "next": "6abd64c8124b03100ca67b48c06d0fe31f8d64cb"
        },
        "commit_message": "Update Netty proxy settings (#5071)\n\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "6abd64c8124b03100ca67b48c06d0fe31f8d64cb": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)"
                ]
            },
            "bf6dd3db9f52f2511ed66430a5d51a6464754ace": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)",
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "51abc78ecf8e67bbb53dff821e95f66d0e981ae6",
        "previous_commit": "e59b36ed3569a6ce88d2e42be496977af058083e",
        "date": 1576586490,
        "releases": {
            "previous": "51abc78ecf8e67bbb53dff821e95f66d0e981ae6",
            "next": "51abc78ecf8e67bbb53dff821e95f66d0e981ae6"
        },
        "commit_message": "Fix issues with ChunkedInputStream when using Apache Connector (#4338)\n\n* Set Apache Connector behaviour for Apache Http Client prior 4.5.1 to behaviour in Jersey 2.28\r\nKeep behaviour of Jersey 2.29 for Apache HttpClient 4.5.1+\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "51abc78ecf8e67bbb53dff821e95f66d0e981ae6": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "public ClientResponse org.glassfish.jersey.apache.connector.ApacheConnector.apply(final ClientRequest clientRequest)",
                    "public void org.glassfish.jersey.apache.connector.ApacheConnector.close()"
                ]
            },
            "e59b36ed3569a6ce88d2e42be496977af058083e": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "public ClientResponse org.glassfish.jersey.apache.connector.ApacheConnector.apply(final ClientRequest clientRequest)",
                    "public void org.glassfish.jersey.apache.connector.ApacheConnector.close()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "81c2d32da43ad266e5a3992e4e95fcc76fcc921f",
        "previous_commit": "3f8c07c6e5978f2ef002cb13cc96a636a3947821",
        "date": 1580927526,
        "releases": {
            "previous": "81c2d32da43ad266e5a3992e4e95fcc76fcc921f",
            "next": "81c2d32da43ad266e5a3992e4e95fcc76fcc921f"
        },
        "commit_message": "Adopt Jackson 2.10.1 (#4339)\n\n* Updated Jackson to 2.10.1\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "81c2d32da43ad266e5a3992e4e95fcc76fcc921f": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/jackson/jaxrs/cfg/AnnotationBundleKey.java": [
                    "private final boolean org.glassfish.jersey.jackson.internal.jackson.jaxrs.cfg.AnnotationBundleKey._equals(Annotation[] otherAnn)"
                ],
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/jackson/jaxrs/json/JsonEndpointConfig.java": [
                    "protected void org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonEndpointConfig.addAnnotation(Class<? extends Annotation> type, Annotation annotation, boolean forWriting)"
                ]
            },
            "3f8c07c6e5978f2ef002cb13cc96a636a3947821": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/jackson/jaxrs/cfg/AnnotationBundleKey.java": [
                    "private final boolean org.glassfish.jersey.jackson.internal.jackson.jaxrs.cfg.AnnotationBundleKey._equals(Annotation[] otherAnn)"
                ],
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/jackson/jaxrs/json/JsonEndpointConfig.java": [
                    "protected void org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonEndpointConfig.addAnnotation(Class<? extends Annotation> type, Annotation annotation, boolean forWriting)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "1ec382fee9ce0be1763fa9798f10b7d624a7b3dc",
        "previous_commit": "68eae404f87d77d744c7fb6938efea041e0290a6",
        "date": 1628666803,
        "releases": {
            "previous": "1ec382fee9ce0be1763fa9798f10b7d624a7b3dc",
            "next": "1ec382fee9ce0be1763fa9798f10b7d624a7b3dc"
        },
        "commit_message": "Allow Feature and Dynamic feature as a JDK services (#4833)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "1ec382fee9ce0be1763fa9798f10b7d624a7b3dc": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientConfig.java": [
                    "private ClientRuntime org.glassfish.jersey.client.ClientConfig.initRuntime()"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/ApplicationHandler.java": [
                    "private void org.glassfish.jersey.server.ApplicationHandler.initialize(ApplicationConfigurator applicationConfigurator, InjectionManager injectionManager, Binder customBinder)"
                ]
            },
            "68eae404f87d77d744c7fb6938efea041e0290a6": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientConfig.java": [
                    "private ClientRuntime org.glassfish.jersey.client.ClientConfig.initRuntime()"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/ApplicationHandler.java": [
                    "private void org.glassfish.jersey.server.ApplicationHandler.initialize(ApplicationConfigurator applicationConfigurator, InjectionManager injectionManager, Binder customBinder)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "734e59d236555862a642f42a5a2aab55122f79d5",
        "previous_commit": "4c1d91595a7110f548de2703514cae2983125ce1",
        "date": 1697642007,
        "releases": {
            "previous": "734e59d236555862a642f42a5a2aab55122f79d5",
            "next": "734e59d236555862a642f42a5a2aab55122f79d5"
        },
        "commit_message": "UserGuide and example extended for Micrometer integration (#5427)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "734e59d236555862a642f42a5a2aab55122f79d5": {
                "examples/micrometer/src/main/java/org/glassfish/jersey/examples/micrometer/App.java": [
                    "public static void org.glassfish.jersey.examples.micrometer.App.main(String[] args)"
                ],
                "examples/micrometer/src/main/java/org/glassfish/jersey/examples/micrometer/MetricsResource.java": [
                    "public String org.glassfish.jersey.examples.micrometer.MetricsResource.getMeters()"
                ]
            },
            "4c1d91595a7110f548de2703514cae2983125ce1": {
                "examples/micrometer/src/main/java/org/glassfish/jersey/examples/micrometer/App.java": [
                    "public static void org.glassfish.jersey.examples.micrometer.App.main(String[] args)"
                ],
                "examples/micrometer/src/main/java/org/glassfish/jersey/examples/micrometer/MetricsResource.java": [
                    "public String org.glassfish.jersey.examples.micrometer.MetricsResource.getMeters()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "5e262a36dab399cd03f66b5592f50af4019286eb",
        "previous_commit": "6421e1f0bc6156611c7120f5e6996b3bb262a62e",
        "date": 1651157827,
        "releases": {
            "previous": "5e262a36dab399cd03f66b5592f50af4019286eb",
            "next": "5e262a36dab399cd03f66b5592f50af4019286eb"
        },
        "commit_message": "Add javadoc to Netty ENABLE_SSL_HOSTNAME_VERIFICATION configuration property\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "5e262a36dab399cd03f66b5592f50af4019286eb": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)",
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)"
                ]
            },
            "6421e1f0bc6156611c7120f5e6996b3bb262a62e": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)",
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "d956c523a9403e4c4c229587a3c52b185341bba5",
        "previous_commit": "6e109653fc917457315db17740063ab70bfa4abe",
        "date": 1613060659,
        "releases": {
            "previous": "d956c523a9403e4c4c229587a3c52b185341bba5",
            "next": "d956c523a9403e4c4c229587a3c52b185341bba5"
        },
        "commit_message": "Do not create a connector multiple times for each rx() call\nPriority is to use @ClientAsyncExecutor annotated ExecutorServiceProvider\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "d956c523a9403e4c4c229587a3c52b185341bba5": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "public <T extends RxInvoker> T org.glassfish.jersey.client.JerseyInvocation.rx(Class<T> clazz)",
                    "private ExecutorService org.glassfish.jersey.client.JerseyInvocation.executorService()"
                ]
            },
            "6e109653fc917457315db17740063ab70bfa4abe": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "public <T extends RxInvoker> T org.glassfish.jersey.client.JerseyInvocation.rx(Class<T> clazz)",
                    "private ExecutorService org.glassfish.jersey.client.JerseyInvocation.executorService()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "d68b8c885bdf85c151fc5c2b393dd41eb7a7db0a",
        "previous_commit": "fa1ed98a8020679c9f63916fc003b314c02e6fa4",
        "date": 1537892738,
        "releases": {
            "previous": "d68b8c885bdf85c151fc5c2b393dd41eb7a7db0a",
            "next": "d68b8c885bdf85c151fc5c2b393dd41eb7a7db0a"
        },
        "commit_message": "Travis CI build script\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "d68b8c885bdf85c151fc5c2b393dd41eb7a7db0a": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpConnection.java": [
                    "void org.glassfish.jersey.jdk.connector.internal.HttpConnection.processConnectionClosed()",
                    "private void org.glassfish.jersey.jdk.connector.internal.HttpConnection.changeState(State newState)"
                ]
            },
            "fa1ed98a8020679c9f63916fc003b314c02e6fa4": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpConnection.java": [
                    "void org.glassfish.jersey.jdk.connector.internal.HttpConnection.processConnectionClosed()",
                    "private void org.glassfish.jersey.jdk.connector.internal.HttpConnection.changeState(State newState)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "bb56997f4a48981efed8bd949ef88e97f79d5419",
        "previous_commit": "366d0790b997535af9732e5e2cd141a9106293f0",
        "date": 1603797525,
        "releases": {
            "previous": "bb56997f4a48981efed8bd949ef88e97f79d5419",
            "next": "bb56997f4a48981efed8bd949ef88e97f79d5419"
        },
        "commit_message": "Allow for org.glassfish.jersey.servlet.ServletContainer class name without init parameters in web.xml\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "bb56997f4a48981efed8bd949ef88e97f79d5419": {
                "containers/jersey-servlet/src/main/java/org/glassfish/jersey/servlet/init/JerseyServletContainerInitializer.java": [
                    "private void org.glassfish.jersey.servlet.init.JerseyServletContainerInitializer.onStartupImpl(final Set<Class<?>> classes, final ServletContext servletContext)",
                    "private static ServletRegistration org.glassfish.jersey.servlet.init.JerseyServletContainerInitializer.addServletWithApplication(final ServletContext context, final Class<? extends Application> clazz, final Set<Class<?>> defaultClasses)"
                ]
            },
            "366d0790b997535af9732e5e2cd141a9106293f0": {
                "containers/jersey-servlet/src/main/java/org/glassfish/jersey/servlet/init/JerseyServletContainerInitializer.java": [
                    "private void org.glassfish.jersey.servlet.init.JerseyServletContainerInitializer.onStartupImpl(final Set<Class<?>> classes, final ServletContext servletContext)",
                    "private static void org.glassfish.jersey.servlet.init.JerseyServletContainerInitializer.addServletWithApplication(final ServletContext context, final Class<? extends Application> clazz, final Set<Class<?>> defaultClasses)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "a62d1ffe7cf0a0c45e11d610293645b414d1e9b7",
        "previous_commit": "895c293e366afce166e508ae9db23f9e4b9b5f80",
        "date": 1556034944,
        "releases": {
            "previous": "a62d1ffe7cf0a0c45e11d610293645b414d1e9b7",
            "next": "a62d1ffe7cf0a0c45e11d610293645b414d1e9b7"
        },
        "commit_message": "Fix priority ordering (#4103)\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "a62d1ffe7cf0a0c45e11d610293645b414d1e9b7": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/Providers.java": [
                    "public static <T> Iterable<RankedProvider<T>> org.glassfish.jersey.internal.inject.Providers.getAllRankedProviders(InjectionManager injectionManager, Class<T> contract)",
                    "private static <T> List<ServiceHolder<T>> org.glassfish.jersey.internal.inject.Providers.getServiceHolders(InjectionManager injectionManager, Class<T> contract, Comparator<Class<?>> objectComparator, Annotation... qualifiers)"
                ]
            },
            "895c293e366afce166e508ae9db23f9e4b9b5f80": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/Providers.java": [
                    "public static <T> Iterable<RankedProvider<T>> org.glassfish.jersey.internal.inject.Providers.getAllRankedProviders(InjectionManager injectionManager, Class<T> contract)",
                    "private static <T> List<ServiceHolder<T>> org.glassfish.jersey.internal.inject.Providers.getServiceHolders(InjectionManager injectionManager, Class<T> contract, Comparator<Class<?>> objectComparator, Annotation... qualifiers)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "62abe73e3ce00de97858f552175f7af49ce8edc7",
        "previous_commit": "0c341a35bfd3710d88ae97a66423bacc1c76082c",
        "date": 1531396507,
        "releases": {
            "previous": "62abe73e3ce00de97858f552175f7af49ce8edc7",
            "next": "62abe73e3ce00de97858f552175f7af49ce8edc7"
        },
        "commit_message": "Fixed connection leak in basic and digest authenticators if 401 response has content (#3878)\n\nSigned-off-by: agherardi <alessandro.gherardi@yahoo.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "62abe73e3ce00de97858f552175f7af49ce8edc7": {
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/BasicAuthenticator.java": [
                    "public boolean org.glassfish.jersey.client.authentication.BasicAuthenticator.filterResponseAndAuthenticate(ClientRequestContext request, ClientResponseContext response)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/DigestAuthenticator.java": [
                    "public boolean org.glassfish.jersey.client.authentication.DigestAuthenticator.filterResponse(final ClientRequestContext request, final ClientResponseContext response)"
                ]
            },
            "0c341a35bfd3710d88ae97a66423bacc1c76082c": {
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/BasicAuthenticator.java": [
                    "public boolean org.glassfish.jersey.client.authentication.BasicAuthenticator.filterResponseAndAuthenticate(ClientRequestContext request, ClientResponseContext response)"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/DigestAuthenticator.java": [
                    "public boolean org.glassfish.jersey.client.authentication.DigestAuthenticator.filterResponse(final ClientRequestContext request, final ClientResponseContext response)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "52448e6634c27371ed11b844ef0fa015433de039",
        "previous_commit": "d11a733eace1322ad35fd7b94f91b8d79af56efa",
        "date": 1592476409,
        "releases": {
            "previous": "52448e6634c27371ed11b844ef0fa015433de039",
            "next": "52448e6634c27371ed11b844ef0fa015433de039"
        },
        "commit_message": "Fix intermittent premature ClientRuntime finalization (#4508)\n\n* Fix intermittent premature ClientRuntime finalization\r\n\r\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "52448e6634c27371ed11b844ef0fa015433de039": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientConfig.java": [
                    "private ClientRuntime org.glassfish.jersey.client.ClientConfig.initRuntime()"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/InboundJaxrsResponse.java": [
                    "public void org.glassfish.jersey.client.InboundJaxrsResponse.close()"
                ]
            },
            "d11a733eace1322ad35fd7b94f91b8d79af56efa": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientConfig.java": [
                    "private ClientRuntime org.glassfish.jersey.client.ClientConfig.initRuntime()"
                ],
                "core-client/src/main/java/org/glassfish/jersey/client/InboundJaxrsResponse.java": [
                    "public void org.glassfish.jersey.client.InboundJaxrsResponse.close()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e59b36ed3569a6ce88d2e42be496977af058083e",
        "previous_commit": "b7a5dc0ef14a3c54d2defafd44a556cf74e4ec04",
        "date": 1576585889,
        "releases": {
            "previous": "e59b36ed3569a6ce88d2e42be496977af058083e",
            "next": "e59b36ed3569a6ce88d2e42be496977af058083e"
        },
        "commit_message": "Allow to use additional properties with security manager/4323 (#4327)\n\n* All jersey @PropertiesClass and @Properties are loaded when security manager is on\r\n\r\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e59b36ed3569a6ce88d2e42be496977af058083e": {
                "core-common/src/main/java/org/glassfish/jersey/internal/config/SystemPropertiesConfigurationModel.java": [
                    "private <T> void org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.mapFieldsToProperties(Map<String, Object> properties, Class<T> clazz)",
                    "private Map<String, Object> org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.getExpectedSystemProperties()"
                ]
            },
            "b7a5dc0ef14a3c54d2defafd44a556cf74e4ec04": {
                "core-common/src/main/java/org/glassfish/jersey/internal/config/SystemPropertiesConfigurationModel.java": [
                    "private <T> void org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.mapFieldsToProperties(Map<String, Object> properties, Class<T> clazz)",
                    "private Map<String, Object> org.glassfish.jersey.internal.config.SystemPropertiesConfigurationModel.getExpectedSystemProperties()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "895c293e366afce166e508ae9db23f9e4b9b5f80",
        "previous_commit": "38c1c6d7b9c0ae36d57aba5f4ba1298991cfcdcd",
        "date": 1555052634,
        "releases": {
            "previous": "895c293e366afce166e508ae9db23f9e4b9b5f80",
            "next": "895c293e366afce166e508ae9db23f9e4b9b5f80"
        },
        "commit_message": "Put Parameter class in core-common, to be used by both client and server (#4091)\n\n* Created Parameter class in core-common, to be used by both client and server\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\r\n\r\n* putback AnnotatedMethod\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\r\n\r\n* Make sure the ParameterServiceProvider from core-server is the first in the list\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "895c293e366afce166e508ae9db23f9e4b9b5f80": {
                "core-server/src/main/java/org/glassfish/jersey/server/model/Parameter.java": [
                    "public static Parameter org.glassfish.jersey.server.model.Parameter.overrideSource(Parameter original, Parameter.Source source)",
                    "public Parameter.Source org.glassfish.jersey.server.model.Parameter.getSource()"
                ]
            },
            "38c1c6d7b9c0ae36d57aba5f4ba1298991cfcdcd": {
                "core-server/src/main/java/org/glassfish/jersey/server/model/Parameter.java": [
                    "public static Parameter org.glassfish.jersey.server.model.Parameter.overrideSource(Parameter original, Parameter.Source source)",
                    "public Parameter.Source org.glassfish.jersey.server.model.Parameter.getSource()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "94945df6e94f328f26b1d8b4608c19e9e4c9ded0",
        "previous_commit": "959b4e799721796668f0e185ea3eb9a67ac442c7",
        "date": 1570095606,
        "releases": {
            "previous": "94945df6e94f328f26b1d8b4608c19e9e4c9ded0",
            "next": "94945df6e94f328f26b1d8b4608c19e9e4c9ded0"
        },
        "commit_message": "HK2 to skip fields injected by CDI in non bean-defining-annotated beans (#4277)\n\n* HK2 to skip fields injected by CDI in non bean-defining-annotated beans\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "94945df6e94f328f26b1d8b4608c19e9e4c9ded0": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.bindHk2ClassAnalyzer()"
                ],
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/InjecteeSkippingAnalyzer.java": [
                    "public <T> Set<Field> org.glassfish.jersey.ext.cdi1x.internal.InjecteeSkippingAnalyzer.getFields(Class<T> type)"
                ]
            },
            "959b4e799721796668f0e185ea3eb9a67ac442c7": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.bindHk2ClassAnalyzer()"
                ],
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/InjecteeSkippingAnalyzer.java": [
                    "public <T> Set<Field> org.glassfish.jersey.ext.cdi1x.internal.InjecteeSkippingAnalyzer.getFields(Class<T> type)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "72c27bc1a5bced16944754f81d16b4f8d60747cd",
        "previous_commit": "1504174ace92ff8cbeb13f5b588edd598466e18b",
        "date": 1572920700,
        "releases": {
            "previous": "72c27bc1a5bced16944754f81d16b4f8d60747cd",
            "next": "72c27bc1a5bced16944754f81d16b4f8d60747cd"
        },
        "commit_message": "ResourceConfig is now properly using the ClassLoader specified in PackageNamesScanner to load classes\n\nSigned-off-by: Dorian Heinrichs <dorian.heinrichs@xiamli.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "72c27bc1a5bced16944754f81d16b4f8d60747cd": {
                "core-server/src/main/java/org/glassfish/jersey/server/ResourceConfig.java": [
                    "private Set<Class<?>> org.glassfish.jersey.server.ResourceConfig.scanClasses()",
                    "public final ResourceConfig org.glassfish.jersey.server.ResourceConfig.packages(final boolean recursive, final ClassLoader classLoader, final String... packages)"
                ]
            },
            "1504174ace92ff8cbeb13f5b588edd598466e18b": {
                "core-server/src/main/java/org/glassfish/jersey/server/ResourceConfig.java": [
                    "private Set<Class<?>> org.glassfish.jersey.server.ResourceConfig.scanClasses()",
                    "public final ResourceConfig org.glassfish.jersey.server.ResourceConfig.packages(final boolean recursive, final String... packages)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "4f2b834969194e651fe9cdf504536f7a256862d1",
        "previous_commit": "dbbf057ea1ebb38d80924b2cbf3b4ae859238d43",
        "date": 1697102958,
        "releases": {
            "previous": "4f2b834969194e651fe9cdf504536f7a256862d1",
            "next": "4f2b834969194e651fe9cdf504536f7a256862d1"
        },
        "commit_message": "Decode extended filename in multipart content-disposition\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "4f2b834969194e651fe9cdf504536f7a256862d1": {
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/ContentDisposition.java": [
                    "public String org.glassfish.jersey.media.multipart.ContentDisposition.getFileName()",
                    "private void org.glassfish.jersey.media.multipart.ContentDisposition.createParameters()"
                ]
            },
            "dbbf057ea1ebb38d80924b2cbf3b4ae859238d43": {
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/ContentDisposition.java": [
                    "public String org.glassfish.jersey.media.multipart.ContentDisposition.getFileName()",
                    "private void org.glassfish.jersey.media.multipart.ContentDisposition.createParameters()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "9e874a63aa3da552f766e7012948fbf1adc04208",
        "previous_commit": "d32c63eae250553e63a967b1a9c82e9767c48fe6",
        "date": 1715689240,
        "releases": {
            "previous": "9e874a63aa3da552f766e7012948fbf1adc04208",
            "next": "9e874a63aa3da552f766e7012948fbf1adc04208"
        },
        "commit_message": "Document Multipart Configuration.\nAllow to limit the number of parts in the multipart entity.\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "9e874a63aa3da552f766e7012948fbf1adc04208": {
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/MultiPartProperties.java": [
                    "private void org.glassfish.jersey.media.multipart.MultiPartProperties.configure()"
                ],
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/internal/MultiPartReaderClientSide.java": [
                    "protected MultiPart org.glassfish.jersey.media.multipart.internal.MultiPartReaderClientSide.readMultiPart(final Class<MultiPart> type, final Type genericType, final Annotation[] annotations, MediaType mediaType, final MultivaluedMap<String, String> headers, final InputStream stream)"
                ]
            },
            "d32c63eae250553e63a967b1a9c82e9767c48fe6": {
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/MultiPartProperties.java": [
                    "private void org.glassfish.jersey.media.multipart.MultiPartProperties.configure()"
                ],
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/internal/MultiPartReaderClientSide.java": [
                    "protected MultiPart org.glassfish.jersey.media.multipart.internal.MultiPartReaderClientSide.readMultiPart(final Class<MultiPart> type, final Type genericType, final Annotation[] annotations, MediaType mediaType, final MultivaluedMap<String, String> headers, final InputStream stream)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e0369be617bb445866fc86d08e11e54bdec88f88",
        "previous_commit": "a13ab9b130b8d97cdd0bc67422151e93ac2b7731",
        "date": 1550507374,
        "releases": {
            "previous": "e0369be617bb445866fc86d08e11e54bdec88f88",
            "next": "e0369be617bb445866fc86d08e11e54bdec88f88"
        },
        "commit_message": "Enable @ConstrainedTo on Features\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e0369be617bb445866fc86d08e11e54bdec88f88": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "private void org.glassfish.jersey.model.internal.CommonConfig.configureFeatures(InjectionManager injectionManager, Set<FeatureRegistration> processed, List<FeatureRegistration> unprocessed, ManagedObjectsFinalizer managedObjectsFinalizer)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/inject/WebTargetValueParamProvider.java": [
                    "private void org.glassfish.jersey.server.internal.inject.WebTargetValueParamProvider.copyProviders(Configuration source, Configurable<?> target)"
                ]
            },
            "a13ab9b130b8d97cdd0bc67422151e93ac2b7731": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "private void org.glassfish.jersey.model.internal.CommonConfig.configureFeatures(InjectionManager injectionManager, Set<FeatureRegistration> processed, List<FeatureRegistration> unprocessed, ManagedObjectsFinalizer managedObjectsFinalizer)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/internal/inject/WebTargetValueParamProvider.java": [
                    "private void org.glassfish.jersey.server.internal.inject.WebTargetValueParamProvider.copyProviders(Configuration source, Configurable<?> target)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8016b929f7c4ad5ce94456f889b5fa32c4a198f2",
        "previous_commit": "f5be6ee223e0ed020062eb743d48fca79b70126e",
        "date": 1651644643,
        "releases": {
            "previous": "8016b929f7c4ad5ce94456f889b5fa32c4a198f2",
            "next": "8016b929f7c4ad5ce94456f889b5fa32c4a198f2"
        },
        "commit_message": "For OSGi services lookup use only classes assignable from service class (#5051)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "8016b929f7c4ad5ce94456f889b5fa32c4a198f2": {
                "core-common/src/main/java/org/glassfish/jersey/internal/OsgiRegistry.java": [
                    "public <T> Iterator<Class<T>> org.glassfish.jersey.internal.OsgiRegistry.createClassIterator( final Class<T> service, final String serviceName, final ClassLoader loader, final boolean ignoreOnClassNotFound)",
                    "public <T> Iterator<T> org.glassfish.jersey.internal.OsgiRegistry.createIterator( final Class<T> serviceClass, final String serviceName, final ClassLoader loader, final boolean ignoreOnClassNotFound)"
                ]
            },
            "f5be6ee223e0ed020062eb743d48fca79b70126e": {
                "core-common/src/main/java/org/glassfish/jersey/internal/OsgiRegistry.java": [
                    "public <T> Iterator<Class<T>> org.glassfish.jersey.internal.OsgiRegistry.createClassIterator( final Class<T> service, final String serviceName, final ClassLoader loader, final boolean ignoreOnClassNotFound)",
                    "public <T> Iterator<T> org.glassfish.jersey.internal.OsgiRegistry.createIterator( final Class<T> serviceClass, final String serviceName, final ClassLoader loader, final boolean ignoreOnClassNotFound)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "2ee39d5d7f832f2b00cde4e8bb867684d39e3d86",
        "previous_commit": "63506be436173c8890c3f2995c607d5d6d8773c8",
        "date": 1717139703,
        "releases": {
            "previous": "2ee39d5d7f832f2b00cde4e8bb867684d39e3d86",
            "next": "2ee39d5d7f832f2b00cde4e8bb867684d39e3d86"
        },
        "commit_message": "update Jackson to 2.17.1\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "2ee39d5d7f832f2b00cde4e8bb867684d39e3d86": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/jackson/jaxrs/json/JsonMapperConfigurator.java": [
                    "protected ObjectMapper org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator.mapper()",
                    "public ObjectMapper org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator.getDefaultMapper()"
                ]
            },
            "63506be436173c8890c3f2995c607d5d6d8773c8": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/jackson/jaxrs/json/JsonMapperConfigurator.java": [
                    "public synchronized ObjectMapper org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator.getDefaultMapper()",
                    "protected ObjectMapper org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator.mapper()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "85022860985db1e2c6f7c09b1778ba744f5e1bcc",
        "previous_commit": "d68be87e47de7aaf83ced0c52a12bff6d2535f9c",
        "date": 1623750674,
        "releases": {
            "previous": "85022860985db1e2c6f7c09b1778ba744f5e1bcc",
            "next": "85022860985db1e2c6f7c09b1778ba744f5e1bcc"
        },
        "commit_message": "Enable to use @Context in constructors of classes instantiated by CDI\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "85022860985db1e2c6f7c09b1778ba744f5e1bcc": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/AbstractCdiBeanSupplier.java": [
                    "public T org.glassfish.jersey.ext.cdi1x.internal.AbstractCdiBeanSupplier<T>.getInstance(final Class<T> clazz)"
                ],
                "inject/cdi2-se/src/main/java/org/glassfish/jersey/inject/cdi/se/CdiSeInjectionManager.java": [
                    "public <T> T org.glassfish.jersey.inject.cdi.se.CdiSeInjectionManager.create(Class<T> createMe)"
                ]
            },
            "d68be87e47de7aaf83ced0c52a12bff6d2535f9c": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/AbstractCdiBeanSupplier.java": [
                    "public T org.glassfish.jersey.ext.cdi1x.internal.AbstractCdiBeanSupplier<T>.getInstance(final Class<T> clazz)"
                ],
                "inject/cdi2-se/src/main/java/org/glassfish/jersey/inject/cdi/se/CdiSeInjectionManager.java": [
                    "public <T> T org.glassfish.jersey.inject.cdi.se.CdiSeInjectionManager.createAndInitialize(Class<T> createMe)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "3ff9de8c27d80abc0f973982f32de5e87f080e30",
        "previous_commit": "03d8a7216a5e9f4452158fd018c37a518b6eef35",
        "date": 1595514686,
        "releases": {
            "previous": "3ff9de8c27d80abc0f973982f32de5e87f080e30",
            "next": "3ff9de8c27d80abc0f973982f32de5e87f080e30"
        },
        "commit_message": "Prevent race condition in JettyConnector\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "3ff9de8c27d80abc0f973982f32de5e87f080e30": {
                "connectors/jetty-connector/src/main/java/org/glassfish/jersey/jetty/connector/JettyConnector.java": [
                    "public Future<?> org.glassfish.jersey.jetty.connector.JettyConnector.apply(final ClientRequest jerseyRequest, final AsyncConnectorCallback callback)",
                    "public void org.glassfish.jersey.jetty.connector.JettyConnector.onComplete(final Result result)"
                ]
            },
            "03d8a7216a5e9f4452158fd018c37a518b6eef35": {
                "connectors/jetty-connector/src/main/java/org/glassfish/jersey/jetty/connector/JettyConnector.java": [
                    "public Future<?> org.glassfish.jersey.jetty.connector.JettyConnector.apply(final ClientRequest jerseyRequest, final AsyncConnectorCallback callback)",
                    "public void org.glassfish.jersey.jetty.connector.JettyConnector.onComplete(final Result result)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "6421e1f0bc6156611c7120f5e6996b3bb262a62e",
        "previous_commit": "08bfa501655cc54e4c61eb34dd03a26dd7f7aec5",
        "date": 1651157827,
        "releases": {
            "previous": "6421e1f0bc6156611c7120f5e6996b3bb262a62e",
            "next": "6421e1f0bc6156611c7120f5e6996b3bb262a62e"
        },
        "commit_message": "Support null PROXY_USERNAME\nSupport SSL Hostname verification\nUpdate request host and port in SSL Context\nCorrect order of TLS handler vs Proxy handler\n\nCo-authored-by: olotenko <Oleksandr.Otenko@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "6421e1f0bc6156611c7120f5e6996b3bb262a62e": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)",
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)"
                ]
            },
            "08bfa501655cc54e4c61eb34dd03a26dd7f7aec5": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.initChannel(SocketChannel ch)",
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e97da048ab155b3ebf9e1bbacfc2c74af3a7b798",
        "previous_commit": "9ce03df12030cea7026a9c560bc34848802f689b",
        "date": 1631193127,
        "releases": {
            "previous": "e97da048ab155b3ebf9e1bbacfc2c74af3a7b798",
            "next": "e97da048ab155b3ebf9e1bbacfc2c74af3a7b798"
        },
        "commit_message": "Remove com.sun.org.apache.xml.internal (#4812)\n\n* Remove com.sun.org.apache.xml.internal\r\n\r\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>\r\nCo-authored-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e97da048ab155b3ebf9e1bbacfc2c74af3a7b798": {
                "ext/wadl-doclet/src/main/java/org/glassfish/jersey/wadl/doclet/DocletUtils.java": [
                    "static boolean org.glassfish.jersey.wadl.doclet.DocletUtils.createOutputFile(String filePath, DocProcessor docProcessor, ResourceDocType result)",
                    "private static String[] org.glassfish.jersey.wadl.doclet.DocletUtils.getCDataElements(DocProcessor docProcessor)"
                ]
            },
            "9ce03df12030cea7026a9c560bc34848802f689b": {
                "ext/wadl-doclet/src/main/java/org/glassfish/jersey/wadl/doclet/DocletUtils.java": [
                    "static boolean org.glassfish.jersey.wadl.doclet.DocletUtils.createOutputFile(String filePath, DocProcessor docProcessor, ResourceDocType result)",
                    "private static String[] org.glassfish.jersey.wadl.doclet.DocletUtils.getCDataElements(DocProcessor docProcessor)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "fad4061c9fb450da199b5a89434af645723f0e8c",
        "previous_commit": "95c08d35331478ce47c4ae339c7f8542bf69fa22",
        "date": 1607004560,
        "releases": {
            "previous": "fad4061c9fb450da199b5a89434af645723f0e8c",
            "next": "fad4061c9fb450da199b5a89434af645723f0e8c"
        },
        "commit_message": "Keep ordering of classes and instances retrieved from ComponentBag\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "fad4061c9fb450da199b5a89434af645723f0e8c": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/ComponentBag.java": [
                    "public Set<Object> org.glassfish.jersey.model.internal.ComponentBag.getInstances(final Predicate<ContractProvider> filter)",
                    "public Set<Class<?>> org.glassfish.jersey.model.internal.ComponentBag.getClasses(final Predicate<ContractProvider> filter)"
                ]
            },
            "95c08d35331478ce47c4ae339c7f8542bf69fa22": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/ComponentBag.java": [
                    "public Set<Object> org.glassfish.jersey.model.internal.ComponentBag.getInstances(final Predicate<ContractProvider> filter)",
                    "public Set<Class<?>> org.glassfish.jersey.model.internal.ComponentBag.getClasses(final Predicate<ContractProvider> filter)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "1633a258bc133c6147a51cde10a443d73cfdca65",
        "previous_commit": "3a364bcd9bab1850faefbff683e0dd7876e81aaa",
        "date": 1671523882,
        "releases": {
            "previous": "1633a258bc133c6147a51cde10a443d73cfdca65",
            "next": "1633a258bc133c6147a51cde10a443d73cfdca65"
        },
        "commit_message": "faster RuntimeType.toLowerCase in PropertiesHelper\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "1633a258bc133c6147a51cde10a443d73cfdca65": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/PropertiesHelper.java": [
                    "public static String org.glassfish.jersey.internal.util.PropertiesHelper.getPropertyNameForRuntime(String key, RuntimeType runtimeType)",
                    "public static <T> T org.glassfish.jersey.internal.util.PropertiesHelper.getValue(Map<String, ?> properties, RuntimeType runtimeType, String key, Class<T> type, Map<String, String> legacyMap)"
                ]
            },
            "3a364bcd9bab1850faefbff683e0dd7876e81aaa": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/PropertiesHelper.java": [
                    "public static String org.glassfish.jersey.internal.util.PropertiesHelper.getPropertyNameForRuntime(String key, RuntimeType runtimeType)",
                    "public static <T> T org.glassfish.jersey.internal.util.PropertiesHelper.getValue(Map<String, ?> properties, RuntimeType runtimeType, String key, Class<T> type, Map<String, String> legacyMap)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "4787e763a79fd4816524b8e70dc9a41b65f8670c",
        "previous_commit": "a41590ee543f2cb984c01b1cd8e6411c952fe30b",
        "date": 1559052919,
        "releases": {
            "previous": "4787e763a79fd4816524b8e70dc9a41b65f8670c",
            "next": "4787e763a79fd4816524b8e70dc9a41b65f8670c"
        },
        "commit_message": "Fix ValidationErrorMessageBodyWriter (#4136)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "4787e763a79fd4816524b8e70dc9a41b65f8670c": {
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/ValidationErrorMessageBodyWriter.java": [
                    "public void org.glassfish.jersey.server.validation.internal.ValidationErrorMessageBodyWriter.writeTo(final Object entity, final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)",
                    "private static boolean org.glassfish.jersey.server.validation.internal.ValidationErrorMessageBodyWriter.isSupportedType(final Class<?> type, final Type genericType)"
                ]
            },
            "a41590ee543f2cb984c01b1cd8e6411c952fe30b": {
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/ValidationErrorMessageBodyWriter.java": [
                    "public void org.glassfish.jersey.server.validation.internal.ValidationErrorMessageBodyWriter.writeTo(final Object entity, final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)",
                    "private boolean org.glassfish.jersey.server.validation.internal.ValidationErrorMessageBodyWriter.isSupportedType(final Class<?> type, final Type genericType)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "5b352d86ae3504d92d6a723dfba0e7c0ef67ffa0",
        "previous_commit": "cd44d035c23d7003dc94a6cc4873efaf35a1bc7d",
        "date": 1651236737,
        "releases": {
            "previous": "5b352d86ae3504d92d6a723dfba0e7c0ef67ffa0",
            "next": "5b352d86ae3504d92d6a723dfba0e7c0ef67ffa0"
        },
        "commit_message": "Blocked thread if WebApplicationException is reused. #4097 (#5035)\n\n* Blocked thread if WebApplicationException is reused. #4097\r\n\r\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "5b352d86ae3504d92d6a723dfba0e7c0ef67ffa0": {
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/internal/ResponseWriter.java": [
                    "public void org.glassfish.jersey.servlet.internal.ResponseWriter.failure(final Throwable error)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/model/internal/AbstractJavaResourceMethodDispatcher.java": [
                    "public final Response org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(Object resource, ContainerRequest request)"
                ]
            },
            "cd44d035c23d7003dc94a6cc4873efaf35a1bc7d": {
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/internal/ResponseWriter.java": [
                    "public void org.glassfish.jersey.servlet.internal.ResponseWriter.failure(final Throwable error)"
                ],
                "core-server/src/main/java/org/glassfish/jersey/server/model/internal/AbstractJavaResourceMethodDispatcher.java": [
                    "public final Response org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(Object resource, ContainerRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "21115d45121bc8ad3dd8e1f20499b7ada87573b4",
        "previous_commit": "bdb0dd05560d7611b1650ef35fab468323da8a56",
        "date": 1640011749,
        "releases": {
            "previous": "21115d45121bc8ad3dd8e1f20499b7ada87573b4",
            "next": "21115d45121bc8ad3dd8e1f20499b7ada87573b4"
        },
        "commit_message": "Prevent loading Feature/DynamicFeature services multiple times.\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "21115d45121bc8ad3dd8e1f20499b7ada87573b4": {
                "core-common/src/main/java/org/glassfish/jersey/internal/DynamicFeatureConfigurator.java": [
                    "public void org.glassfish.jersey.internal.DynamicFeatureConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/FeatureConfigurator.java": [
                    "public void org.glassfish.jersey.internal.FeatureConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ]
            },
            "bdb0dd05560d7611b1650ef35fab468323da8a56": {
                "core-common/src/main/java/org/glassfish/jersey/internal/DynamicFeatureConfigurator.java": [
                    "public void org.glassfish.jersey.internal.DynamicFeatureConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ],
                "core-common/src/main/java/org/glassfish/jersey/internal/FeatureConfigurator.java": [
                    "public void org.glassfish.jersey.internal.FeatureConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "ed233c5af83901758d1ddc4e9555575c4c66986b",
        "previous_commit": "04857d723829d9832201980ff3005aad064d0410",
        "date": 1718707404,
        "releases": {
            "previous": "ed233c5af83901758d1ddc4e9555575c4c66986b",
            "next": "ed233c5af83901758d1ddc4e9555575c4c66986b"
        },
        "commit_message": "Prevent blowing connections number for reoccurring SSLContextFatories (#5677)\n\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "ed233c5af83901758d1ddc4e9555575c4c66986b": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "public SSLSocketFactory org.glassfish.jersey.client.internal.HttpUrlConnector.get()",
                    "protected void org.glassfish.jersey.client.internal.HttpUrlConnector.setSslContextFactory(Client client, ClientRequest request)"
                ]
            },
            "04857d723829d9832201980ff3005aad064d0410": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private void org.glassfish.jersey.client.internal.HttpUrlConnector.setSslContextFactory(Client client, ClientRequest request)",
                    "public SSLSocketFactory org.glassfish.jersey.client.internal.HttpUrlConnector.get()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e17b2b171470706f87a53e79abee92db7b7e608c",
        "previous_commit": "a19a446bd6428d62db181349775d99fe8b687c49",
        "date": 1582111861,
        "releases": {
            "previous": "e17b2b171470706f87a53e79abee92db7b7e608c",
            "next": "e17b2b171470706f87a53e79abee92db7b7e608c"
        },
        "commit_message": "Fixed stacktraces caused by incorrect JNDI lookup (#4373)\n\n* Fixed processing default local interface\r\n  - cause:\r\n    - the stateless bean implemented some interface from library\r\n    - the interface was annotated only with @Path\r\n    - neither interface nor class was annotated by @Local or @Remote (then @Local is implicit in ejb3.2)\r\n\r\n* Implemented support of Stateless.name attribute\r\n  - it is used in JNDI names on Payara\r\n\r\n* Limited default local interfaces\r\n  - partial impl of the ejb 3.2 spec 4.9.7, some interfaces are not allowed\r\n\r\nSigned-off-by: David Matejcek <dmatej@seznam.cz>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e17b2b171470706f87a53e79abee92db7b7e608c": {
                "containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java": [
                    "private static List<Class> org.glassfish.jersey.gf.ejb.internal.EjbComponentProvider.remoteAndLocalIfaces(final Class<?> resourceClass)",
                    "public T org.glassfish.jersey.gf.ejb.internal.EjbComponentProvider.get()"
                ]
            },
            "a19a446bd6428d62db181349775d99fe8b687c49": {
                "containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java": [
                    "private static List<Class> org.glassfish.jersey.gf.ejb.internal.EjbComponentProvider.remoteAndLocalIfaces(final Class<?> resourceClass)",
                    "public T org.glassfish.jersey.gf.ejb.internal.EjbComponentProvider.get()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "7a19e1e48d2204a58a9368698fe463e09f96034b",
        "previous_commit": "02c355218cb5fd34c150f8dabe2f856cbd2b2c3e",
        "date": 1625228421,
        "releases": {
            "previous": "7a19e1e48d2204a58a9368698fe463e09f96034b",
            "next": "7a19e1e48d2204a58a9368698fe463e09f96034b"
        },
        "commit_message": "handle URISyntaxException in JettyHttpContainer (#4809)\n\nSigned-off-by: aserkes <andrii.serkes@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "7a19e1e48d2204a58a9368698fe463e09f96034b": {
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainer.java": [
                    "public void org.glassfish.jersey.jetty.JettyHttpContainer.handle(final String target, final Request request, final HttpServletRequest httpServletRequest, final HttpServletResponse httpServletResponse)",
                    "private URI org.glassfish.jersey.jetty.JettyHttpContainer.getRequestUri(final Request request, final URI baseUri)"
                ]
            },
            "02c355218cb5fd34c150f8dabe2f856cbd2b2c3e": {
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainer.java": [
                    "public void org.glassfish.jersey.jetty.JettyHttpContainer.handle(final String target, final Request request, final HttpServletRequest httpServletRequest, final HttpServletResponse httpServletResponse)",
                    "private URI org.glassfish.jersey.jetty.JettyHttpContainer.getRequestUri(final Request request, final URI baseUri)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "4a70e661b1c29808b9a078399ac25bf0a2d79f75",
        "previous_commit": "bb56997f4a48981efed8bd949ef88e97f79d5419",
        "date": 1603797552,
        "releases": {
            "previous": "4a70e661b1c29808b9a078399ac25bf0a2d79f75",
            "next": "4a70e661b1c29808b9a078399ac25bf0a2d79f75"
        },
        "commit_message": "NettyConnector connection close\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "4a70e661b1c29808b9a078399ac25bf0a2d79f75": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)"
                ]
            },
            "bb56997f4a48981efed8bd949ef88e97f79d5419": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "a843c05f14c328b59d5f66d2f2d4eb7d97d0d2b6",
        "previous_commit": "b4497f5907e0de5cb570bbc4a78752011bcbbb07",
        "date": 1561384025,
        "releases": {
            "previous": "a843c05f14c328b59d5f66d2f2d4eb7d97d0d2b6",
            "next": "a843c05f14c328b59d5f66d2f2d4eb7d97d0d2b6"
        },
        "commit_message": "PAYARA-3121 Jersey Crashes for EJB Classes of Same Name (#3950)\n\n* PAYARA-3121 Jersey Crashes for EJB Classes of Same Name\r\n\r\nSigned-off-by: Gaurav Gupta <gaurav.gupta.jc@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "a843c05f14c328b59d5f66d2f2d4eb7d97d0d2b6": {
                "containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java": [
                    "private static Object org.glassfish.jersey.gf.ejb.internal.EjbComponentProvider.lookupFullyQualifiedForm( InitialContext ic, Class<?> rawType, String name, EjbComponentProvider provider)"
                ]
            },
            "b4497f5907e0de5cb570bbc4a78752011bcbbb07": {
                "containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java": [
                    "private static Object org.glassfish.jersey.gf.ejb.internal.EjbComponentProvider.lookupFullyQualifiedForm(InitialContext ic, Class<?> c, String name, EjbComponentProvider provider)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "d40956adc5dda0ca9f12f9de5d524d3ace4668d2",
        "previous_commit": "c169c8437f28675d0c970b903007c7c0f28c7115",
        "date": 1530714120,
        "releases": {
            "previous": "d40956adc5dda0ca9f12f9de5d524d3ace4668d2",
            "next": "d40956adc5dda0ca9f12f9de5d524d3ace4668d2"
        },
        "commit_message": "Allow the same Jersey client to be used for both authenticated and non-authenticated URLs (#3858)\n\nSigned-off-by: agherardi <alessandro.gherardi@yahoo.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "d40956adc5dda0ca9f12f9de5d524d3ace4668d2": {
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/BasicAuthenticator.java": [
                    "public void org.glassfish.jersey.client.authentication.BasicAuthenticator.filterRequest(ClientRequestContext request)"
                ]
            },
            "c169c8437f28675d0c970b903007c7c0f28c7115": {
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/BasicAuthenticator.java": [
                    "public void org.glassfish.jersey.client.authentication.BasicAuthenticator.filterRequest(ClientRequestContext request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "a83d288f3952b92a6a713ffc74ac22165a973fbd",
        "previous_commit": "e114d5ed8bd48a750e98e517112bb5dceb739ef2",
        "date": 1656679737,
        "releases": {
            "previous": "a83d288f3952b92a6a713ffc74ac22165a973fbd",
            "next": "a83d288f3952b92a6a713ffc74ac22165a973fbd"
        },
        "commit_message": "Support ClientProperties.PROXY_URI & al in HttpUrlConnector (#5091)\n\n* Support for proxy in HttpUrlConnector\r\n\r\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "a83d288f3952b92a6a713ffc74ac22165a973fbd": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            },
            "e114d5ed8bd48a750e98e517112bb5dceb739ef2": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "99042d68a65c7ae30138d06ec75a0c61863a67cf",
        "previous_commit": "3381fe05ae4cd123a5c45f368e289bf0e06e59d7",
        "date": 1683700361,
        "releases": {
            "previous": "99042d68a65c7ae30138d06ec75a0c61863a67cf",
            "next": "99042d68a65c7ae30138d06ec75a0c61863a67cf"
        },
        "commit_message": "Handle equals and hashCode delegating its calls to the InvocationHandler objects\n\nSigned-off-by: Steffen Nie\u00dfing <zuniquex@protonmail.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "99042d68a65c7ae30138d06ec75a0c61863a67cf": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ProxyInvocationHandler.java": [
                    "public Object org.glassfish.jersey.microprofile.restclient.ProxyInvocationHandler.invoke(Object proxy, Method method, Object[] args)"
                ]
            },
            "3381fe05ae4cd123a5c45f368e289bf0e06e59d7": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/ProxyInvocationHandler.java": [
                    "public Object org.glassfish.jersey.microprofile.restclient.ProxyInvocationHandler.invoke(Object proxy, Method method, Object[] args)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "98c4d44765f1b7b5f67053b8ff3c2a1f46c47b89",
        "previous_commit": "ed78313193d0fd311ba82b44c4b58cbb2017511c",
        "date": 1567515384,
        "releases": {
            "previous": "98c4d44765f1b7b5f67053b8ff3c2a1f46c47b89",
            "next": "98c4d44765f1b7b5f67053b8ff3c2a1f46c47b89"
        },
        "commit_message": "Fix issue with OSGi when having package name starting with \"class\" (#4235)\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "98c4d44765f1b7b5f67053b8ff3c2a1f46c47b89": {
                "core-common/src/main/java/org/glassfish/jersey/internal/OsgiRegistry.java": [
                    "public static String org.glassfish.jersey.internal.OsgiRegistry.bundleEntryPathToClassName(String packagePath, String bundleEntryPath)"
                ]
            },
            "ed78313193d0fd311ba82b44c4b58cbb2017511c": {
                "core-common/src/main/java/org/glassfish/jersey/internal/OsgiRegistry.java": [
                    "public static String org.glassfish.jersey.internal.OsgiRegistry.bundleEntryPathToClassName(String packagePath, String bundleEntryPath)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "ece67085495ed5fc89b0e17b1d644c84226a6b32",
        "previous_commit": "9904d82b0e7ad5f1a17bc10bf7eca6c72f664dbd",
        "date": 1600757925,
        "releases": {
            "previous": "ece67085495ed5fc89b0e17b1d644c84226a6b32",
            "next": "ece67085495ed5fc89b0e17b1d644c84226a6b32"
        },
        "commit_message": "Response.hasEntity to return true if buffered after readEntity\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "ece67085495ed5fc89b0e17b1d644c84226a6b32": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InboundMessageContext.java": [
                    "public boolean org.glassfish.jersey.message.internal.InboundMessageContext.hasEntity()"
                ]
            },
            "9904d82b0e7ad5f1a17bc10bf7eca6c72f664dbd": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/InboundMessageContext.java": [
                    "public boolean org.glassfish.jersey.message.internal.InboundMessageContext.hasEntity()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "310db2c89cde2b80a967f49130b4db651ee52c48",
        "previous_commit": "6f425d9cd75192c09dc7e0233d35938d561e15b0",
        "date": 1550184892,
        "releases": {
            "previous": "310db2c89cde2b80a967f49130b4db651ee52c48",
            "next": "310db2c89cde2b80a967f49130b4db651ee52c48"
        },
        "commit_message": "jersey-3992 CDI Bean created (but fails) when interface has @Path annotation\n\nSigned-off-by: Gaurav Gupta <gaurav.gupta.jc@gmail.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "310db2c89cde2b80a967f49130b4db651ee52c48": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "public boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.bind(final Class<?> clazz, final Set<Class<?>> providerContracts)"
                ]
            },
            "6f425d9cd75192c09dc7e0233d35938d561e15b0": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "public boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.bind(final Class<?> clazz, final Set<Class<?>> providerContracts)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "95c08d35331478ce47c4ae339c7f8542bf69fa22",
        "previous_commit": "684bbf85f996121ff0a1ba2b16a383f18bbf6e9f",
        "date": 1606735130,
        "releases": {
            "previous": "95c08d35331478ce47c4ae339c7f8542bf69fa22",
            "next": "95c08d35331478ce47c4ae339c7f8542bf69fa22"
        },
        "commit_message": "Support for new property to ignore responses in exceptions thrown by the Client API. If the property jersey.config.client.ignoreExceptionResponse is set to true, any response in an exception thrown by the Client API will be mapped to an empty response that only includes the status code of the original one. This is to prevent accidental leaks of confidential data.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "95c08d35331478ce47c4ae339c7f8542bf69fa22": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "private ProcessingException org.glassfish.jersey.client.JerseyInvocation.convertToException(final Response response)"
                ]
            },
            "684bbf85f996121ff0a1ba2b16a383f18bbf6e9f": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "private ProcessingException org.glassfish.jersey.client.JerseyInvocation.convertToException(final Response response)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "b86c80e9f9b3b4c5a18e7f702af8266df8ff049d",
        "previous_commit": "eb39448ae8a0d5ec1ef13ce241d8c28c513a0ec4",
        "date": 1574243385,
        "releases": {
            "previous": "b86c80e9f9b3b4c5a18e7f702af8266df8ff049d",
            "next": "b86c80e9f9b3b4c5a18e7f702af8266df8ff049d"
        },
        "commit_message": "Performance improvement in Resource.Builder#mergeResources (#4300)\n\n* Performance improvement in Resource.Builder#mergeResources\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "b86c80e9f9b3b4c5a18e7f702af8266df8ff049d": {
                "core-server/src/main/java/org/glassfish/jersey/server/model/Resource.java": [
                    "private static List<Resource.Data> org.glassfish.jersey.server.model.Resource.mergeResources(List<Resource.Data> resources)"
                ]
            },
            "eb39448ae8a0d5ec1ef13ce241d8c28c513a0ec4": {
                "core-server/src/main/java/org/glassfish/jersey/server/model/Resource.java": [
                    "private static List<Resource.Data> org.glassfish.jersey.server.model.Resource.mergeResources(List<Resource.Data> resources)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "aea2d4b87ddd0eb68b2d7b899ba48508be42205f",
        "previous_commit": "3716939adb721351e01b78bc54845b97bb6c836d",
        "date": 1638458077,
        "releases": {
            "previous": "aea2d4b87ddd0eb68b2d7b899ba48508be42205f",
            "next": "aea2d4b87ddd0eb68b2d7b899ba48508be42205f"
        },
        "commit_message": "Better handling of MicroProfile Rest Client Proxies (#4918)\n\nSigned-off-by: Andrew Pielage <pandrex247@hotmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "aea2d4b87ddd0eb68b2d7b899ba48508be42205f": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public RestClientBuilder org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.proxyAddress(String proxyHost, int proxyPort)"
                ]
            },
            "3716939adb721351e01b78bc54845b97bb6c836d": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public RestClientBuilder org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.proxyAddress(String proxyHost, int proxyPort)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "0aacf79db307c1954add652ee65dbf0af2b215d3",
        "previous_commit": "08c5fa2a52bed4374ce54c21a173365513d24a21",
        "date": 1551191458,
        "releases": {
            "previous": "0aacf79db307c1954add652ee65dbf0af2b215d3",
            "next": "0aacf79db307c1954add652ee65dbf0af2b215d3"
        },
        "commit_message": "Issue 4068 Empty Encoding fix\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "0aacf79db307c1954add652ee65dbf0af2b215d3": {
                "core-server/src/main/java/org/glassfish/jersey/server/filter/EncodingFilter.java": [
                    "public void org.glassfish.jersey.server.filter.EncodingFilter.filter(ContainerRequestContext request, ContainerResponseContext response)"
                ]
            },
            "08c5fa2a52bed4374ce54c21a173365513d24a21": {
                "core-server/src/main/java/org/glassfish/jersey/server/filter/EncodingFilter.java": [
                    "public void org.glassfish.jersey.server.filter.EncodingFilter.filter(ContainerRequestContext request, ContainerResponseContext response)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "2703ee5dae88e2884716fe6ba76f43cc6f4167a6",
        "previous_commit": "4106350bf4232b00abb3d29c10795f37d459a95e",
        "date": 1642514354,
        "releases": {
            "previous": "2703ee5dae88e2884716fe6ba76f43cc6f4167a6",
            "next": "2703ee5dae88e2884716fe6ba76f43cc6f4167a6"
        },
        "commit_message": "Enable percent encoding servlet context path and servlet path\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "2703ee5dae88e2884716fe6ba76f43cc6f4167a6": {
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java": [
                    "protected void org.glassfish.jersey.servlet.ServletContainer.service(final HttpServletRequest request, final HttpServletResponse response)"
                ]
            },
            "4106350bf4232b00abb3d29c10795f37d459a95e": {
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java": [
                    "protected void org.glassfish.jersey.servlet.ServletContainer.service(final HttpServletRequest request, final HttpServletResponse response)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "22aa92e8531d78c71c2a0693ce5d0174fb41bd2f",
        "previous_commit": "26b131b2c6a95ca3ae324028d1b69d44dd96bc4f",
        "date": 1714464335,
        "releases": {
            "previous": "22aa92e8531d78c71c2a0693ce5d0174fb41bd2f",
            "next": "22aa92e8531d78c71c2a0693ce5d0174fb41bd2f"
        },
        "commit_message": "prevent synchronized blocking the virtual threads in JDK21\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "22aa92e8531d78c71c2a0693ce5d0174fb41bd2f": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/CommittingOutputStream.java": [
                    "private void org.glassfish.jersey.message.internal.CommittingOutputStream.flushBuffer(boolean endOfStream)"
                ]
            },
            "26b131b2c6a95ca3ae324028d1b69d44dd96bc4f": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/CommittingOutputStream.java": [
                    "private void org.glassfish.jersey.message.internal.CommittingOutputStream.flushBuffer(boolean endOfStream)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "74781a97fb818e0400c3e1b025992d31dbe4380b",
        "previous_commit": "9c5b68801e8d7561e42a12ddbe82abe45f9635a0",
        "date": 1712902234,
        "releases": {
            "previous": "74781a97fb818e0400c3e1b025992d31dbe4380b",
            "next": "74781a97fb818e0400c3e1b025992d31dbe4380b"
        },
        "commit_message": "Prevent Jackson failing while loading Modules (classloader issues)\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "74781a97fb818e0400c3e1b025992d31dbe4380b": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/DefaultJacksonJaxbJsonProvider.java": [
                    "private List<Module> org.glassfish.jersey.jackson.internal.DefaultJacksonJaxbJsonProvider.filterModules()"
                ]
            },
            "9c5b68801e8d7561e42a12ddbe82abe45f9635a0": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/DefaultJacksonJaxbJsonProvider.java": [
                    "private List<Module> org.glassfish.jersey.jackson.internal.DefaultJacksonJaxbJsonProvider.filterModules()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "14b674aaf1abe6540ea08c38e166d6b0b8b42131",
        "previous_commit": "e8cb0d8caf86aa9580b153d57757dd249739b503",
        "date": 1532959588,
        "releases": {
            "previous": "14b674aaf1abe6540ea08c38e166d6b0b8b42131",
            "next": "14b674aaf1abe6540ea08c38e166d6b0b8b42131"
        },
        "commit_message": "(master branch) fix for issue 3872 (#3897)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "14b674aaf1abe6540ea08c38e166d6b0b8b42131": {
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseySseBroadcaster.java": [
                    "public CompletionStage<?> org.glassfish.jersey.media.sse.internal.JerseySseBroadcaster.broadcast(final OutboundSseEvent event)"
                ]
            },
            "e8cb0d8caf86aa9580b153d57757dd249739b503": {
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseySseBroadcaster.java": [
                    "public CompletionStage<?> org.glassfish.jersey.media.sse.internal.JerseySseBroadcaster.broadcast(final OutboundSseEvent event)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "da45922dca0f151e2253b1124f5fc9f751904550",
        "previous_commit": "1e6c6929be44a8a52ff0c2c14fec42cbf2522e6d",
        "date": 1659418506,
        "releases": {
            "previous": "da45922dca0f151e2253b1124f5fc9f751904550",
            "next": "da45922dca0f151e2253b1124f5fc9f751904550"
        },
        "commit_message": "[grizzly] Expose `start` argument while providing `parentContext` (#5101)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "da45922dca0f151e2253b1124f5fc9f751904550": {
                "containers/grizzly2-http/src/main/java/org/glassfish/jersey/grizzly2/httpserver/GrizzlyHttpServerFactory.java": [
                    "public static HttpServer org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpServerFactory.createHttpServer(final URI uri, final ResourceConfig config, final boolean secure, final SSLEngineConfigurator sslEngineConfigurator, final Object parentContext, final boolean start)"
                ]
            },
            "1e6c6929be44a8a52ff0c2c14fec42cbf2522e6d": {
                "containers/grizzly2-http/src/main/java/org/glassfish/jersey/grizzly2/httpserver/GrizzlyHttpServerFactory.java": [
                    "public static HttpServer org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpServerFactory.createHttpServer(final URI uri, final ResourceConfig config, final boolean secure, final SSLEngineConfigurator sslEngineConfigurator, final Object parentContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "ef947586907d30039f49ade4e23e3b34d9b9ddf6",
        "previous_commit": "f9a8431854f87fa652576a4cc32ad7e26c145afe",
        "date": 1589194354,
        "releases": {
            "previous": "ef947586907d30039f49ade4e23e3b34d9b9ddf6",
            "next": "ef947586907d30039f49ade4e23e3b34d9b9ddf6"
        },
        "commit_message": "Activate useSystemProperties into ApacheConnector (#4458) (#4459)\n\nSigned-off-by: Julien Blondeau <lounagen@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "ef947586907d30039f49ade4e23e3b34d9b9ddf6": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "private HttpClientConnectionManager org.glassfish.jersey.apache.connector.ApacheConnector.getConnectionManager(final Client client, final Configuration config, final SSLContext sslContext)"
                ]
            },
            "f9a8431854f87fa652576a4cc32ad7e26c145afe": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "private HttpClientConnectionManager org.glassfish.jersey.apache.connector.ApacheConnector.getConnectionManager(final Client client, final Configuration config, final SSLContext sslContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "500c0d74258248777ffa0d5b19cffff5e0edf1fc",
        "previous_commit": "35fea2f4e403a861b406155e4a698a9fdf328f4f",
        "date": 1610648247,
        "releases": {
            "previous": "500c0d74258248777ffa0d5b19cffff5e0edf1fc",
            "next": "500c0d74258248777ffa0d5b19cffff5e0edf1fc"
        },
        "commit_message": "Jetty synchronous max buffer size property (#4677)\n\n* Adds a new jetty specific client property to set the max response buffer size. If property is not set, the old code path is used and exception is thrown for large responses (bigger than 2MiB).\r\nThis addresses the immediate paint point and is least invasive. Exception is still thrown if response size is too big even for the custom size. Since this behaviour differs from async path it might be a good idea to just\r\nreplace it completely in some major release.\r\n\r\nSigned-off-by: Klemen Ferjancic <cen.is.imba@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "500c0d74258248777ffa0d5b19cffff5e0edf1fc": {
                "connectors/jetty-connector/src/main/java/org/glassfish/jersey/jetty/connector/JettyConnector.java": [
                    "public ClientResponse org.glassfish.jersey.jetty.connector.JettyConnector.apply(final ClientRequest jerseyRequest)"
                ]
            },
            "35fea2f4e403a861b406155e4a698a9fdf328f4f": {
                "connectors/jetty-connector/src/main/java/org/glassfish/jersey/jetty/connector/JettyConnector.java": [
                    "public ClientResponse org.glassfish.jersey.jetty.connector.JettyConnector.apply(final ClientRequest jerseyRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "ec363949b77f1f647249658e14832f06d978f2e2",
        "previous_commit": "41d01b883c1871659365108d2acc270ce12f8176",
        "date": 1713266729,
        "releases": {
            "previous": "ec363949b77f1f647249658e14832f06d978f2e2",
            "next": "ec363949b77f1f647249658e14832f06d978f2e2"
        },
        "commit_message": "ObjectMapper.findModules throws Error\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "ec363949b77f1f647249658e14832f06d978f2e2": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/DefaultJacksonJaxbJsonProvider.java": [
                    "private List<Module> org.glassfish.jersey.jackson.internal.DefaultJacksonJaxbJsonProvider.filterModules()"
                ]
            },
            "41d01b883c1871659365108d2acc270ce12f8176": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/DefaultJacksonJaxbJsonProvider.java": [
                    "private List<Module> org.glassfish.jersey.jackson.internal.DefaultJacksonJaxbJsonProvider.filterModules()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "492073617588f994a4534572e713f59b82a3eb47",
        "previous_commit": "1ec382fee9ce0be1763fa9798f10b7d624a7b3dc",
        "date": 1628764427,
        "releases": {
            "previous": "492073617588f994a4534572e713f59b82a3eb47",
            "next": "492073617588f994a4534572e713f59b82a3eb47"
        },
        "commit_message": "Prevent NoSuchMethodError when used MP Rest Client 1.4 API & CDI (#4835)\n\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "492073617588f994a4534572e713f59b82a3eb47": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientProducer.java": [
                    "public Object org.glassfish.jersey.microprofile.restclient.RestClientProducer.create(CreationalContext<Object> creationalContext)"
                ]
            },
            "1ec382fee9ce0be1763fa9798f10b7d624a7b3dc": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientProducer.java": [
                    "public Object org.glassfish.jersey.microprofile.restclient.RestClientProducer.create(CreationalContext<Object> creationalContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e11e0861c4431cffceb1cadad06d6e649dcbd0b7",
        "previous_commit": "e17b2b171470706f87a53e79abee92db7b7e608c",
        "date": 1582119160,
        "releases": {
            "previous": "e11e0861c4431cffceb1cadad06d6e649dcbd0b7",
            "next": "e11e0861c4431cffceb1cadad06d6e649dcbd0b7"
        },
        "commit_message": "Allow HK2 AbstractBinder class to bind before the Feature is called (#4394)\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e11e0861c4431cffceb1cadad06d6e649dcbd0b7": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "public void org.glassfish.jersey.model.internal.CommonConfig.configureMetaProviders(InjectionManager injectionManager, ManagedObjectsFinalizer finalizer)"
                ]
            },
            "e17b2b171470706f87a53e79abee92db7b7e608c": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "public void org.glassfish.jersey.model.internal.CommonConfig.configureMetaProviders(InjectionManager injectionManager, ManagedObjectsFinalizer finalizer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8a484d26217c2f30e484f9f4b91436051d3ee94b",
        "previous_commit": "b13c518249bf4991a87e27c14c0bbda8ff15ff9c",
        "date": 1670269421,
        "releases": {
            "previous": "8a484d26217c2f30e484f9f4b91436051d3ee94b",
            "next": "8a484d26217c2f30e484f9f4b91436051d3ee94b"
        },
        "commit_message": "Use Java 11 InputStream::readAllBytes to read String entities\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "8a484d26217c2f30e484f9f4b91436051d3ee94b": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/ReaderWriter.java": [
                    "public static String org.glassfish.jersey.message.internal.ReaderWriter.readFromAsString(InputStream in, MediaType type)"
                ]
            },
            "b13c518249bf4991a87e27c14c0bbda8ff15ff9c": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/ReaderWriter.java": [
                    "public static String org.glassfish.jersey.message.internal.ReaderWriter.readFromAsString(InputStream in, MediaType type)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "5319e7975ad83e22abc6021a6dcb99e524888dd5",
        "previous_commit": "45c6ac10fe0668c7170e86c6bdd76ffe1ec86626",
        "date": 1528094745,
        "releases": {
            "previous": "5319e7975ad83e22abc6021a6dcb99e524888dd5",
            "next": "5319e7975ad83e22abc6021a6dcb99e524888dd5"
        },
        "commit_message": "PAYARA-2518 addAnnotatedType now provide ID to prevent warning\n\nSigned-off-by: jGauravGupta <gaurav.gupta.jc@gmail.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "5319e7975ad83e22abc6021a6dcb99e524888dd5": {
                "ext/cdi/jersey-cdi1x-servlet/src/main/java/org/glassfish/jersey/ext/cdi1x/servlet/internal/CdiExternalRequestScopeExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.servlet.internal.CdiExternalRequestScopeExtension.beforeBeanDiscovery(@Observes BeforeBeanDiscovery beforeBeanDiscoveryEvent, final BeanManager beanManager)"
                ]
            },
            "45c6ac10fe0668c7170e86c6bdd76ffe1ec86626": {
                "ext/cdi/jersey-cdi1x-servlet/src/main/java/org/glassfish/jersey/ext/cdi1x/servlet/internal/CdiExternalRequestScopeExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.servlet.internal.CdiExternalRequestScopeExtension.beforeBeanDiscovery(@Observes BeforeBeanDiscovery beforeBeanDiscoveryEvent, final BeanManager beanManager)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "6b87643f8b974af6bd600e4d58a026c3a0f5e33d",
        "previous_commit": "f0e0106dc24663294fdc9d787981c118c2236d99",
        "date": 1617194166,
        "releases": {
            "previous": "6b87643f8b974af6bd600e4d58a026c3a0f5e33d",
            "next": "6b87643f8b974af6bd600e4d58a026c3a0f5e33d"
        },
        "commit_message": "Proper handling of chunked input streams in LoggingInterceptor (#4753)\n\nSigned-off-by: Denis Kurochkin <d.k.brazz@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "6b87643f8b974af6bd600e4d58a026c3a0f5e33d": {
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingInterceptor.java": [
                    "InputStream org.glassfish.jersey.logging.LoggingInterceptor.logInboundEntity(final StringBuilder b, InputStream stream, final Charset charset)"
                ]
            },
            "f0e0106dc24663294fdc9d787981c118c2236d99": {
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingInterceptor.java": [
                    "InputStream org.glassfish.jersey.logging.LoggingInterceptor.logInboundEntity(final StringBuilder b, InputStream stream, final Charset charset)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "4125a33598a0b19dab74d14a1c592ef428813817",
        "previous_commit": "ae9ca1f3cc7474d5def9450f27f3bd8d2bd43800",
        "date": 1529945997,
        "releases": {
            "previous": "4125a33598a0b19dab74d14a1c592ef428813817",
            "next": "4125a33598a0b19dab74d14a1c592ef428813817"
        },
        "commit_message": "Patch for client connection leak when using digest authentication (#3860)\n\nSigned-off-by: agherardi <alessandro.gherardi@yahoo.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "4125a33598a0b19dab74d14a1c592ef428813817": {
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/HttpAuthenticationFilter.java": [
                    "static boolean org.glassfish.jersey.client.authentication.HttpAuthenticationFilter.repeatRequest(ClientRequestContext request, ClientResponseContext response, String newAuthorizationHeader)"
                ]
            },
            "ae9ca1f3cc7474d5def9450f27f3bd8d2bd43800": {
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/HttpAuthenticationFilter.java": [
                    "static boolean org.glassfish.jersey.client.authentication.HttpAuthenticationFilter.repeatRequest(ClientRequestContext request, ClientResponseContext response, String newAuthorizationHeader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "733c52b40b8c057e38593d5761636b14d7ac96cb",
        "previous_commit": "a0c0421cc5a3d74cf03a634ea33b57102b269bd6",
        "date": 1666727759,
        "releases": {
            "previous": "733c52b40b8c057e38593d5761636b14d7ac96cb",
            "next": "733c52b40b8c057e38593d5761636b14d7ac96cb"
        },
        "commit_message": "warn less (just once for all clients) about missing providers\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "733c52b40b8c057e38593d5761636b14d7ac96cb": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/MessagingBinders.java": [
                    "private void org.glassfish.jersey.message.internal.MessagingBinders.bindToBinder(AbstractBinder binder)"
                ]
            },
            "a0c0421cc5a3d74cf03a634ea33b57102b269bd6": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/MessagingBinders.java": [
                    "private void org.glassfish.jersey.message.internal.MessagingBinders.bindToBinder(AbstractBinder binder)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "fecc6f003ad984a797b6d3bb4b8c9d1e71992707",
        "previous_commit": "06b1a6cae5d7720897bc726197de838f42441b04",
        "date": 1618575924,
        "releases": {
            "previous": "fecc6f003ad984a797b6d3bb4b8c9d1e71992707",
            "next": "fecc6f003ad984a797b6d3bb4b8c9d1e71992707"
        },
        "commit_message": "Updated properties for netty connection pooling\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "fecc6f003ad984a797b6d3bb4b8c9d1e71992707": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)"
                ]
            },
            "06b1a6cae5d7720897bc726197de838f42441b04": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "5417a872b2ad69afa33edb197ca4371425ecd957",
        "previous_commit": "0197f23de7b35a34d1be8ea6c8b330c0710e5800",
        "date": 1600945368,
        "releases": {
            "previous": "5417a872b2ad69afa33edb197ca4371425ecd957",
            "next": "5417a872b2ad69afa33edb197ca4371425ecd957"
        },
        "commit_message": "Expect:100-Continue header handling\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "5417a872b2ad69afa33edb197ca4371425ecd957": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            },
            "0197f23de7b35a34d1be8ea6c8b330c0710e5800": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "a7ea89bdbf09bd4439537c954c23a5b847818464",
        "previous_commit": "65b1770f5852430cba3b07107e70f4539f1c97a5",
        "date": 1572009174,
        "releases": {
            "previous": "a7ea89bdbf09bd4439537c954c23a5b847818464",
            "next": "a7ea89bdbf09bd4439537c954c23a5b847818464"
        },
        "commit_message": "Take Hk2CustomBoundTypesProvider into an account when skipping @Inject annotated fields for HK2\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "a7ea89bdbf09bd4439537c954c23a5b847818464": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/InjecteeSkippingAnalyzer.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.internal.InjecteeSkippingAnalyzer.addCdiInjectedFieldsToSkip(Set<Field> skippedFields, Set<Field> originalFields)"
                ]
            },
            "65b1770f5852430cba3b07107e70f4539f1c97a5": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/InjecteeSkippingAnalyzer.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.internal.InjecteeSkippingAnalyzer.addCdiInjectedFieldsToSkip(Set<Field> skippedFields, Set<Field> originalFields)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "ff7183d3ccce66b0c58ac99d3b0ee876123dd7a0",
        "previous_commit": "01d3f49ab0696c151163634cd58c35cc4e20a815",
        "date": 1532959727,
        "releases": {
            "previous": "ff7183d3ccce66b0c58ac99d3b0ee876123dd7a0",
            "next": "ff7183d3ccce66b0c58ac99d3b0ee876123dd7a0"
        },
        "commit_message": "JerseySseEventSource#register throws IllegalStateException (#3891)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "ff7183d3ccce66b0c58ac99d3b0ee876123dd7a0": {
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseySseEventSource.java": [
                    "private void org.glassfish.jersey.media.sse.internal.JerseySseEventSource.subscribe(final Consumer<Flow.Subscription> onSubscribe, final Consumer<InboundSseEvent> onEvent, final Consumer<Throwable> onError, final Runnable onComplete)"
                ]
            },
            "01d3f49ab0696c151163634cd58c35cc4e20a815": {
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseySseEventSource.java": [
                    "private void org.glassfish.jersey.media.sse.internal.JerseySseEventSource.subscribe(final Consumer<Flow.Subscription> onSubscribe, final Consumer<InboundSseEvent> onEvent, final Consumer<Throwable> onError, final Runnable onComplete)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "c0c2a10f51794e8f92027c680c857d5fb9de7298",
        "previous_commit": "787455a6c5305c22d5e9d71be8a6a7361219e28c",
        "date": 1600695204,
        "releases": {
            "previous": "c0c2a10f51794e8f92027c680c857d5fb9de7298",
            "next": "c0c2a10f51794e8f92027c680c857d5fb9de7298"
        },
        "commit_message": "Allow concurrent CompletionException & ExecutionException to be unwrapped for the ExceptionMapper\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "c0c2a10f51794e8f92027c680c857d5fb9de7298": {
                "core-server/src/main/java/org/glassfish/jersey/server/ServerRuntime.java": [
                    "private Response org.glassfish.jersey.server.ServerRuntime.mapException(final Throwable originalThrowable)"
                ]
            },
            "787455a6c5305c22d5e9d71be8a6a7361219e28c": {
                "core-server/src/main/java/org/glassfish/jersey/server/ServerRuntime.java": [
                    "private Response org.glassfish.jersey.server.ServerRuntime.mapException(final Throwable originalThrowable)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "1fe6b75e3ede08dc7502f9ca57f05ce0167a7391",
        "previous_commit": "21115d45121bc8ad3dd8e1f20499b7ada87573b4",
        "date": 1641479276,
        "releases": {
            "previous": "1fe6b75e3ede08dc7502f9ca57f05ce0167a7391",
            "next": "1fe6b75e3ede08dc7502f9ca57f05ce0167a7391"
        },
        "commit_message": "Cache a lazy reference to OSGi registry instance\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "1fe6b75e3ede08dc7502f9ca57f05ce0167a7391": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/ReflectionHelper.java": [
                    "public static OsgiRegistry org.glassfish.jersey.internal.util.ReflectionHelper.getOsgiRegistryInstance()"
                ]
            },
            "21115d45121bc8ad3dd8e1f20499b7ada87573b4": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/ReflectionHelper.java": [
                    "public static OsgiRegistry org.glassfish.jersey.internal.util.ReflectionHelper.getOsgiRegistryInstance()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "66f5cfa1804e4e29dac456744d41bc7e8b66ad57",
        "previous_commit": "068b3b23aaaa4eed5a02dfe210f8e09922074e76",
        "date": 1566568447,
        "releases": {
            "previous": "66f5cfa1804e4e29dac456744d41bc7e8b66ad57",
            "next": "66f5cfa1804e4e29dac456744d41bc7e8b66ad57"
        },
        "commit_message": "Fixes #3997 : Make SupplierFactoryBridge thread-safe.\n\nSigned-off-by: Francois JACQUES <fjacques@murex.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "66f5cfa1804e4e29dac456744d41bc7e8b66ad57": {
                "inject/hk2/src/main/java/org/glassfish/jersey/inject/hk2/SupplierFactoryBridge.java": [
                    "public void org.glassfish.jersey.inject.hk2.SupplierFactoryBridge<T>.dispose(T instance)"
                ]
            },
            "068b3b23aaaa4eed5a02dfe210f8e09922074e76": {
                "inject/hk2/src/main/java/org/glassfish/jersey/inject/hk2/SupplierFactoryBridge.java": [
                    "public void org.glassfish.jersey.inject.hk2.SupplierFactoryBridge<T>.dispose(T instance)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "3c6bc4be6979b50cf106e16a692847668018b017",
        "previous_commit": "2703ee5dae88e2884716fe6ba76f43cc6f4167a6",
        "date": 1642775325,
        "releases": {
            "previous": "3c6bc4be6979b50cf106e16a692847668018b017",
            "next": "3c6bc4be6979b50cf106e16a692847668018b017"
        },
        "commit_message": "convert Long,long,Integer,int values to Long/Integer types (issue4930)\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "3c6bc4be6979b50cf106e16a692847668018b017": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/PropertiesHelper.java": [
                    "public static <T> T org.glassfish.jersey.internal.util.PropertiesHelper.convertValue(Object value, Class<T> type)"
                ]
            },
            "2703ee5dae88e2884716fe6ba76f43cc6f4167a6": {
                "core-common/src/main/java/org/glassfish/jersey/internal/util/PropertiesHelper.java": [
                    "public static <T> T org.glassfish.jersey.internal.util.PropertiesHelper.convertValue(Object value, Class<T> type)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "c97f94456979e13d91db8bf4f0e3eed156f03a5b",
        "previous_commit": "ed233c5af83901758d1ddc4e9555575c4c66986b",
        "date": 1721115230,
        "releases": {
            "previous": "c97f94456979e13d91db8bf4f0e3eed156f03a5b",
            "next": "c97f94456979e13d91db8bf4f0e3eed156f03a5b"
        },
        "commit_message": "Last-Modified header is garbled when accessing wadl document on Japanese locale (#5698)\n\n* Last-Modified header is garbled when accessing wadl document on Japanese locale\r\nSigned-off-by: Vaibhav Vishal <vaibhav.vishal@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "c97f94456979e13d91db8bf4f0e3eed156f03a5b": {
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/internal/WadlResource.java": [
                    "public synchronized Response org.glassfish.jersey.server.wadl.internal.WadlResource.getWadl(@Context UriInfo uriInfo)"
                ]
            },
            "ed233c5af83901758d1ddc4e9555575c4c66986b": {
                "core-server/src/main/java/org/glassfish/jersey/server/wadl/internal/WadlResource.java": [
                    "public synchronized Response org.glassfish.jersey.server.wadl.internal.WadlResource.getWadl(@Context UriInfo uriInfo)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "0ee0533409b3b32b700f4f38f4c9c3846d38eb70",
        "previous_commit": "e4fbf49383b3a187ad24725774e10018625ed7b0",
        "date": 1553779991,
        "releases": {
            "previous": "0ee0533409b3b32b700f4f38f4c9c3846d38eb70",
            "next": "0ee0533409b3b32b700f4f38f4c9c3846d38eb70"
        },
        "commit_message": "Break from looping over FormDataBodyParts once first match is found. (#4030)\n\n* Break from looping over FormDataBodyParts once first match is found. No need to finish loop.\r\n\r\nSigned-off-by: Caleb Larsen <calebglarsen@gmail.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "0ee0533409b3b32b700f4f38f4c9c3846d38eb70": {
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/FormDataMultiPart.java": [
                    "public FormDataBodyPart org.glassfish.jersey.media.multipart.FormDataMultiPart.getField(String name)"
                ]
            },
            "e4fbf49383b3a187ad24725774e10018625ed7b0": {
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/FormDataMultiPart.java": [
                    "public FormDataBodyPart org.glassfish.jersey.media.multipart.FormDataMultiPart.getField(String name)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "a41590ee543f2cb984c01b1cd8e6411c952fe30b",
        "previous_commit": "85a497722d9e12c3565db66c8bf1d33b1af435fd",
        "date": 1558517820,
        "releases": {
            "previous": "a41590ee543f2cb984c01b1cd8e6411c952fe30b",
            "next": "a41590ee543f2cb984c01b1cd8e6411c952fe30b"
        },
        "commit_message": "Change SpringComponentProvider to look for beans in current and parent contexts (#4080)\n\nSigned-off-by: Adarsh Ramamurthy <adarsh.ramamurthy@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "a41590ee543f2cb984c01b1cd8e6411c952fe30b": {
                "ext/spring4/src/main/java/org/glassfish/jersey/server/spring/SpringComponentProvider.java": [
                    "public boolean org.glassfish.jersey.server.spring.SpringComponentProvider.bind(Class<?> component, Set<Class<?>> providerContracts)"
                ]
            },
            "85a497722d9e12c3565db66c8bf1d33b1af435fd": {
                "ext/spring4/src/main/java/org/glassfish/jersey/server/spring/SpringComponentProvider.java": [
                    "public boolean org.glassfish.jersey.server.spring.SpringComponentProvider.bind(Class<?> component, Set<Class<?>> providerContracts)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "f3cadb38dcc5b20e515706fae68dce533ad6c737",
        "previous_commit": "360d69d4cbda29dec7c0dee92dbc1b1204090594",
        "date": 1614854210,
        "releases": {
            "previous": "f3cadb38dcc5b20e515706fae68dce533ad6c737",
            "next": "f3cadb38dcc5b20e515706fae68dce533ad6c737"
        },
        "commit_message": "switching to NIO tmp file creation approach (#4712)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "f3cadb38dcc5b20e515706fae68dce533ad6c737": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/Utils.java": [
                    "public static File org.glassfish.jersey.message.internal.Utils.createTempFile()"
                ]
            },
            "360d69d4cbda29dec7c0dee92dbc1b1204090594": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/Utils.java": [
                    "public static File org.glassfish.jersey.message.internal.Utils.createTempFile()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "28a89ce35ed184437b67d1fa9e9e62e18d68a7f9",
        "previous_commit": "aea2d4b87ddd0eb68b2d7b899ba48508be42205f",
        "date": 1638781411,
        "releases": {
            "previous": "28a89ce35ed184437b67d1fa9e9e62e18d68a7f9",
            "next": "28a89ce35ed184437b67d1fa9e9e62e18d68a7f9"
        },
        "commit_message": "Refactor processResponseError in ServerRuntime\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "28a89ce35ed184437b67d1fa9e9e62e18d68a7f9": {
                "core-server/src/main/java/org/glassfish/jersey/server/ServerRuntime.java": [
                    "private boolean org.glassfish.jersey.server.ServerRuntime.processResponseError(final Throwable responseError)"
                ]
            },
            "aea2d4b87ddd0eb68b2d7b899ba48508be42205f": {
                "core-server/src/main/java/org/glassfish/jersey/server/ServerRuntime.java": [
                    "private boolean org.glassfish.jersey.server.ServerRuntime.processResponseError(final Throwable responseError)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "6da18bd048559bb04975c7e9f4cdf6de5fc59eec",
        "previous_commit": "b752b3c0bc60a24a9a67a9bcb8d09b66b2e30d1e",
        "date": 1724761486,
        "releases": {
            "previous": "6da18bd048559bb04975c7e9f4cdf6de5fc59eec",
            "next": "6da18bd048559bb04975c7e9f4cdf6de5fc59eec"
        },
        "commit_message": "Allow to disable JSON-B using System properties\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "6da18bd048559bb04975c7e9f4cdf6de5fc59eec": {
                "media/json-binding/src/main/java/org/glassfish/jersey/jsonb/JsonBindingFeature.java": [
                    "public boolean org.glassfish.jersey.jsonb.JsonBindingFeature.configure(final FeatureContext context)"
                ]
            },
            "b752b3c0bc60a24a9a67a9bcb8d09b66b2e30d1e": {
                "media/json-binding/src/main/java/org/glassfish/jersey/jsonb/JsonBindingFeature.java": [
                    "public boolean org.glassfish.jersey.jsonb.JsonBindingFeature.configure(final FeatureContext context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "a3b24abf71ff284e2cf1124647e2181f4042c37f",
        "previous_commit": "dfd0ee7755d6e2408f53c81b19286ce80fa89658",
        "date": 1630664535,
        "releases": {
            "previous": "a3b24abf71ff284e2cf1124647e2181f4042c37f",
            "next": "a3b24abf71ff284e2cf1124647e2181f4042c37f"
        },
        "commit_message": "add possibility to use entity with http method Options in requests according to the RFC 7231 (#4837)\n\n* add possibility to use entity with http method Options in requests according to the RFC 7231\r\n\r\nSigned-off-by: aserkes <andrii.serkes@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "a3b24abf71ff284e2cf1124647e2181f4042c37f": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "private static Map<String, EntityPresence> org.glassfish.jersey.client.JerseyInvocation.initializeMap()"
                ]
            },
            "dfd0ee7755d6e2408f53c81b19286ce80fa89658": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyInvocation.java": [
                    "private static Map<String, EntityPresence> org.glassfish.jersey.client.JerseyInvocation.initializeMap()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "c7e8476605702e8775e7c1f6eb96439aa6ae00bd",
        "previous_commit": "b38e6e885b7d793ee99018dc229be2963dd9f2fa",
        "date": 1568026214,
        "releases": {
            "previous": "c7e8476605702e8775e7c1f6eb96439aa6ae00bd",
            "next": "c7e8476605702e8775e7c1f6eb96439aa6ae00bd"
        },
        "commit_message": "Content-type is not set when entity is not present. (#4246)\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "c7e8476605702e8775e7c1f6eb96439aa6ae00bd": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "Object org.glassfish.jersey.microprofile.restclient.MethodModel.invokeMethod(WebTarget classLevelTarget, Method method, Object[] args)"
                ]
            },
            "b38e6e885b7d793ee99018dc229be2963dd9f2fa": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "Object org.glassfish.jersey.microprofile.restclient.MethodModel.invokeMethod(WebTarget classLevelTarget, Method method, Object[] args)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "684bbf85f996121ff0a1ba2b16a383f18bbf6e9f",
        "previous_commit": "c1263e09ad867e88cf0596930d1e81917f997a48",
        "date": 1604051546,
        "releases": {
            "previous": "684bbf85f996121ff0a1ba2b16a383f18bbf6e9f",
            "next": "684bbf85f996121ff0a1ba2b16a383f18bbf6e9f"
        },
        "commit_message": "HttpUrlConnector extension (#4613)\n\n* Created HttpUrlConnector extension for Http100Continue\r\n\r\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "684bbf85f996121ff0a1ba2b16a383f18bbf6e9f": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            },
            "c1263e09ad867e88cf0596930d1e81917f997a48": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "4106350bf4232b00abb3d29c10795f37d459a95e",
        "previous_commit": "e84b5e897a459ee76693498290dade0709e182fd",
        "date": 1642501145,
        "releases": {
            "previous": "4106350bf4232b00abb3d29c10795f37d459a95e",
            "next": "4106350bf4232b00abb3d29c10795f37d459a95e"
        },
        "commit_message": "extended condition not to add the content-length header negative (#4967)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "4106350bf4232b00abb3d29c10795f37d459a95e": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "public ClientResponse org.glassfish.jersey.apache.connector.ApacheConnector.apply(final ClientRequest clientRequest)"
                ]
            },
            "e84b5e897a459ee76693498290dade0709e182fd": {
                "connectors/apache-connector/src/main/java/org/glassfish/jersey/apache/connector/ApacheConnector.java": [
                    "public ClientResponse org.glassfish.jersey.apache.connector.ApacheConnector.apply(final ClientRequest clientRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "065d21270092d6bed7b2dabbe1f65e0933372b80",
        "previous_commit": "12a057315292a624ceb31b58bd04eec3cb19a819",
        "date": 1530006459,
        "releases": {
            "previous": "065d21270092d6bed7b2dabbe1f65e0933372b80",
            "next": "065d21270092d6bed7b2dabbe1f65e0933372b80"
        },
        "commit_message": "Issue 3828 (#3841)\n\n* jersey build without examples and some old licences\r\n* issue 3828\r\n\r\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "065d21270092d6bed7b2dabbe1f65e0933372b80": {
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseySseEventSource.java": [
                    "protected Builder org.glassfish.jersey.media.sse.internal.JerseySseEventSource.target(final WebTarget endpoint)"
                ]
            },
            "12a057315292a624ceb31b58bd04eec3cb19a819": {
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseySseEventSource.java": [
                    "protected Builder org.glassfish.jersey.media.sse.internal.JerseySseEventSource.target(final WebTarget endpoint)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "706c01c799862dee86b9465de64baef44cf61ce7",
        "previous_commit": "f2ccfd54bd6a7717fd23d2ea572cf9cf1bfe0ba8",
        "date": 1581978103,
        "releases": {
            "previous": "706c01c799862dee86b9465de64baef44cf61ce7",
            "next": "706c01c799862dee86b9465de64baef44cf61ce7"
        },
        "commit_message": "Query parameters were not included in netty URI (#4393)\n\n* Query parameters were not included in netty URI\r\n\r\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>\r\n\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "706c01c799862dee86b9465de64baef44cf61ce7": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "public Future<?> org.glassfish.jersey.netty.connector.NettyConnector.apply(final ClientRequest jerseyRequest, final AsyncConnectorCallback jerseyCallback)"
                ]
            },
            "f2ccfd54bd6a7717fd23d2ea572cf9cf1bfe0ba8": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "public Future<?> org.glassfish.jersey.netty.connector.NettyConnector.apply(final ClientRequest jerseyRequest, final AsyncConnectorCallback jerseyCallback)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "d2b7b65b8f9baa8ed3069f083890badb63911dd9",
        "previous_commit": "73206d9f963014fe4be5d4ab97bd78f69792d08a",
        "date": 1618215962,
        "releases": {
            "previous": "d2b7b65b8f9baa8ed3069f083890badb63911dd9",
            "next": "d2b7b65b8f9baa8ed3069f083890badb63911dd9"
        },
        "commit_message": "Lazy synchronized SSL Context initialization in the HttpUrlConnector\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "d2b7b65b8f9baa8ed3069f083890badb63911dd9": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "protected void org.glassfish.jersey.client.internal.HttpUrlConnector.secureConnection(final JerseyClient client, final HttpURLConnection uc)"
                ]
            },
            "73206d9f963014fe4be5d4ab97bd78f69792d08a": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "protected void org.glassfish.jersey.client.internal.HttpUrlConnector.secureConnection(final JerseyClient client, final HttpURLConnection uc)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "02a869f992098d108e2336d26528cea086f1b5a8",
        "previous_commit": "8105415f9a6356de774c8ffe6ab5dfa77934b69f",
        "date": 1701936076,
        "releases": {
            "previous": "02a869f992098d108e2336d26528cea086f1b5a8",
            "next": "02a869f992098d108e2336d26528cea086f1b5a8"
        },
        "commit_message": "Prevent connection from being stuck\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "02a869f992098d108e2336d26528cea086f1b5a8": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)"
                ]
            },
            "8105415f9a6356de774c8ffe6ab5dfa77934b69f": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected void org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest, final Set<URI> redirectUriHistory, final CompletableFuture<ClientResponse> responseAvailable)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "1e6c6929be44a8a52ff0c2c14fec42cbf2522e6d",
        "previous_commit": "8cf7cab8e3c44ab02a758790eb9a7d37f106d8d8",
        "date": 1659349072,
        "releases": {
            "previous": "1e6c6929be44a8a52ff0c2c14fec42cbf2522e6d",
            "next": "1e6c6929be44a8a52ff0c2c14fec42cbf2522e6d"
        },
        "commit_message": "Make sure the parent 'responseFuture' CompletableFuture is completed.\nThis ensures that the jettyRequest.abort() operation is actually performed.\n\nCurrent situation prevent this code to be ever called as only the chained CompletableFuture is completed.\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "1e6c6929be44a8a52ff0c2c14fec42cbf2522e6d": {
                "connectors/jetty-connector/src/main/java/org/glassfish/jersey/jetty/connector/JettyConnector.java": [
                    "public Future<?> org.glassfish.jersey.jetty.connector.JettyConnector.apply(final ClientRequest jerseyRequest, final AsyncConnectorCallback callback)"
                ]
            },
            "8cf7cab8e3c44ab02a758790eb9a7d37f106d8d8": {
                "connectors/jetty-connector/src/main/java/org/glassfish/jersey/jetty/connector/JettyConnector.java": [
                    "public Future<?> org.glassfish.jersey.jetty.connector.JettyConnector.apply(final ClientRequest jerseyRequest, final AsyncConnectorCallback callback)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "a3ece8941048338484382dfffbdb6a36b9cb2978",
        "previous_commit": "7ad68ff37df43b5ce878bc14592b333e5826fd61",
        "date": 1537892738,
        "releases": {
            "previous": "a3ece8941048338484382dfffbdb6a36b9cb2978",
            "next": "a3ece8941048338484382dfffbdb6a36b9cb2978"
        },
        "commit_message": "Jersey dependencies version upgrade (part I)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "a3ece8941048338484382dfffbdb6a36b9cb2978": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/jackson/jaxrs/util/EndpointAsBeanProperty.java": [
                    "public Std org.glassfish.jersey.jackson.internal.jackson.jaxrs.util.EndpointAsBeanProperty.withType(JavaType type)"
                ]
            },
            "7ad68ff37df43b5ce878bc14592b333e5826fd61": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/jackson/jaxrs/util/EndpointAsBeanProperty.java": [
                    "public Std org.glassfish.jersey.jackson.internal.jackson.jaxrs.util.EndpointAsBeanProperty.withType(JavaType type)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "6ed5a4a74740acb6dd10ae8daf88e19022d9854f",
        "previous_commit": "420ae2835acd9abb92b576a358f1a1202207bb04",
        "date": 1560511055,
        "releases": {
            "previous": "6ed5a4a74740acb6dd10ae8daf88e19022d9854f",
            "next": "6ed5a4a74740acb6dd10ae8daf88e19022d9854f"
        },
        "commit_message": "remove redundant IF/ELSE (#4151)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "6ed5a4a74740acb6dd10ae8daf88e19022d9854f": {
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/NettyResponseWriter.java": [
                    "public synchronized OutputStream org.glassfish.jersey.netty.httpserver.NettyResponseWriter.writeResponseStatusAndHeaders(long contentLength, ContainerResponse responseContext)"
                ]
            },
            "420ae2835acd9abb92b576a358f1a1202207bb04": {
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/NettyResponseWriter.java": [
                    "public synchronized OutputStream org.glassfish.jersey.netty.httpserver.NettyResponseWriter.writeResponseStatusAndHeaders(long contentLength, ContainerResponse responseContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "39966173253740a2a1ac55426a280f72efdad682",
        "previous_commit": "d264efa962bba12d4ec67e4fd8d95c6d7c342933",
        "date": 1608204906,
        "releases": {
            "previous": "39966173253740a2a1ac55426a280f72efdad682",
            "next": "39966173253740a2a1ac55426a280f72efdad682"
        },
        "commit_message": "Fix custom SSLSocketFactory not being set because of an unsafe lazy-initialization in JDK (#4566)\n\n* Avoid unsafe lazy-initialization for SSL sockets\r\n\r\nThis prevents calling HttpsURLConnection.getDefaultSSLSocketFactory() in\r\nan unsafe manner due to the poorly implemented lazy-initialization on\r\nthe JDK.\r\n\r\nWhen multiple threads call that method concurrently (calling\r\nsecureConnection()) the SSLSocketFactory is instantiated two times,\r\nmaking one thread fail the check and overriding the custom socket\r\nfactory with the default one.\r\n\r\nAlso-by: Kevin Conaway <kevin.conaway@walmart.com>\r\nSigned-off-by: Adrian Haasler Garc\u00eda <adrian.haasler@amplia.es>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "39966173253740a2a1ac55426a280f72efdad682": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "protected void org.glassfish.jersey.client.internal.HttpUrlConnector.secureConnection(final JerseyClient client, final HttpURLConnection uc)"
                ]
            },
            "d264efa962bba12d4ec67e4fd8d95c6d7c342933": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "protected void org.glassfish.jersey.client.internal.HttpUrlConnector.secureConnection(final JerseyClient client, final HttpURLConnection uc)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "132b55f338e60601767cd2a4c3b833f5d487840b",
        "previous_commit": "be13798788ba24af0d7de151bb2d763de85cce8a",
        "date": 1714109982,
        "releases": {
            "previous": "132b55f338e60601767cd2a4c3b833f5d487840b",
            "next": "132b55f338e60601767cd2a4c3b833f5d487840b"
        },
        "commit_message": "Prevent NPE in Jersey Spring RequestContextFilter\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "132b55f338e60601767cd2a4c3b833f5d487840b": {
                "ext/spring5/src/main/java/org/glassfish/jersey/server/spring/scope/RequestContextFilter.java": [
                    "public void org.glassfish.jersey.server.spring.scope.RequestContextFilter.resetAttributes(final ContainerRequestContext requestContext)"
                ]
            },
            "be13798788ba24af0d7de151bb2d763de85cce8a": {
                "ext/spring5/src/main/java/org/glassfish/jersey/server/spring/scope/RequestContextFilter.java": [
                    "public void org.glassfish.jersey.server.spring.scope.RequestContextFilter.resetAttributes(final ContainerRequestContext requestContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "6b189b318a5f93ca553ade95109bc5afa4dfb681",
        "previous_commit": "12a057315292a624ceb31b58bd04eec3cb19a819",
        "date": 1524816211,
        "releases": {
            "previous": "6b189b318a5f93ca553ade95109bc5afa4dfb681",
            "next": "6b189b318a5f93ca553ade95109bc5afa4dfb681"
        },
        "commit_message": "issue 3804 fix (SelectableEntityFiltering when the fields specified is . character)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "6b189b318a5f93ca553ade95109bc5afa4dfb681": {
                "ext/entity-filtering/src/main/java/org/glassfish/jersey/message/filtering/SelectableScopeResolver.java": [
                    "private Set<String> org.glassfish.jersey.message.filtering.SelectableScopeResolver.getScopesForField(final String fieldName)"
                ]
            },
            "12a057315292a624ceb31b58bd04eec3cb19a819": {
                "ext/entity-filtering/src/main/java/org/glassfish/jersey/message/filtering/SelectableScopeResolver.java": [
                    "private Set<String> org.glassfish.jersey.message.filtering.SelectableScopeResolver.getScopesForField(final String fieldName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "d68be87e47de7aaf83ced0c52a12bff6d2535f9c",
        "previous_commit": "204c945d5929c522c7da214026be41c6eda381ae",
        "date": 1623661902,
        "releases": {
            "previous": "d68be87e47de7aaf83ced0c52a12bff6d2535f9c",
            "next": "d68be87e47de7aaf83ced0c52a12bff6d2535f9c"
        },
        "commit_message": "Fix issue NullPointerException in HeaderUtils.getPreferredCookie #4773 (#4795)\n\n* Fix issue #4773\r\n\r\nSigned-off-by: tvallin <thibault.vallin@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "d68be87e47de7aaf83ced0c52a12bff6d2535f9c": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/HeaderUtils.java": [
                    "public static NewCookie org.glassfish.jersey.message.internal.HeaderUtils.getPreferredCookie(NewCookie first, NewCookie second)"
                ]
            },
            "204c945d5929c522c7da214026be41c6eda381ae": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/HeaderUtils.java": [
                    "public static NewCookie org.glassfish.jersey.message.internal.HeaderUtils.getPreferredCookie(NewCookie first, NewCookie second)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8a4ee718d4366f61cd0afaf8ebdf944e1cb2fbe9",
        "previous_commit": "9bb2e8dffe2ee307dde151b35f3b98fc81782d4c",
        "date": 1647609415,
        "releases": {
            "previous": "8a4ee718d4366f61cd0afaf8ebdf944e1cb2fbe9",
            "next": "8a4ee718d4366f61cd0afaf8ebdf944e1cb2fbe9"
        },
        "commit_message": "Fix regression on LoggingFeature's max entity size (#5007)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "8a4ee718d4366f61cd0afaf8ebdf944e1cb2fbe9": {
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingInterceptor.java": [
                    "public void org.glassfish.jersey.logging.LoggingInterceptor.write(byte[] ba, int off, int len)"
                ]
            },
            "9bb2e8dffe2ee307dde151b35f3b98fc81782d4c": {
                "core-common/src/main/java/org/glassfish/jersey/logging/LoggingInterceptor.java": [
                    "public void org.glassfish.jersey.logging.LoggingInterceptor.write(byte[] ba, int off, int len)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "3b1d207c9dc1379410713ac930c7675e132efb58",
        "previous_commit": "5417a872b2ad69afa33edb197ca4371425ecd957",
        "date": 1600945368,
        "releases": {
            "previous": "3b1d207c9dc1379410713ac930c7675e132efb58",
            "next": "3b1d207c9dc1379410713ac930c7675e132efb58"
        },
        "commit_message": "HTTP 100-Continue handling arranged\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "3b1d207c9dc1379410713ac930c7675e132efb58": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            },
            "5417a872b2ad69afa33edb197ca4371425ecd957": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private ClientResponse org.glassfish.jersey.client.internal.HttpUrlConnector._apply(final ClientRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8c9acd65357993cf1fd313fe103d182171e7df17",
        "previous_commit": "0709f2d67e30194de7eb9dc85b8390b1f94b95ae",
        "date": 1625288423,
        "releases": {
            "previous": "8c9acd65357993cf1fd313fe103d182171e7df17",
            "next": "8c9acd65357993cf1fd313fe103d182171e7df17"
        },
        "commit_message": "Connection timeout the double of what is configured (#4811)\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "8c9acd65357993cf1fd313fe103d182171e7df17": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private IOException org.glassfish.jersey.client.internal.HttpUrlConnector.handleException(ClientRequest request, IOException ex, HttpURLConnection uc)"
                ]
            },
            "0709f2d67e30194de7eb9dc85b8390b1f94b95ae": {
                "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java": [
                    "private IOException org.glassfish.jersey.client.internal.HttpUrlConnector.handleException(ClientRequest request, IOException ex, HttpURLConnection uc)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "5d377a4ccbd7d37564d955cab21ed69e6f003d95",
        "previous_commit": "75898f42dd995f382ff358451551e440e56845c6",
        "date": 1594896477,
        "releases": {
            "previous": "5d377a4ccbd7d37564d955cab21ed69e6f003d95",
            "next": "5d377a4ccbd7d37564d955cab21ed69e6f003d95"
        },
        "commit_message": "Wrapper adds flushBuffer\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "5d377a4ccbd7d37564d955cab21ed69e6f003d95": {
                "ext/mvc-jsp/src/main/java/org/glassfish/jersey/server/mvc/jsp/JspTemplateProcessor.java": [
                    "public void org.glassfish.jersey.server.mvc.jsp.JspTemplateProcessor.writeTo(final String templateReference, final Viewable viewable, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream out)"
                ]
            },
            "75898f42dd995f382ff358451551e440e56845c6": {
                "ext/mvc-jsp/src/main/java/org/glassfish/jersey/server/mvc/jsp/JspTemplateProcessor.java": [
                    "public void org.glassfish.jersey.server.mvc.jsp.JspTemplateProcessor.writeTo(final String templateReference, final Viewable viewable, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream out)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "ad1e0cd47ee6b97232d175df84ec63e6bcce337c",
        "previous_commit": "a542fa9f82b75b0cc4547fc221d5be180b7d3af3",
        "date": 1676552346,
        "releases": {
            "previous": "ad1e0cd47ee6b97232d175df84ec63e6bcce337c",
            "next": "ad1e0cd47ee6b97232d175df84ec63e6bcce337c"
        },
        "commit_message": "Warn only when ASM is not capable of handling java classes instead of throwing\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "ad1e0cd47ee6b97232d175df84ec63e6bcce337c": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/AnnotationAcceptingListener.java": [
                    "private void org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.accept(final ClassVisitor classVisitor, final int parsingOptions)"
                ]
            },
            "a542fa9f82b75b0cc4547fc221d5be180b7d3af3": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/AnnotationAcceptingListener.java": [
                    "private void org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.accept(final ClassVisitor classVisitor, final int parsingOptions)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "bb65db41830a2308a1c83ba90ec0b0dd804fd8c3",
        "previous_commit": "20f085e8e981d71b83f57a9e500cb0dca36f4253",
        "date": 1668429368,
        "releases": {
            "previous": "bb65db41830a2308a1c83ba90ec0b0dd804fd8c3",
            "next": "bb65db41830a2308a1c83ba90ec0b0dd804fd8c3"
        },
        "commit_message": "Exception in Jersey Jetty handler's Host header parsing bubbles up to the top #5189\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "bb65db41830a2308a1c83ba90ec0b0dd804fd8c3": {
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainer.java": [
                    "private URI org.glassfish.jersey.jetty.JettyHttpContainer.getBaseUri(final Request request)"
                ]
            },
            "20f085e8e981d71b83f57a9e500cb0dca36f4253": {
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainer.java": [
                    "private URI org.glassfish.jersey.jetty.JettyHttpContainer.getBaseUri(final Request request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "6380dc536c2d5b7bb92938aac13ca061b49a04b0",
        "previous_commit": "c97f94456979e13d91db8bf4f0e3eed156f03a5b",
        "date": 1721132866,
        "releases": {
            "previous": "6380dc536c2d5b7bb92938aac13ca061b49a04b0",
            "next": "6380dc536c2d5b7bb92938aac13ca061b49a04b0"
        },
        "commit_message": "Prevent NPE in micrometer when there is no response & 404\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "6380dc536c2d5b7bb92938aac13ca061b49a04b0": {
                "ext/micrometer/src/main/java/org/glassfish/jersey/micrometer/server/JerseyKeyValues.java": [
                    "static KeyValue org.glassfish.jersey.micrometer.server.JerseyKeyValues.uri(RequestEvent event)"
                ]
            },
            "c97f94456979e13d91db8bf4f0e3eed156f03a5b": {
                "ext/micrometer/src/main/java/org/glassfish/jersey/micrometer/server/JerseyKeyValues.java": [
                    "static KeyValue org.glassfish.jersey.micrometer.server.JerseyKeyValues.uri(RequestEvent event)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "7ee16ac362b424164a9579b5e8613d09bc37ce56",
        "previous_commit": "a36c3179e184f6a74810eedd2a484c803b4108f6",
        "date": 1540417698,
        "releases": {
            "previous": "7ee16ac362b424164a9579b5e8613d09bc37ce56",
            "next": "7ee16ac362b424164a9579b5e8613d09bc37ce56"
        },
        "commit_message": "Stop using deprecated CDI API (addAnnotatedType). Continue #3845\n\nChange-Id: Icb2e0f6a30d89c6d4c8cf34c892ad91b2583b536\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "7ee16ac362b424164a9579b5e8613d09bc37ce56": {
                "ext/cdi/jersey-cdi1x-validation/src/main/java/org/glassfish/jersey/ext/cdi1x/validation/internal/CdiInterceptorWrapperExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.validation.internal.CdiInterceptorWrapperExtension.beforeBeanDiscovery(@Observes BeforeBeanDiscovery beforeBeanDiscoveryEvent, final BeanManager beanManager)"
                ]
            },
            "a36c3179e184f6a74810eedd2a484c803b4108f6": {
                "ext/cdi/jersey-cdi1x-validation/src/main/java/org/glassfish/jersey/ext/cdi1x/validation/internal/CdiInterceptorWrapperExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.validation.internal.CdiInterceptorWrapperExtension.beforeBeanDiscovery(@Observes BeforeBeanDiscovery beforeBeanDiscoveryEvent, final BeanManager beanManager)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "da3473b03c64ef745b3e0083bd5e31c54a35198d",
        "previous_commit": "11d6c112a5391aed95ecc58d41058ac2f13e23bc",
        "date": 1589482745,
        "releases": {
            "previous": "da3473b03c64ef745b3e0083bd5e31c54a35198d",
            "next": "da3473b03c64ef745b3e0083bd5e31c54a35198d"
        },
        "commit_message": "Allow the user for overriding the default Viewable MediaType\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "da3473b03c64ef745b3e0083bd5e31c54a35198d": {
                "ext/mvc/src/main/java/org/glassfish/jersey/server/mvc/internal/ViewableMessageBodyWriter.java": [
                    "public void org.glassfish.jersey.server.mvc.internal.ViewableMessageBodyWriter.writeTo(final Viewable viewable, final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)"
                ]
            },
            "11d6c112a5391aed95ecc58d41058ac2f13e23bc": {
                "ext/mvc/src/main/java/org/glassfish/jersey/server/mvc/internal/ViewableMessageBodyWriter.java": [
                    "public void org.glassfish.jersey.server.mvc.internal.ViewableMessageBodyWriter.writeTo(final Viewable viewable, final Class<?> type, final Type genericType, final Annotation[] annotations, final MediaType mediaType, final MultivaluedMap<String, Object> httpHeaders, final OutputStream entityStream)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "34349dc60e93e4a88dba04df6264bdce8c48f25a",
        "previous_commit": "f42459fcb1777e02566d936b5474c3fac615b377",
        "date": 1682629391,
        "releases": {
            "previous": "34349dc60e93e4a88dba04df6264bdce8c48f25a",
            "next": "34349dc60e93e4a88dba04df6264bdce8c48f25a"
        },
        "commit_message": "Do not encode slash in templates in MP RestClient\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "34349dc60e93e4a88dba04df6264bdce8c48f25a": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/PathParamModel.java": [
                    "public WebTarget org.glassfish.jersey.microprofile.restclient.PathParamModel.handleParameter(WebTarget requestPart, Class<? extends Annotation> annotationClass, Object instance)"
                ]
            },
            "f42459fcb1777e02566d936b5474c3fac615b377": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/PathParamModel.java": [
                    "public WebTarget org.glassfish.jersey.microprofile.restclient.PathParamModel.handleParameter(WebTarget requestPart, Class<? extends Annotation> annotationClass, Object instance)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "830db2e818e7fb074657e71f2c82d43cccaa5226",
        "previous_commit": "bf950389f671162e10a6b9aa12e16e8756b85a4a",
        "date": 1610627042,
        "releases": {
            "previous": "830db2e818e7fb074657e71f2c82d43cccaa5226",
            "next": "830db2e818e7fb074657e71f2c82d43cccaa5226"
        },
        "commit_message": "Add support RFC 5987 for attribute filename* in HTTP header Content-Disposition (#4647)\n\nAdd support RFC 5987 for attribute filename* in HTTP header Content-Disposition\r\n\r\nSigned-off-by: Andrii Serkes <andrii.serkes@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "830db2e818e7fb074657e71f2c82d43cccaa5226": {
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/ContentDisposition.java": [
                    "private void org.glassfish.jersey.media.multipart.ContentDisposition.createParameters()"
                ]
            },
            "bf950389f671162e10a6b9aa12e16e8756b85a4a": {
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/ContentDisposition.java": [
                    "private void org.glassfish.jersey.media.multipart.ContentDisposition.createParameters()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "d19ed016962eeadea6711b457c15ea083d4bada4",
        "previous_commit": "f8ae76724ad7fccb22670f255cef3a0bb866df80",
        "date": 1600952518,
        "releases": {
            "previous": "d19ed016962eeadea6711b457c15ea083d4bada4",
            "next": "d19ed016962eeadea6711b457c15ea083d4bada4"
        },
        "commit_message": "attributeValue NPE handling\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "d19ed016962eeadea6711b457c15ea083d4bada4": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/monitoring/jmx/ExecutionStatisticsDynamicBean.java": [
                    "public AttributeList org.glassfish.jersey.server.internal.monitoring.jmx.ExecutionStatisticsDynamicBean.getAttributes(String[] attributes)"
                ]
            },
            "f8ae76724ad7fccb22670f255cef3a0bb866df80": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/monitoring/jmx/ExecutionStatisticsDynamicBean.java": [
                    "public AttributeList org.glassfish.jersey.server.internal.monitoring.jmx.ExecutionStatisticsDynamicBean.getAttributes(String[] attributes)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "5a2b2512c9f2480f5a8b792a7ff934045be7f288",
        "previous_commit": "9d96068c8c7f020fa4742e540649b38d986f9f1a",
        "date": 1694091504,
        "releases": {
            "previous": "5a2b2512c9f2480f5a8b792a7ff934045be7f288",
            "next": "5a2b2512c9f2480f5a8b792a7ff934045be7f288"
        },
        "commit_message": "Prevent Class Cast Exception in cases where two classloaders handle the same TracingLogger\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "5a2b2512c9f2480f5a8b792a7ff934045be7f288": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/TracingLogger.java": [
                    "public static TracingLogger org.glassfish.jersey.message.internal.TracingLogger.getInstance(final PropertiesDelegate propertiesDelegate)"
                ]
            },
            "9d96068c8c7f020fa4742e540649b38d986f9f1a": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/TracingLogger.java": [
                    "public static TracingLogger org.glassfish.jersey.message.internal.TracingLogger.getInstance(final PropertiesDelegate propertiesDelegate)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "18903fd5b45fd6e8896ffd228c983bfa9cc5a3b9",
        "previous_commit": "e0285356004f68dd05ebfad92b9a2db262d24065",
        "date": 1678090757,
        "releases": {
            "previous": "18903fd5b45fd6e8896ffd228c983bfa9cc5a3b9",
            "next": "18903fd5b45fd6e8896ffd228c983bfa9cc5a3b9"
        },
        "commit_message": "allow custom Content-Length for HEAD method\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "18903fd5b45fd6e8896ffd228c983bfa9cc5a3b9": {
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/NettyResponseWriter.java": [
                    "public synchronized OutputStream org.glassfish.jersey.netty.httpserver.NettyResponseWriter.writeResponseStatusAndHeaders(long contentLength, ContainerResponse responseContext)"
                ]
            },
            "e0285356004f68dd05ebfad92b9a2db262d24065": {
                "containers/netty-http/src/main/java/org/glassfish/jersey/netty/httpserver/NettyResponseWriter.java": [
                    "public synchronized OutputStream org.glassfish.jersey.netty.httpserver.NettyResponseWriter.writeResponseStatusAndHeaders(long contentLength, ContainerResponse responseContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "fc07c4a0001ad5b422f2e509e09d871099c9a7f9",
        "previous_commit": "728e7538b9c348c45c6611e22e8b42eb4a294eda",
        "date": 1611301410,
        "releases": {
            "previous": "fc07c4a0001ad5b422f2e509e09d871099c9a7f9",
            "next": "fc07c4a0001ad5b422f2e509e09d871099c9a7f9"
        },
        "commit_message": "Support arrays (#4684)\n\nSupport arrays\r\n\r\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "fc07c4a0001ad5b422f2e509e09d871099c9a7f9": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/inject/MultivaluedParameterExtractorFactory.java": [
                    "private MultivaluedParameterExtractor<?> org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process( final ParamConverterFactory paramConverterFactory, final String defaultValue, final Class<?> rawType, final Type type, final Annotation[] annotations, final String parameterName)"
                ]
            },
            "728e7538b9c348c45c6611e22e8b42eb4a294eda": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/inject/MultivaluedParameterExtractorFactory.java": [
                    "private MultivaluedParameterExtractor<?> org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process( final ParamConverterFactory paramConverterFactory, final String defaultValue, final Class<?> rawType, final Type type, final Annotation[] annotations, final String parameterName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "ff92b7e628bd398011aaae0f3c7b1aa148ea2bc4",
        "previous_commit": "c4adbb3d605c1b8cc0521142b58e3ec0ad496fcf",
        "date": 1722248552,
        "releases": {
            "previous": "ff92b7e628bd398011aaae0f3c7b1aa148ea2bc4",
            "next": "ff92b7e628bd398011aaae0f3c7b1aa148ea2bc4"
        },
        "commit_message": "Allow ChunkedInput#close to close the underlying stream\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "ff92b7e628bd398011aaae0f3c7b1aa148ea2bc4": {
                "core-client/src/main/java/org/glassfish/jersey/client/ChunkedInputReader.java": [
                    "public ChunkedInput org.glassfish.jersey.client.ChunkedInputReader.readFrom(Class<ChunkedInput> chunkedInputClass, Type type, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, String> headers, InputStream inputStream)"
                ]
            },
            "c4adbb3d605c1b8cc0521142b58e3ec0ad496fcf": {
                "core-client/src/main/java/org/glassfish/jersey/client/ChunkedInputReader.java": [
                    "public ChunkedInput org.glassfish.jersey.client.ChunkedInputReader.readFrom(Class<ChunkedInput> chunkedInputClass, Type type, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, String> headers, InputStream inputStream)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "46c086352bd9495b666bf7995da338e6bb7ba3e0",
        "previous_commit": "8c60fd2734c333cbca4dc9e0ab7d81306494532a",
        "date": 1557913118,
        "releases": {
            "previous": "46c086352bd9495b666bf7995da338e6bb7ba3e0",
            "next": "46c086352bd9495b666bf7995da338e6bb7ba3e0"
        },
        "commit_message": "Allow for registering HK2 AbstractBinder (#4122)\n\n* Allow for registering HK2 AbstractBinder to retain backward compatibility with 2.25.\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "46c086352bd9495b666bf7995da338e6bb7ba3e0": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "public void org.glassfish.jersey.model.internal.CommonConfig.configureMetaProviders(InjectionManager injectionManager, ManagedObjectsFinalizer finalizer)"
                ]
            },
            "8c60fd2734c333cbca4dc9e0ab7d81306494532a": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "public void org.glassfish.jersey.model.internal.CommonConfig.configureMetaProviders(InjectionManager injectionManager, ManagedObjectsFinalizer finalizer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "80951a42235dddefad901c664b67ca4edfcb05d7",
        "previous_commit": "6380dc536c2d5b7bb92938aac13ca061b49a04b0",
        "date": 1721132866,
        "releases": {
            "previous": "80951a42235dddefad901c664b67ca4edfcb05d7",
            "next": "80951a42235dddefad901c664b67ca4edfcb05d7"
        },
        "commit_message": "Backport a fix from micrometer repo for this\nhttps://github.com/micrometer-metrics/micrometer/commit/66c1d4772019146b47ac27e4bcdd324000cedc7f\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "80951a42235dddefad901c664b67ca4edfcb05d7": {
                "ext/micrometer/src/main/java/org/glassfish/jersey/micrometer/server/JerseyKeyValues.java": [
                    "static KeyValue org.glassfish.jersey.micrometer.server.JerseyKeyValues.uri(RequestEvent event)"
                ]
            },
            "6380dc536c2d5b7bb92938aac13ca061b49a04b0": {
                "ext/micrometer/src/main/java/org/glassfish/jersey/micrometer/server/JerseyKeyValues.java": [
                    "static KeyValue org.glassfish.jersey.micrometer.server.JerseyKeyValues.uri(RequestEvent event)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "4d881e92cce691125bb734b2b445aecfc29696b8",
        "previous_commit": "57de0c4142981981d562b7fb644b14712cc19337",
        "date": 1580220314,
        "releases": {
            "previous": "4d881e92cce691125bb734b2b445aecfc29696b8",
            "next": "4d881e92cce691125bb734b2b445aecfc29696b8"
        },
        "commit_message": "Issue #3801 Jersey-Bean-Validator-fails-to-inject-Weld-managed-beans\n\nSigned-off-by: David Matejcek <dmatej@seznam.cz>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "4d881e92cce691125bb734b2b445aecfc29696b8": {
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/ValidationBinder.java": [
                    "private ValidatorContext org.glassfish.jersey.server.validation.internal.ValidationBinder.getDefaultValidatorContext(final ValidateOnExecutionHandler handler)"
                ]
            },
            "57de0c4142981981d562b7fb644b14712cc19337": {
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/ValidationBinder.java": [
                    "private ValidatorContext org.glassfish.jersey.server.validation.internal.ValidationBinder.getDefaultValidatorContext(final ValidateOnExecutionHandler handler)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "360d69d4cbda29dec7c0dee92dbc1b1204090594",
        "previous_commit": "a87ae6a4b041b65bc4957726c1a0804d3441e934",
        "date": 1614244374,
        "releases": {
            "previous": "360d69d4cbda29dec7c0dee92dbc1b1204090594",
            "next": "360d69d4cbda29dec7c0dee92dbc1b1204090594"
        },
        "commit_message": "Add a wildcard @Produces and @Consumes for methods without message providers involved not to get 406/415.\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "360d69d4cbda29dec7c0dee92dbc1b1204090594": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/routing/MethodSelectingRouter.java": [
                    "private boolean org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.fillMediaTypes(final Set<MediaType> effectiveTypes, final ResourceMethod resourceMethod, final List<MediaType> methodTypes, final boolean inputTypes)"
                ]
            },
            "a87ae6a4b041b65bc4957726c1a0804d3441e934": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/routing/MethodSelectingRouter.java": [
                    "private boolean org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.fillMediaTypes(final Set<MediaType> effectiveTypes, final ResourceMethod resourceMethod, final List<MediaType> methodTypes, final boolean inputTypes)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "08a85c755d63d318e0f2f64cc7442d0042ababcd",
        "previous_commit": "4bdb30d76c7f30e71e957aa04b3fe6957c4d8394",
        "date": 1686831375,
        "releases": {
            "previous": "08a85c755d63d318e0f2f64cc7442d0042ababcd",
            "next": "08a85c755d63d318e0f2f64cc7442d0042ababcd"
        },
        "commit_message": "Update ParamConverters.java\n\nSee #5260",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "08a85c755d63d318e0f2f64cc7442d0042ababcd": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverters.java": [
                    "public String org.glassfish.jersey.internal.inject.ParamConverters.toString(final T value)"
                ]
            },
            "4bdb30d76c7f30e71e957aa04b3fe6957c4d8394": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverters.java": [
                    "public String org.glassfish.jersey.internal.inject.ParamConverters.toString(final T value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "a542fa9f82b75b0cc4547fc221d5be180b7d3af3",
        "previous_commit": "149650d032b195a632277d9862e8587645b093eb",
        "date": 1676552237,
        "releases": {
            "previous": "a542fa9f82b75b0cc4547fc221d5be180b7d3af3",
            "next": "a542fa9f82b75b0cc4547fc221d5be180b7d3af3"
        },
        "commit_message": "Jersey Microprofile RestClient - NullPointerException when a optional FormParam is null #5254\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "a542fa9f82b75b0cc4547fc221d5be180b7d3af3": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/FormParamModel.java": [
                    "Form org.glassfish.jersey.microprofile.restclient.FormParamModel.handleParameter(Form form, Class<? extends Annotation> annotationClass, Object instance)"
                ]
            },
            "149650d032b195a632277d9862e8587645b093eb": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/FormParamModel.java": [
                    "Form org.glassfish.jersey.microprofile.restclient.FormParamModel.handleParameter(Form form, Class<? extends Annotation> annotationClass, Object instance)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "08bfa501655cc54e4c61eb34dd03a26dd7f7aec5",
        "previous_commit": "01b88feb1d160e5f9877c323b3917f7d0878c1d8",
        "date": 1650892280,
        "releases": {
            "previous": "08bfa501655cc54e4c61eb34dd03a26dd7f7aec5",
            "next": "08bfa501655cc54e4c61eb34dd03a26dd7f7aec5"
        },
        "commit_message": "Enhancement for docprocessor (#5028)\n\nCo-authored-by: jm041977 <john.marquez@broadcom.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "08bfa501655cc54e4c61eb34dd03a26dd7f7aec5": {
                "ext/wadl-doclet/src/main/java12/org/glassfish/jersey/wadl/doclet/ResourceDoclet.java": [
                    "public boolean org.glassfish.jersey.wadl.doclet.ResourceDoclet.run(DocletEnvironment docEnv)"
                ]
            },
            "01b88feb1d160e5f9877c323b3917f7d0878c1d8": {
                "ext/wadl-doclet/src/main/java12/org/glassfish/jersey/wadl/doclet/ResourceDoclet.java": [
                    "public boolean org.glassfish.jersey.wadl.doclet.ResourceDoclet.run(DocletEnvironment docEnv)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "b99bc9c67d3fe691f3302a56b2d6899b5bad81d7",
        "previous_commit": "dbd36ce2e24d3060b11989a7a15d923287bbb945",
        "date": 1535967183,
        "releases": {
            "previous": "b99bc9c67d3fe691f3302a56b2d6899b5bad81d7",
            "next": "b99bc9c67d3fe691f3302a56b2d6899b5bad81d7"
        },
        "commit_message": "Update to Bean Validation 2.0 (Hibernate 6) (#3908)\n\n* Update to Bean Validation 2.0 (Hibernate 6)\r\n\r\nSigned-off-by: mszabo-wikia <mszabo@wikia-inc.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "b99bc9c67d3fe691f3302a56b2d6899b5bad81d7": {
                "ext/cdi/jersey-cdi1x-validation/src/main/java/org/glassfish/jersey/ext/cdi1x/validation/internal/CdiInterceptorWrapperExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.validation.internal.CdiInterceptorWrapperExtension.afterTypeDiscovery(@Observes final AfterTypeDiscovery afterTypeDiscovery)"
                ]
            },
            "dbd36ce2e24d3060b11989a7a15d923287bbb945": {
                "ext/cdi/jersey-cdi1x-validation/src/main/java/org/glassfish/jersey/ext/cdi1x/validation/internal/CdiInterceptorWrapperExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.validation.internal.CdiInterceptorWrapperExtension.afterTypeDiscovery(@Observes final AfterTypeDiscovery afterTypeDiscovery)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "6abc080a8dc9ccad9a08dcc342d79effdcf98bf0",
        "previous_commit": "11004cf368499e3d218008cf622ed9e67ca90d1a",
        "date": 1570021065,
        "releases": {
            "previous": "6abc080a8dc9ccad9a08dcc342d79effdcf98bf0",
            "next": "6abc080a8dc9ccad9a08dcc342d79effdcf98bf0"
        },
        "commit_message": "Throwing NoContentException when InputStream is empty\n\nSince JAX-RS 2.1 an MBR must react upon an empty stream either with an\nempty instance or with NoContentException, but Jersey's JSON-B MBR does\nneither - it simply throws ProcessingException:\n\n\"In case the entity input stream is empty, the reader is expected to either return a\nJava representation of a zero-length entity or throw a javax.ws.rs.core.NoContentException\nin case no zero-length entity representation is defined for the supported Java type.\"\n\nSigned-off-by: Markus KARG <markus@headcrashing.eu>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "6abc080a8dc9ccad9a08dcc342d79effdcf98bf0": {
                "media/json-binding/src/main/java/org/glassfish/jersey/jsonb/internal/JsonBindingProvider.java": [
                    "public Object org.glassfish.jersey.jsonb.internal.JsonBindingProvider.readFrom(Class<Object> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)"
                ]
            },
            "11004cf368499e3d218008cf622ed9e67ca90d1a": {
                "media/json-binding/src/main/java/org/glassfish/jersey/jsonb/internal/JsonBindingProvider.java": [
                    "public Object org.glassfish.jersey.jsonb.internal.JsonBindingProvider.readFrom(Class<Object> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "cb3d1cf99f9e738b5b512031d69a58b24c7cc452",
        "previous_commit": "97926d302436efe449ae0730d052e61b652cc583",
        "date": 1604049782,
        "releases": {
            "previous": "cb3d1cf99f9e738b5b512031d69a58b24c7cc452",
            "next": "cb3d1cf99f9e738b5b512031d69a58b24c7cc452"
        },
        "commit_message": "full clear of NettyInputStream\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "cb3d1cf99f9e738b5b512031d69a58b24c7cc452": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/internal/NettyInputStream.java": [
                    "public void org.glassfish.jersey.netty.connector.internal.NettyInputStream.clear()"
                ]
            },
            "97926d302436efe449ae0730d052e61b652cc583": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/internal/NettyInputStream.java": [
                    "public void org.glassfish.jersey.netty.connector.internal.NettyInputStream.clear()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "3a364bcd9bab1850faefbff683e0dd7876e81aaa",
        "previous_commit": "8c731ee874fbdaa9298850b202189983dcd76f21",
        "date": 1671520822,
        "releases": {
            "previous": "3a364bcd9bab1850faefbff683e0dd7876e81aaa",
            "next": "3a364bcd9bab1850faefbff683e0dd7876e81aaa"
        },
        "commit_message": "Store InvocationBuilderListenerStage into Runtime not to look up builder listeners each request\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "3a364bcd9bab1850faefbff683e0dd7876e81aaa": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyWebTarget.java": [
                    "private static JerseyInvocation.Builder org.glassfish.jersey.client.JerseyWebTarget.onBuilder(JerseyInvocation.Builder builder)"
                ]
            },
            "8c731ee874fbdaa9298850b202189983dcd76f21": {
                "core-client/src/main/java/org/glassfish/jersey/client/JerseyWebTarget.java": [
                    "private static JerseyInvocation.Builder org.glassfish.jersey.client.JerseyWebTarget.onBuilder(JerseyInvocation.Builder builder)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8f7fa9917626095a816dc2114a5c1e99a89ea11b",
        "previous_commit": "167910e2ffc0b63472c1d4d4989534de0f481ac0",
        "date": 1649401410,
        "releases": {
            "previous": "8f7fa9917626095a816dc2114a5c1e99a89ea11b",
            "next": "8f7fa9917626095a816dc2114a5c1e99a89ea11b"
        },
        "commit_message": "Fixed NullpointerException when getting methodtree (#5024)\n\nCo-authored-by: jm041977 <john.marquez@broadcom.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "8f7fa9917626095a816dc2114a5c1e99a89ea11b": {
                "ext/wadl-doclet/src/main/java12/org/glassfish/jersey/wadl/doclet/ResourceDoclet.java": [
                    "public boolean org.glassfish.jersey.wadl.doclet.ResourceDoclet.run(DocletEnvironment docEnv)"
                ]
            },
            "167910e2ffc0b63472c1d4d4989534de0f481ac0": {
                "ext/wadl-doclet/src/main/java12/org/glassfish/jersey/wadl/doclet/ResourceDoclet.java": [
                    "public boolean org.glassfish.jersey.wadl.doclet.ResourceDoclet.run(DocletEnvironment docEnv)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8c731ee874fbdaa9298850b202189983dcd76f21",
        "previous_commit": "c30060f99fba9848b01574f1440d0b5d4265692c",
        "date": 1670426061,
        "releases": {
            "previous": "8c731ee874fbdaa9298850b202189983dcd76f21",
            "next": "8c731ee874fbdaa9298850b202189983dcd76f21"
        },
        "commit_message": "Fix FORM_PARAM_CONSUMED warning (#5208)\n\nCo-authored-by: Maxim Nesen <24524084+senivam@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "8c731ee874fbdaa9298850b202189983dcd76f21": {
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/WebComponent.java": [
                    "private void filterFormParameters(final HttpServletRequest servletRequest, final ContainerRequest containerRequest)"
                ]
            },
            "c30060f99fba9848b01574f1440d0b5d4265692c": {
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/WebComponent.java": [
                    "private void filterFormParameters(final HttpServletRequest servletRequest, final ContainerRequest containerRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "758cea4963d95b43ccb326179afbb2aefbf4d86b",
        "previous_commit": "05e6f5102279032da5d55637747fb9caf0f5fc69",
        "date": 1610566169,
        "releases": {
            "previous": "758cea4963d95b43ccb326179afbb2aefbf4d86b",
            "next": "758cea4963d95b43ccb326179afbb2aefbf4d86b"
        },
        "commit_message": "JdkConnectorProvider cannot parse Set-cookie header value when expires\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "758cea4963d95b43ccb326179afbb2aefbf4d86b": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpParser.java": [
                    "private boolean org.glassfish.jersey.jdk.connector.internal.HttpParser.isInseparableHeader()"
                ]
            },
            "05e6f5102279032da5d55637747fb9caf0f5fc69": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpParser.java": [
                    "private boolean org.glassfish.jersey.jdk.connector.internal.HttpParser.isInseparableHeader()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "2c3618fe0982d23b5703b58b1b41209410ccfd5c",
        "previous_commit": "bb78d64bfb4c2dd9b514e3c3d0f4db89c8bb2bb8",
        "date": 1630483839,
        "releases": {
            "previous": "2c3618fe0982d23b5703b58b1b41209410ccfd5c",
            "next": "2c3618fe0982d23b5703b58b1b41209410ccfd5c"
        },
        "commit_message": "Updated ASM to 9.2\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "2c3618fe0982d23b5703b58b1b41209410ccfd5c": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassReader.java": [
                    "private static byte[] jersey.red.org.objectweb.asm.ClassReader.readStream(final InputStream inputStream, final boolean close)"
                ]
            },
            "bb78d64bfb4c2dd9b514e3c3d0f4db89c8bb2bb8": {
                "core-server/src/main/java/jersey/repackaged/org/objectweb/asm/ClassReader.java": [
                    "private static byte[] jersey.red.org.objectweb.asm.ClassReader.readStream(final InputStream inputStream, final boolean close)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8cf7cab8e3c44ab02a758790eb9a7d37f106d8d8",
        "previous_commit": "82e89ac1b3e024a34489e3358e51466dc4c6aa6f",
        "date": 1659349018,
        "releases": {
            "previous": "8cf7cab8e3c44ab02a758790eb9a7d37f106d8d8",
            "next": "8cf7cab8e3c44ab02a758790eb9a7d37f106d8d8"
        },
        "commit_message": "Support CompletionStage<Response>\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "8cf7cab8e3c44ab02a758790eb9a7d37f106d8d8": {
                "core-server/src/main/java/org/glassfish/jersey/server/model/ResourceMethodInvoker.java": [
                    "private Response org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(final RequestProcessingContext context, final Object resource)"
                ]
            },
            "82e89ac1b3e024a34489e3358e51466dc4c6aa6f": {
                "core-server/src/main/java/org/glassfish/jersey/server/model/ResourceMethodInvoker.java": [
                    "private Response org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(final RequestProcessingContext context, final Object resource)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "2d7b11f73a13f554f1bfa307d248206d21f06bfa",
        "previous_commit": "a85c4d24874199a3d23979e1520c12ab609fa272",
        "date": 1722517290,
        "releases": {
            "previous": "2d7b11f73a13f554f1bfa307d248206d21f06bfa",
            "next": "2d7b11f73a13f554f1bfa307d248206d21f06bfa"
        },
        "commit_message": "Release a reference to threadlocal on shutdown\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "2d7b11f73a13f554f1bfa307d248206d21f06bfa": {
                "core-client/src/main/java/org/glassfish/jersey/client/innate/inject/NonInjectionManager.java": [
                    "void org.glassfish.jersey.client.innate.inject.NonInjectionManager.dispose()"
                ]
            },
            "a85c4d24874199a3d23979e1520c12ab609fa272": {
                "core-client/src/main/java/org/glassfish/jersey/client/innate/inject/NonInjectionManager.java": [
                    "void org.glassfish.jersey.client.innate.inject.NonInjectionManager.dispose()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "31bd8727e7f9c922f4c4f19c6a77b7c168aa9673",
        "previous_commit": "9d28d1e867fd04f78f3a7da530c19c2996786382",
        "date": 1589216851,
        "releases": {
            "previous": "31bd8727e7f9c922f4c4f19c6a77b7c168aa9673",
            "next": "31bd8727e7f9c922f4c4f19c6a77b7c168aa9673"
        },
        "commit_message": "feat: allow json-jackson to auto-discover modules\n\nSigned-off-by: Th\u00e9o Gaillard <theo.gaillard@protonmail.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "31bd8727e7f9c922f4c4f19c6a77b7c168aa9673": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/JacksonFeature.java": [
                    "public boolean org.glassfish.jersey.jackson.JacksonFeature.configure(final FeatureContext context)"
                ]
            },
            "9d28d1e867fd04f78f3a7da530c19c2996786382": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/JacksonFeature.java": [
                    "public boolean org.glassfish.jersey.jackson.JacksonFeature.configure(final FeatureContext context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "effa55776ad833c5e92da9d6a0e36d199ea96200",
        "previous_commit": "b7f355ea86e9cb2cbfb7f072fd5196f4b565205d",
        "date": 1715689480,
        "releases": {
            "previous": "effa55776ad833c5e92da9d6a0e36d199ea96200",
            "next": "effa55776ad833c5e92da9d6a0e36d199ea96200"
        },
        "commit_message": "Allow long content length in the JDK connector\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "effa55776ad833c5e92da9d6a0e36d199ea96200": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpParser.java": [
                    "private void org.glassfish.jersey.jdk.connector.internal.HttpParser.decideTransferEncoding()"
                ]
            },
            "b7f355ea86e9cb2cbfb7f072fd5196f4b565205d": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/HttpParser.java": [
                    "private void org.glassfish.jersey.jdk.connector.internal.HttpParser.decideTransferEncoding()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "0c341a35bfd3710d88ae97a66423bacc1c76082c",
        "previous_commit": "63b51ba2021b559652227dffd99448423bc732c0",
        "date": 1531317743,
        "releases": {
            "previous": "0c341a35bfd3710d88ae97a66423bacc1c76082c",
            "next": "0c341a35bfd3710d88ae97a66423bacc1c76082c"
        },
        "commit_message": "HttpAuthenticationFilter should choose the strongest authentication mechanism (#3877)\n\nSigned-off-by: agherardi <alessandro.gherardi@yahoo.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "0c341a35bfd3710d88ae97a66423bacc1c76082c": {
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/HttpAuthenticationFilter.java": [
                    "public void org.glassfish.jersey.client.authentication.HttpAuthenticationFilter.filter(ClientRequestContext request, ClientResponseContext response)"
                ]
            },
            "63b51ba2021b559652227dffd99448423bc732c0": {
                "core-client/src/main/java/org/glassfish/jersey/client/authentication/HttpAuthenticationFilter.java": [
                    "public void org.glassfish.jersey.client.authentication.HttpAuthenticationFilter.filter(ClientRequestContext request, ClientResponseContext response)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "ad57277aeec15b35fb3b996eb44885355aa130e4",
        "previous_commit": "a07939c4ea018172fb59fec474ed3c1a8ea2616e",
        "date": 1682603806,
        "releases": {
            "previous": "ad57277aeec15b35fb3b996eb44885355aa130e4",
            "next": "ad57277aeec15b35fb3b996eb44885355aa130e4"
        },
        "commit_message": "Changes to InterceptorInvocationContext related to the integration with Helidon (#5311)\n\n* Changes to InterceptorInvocationContext related to the integration with Helidon's FT implementation. Allow context to be accessed from different threads, and store it in the context data map.\r\n\r\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "ad57277aeec15b35fb3b996eb44885355aa130e4": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterceptorInvocationContext.java": [
                    "public Object org.glassfish.jersey.microprofile.restclient.InterceptorInvocationContext.proceed()"
                ]
            },
            "a07939c4ea018172fb59fec474ed3c1a8ea2616e": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterceptorInvocationContext.java": [
                    "public Object org.glassfish.jersey.microprofile.restclient.InterceptorInvocationContext.proceed()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "5f9510978b1c8077f3ed54cf8cbce0776e64cbba",
        "previous_commit": "9647ce541718cd0b583ceba1c735a886ec400b78",
        "date": 1618220781,
        "releases": {
            "previous": "5f9510978b1c8077f3ed54cf8cbce0776e64cbba",
            "next": "5f9510978b1c8077f3ed54cf8cbce0776e64cbba"
        },
        "commit_message": "ParameterConverter throwing IllegalArgumentException MUST result in 404\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "5f9510978b1c8077f3ed54cf8cbce0776e64cbba": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/inject/SingleValueExtractor.java": [
                    "public T org.glassfish.jersey.server.internal.inject.SingleValueExtractor<T>.extract(final MultivaluedMap<String, String> parameters)"
                ]
            },
            "9647ce541718cd0b583ceba1c735a886ec400b78": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/inject/SingleValueExtractor.java": [
                    "public T org.glassfish.jersey.server.internal.inject.SingleValueExtractor<T>.extract(final MultivaluedMap<String, String> parameters)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "c169c8437f28675d0c970b903007c7c0f28c7115",
        "previous_commit": "eafb9bdcb82dfa3fd76dd957d307b99d4a22c87f",
        "date": 1530006589,
        "releases": {
            "previous": "c169c8437f28675d0c970b903007c7c0f28c7115",
            "next": "c169c8437f28675d0c970b903007c7c0f28c7115"
        },
        "commit_message": "issue 3828 (#3831)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "c169c8437f28675d0c970b903007c7c0f28c7115": {
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseySseEventSource.java": [
                    "protected Builder org.glassfish.jersey.media.sse.internal.JerseySseEventSource.target(final WebTarget endpoint)"
                ]
            },
            "eafb9bdcb82dfa3fd76dd957d307b99d4a22c87f": {
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseySseEventSource.java": [
                    "protected Builder org.glassfish.jersey.media.sse.internal.JerseySseEventSource.target(final WebTarget endpoint)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e6aadc58d6aae483bee8caf00a3a30d01c5c5474",
        "previous_commit": "fd9dbbdcb069b2f697196474cae46a0ad1570514",
        "date": 1600862459,
        "releases": {
            "previous": "e6aadc58d6aae483bee8caf00a3a30d01c5c5474",
            "next": "e6aadc58d6aae483bee8caf00a3a30d01c5c5474"
        },
        "commit_message": "Fix issue with optional CDI in BV module (#4574)\n\nFixes #4542\r\n\r\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e6aadc58d6aae483bee8caf00a3a30d01c5c5474": {
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/ValidationBinder.java": [
                    "private ValidatorContext org.glassfish.jersey.server.validation.internal.ValidationBinder.getDefaultValidatorContext(final ValidateOnExecutionHandler handler)"
                ]
            },
            "fd9dbbdcb069b2f697196474cae46a0ad1570514": {
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/ValidationBinder.java": [
                    "private ValidatorContext org.glassfish.jersey.server.validation.internal.ValidationBinder.getDefaultValidatorContext(final ValidateOnExecutionHandler handler)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "236b6f3903c659b2864623e86a3cce020c554bcf",
        "previous_commit": "3077a0df43c8e092d351194e02f62374fe3f9389",
        "date": 1713511284,
        "releases": {
            "previous": "236b6f3903c659b2864623e86a3cce020c554bcf",
            "next": "236b6f3903c659b2864623e86a3cce020c554bcf"
        },
        "commit_message": "Added suport for HK2 factories, binders to comply with documentation.\nAdded documentation for Jersey Injection.\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "236b6f3903c659b2864623e86a3cce020c554bcf": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/Providers.java": [
                    "private static Map<Class<?>, ProviderRuntime> org.glassfish.jersey.internal.inject.Providers.getExternalProviderInterfaces()"
                ]
            },
            "3077a0df43c8e092d351194e02f62374fe3f9389": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/Providers.java": [
                    "private static Map<Class<?>, ProviderRuntime> org.glassfish.jersey.internal.inject.Providers.getExternalProviderInterfaces()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "4de6beef47beba07582dc06afd9ac637e2d39e68",
        "previous_commit": "ab217b3415286b11f381cf6f23acca1b44b57a96",
        "date": 1697787508,
        "releases": {
            "previous": "4de6beef47beba07582dc06afd9ac637e2d39e68",
            "next": "4de6beef47beba07582dc06afd9ac637e2d39e68"
        },
        "commit_message": "Fix query param in UriBuilder\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "4de6beef47beba07582dc06afd9ac637e2d39e68": {
                "core-common/src/main/java/org/glassfish/jersey/uri/UriTemplate.java": [
                    "private static String org.glassfish.jersey.uri.UriTemplate.createURI( final String scheme, final String authority, final String userInfo, final String host, final String port, final String path, final String query, final String fragment, final Object[] values, final boolean encode, final boolean encodeSlashInPath, final Map<String, ?> mapValues)"
                ]
            },
            "ab217b3415286b11f381cf6f23acca1b44b57a96": {
                "core-common/src/main/java/org/glassfish/jersey/uri/UriTemplate.java": [
                    "private static String org.glassfish.jersey.uri.UriTemplate.createURI( final String scheme, final String authority, final String userInfo, final String host, final String port, final String path, final String query, final String fragment, final Object[] values, final boolean encode, final boolean encodeSlashInPath, final Map<String, ?> mapValues)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "c3d3132d27a943f33cbc0e42add1b11ff6072ba7",
        "previous_commit": "bd7774f3baa4768c7d2f83557a5f1d51c335acd8",
        "date": 1704290755,
        "releases": {
            "previous": "c3d3132d27a943f33cbc0e42add1b11ff6072ba7",
            "next": "c3d3132d27a943f33cbc0e42add1b11ff6072ba7"
        },
        "commit_message": "Adopt Jackson 2.16.1\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "c3d3132d27a943f33cbc0e42add1b11ff6072ba7": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/DefaultJacksonJaxbJsonProvider.java": [
                    "private void org.glassfish.jersey.jackson.internal.DefaultJacksonJaxbJsonProvider.updateFactoryConstraints(JsonFactory jsonFactory)"
                ]
            },
            "bd7774f3baa4768c7d2f83557a5f1d51c335acd8": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/DefaultJacksonJaxbJsonProvider.java": [
                    "private void org.glassfish.jersey.jackson.internal.DefaultJacksonJaxbJsonProvider.updateFactoryConstraints(JsonFactory jsonFactory)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "7b3a86ba53f8a77c4318abaf803488d60facfd98",
        "previous_commit": "d92935acb7d10fed01e3620b916b468a47169053",
        "date": 1571351072,
        "releases": {
            "previous": "7b3a86ba53f8a77c4318abaf803488d60facfd98",
            "next": "7b3a86ba53f8a77c4318abaf803488d60facfd98"
        },
        "commit_message": "Assure that exception in async interceptor doesn't prevent completion\n\nSigned-off-by: Patrik Dudits <patrik.dudits@payara.fish>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "7b3a86ba53f8a77c4318abaf803488d60facfd98": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private CompletableFuture org.glassfish.jersey.microprofile.restclient.MethodModel.asynchronousCall(Invocation.Builder builder, Object entity, Method method, MultivaluedMap<String, Object> customHeaders)"
                ]
            },
            "d92935acb7d10fed01e3620b916b468a47169053": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private CompletableFuture org.glassfish.jersey.microprofile.restclient.MethodModel.asynchronousCall(Invocation.Builder builder, Object entity, Method method, MultivaluedMap<String, Object> customHeaders)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8fed3c64d1dc3aae5e4cbd0405cf3420f0461fa1",
        "previous_commit": "71a237b71e33414795361557ab97d6613c980d27",
        "date": 1631884479,
        "releases": {
            "previous": "8fed3c64d1dc3aae5e4cbd0405cf3420f0461fa1",
            "next": "8fed3c64d1dc3aae5e4cbd0405cf3420f0461fa1"
        },
        "commit_message": "NettyConnectorProvider (jersey-netty-connector) is throwing an exception with inactive_pooled_connection_handler error\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "8fed3c64d1dc3aae5e4cbd0405cf3420f0461fa1": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)"
                ]
            },
            "71a237b71e33414795361557ab97d6613c980d27": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/NettyConnector.java": [
                    "protected CompletableFuture<ClientResponse> org.glassfish.jersey.netty.connector.NettyConnector.execute(final ClientRequest jerseyRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "f0e0106dc24663294fdc9d787981c118c2236d99",
        "previous_commit": "bcfba2be4c46da11a0f7a9f04cc86b231534d013",
        "date": 1615821184,
        "releases": {
            "previous": "f0e0106dc24663294fdc9d787981c118c2236d99",
            "next": "f0e0106dc24663294fdc9d787981c118c2236d99"
        },
        "commit_message": "processing order for Jackson/Jaxb annotations\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "f0e0106dc24663294fdc9d787981c118c2236d99": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/DefaultJacksonJaxbJsonProvider.java": [
                    "private void org.glassfish.jersey.jackson.internal.DefaultJacksonJaxbJsonProvider.findAndRegisterModules()"
                ]
            },
            "bcfba2be4c46da11a0f7a9f04cc86b231534d013": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/DefaultJacksonJaxbJsonProvider.java": [
                    "private void org.glassfish.jersey.jackson.internal.DefaultJacksonJaxbJsonProvider.findAndRegisterModules()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "1c3b8d5e031814da04c5a0050ca1e6a1c0faf52c",
        "previous_commit": "b17b3ea4f8c87c6d36d430f807715d495c6873ea",
        "date": 1570021065,
        "releases": {
            "previous": "1c3b8d5e031814da04c5a0050ca1e6a1c0faf52c",
            "next": "1c3b8d5e031814da04c5a0050ca1e6a1c0faf52c"
        },
        "commit_message": "use EntityInputStream to check if stream is empty\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "1c3b8d5e031814da04c5a0050ca1e6a1c0faf52c": {
                "media/json-binding/src/main/java/org/glassfish/jersey/jsonb/internal/JsonBindingProvider.java": [
                    "public Object org.glassfish.jersey.jsonb.internal.JsonBindingProvider.readFrom(Class<Object> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)"
                ]
            },
            "b17b3ea4f8c87c6d36d430f807715d495c6873ea": {
                "media/json-binding/src/main/java/org/glassfish/jersey/jsonb/internal/JsonBindingProvider.java": [
                    "public Object org.glassfish.jersey.jsonb.internal.JsonBindingProvider.readFrom(Class<Object> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "c5e71d03a02f0f79a3df451c4d325d90a5953542",
        "previous_commit": "db2f8a2ba9f91b3dfa870bf822476e4e82647c6f",
        "date": 1647853783,
        "releases": {
            "previous": "c5e71d03a02f0f79a3df451c4d325d90a5953542",
            "next": "c5e71d03a02f0f79a3df451c4d325d90a5953542"
        },
        "commit_message": "honor @Vetoed on a bean\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "c5e71d03a02f0f79a3df451c4d325d90a5953542": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "private boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.bind(final Class<?> clazz, final Set<Class<?>> providerContracts, Integer priority)"
                ]
            },
            "db2f8a2ba9f91b3dfa870bf822476e4e82647c6f": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "private boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.bind(final Class<?> clazz, final Set<Class<?>> providerContracts, Integer priority)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "f2f95f94b965744be9d0f007f141b1e222d7e759",
        "previous_commit": "47dccff251608065beb431718d574d92ad210a7f",
        "date": 1663832207,
        "releases": {
            "previous": "f2f95f94b965744be9d0f007f141b1e222d7e759",
            "next": "f2f95f94b965744be9d0f007f141b1e222d7e759"
        },
        "commit_message": "Update JdkHttpServerFactory.java (#5163)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "f2f95f94b965744be9d0f007f141b1e222d7e759": {
                "containers/jdk-http/src/main/java/org/glassfish/jersey/jdkhttp/JdkHttpServerFactory.java": [
                    "private static HttpServer org.glassfish.jersey.jdkhttp.JdkHttpServerFactory.createHttpServer(final URI uri, final JdkHttpHandlerContainer handler, final SSLContext sslContext, final boolean start)"
                ]
            },
            "47dccff251608065beb431718d574d92ad210a7f": {
                "containers/jdk-http/src/main/java/org/glassfish/jersey/jdkhttp/JdkHttpServerFactory.java": [
                    "private static HttpServer org.glassfish.jersey.jdkhttp.JdkHttpServerFactory.createHttpServer(final URI uri, final JdkHttpHandlerContainer handler, final SSLContext sslContext, final boolean start)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "21b7cc0307d6432eb301f773d5c2c674425c6b10",
        "previous_commit": "110d810347b10101fa3f8c695437691c55d9daf6",
        "date": 1627386844,
        "releases": {
            "previous": "21b7cc0307d6432eb301f773d5c2c674425c6b10",
            "next": "21b7cc0307d6432eb301f773d5c2c674425c6b10"
        },
        "commit_message": "ParamConverters cleanup\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "21b7cc0307d6432eb301f773d5c2c674425c6b10": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverterConfigurator.java": [
                    "public void org.glassfish.jersey.internal.inject.ParamConverterConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ]
            },
            "110d810347b10101fa3f8c695437691c55d9daf6": {
                "core-common/src/main/java/org/glassfish/jersey/internal/inject/ParamConverterConfigurator.java": [
                    "public void org.glassfish.jersey.internal.inject.ParamConverterConfigurator.init(InjectionManager injectionManager, BootstrapBag bootstrapBag)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "77074f19f8cc6acc555690b5069f2519fb9693e4",
        "previous_commit": "16eaaff4e70c2fa0ca4d2d5b8447f661f5c3a138",
        "date": 1662116477,
        "releases": {
            "previous": "77074f19f8cc6acc555690b5069f2519fb9693e4",
            "next": "77074f19f8cc6acc555690b5069f2519fb9693e4"
        },
        "commit_message": "Change JettyConnector 'readTimeout' behavior to match socket read tim\u2026 (#5114)\n\n* Change JettyConnector 'readTimeout' behavior to match socket read timeout definition - e.g., ApacheConnector behavior matches it.\r\n\r\n* Read timeout: Time on waiting to receive the first data byte.\r\n\r\nThe `timeout` method timeouts the request even if data were already received, capping the query to a maximum execution time.\r\nThis behavior is problematic when streaming data over a prolonged duration; the client has already received data bytes, but data continues to flow.\r\n\r\nI provided a jetty specific property (jersey.config.jetty.client.totalTimeout) that configures the 'totalTimeout' when required.",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "77074f19f8cc6acc555690b5069f2519fb9693e4": {
                "connectors/jetty-connector/src/main/java/org/glassfish/jersey/jetty/connector/JettyConnector.java": [
                    "private Request org.glassfish.jersey.jetty.connector.JettyConnector.translateRequest(final ClientRequest clientRequest)"
                ]
            },
            "16eaaff4e70c2fa0ca4d2d5b8447f661f5c3a138": {
                "connectors/jetty-connector/src/main/java/org/glassfish/jersey/jetty/connector/JettyConnector.java": [
                    "private Request org.glassfish.jersey.jetty.connector.JettyConnector.translateRequest(final ClientRequest clientRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e3cc62371d00c938a432083c4cf2c3d8013beb78",
        "previous_commit": "797b4359f1182e0d03f9949b004c501553b59fd8",
        "date": 1599594990,
        "releases": {
            "previous": "e3cc62371d00c938a432083c4cf2c3d8013beb78",
            "next": "e3cc62371d00c938a432083c4cf2c3d8013beb78"
        },
        "commit_message": "Rest client update to version 1.4.1\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e3cc62371d00c938a432083c4cf2c3d8013beb78": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterfaceModel.java": [
                    "Builder org.glassfish.jersey.microprofile.restclient.InterfaceModel.clientHeadersFactory(RegisterClientHeaders registerClientHeaders)"
                ]
            },
            "797b4359f1182e0d03f9949b004c501553b59fd8": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/InterfaceModel.java": [
                    "Builder org.glassfish.jersey.microprofile.restclient.InterfaceModel.clientHeadersFactory(RegisterClientHeaders registerClientHeaders)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "0197f23de7b35a34d1be8ea6c8b330c0710e5800",
        "previous_commit": "f5caafb221ce62a74f9ac16b565c1fd995645286",
        "date": 1600941751,
        "releases": {
            "previous": "0197f23de7b35a34d1be8ea6c8b330c0710e5800",
            "next": "0197f23de7b35a34d1be8ea6c8b330c0710e5800"
        },
        "commit_message": "Implement ExecutionStatisticsDynamicBean.getAttributes\n\nImplementation was missing. Needed in order to use this bean with generic JMX collector from Prometheus: https://github.com/prometheus/jmx_exporter.\n\nSigned-off-by: Trond Marius \u00d8vstetun <trond@ovstetun.no>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "0197f23de7b35a34d1be8ea6c8b330c0710e5800": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/monitoring/jmx/ExecutionStatisticsDynamicBean.java": [
                    "public AttributeList org.glassfish.jersey.server.internal.monitoring.jmx.ExecutionStatisticsDynamicBean.getAttributes(String[] attributes)"
                ]
            },
            "f5caafb221ce62a74f9ac16b565c1fd995645286": {
                "core-server/src/main/java/org/glassfish/jersey/server/internal/monitoring/jmx/ExecutionStatisticsDynamicBean.java": [
                    "public AttributeList org.glassfish.jersey.server.internal.monitoring.jmx.ExecutionStatisticsDynamicBean.getAttributes(String[] attributes)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "7c67baebd125a5dc3fb0e25caec0583d27e557cf",
        "previous_commit": "fd7a293160cfee6ad9ec9540e3c4f4c6196f3895",
        "date": 1568809922,
        "releases": {
            "previous": "7c67baebd125a5dc3fb0e25caec0583d27e557cf",
            "next": "7c67baebd125a5dc3fb0e25caec0583d27e557cf"
        },
        "commit_message": "Loading keystore resource if location starts with / (#4258)\n\nLoading keystore resource if location starts with /\r\n\r\nSigned-off-by: David Kral <david.k.kral@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "7c67baebd125a5dc3fb0e25caec0583d27e557cf": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientProducer.java": [
                    "private InputStream org.glassfish.jersey.microprofile.restclient.RestClientProducer.locationToStream(String location)"
                ]
            },
            "fd7a293160cfee6ad9ec9540e3c4f4c6196f3895": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientProducer.java": [
                    "private InputStream org.glassfish.jersey.microprofile.restclient.RestClientProducer.locationToStream(String location)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "26288da8d147fdcd24d98e75f66c46149b9fdd29",
        "previous_commit": "ece67085495ed5fc89b0e17b1d644c84226a6b32",
        "date": 1600861209,
        "releases": {
            "previous": "26288da8d147fdcd24d98e75f66c46149b9fdd29",
            "next": "26288da8d147fdcd24d98e75f66c46149b9fdd29"
        },
        "commit_message": "RestClientListener call switched\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "26288da8d147fdcd24d98e75f66c46149b9fdd29": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ]
            },
            "ece67085495ed5fc89b0e17b1d644c84226a6b32": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/RestClientBuilderImpl.java": [
                    "public <T> T org.glassfish.jersey.microprofile.restclient.RestClientBuilderImpl.build(Class<T> interfaceClass)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "4bdb30d76c7f30e71e957aa04b3fe6957c4d8394",
        "previous_commit": "531653680538ca9e74bddc29d5d13aa9e07424f7",
        "date": 1686072196,
        "releases": {
            "previous": "4bdb30d76c7f30e71e957aa04b3fe6957c4d8394",
            "next": "4bdb30d76c7f30e71e957aa04b3fe6957c4d8394"
        },
        "commit_message": "Fix possible NPE in netty client\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "4bdb30d76c7f30e71e957aa04b3fe6957c4d8394": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelRead0(ChannelHandlerContext ctx, HttpObject msg)"
                ]
            },
            "531653680538ca9e74bddc29d5d13aa9e07424f7": {
                "connectors/netty-connector/src/main/java/org/glassfish/jersey/netty/connector/JerseyClientHandler.java": [
                    "public void org.glassfish.jersey.netty.connector.JerseyClientHandler.channelRead0(ChannelHandlerContext ctx, HttpObject msg)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e79aa535afe6f2c9fb7b0a39e4d0cc02d198c99a",
        "previous_commit": "73bdf5ff2deb24e72e7fd5c8dfa78017bb581387",
        "date": 1695212219,
        "releases": {
            "previous": "e79aa535afe6f2c9fb7b0a39e4d0cc02d198c99a",
            "next": "e79aa535afe6f2c9fb7b0a39e4d0cc02d198c99a"
        },
        "commit_message": "Adopt Jackson 2.15\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e79aa535afe6f2c9fb7b0a39e4d0cc02d198c99a": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/JacksonFeature.java": [
                    "public boolean org.glassfish.jersey.jackson.JacksonFeature.configure(final FeatureContext context)"
                ]
            },
            "73bdf5ff2deb24e72e7fd5c8dfa78017bb581387": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/JacksonFeature.java": [
                    "public boolean org.glassfish.jersey.jackson.JacksonFeature.configure(final FeatureContext context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "ed2548696d59a22bd5697413eeb1510166f2f595",
        "previous_commit": "c3d3132d27a943f33cbc0e42add1b11ff6072ba7",
        "date": 1704290789,
        "releases": {
            "previous": "ed2548696d59a22bd5697413eeb1510166f2f595",
            "next": "ed2548696d59a22bd5697413eeb1510166f2f595"
        },
        "commit_message": "prevent NPE when WebAppException#getResponse returns null\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "ed2548696d59a22bd5697413eeb1510166f2f595": {
                "core-server/src/main/java/org/glassfish/jersey/server/ServerRuntime.java": [
                    "private Response org.glassfish.jersey.server.ServerRuntime.mapException(final Throwable originalThrowable)"
                ]
            },
            "c3d3132d27a943f33cbc0e42add1b11ff6072ba7": {
                "core-server/src/main/java/org/glassfish/jersey/server/ServerRuntime.java": [
                    "private Response org.glassfish.jersey.server.ServerRuntime.mapException(final Throwable originalThrowable)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "01d3f49ab0696c151163634cd58c35cc4e20a815",
        "previous_commit": "741e1ab7e0adaf360485c4475760eb0364d84dc5",
        "date": 1532959616,
        "releases": {
            "previous": "01d3f49ab0696c151163634cd58c35cc4e20a815",
            "next": "01d3f49ab0696c151163634cd58c35cc4e20a815"
        },
        "commit_message": "fix for issue 3872 (#3898)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "01d3f49ab0696c151163634cd58c35cc4e20a815": {
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseySseBroadcaster.java": [
                    "public CompletionStage<?> org.glassfish.jersey.media.sse.internal.JerseySseBroadcaster.broadcast(final OutboundSseEvent event)"
                ]
            },
            "741e1ab7e0adaf360485c4475760eb0364d84dc5": {
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseySseBroadcaster.java": [
                    "public CompletionStage<?> org.glassfish.jersey.media.sse.internal.JerseySseBroadcaster.broadcast(final OutboundSseEvent event)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "fdbdb713bc409671aebcb195e27a2f9a79ebc8c7",
        "previous_commit": "3755b774de87e1b8b3d47fef852753555df8bb5c",
        "date": 1570021065,
        "releases": {
            "previous": "fdbdb713bc409671aebcb195e27a2f9a79ebc8c7",
            "next": "fdbdb713bc409671aebcb195e27a2f9a79ebc8c7"
        },
        "commit_message": "Replaced text literals by localization messages\n\nSigned-off-by: Markus KARG <markus@headcrashing.eu>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "fdbdb713bc409671aebcb195e27a2f9a79ebc8c7": {
                "media/json-binding/src/main/java/org/glassfish/jersey/jsonb/internal/JsonBindingProvider.java": [
                    "public Object org.glassfish.jersey.jsonb.internal.JsonBindingProvider.readFrom(Class<Object> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)"
                ]
            },
            "3755b774de87e1b8b3d47fef852753555df8bb5c": {
                "media/json-binding/src/main/java/org/glassfish/jersey/jsonb/internal/JsonBindingProvider.java": [
                    "public Object org.glassfish.jersey.jsonb.internal.JsonBindingProvider.readFrom(Class<Object> type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, String> httpHeaders, InputStream entityStream)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "a837087020aeb0964c68bbbe7c205c709f95567c",
        "previous_commit": "d4a0612015299d5912f152dcf018b4d1196bdb18",
        "date": 1697528515,
        "releases": {
            "previous": "a837087020aeb0964c68bbbe7c205c709f95567c",
            "next": "a837087020aeb0964c68bbbe7c205c709f95567c"
        },
        "commit_message": "Fixing servlet ResponseWriter#writeResponseStatusAndHeaders for error states\nBug 5279\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "a837087020aeb0964c68bbbe7c205c709f95567c": {
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/internal/ResponseWriter.java": [
                    "public OutputStream org.glassfish.jersey.servlet.internal.ResponseWriter.writeResponseStatusAndHeaders(final long contentLength, final ContainerResponse responseContext)"
                ]
            },
            "d4a0612015299d5912f152dcf018b4d1196bdb18": {
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/internal/ResponseWriter.java": [
                    "public OutputStream org.glassfish.jersey.servlet.internal.ResponseWriter.writeResponseStatusAndHeaders(final long contentLength, final ContainerResponse responseContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "9de733a0be7318fc441cb406a80aff979979d496",
        "previous_commit": "b99bc9c67d3fe691f3302a56b2d6899b5bad81d7",
        "date": 1536067985,
        "releases": {
            "previous": "9de733a0be7318fc441cb406a80aff979979d496",
            "next": "9de733a0be7318fc441cb406a80aff979979d496"
        },
        "commit_message": "Fix WORKER_BY_TYPE_COMPARATOR to follow contract (#3915)\n\nFixes transitivity in providers ordering (#3387)\r\n\r\nSigned-off-by: John Maguire <john.maguire@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "9de733a0be7318fc441cb406a80aff979979d496": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/MessageBodyFactory.java": [
                    "public int org.glassfish.jersey.message.internal.MessageBodyFactory.compare(final AbstractEntityProviderModel<?> o1, final AbstractEntityProviderModel<?> o2)"
                ]
            },
            "b99bc9c67d3fe691f3302a56b2d6899b5bad81d7": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/MessageBodyFactory.java": [
                    "public int org.glassfish.jersey.message.internal.MessageBodyFactory.compare(final AbstractEntityProviderModel<?> o1, final AbstractEntityProviderModel<?> o2)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "b01276e852de1d1ea140fb17ff1e68d96155e44b",
        "previous_commit": "dfe0415458128c4a29b327394dbc3d659034c7da",
        "date": 1594204053,
        "releases": {
            "previous": "b01276e852de1d1ea140fb17ff1e68d96155e44b",
            "next": "b01276e852de1d1ea140fb17ff1e68d96155e44b"
        },
        "commit_message": "Regexp on MP RestClient @Path\n\nSigned-off-by: Miguel Serra <Miguel.Serra@criticaltechworks.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "b01276e852de1d1ea140fb17ff1e68d96155e44b": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private void org.glassfish.jersey.microprofile.restclient.MethodModel.validateParameters()"
                ]
            },
            "dfe0415458128c4a29b327394dbc3d659034c7da": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "private void org.glassfish.jersey.microprofile.restclient.MethodModel.validateParameters()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "c5ad99ac7f4534241c97bb36cac35fb36a12e20c",
        "previous_commit": "cb031c7cff8152c665db287e2d8e21181928149b",
        "date": 1692194263,
        "releases": {
            "previous": "c5ad99ac7f4534241c97bb36cac35fb36a12e20c",
            "next": "c5ad99ac7f4534241c97bb36cac35fb36a12e20c"
        },
        "commit_message": "Encode curly brackets in proxy client\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "c5ad99ac7f4534241c97bb36cac35fb36a12e20c": {
                "ext/proxy-client/src/main/java/org/glassfish/jersey/client/proxy/RequestParameters.java": [
                    "void org.glassfish.jersey.client.proxy.RequestParameters.addParameter(final Object value, final Map<Class<?>, Annotation> anns)"
                ]
            },
            "cb031c7cff8152c665db287e2d8e21181928149b": {
                "ext/proxy-client/src/main/java/org/glassfish/jersey/client/proxy/RequestParameters.java": [
                    "void org.glassfish.jersey.client.proxy.RequestParameters.addParameter(final Object value, final Map<Class<?>, Annotation> anns)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "c42a6a214b9cbee8b4bd9b27e3693215403adadb",
        "previous_commit": "1f0dbfa40243126fea3bfac6d9f7332450de247d",
        "date": 1687242146,
        "releases": {
            "previous": "c42a6a214b9cbee8b4bd9b27e3693215403adadb",
            "next": "c42a6a214b9cbee8b4bd9b27e3693215403adadb"
        },
        "commit_message": "allow for resource methods to return <? extends XYZ>\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "c42a6a214b9cbee8b4bd9b27e3693215403adadb": {
                "core-server/src/main/java/org/glassfish/jersey/server/ContainerResponse.java": [
                    "public void org.glassfish.jersey.server.ContainerResponse.setEntityType(final Type type)"
                ]
            },
            "1f0dbfa40243126fea3bfac6d9f7332450de247d": {
                "core-server/src/main/java/org/glassfish/jersey/server/ContainerResponse.java": [
                    "public void org.glassfish.jersey.server.ContainerResponse.setEntityType(final Type type)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "470c19b1d7a0107017538d4ecea8e4ae9d21eec1",
        "previous_commit": "a62d1ffe7cf0a0c45e11d610293645b414d1e9b7",
        "date": 1556096405,
        "releases": {
            "previous": "470c19b1d7a0107017538d4ecea8e4ae9d21eec1",
            "next": "470c19b1d7a0107017538d4ecea8e4ae9d21eec1"
        },
        "commit_message": "Separate Payara's inserters from PR 3844 (#4098)\n\nSigned-off-by: jGauravGupta <gaurav.gupta.jc@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "470c19b1d7a0107017538d4ecea8e4ae9d21eec1": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientConfig.java": [
                    "private ClientRuntime org.glassfish.jersey.client.ClientConfig.initRuntime()"
                ]
            },
            "a62d1ffe7cf0a0c45e11d610293645b414d1e9b7": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientConfig.java": [
                    "private ClientRuntime org.glassfish.jersey.client.ClientConfig.initRuntime()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "26b131b2c6a95ca3ae324028d1b69d44dd96bc4f",
        "previous_commit": "9c271d125f27e2e5dd887b75dae7053b0ea10898",
        "date": 1714144658,
        "releases": {
            "previous": "26b131b2c6a95ca3ae324028d1b69d44dd96bc4f",
            "next": "26b131b2c6a95ca3ae324028d1b69d44dd96bc4f"
        },
        "commit_message": "Ensure the RequestScope and other singleton bindings are registered just once (#5624)\n\n* Ensure the RequestScope and other singleton bindings are registered just once in HK2\r\n\r\nSigned-off-by: jansupol <jan.supol@oracle.com>\r\n\r\n---------\r\n\r\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "26b131b2c6a95ca3ae324028d1b69d44dd96bc4f": {
                "inject/hk2/src/main/java/org/glassfish/jersey/inject/hk2/Hk2BootstrapBinder.java": [
                    "protected void org.glassfish.jersey.inject.hk2.Hk2BootstrapBinder.configure()"
                ]
            },
            "9c271d125f27e2e5dd887b75dae7053b0ea10898": {
                "inject/hk2/src/main/java/org/glassfish/jersey/inject/hk2/Hk2BootstrapBinder.java": [
                    "protected void org.glassfish.jersey.inject.hk2.Hk2BootstrapBinder.configure()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e795abeae95f50c99f5662065e71e1906b2ee957",
        "previous_commit": "4d881e92cce691125bb734b2b445aecfc29696b8",
        "date": 1580220344,
        "releases": {
            "previous": "e795abeae95f50c99f5662065e71e1906b2ee957",
            "next": "e795abeae95f50c99f5662065e71e1906b2ee957"
        },
        "commit_message": "Issue #3801 Do not use CDI with bean validation when it is not available\n\n- fixes osgi-functional-tests\n\nSigned-off-by: David Matejcek <dmatej@seznam.cz>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e795abeae95f50c99f5662065e71e1906b2ee957": {
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/ValidationBinder.java": [
                    "private ValidatorContext org.glassfish.jersey.server.validation.internal.ValidationBinder.getDefaultValidatorContext(final ValidateOnExecutionHandler handler)"
                ]
            },
            "4d881e92cce691125bb734b2b445aecfc29696b8": {
                "ext/bean-validation/src/main/java/org/glassfish/jersey/server/validation/internal/ValidationBinder.java": [
                    "private ValidatorContext org.glassfish.jersey.server.validation.internal.ValidationBinder.getDefaultValidatorContext(final ValidateOnExecutionHandler handler)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "604cf2e940549fd6f5524c1a5fe37bcaea95dfad",
        "previous_commit": "e4c3bf59a4a37f5a9dc0f07b8f62bb9866c41faa",
        "date": 1706098479,
        "releases": {
            "previous": "604cf2e940549fd6f5524c1a5fe37bcaea95dfad",
            "next": "604cf2e940549fd6f5524c1a5fe37bcaea95dfad"
        },
        "commit_message": "ASCII encode ContentDisposition file name (#5514)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "604cf2e940549fd6f5524c1a5fe37bcaea95dfad": {
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/ContentDisposition.java": [
                    "private void org.glassfish.jersey.media.multipart.ContentDisposition.defineFileName()"
                ]
            },
            "e4c3bf59a4a37f5a9dc0f07b8f62bb9866c41faa": {
                "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/ContentDisposition.java": [
                    "private void org.glassfish.jersey.media.multipart.ContentDisposition.defineFileName()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "9fc539031aa37924cbea04ff5552bb7e4c039a3a",
        "previous_commit": "7a19e1e48d2204a58a9368698fe463e09f96034b",
        "date": 1625231053,
        "releases": {
            "previous": "9fc539031aa37924cbea04ff5552bb7e4c039a3a",
            "next": "9fc539031aa37924cbea04ff5552bb7e4c039a3a"
        },
        "commit_message": "Make @Singleton to be singleton with CDI integration\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "9fc539031aa37924cbea04ff5552bb7e4c039a3a": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "private boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.bind(final Class<?> clazz, final Set<Class<?>> providerContracts, Integer priority)"
                ]
            },
            "7a19e1e48d2204a58a9368698fe463e09f96034b": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "private boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.bind(final Class<?> clazz, final Set<Class<?>> providerContracts, Integer priority)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e254ae81ff9240d27adcb9abff70a12b80a9f8f8",
        "previous_commit": "88ebd4003941b623b9c59ee67a99961897374eec",
        "date": 1723808192,
        "releases": {
            "previous": "e254ae81ff9240d27adcb9abff70a12b80a9f8f8",
            "next": "e254ae81ff9240d27adcb9abff70a12b80a9f8f8"
        },
        "commit_message": "Allow to disable JSON-B by a property\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e254ae81ff9240d27adcb9abff70a12b80a9f8f8": {
                "media/json-binding/src/main/java/org/glassfish/jersey/jsonb/JsonBindingFeature.java": [
                    "public boolean org.glassfish.jersey.jsonb.JsonBindingFeature.configure(final FeatureContext context)"
                ]
            },
            "88ebd4003941b623b9c59ee67a99961897374eec": {
                "media/json-binding/src/main/java/org/glassfish/jersey/jsonb/JsonBindingFeature.java": [
                    "public boolean org.glassfish.jersey.jsonb.JsonBindingFeature.configure(final FeatureContext context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "7ec76056feabb74c8717a58dc5b016138728b268",
        "previous_commit": "a3ece8941048338484382dfffbdb6a36b9cb2978",
        "date": 1537892738,
        "releases": {
            "previous": "7ec76056feabb74c8717a58dc5b016138728b268",
            "next": "7ec76056feabb74c8717a58dc5b016138728b268"
        },
        "commit_message": "Update to Bean Validation 2.0 (Hibernate 6) (#3908)\n\n* Update to Bean Validation 2.0 (Hibernate 6)\n\nSigned-off-by: mszabo-wikia <mszabo@wikia-inc.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "7ec76056feabb74c8717a58dc5b016138728b268": {
                "ext/cdi/jersey-cdi1x-validation/src/main/java/org/glassfish/jersey/ext/cdi1x/validation/internal/CdiInterceptorWrapperExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.validation.internal.CdiInterceptorWrapperExtension.afterTypeDiscovery(@Observes final AfterTypeDiscovery afterTypeDiscovery)"
                ]
            },
            "a3ece8941048338484382dfffbdb6a36b9cb2978": {
                "ext/cdi/jersey-cdi1x-validation/src/main/java/org/glassfish/jersey/ext/cdi1x/validation/internal/CdiInterceptorWrapperExtension.java": [
                    "private void org.glassfish.jersey.ext.cdi1x.validation.internal.CdiInterceptorWrapperExtension.afterTypeDiscovery(@Observes final AfterTypeDiscovery afterTypeDiscovery)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "35e581f056840b26b411f44f58c00b1b6ceac47f",
        "previous_commit": "445a5410af2b03b6e9abcf5309b11271ecff1b41",
        "date": 1564143245,
        "releases": {
            "previous": "35e581f056840b26b411f44f58c00b1b6ceac47f",
            "next": "35e581f056840b26b411f44f58c00b1b6ceac47f"
        },
        "commit_message": "Fixed: Various bugs in Helloworld CDI SE Example (#4206)\n\n* Fixed: Various bugs in Helloworld CDI SE Example\r\n\r\n(1) README.MD - Sample link misses mandatory parameter\r\n(2) pom.xml - Surplus prefix for main class\r\n(3) App.java - Surplus base path for root url\r\n\r\nSigned-off-by: Markus KARG <markus@headcrashing.eu>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "35e581f056840b26b411f44f58c00b1b6ceac47f": {
                "examples/helloworld-cdi2-se/src/main/java/org/glassfish/jersey/examples/helloworld/cdi2se/App.java": [
                    "public static void org.glassfish.jersey.examples.helloworld.cdi2se.App.main(String[] args)"
                ]
            },
            "445a5410af2b03b6e9abcf5309b11271ecff1b41": {
                "examples/helloworld-cdi2-se/src/main/java/org/glassfish/jersey/examples/helloworld/cdi2se/App.java": [
                    "public static void org.glassfish.jersey.examples.helloworld.cdi2se.App.main(String[] args)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "313cc368d9ac46767fa84e3864b6fa1382373c2b",
        "previous_commit": "4f2b834969194e651fe9cdf504536f7a256862d1",
        "date": 1697103011,
        "releases": {
            "previous": "313cc368d9ac46767fa84e3864b6fa1382373c2b",
            "next": "313cc368d9ac46767fa84e3864b6fa1382373c2b"
        },
        "commit_message": "Fix normalizing URIs with percent encoded symbols\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "313cc368d9ac46767fa84e3864b6fa1382373c2b": {
                "core-common/src/main/java/org/glassfish/jersey/uri/UriTemplate.java": [
                    "public static URI org.glassfish.jersey.uri.UriTemplate.normalize(final URI uri)"
                ]
            },
            "4f2b834969194e651fe9cdf504536f7a256862d1": {
                "core-common/src/main/java/org/glassfish/jersey/uri/UriTemplate.java": [
                    "public static URI org.glassfish.jersey.uri.UriTemplate.normalize(final URI uri)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "11004cf368499e3d218008cf622ed9e67ca90d1a",
        "previous_commit": "da6d3e17fc8b7e701283effb47ed9553d1183200",
        "date": 1570020449,
        "releases": {
            "previous": "11004cf368499e3d218008cf622ed9e67ca90d1a",
            "next": "11004cf368499e3d218008cf622ed9e67ca90d1a"
        },
        "commit_message": "Prevent EOFException if request already handled (#4271)\n\nThis can occur if the JettyHttpContainer in a HandlerCollection and is\r\ndownstream of another handler that successfully handled a request.\r\n\r\nCloses #4262\r\n\r\nSigned-off-by: David Bazile <dbazile@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "11004cf368499e3d218008cf622ed9e67ca90d1a": {
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainer.java": [
                    "public void org.glassfish.jersey.jetty.JettyHttpContainer.handle(final String target, final Request request, final HttpServletRequest httpServletRequest, final HttpServletResponse httpServletResponse)"
                ]
            },
            "da6d3e17fc8b7e701283effb47ed9553d1183200": {
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainer.java": [
                    "public void org.glassfish.jersey.jetty.JettyHttpContainer.handle(final String target, final Request request, final HttpServletRequest httpServletRequest, final HttpServletResponse httpServletResponse)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "ba657037db5b17c10fec9e51507cc6e0ed50de58",
        "previous_commit": "14b674aaf1abe6540ea08c38e166d6b0b8b42131",
        "date": 1532959665,
        "releases": {
            "previous": "ba657037db5b17c10fec9e51507cc6e0ed50de58",
            "next": "ba657037db5b17c10fec9e51507cc6e0ed50de58"
        },
        "commit_message": "JerseySseEventSource#register throws IllegalStateException (#3892)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "ba657037db5b17c10fec9e51507cc6e0ed50de58": {
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseySseEventSource.java": [
                    "private void org.glassfish.jersey.media.sse.internal.JerseySseEventSource.subscribe(final Consumer<Flow.Subscription> onSubscribe, final Consumer<InboundSseEvent> onEvent, final Consumer<Throwable> onError, final Runnable onComplete)"
                ]
            },
            "14b674aaf1abe6540ea08c38e166d6b0b8b42131": {
                "media/sse/src/main/java/org/glassfish/jersey/media/sse/internal/JerseySseEventSource.java": [
                    "private void org.glassfish.jersey.media.sse.internal.JerseySseEventSource.subscribe(final Consumer<Flow.Subscription> onSubscribe, final Consumer<InboundSseEvent> onEvent, final Consumer<Throwable> onError, final Runnable onComplete)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "5d427ffd29223ea05e35ff67ca69b0b03a04bd05",
        "previous_commit": "2ed7b9cf8ccfb0a5a01917bd5ed5fafa0668359c",
        "date": 1537297266,
        "releases": {
            "previous": "5d427ffd29223ea05e35ff67ca69b0b03a04bd05",
            "next": "5d427ffd29223ea05e35ff67ca69b0b03a04bd05"
        },
        "commit_message": "Issue #3846: Skip comment lines in service files in OSGi (#3935)\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "5d427ffd29223ea05e35ff67ca69b0b03a04bd05": {
                "core-common/src/main/java/org/glassfish/jersey/internal/OsgiRegistry.java": [
                    "public List<Class<?>> org.glassfish.jersey.internal.OsgiRegistry.call()"
                ]
            },
            "2ed7b9cf8ccfb0a5a01917bd5ed5fafa0668359c": {
                "core-common/src/main/java/org/glassfish/jersey/internal/OsgiRegistry.java": [
                    "public List<Class<?>> org.glassfish.jersey.internal.OsgiRegistry.call()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "068b3b23aaaa4eed5a02dfe210f8e09922074e76",
        "previous_commit": "d3b2d63f9e04769b84f7992e3857218d90a9d8a0",
        "date": 1566303740,
        "releases": {
            "previous": "068b3b23aaaa4eed5a02dfe210f8e09922074e76",
            "next": "068b3b23aaaa4eed5a02dfe210f8e09922074e76"
        },
        "commit_message": "Add an option to not register the Jackson's ExceptionMappers by JacksonFeature (#4225)\n\n* Add an option to not register the Jackson's ExceptionMappers by JacksonFeature\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "068b3b23aaaa4eed5a02dfe210f8e09922074e76": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/JacksonFeature.java": [
                    "public boolean org.glassfish.jersey.jackson.JacksonFeature.configure(final FeatureContext context)"
                ]
            },
            "d3b2d63f9e04769b84f7992e3857218d90a9d8a0": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/JacksonFeature.java": [
                    "public boolean org.glassfish.jersey.jackson.JacksonFeature.configure(final FeatureContext context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "682f66cbd0e8dc6ce14222f8c225267dde9826eb",
        "previous_commit": "9cfc243432408193f8ca42c9cd4796b51820ff17",
        "date": 1553610060,
        "releases": {
            "previous": "682f66cbd0e8dc6ce14222f8c225267dde9826eb",
            "next": "682f66cbd0e8dc6ce14222f8c225267dde9826eb"
        },
        "commit_message": "fix for #4082\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "682f66cbd0e8dc6ce14222f8c225267dde9826eb": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/ComponentBag.java": [
                    "private static ContractProvider org.glassfish.jersey.model.internal.ComponentBag.modelFor(final Class<?> componentClass, final int defaultPriority, final Map<Class<?>, Integer> contractMap, final Inflector<ContractProvider.Builder, ContractProvider> modelEnhancer)"
                ]
            },
            "9cfc243432408193f8ca42c9cd4796b51820ff17": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/ComponentBag.java": [
                    "private static ContractProvider org.glassfish.jersey.model.internal.ComponentBag.modelFor(final Class<?> componentClass, final int defaultPriority, final Map<Class<?>, Integer> contractMap, final Inflector<ContractProvider.Builder, ContractProvider> modelEnhancer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "d62f2b3f54a2dd1689d06d6c9b09d7b91d9f8464",
        "previous_commit": "8126cdca659510b40dfc09a33dff12c411ae59f1",
        "date": 1714633680,
        "releases": {
            "previous": "d62f2b3f54a2dd1689d06d6c9b09d7b91d9f8464",
            "next": "d62f2b3f54a2dd1689d06d6c9b09d7b91d9f8464"
        },
        "commit_message": "Multirelease include JDK21 to support Thread.isVirtual()\n\nSigned-off-by: jansupol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "d62f2b3f54a2dd1689d06d6c9b09d7b91d9f8464": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/CommittingOutputStream.java": [
                    "private void org.glassfish.jersey.message.internal.CommittingOutputStream.flushBuffer(boolean endOfStream)"
                ]
            },
            "8126cdca659510b40dfc09a33dff12c411ae59f1": {
                "core-common/src/main/java/org/glassfish/jersey/message/internal/CommittingOutputStream.java": [
                    "private void org.glassfish.jersey.message.internal.CommittingOutputStream.flushBuffer(boolean endOfStream)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e5b7905f83acab1a3ca647c82e11c3de7640e537",
        "previous_commit": "e97da048ab155b3ebf9e1bbacfc2c74af3a7b798",
        "date": 1631594409,
        "releases": {
            "previous": "e5b7905f83acab1a3ca647c82e11c3de7640e537",
            "next": "e5b7905f83acab1a3ca647c82e11c3de7640e537"
        },
        "commit_message": "Bug Report: CDI tries to instantiate interface (Jersey 2.30) (#4847)\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e5b7905f83acab1a3ca647c82e11c3de7640e537": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "private boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.bind(final Class<?> clazz, final Set<Class<?>> providerContracts, Integer priority)"
                ]
            },
            "e97da048ab155b3ebf9e1bbacfc2c74af3a7b798": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "private boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.bind(final Class<?> clazz, final Set<Class<?>> providerContracts, Integer priority)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "1e93ba94de7bdb5874f2aa96de62cc3c4cb9075b",
        "previous_commit": "e0369be617bb445866fc86d08e11e54bdec88f88",
        "date": 1550507374,
        "releases": {
            "previous": "1e93ba94de7bdb5874f2aa96de62cc3c4cb9075b",
            "next": "1e93ba94de7bdb5874f2aa96de62cc3c4cb9075b"
        },
        "commit_message": "Apply @ConstrainedTo even before Feature class is instantiated\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "1e93ba94de7bdb5874f2aa96de62cc3c4cb9075b": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "private void org.glassfish.jersey.model.internal.CommonConfig.configureFeatures(InjectionManager injectionManager, Set<FeatureRegistration> processed, List<FeatureRegistration> unprocessed, ManagedObjectsFinalizer managedObjectsFinalizer)"
                ]
            },
            "e0369be617bb445866fc86d08e11e54bdec88f88": {
                "core-common/src/main/java/org/glassfish/jersey/model/internal/CommonConfig.java": [
                    "private void org.glassfish.jersey.model.internal.CommonConfig.configureFeatures(InjectionManager injectionManager, Set<FeatureRegistration> processed, List<FeatureRegistration> unprocessed, ManagedObjectsFinalizer managedObjectsFinalizer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "aa8020a34af0a01596fdb84c28c7f0272bd8ae60",
        "previous_commit": "9eaa859ea0890300fccecc594084134ad560dfb8",
        "date": 1552479246,
        "releases": {
            "previous": "aa8020a34af0a01596fdb84c28c7f0272bd8ae60",
            "next": "aa8020a34af0a01596fdb84c28c7f0272bd8ae60"
        },
        "commit_message": "Issue #3670\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "aa8020a34af0a01596fdb84c28c7f0272bd8ae60": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "public boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.bind(final Class<?> clazz, final Set<Class<?>> providerContracts)"
                ]
            },
            "9eaa859ea0890300fccecc594084134ad560dfb8": {
                "ext/cdi/jersey-cdi1x/src/main/java/org/glassfish/jersey/ext/cdi1x/internal/CdiComponentProvider.java": [
                    "public boolean org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider.bind(final Class<?> clazz, final Set<Class<?>> providerContracts)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "9cfc243432408193f8ca42c9cd4796b51820ff17",
        "previous_commit": "aa8020a34af0a01596fdb84c28c7f0272bd8ae60",
        "date": 1552638797,
        "releases": {
            "previous": "9cfc243432408193f8ca42c9cd4796b51820ff17",
            "next": "9cfc243432408193f8ca42c9cd4796b51820ff17"
        },
        "commit_message": "Allow for injecting HttpHeaders on a Client (#4078)\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "9cfc243432408193f8ca42c9cd4796b51820ff17": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientBinder.java": [
                    "protected void org.glassfish.jersey.client.ClientBinder.configure()"
                ]
            },
            "aa8020a34af0a01596fdb84c28c7f0272bd8ae60": {
                "core-client/src/main/java/org/glassfish/jersey/client/ClientBinder.java": [
                    "protected void org.glassfish.jersey.client.ClientBinder.configure()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "2f87ada974f9cfd1b4eafe169c21489e80b10bbe",
        "previous_commit": "af5d00a4552a85a46bd5c7d2211cf86fc3741e8a",
        "date": 1576770402,
        "releases": {
            "previous": "2f87ada974f9cfd1b4eafe169c21489e80b10bbe",
            "next": "2f87ada974f9cfd1b4eafe169c21489e80b10bbe"
        },
        "commit_message": "Replace an Exception thrown with BAD_REQUEST\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "2f87ada974f9cfd1b4eafe169c21489e80b10bbe": {
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java": [
                    "protected void org.glassfish.jersey.servlet.ServletContainer.service(final HttpServletRequest request, final HttpServletResponse response)"
                ]
            },
            "af5d00a4552a85a46bd5c7d2211cf86fc3741e8a": {
                "containers/jersey-servlet-core/src/main/java/org/glassfish/jersey/servlet/ServletContainer.java": [
                    "protected void org.glassfish.jersey.servlet.ServletContainer.service(final HttpServletRequest request, final HttpServletResponse response)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "950ce6ce91bd7aafeabb939c487f72f73e77dc71",
        "previous_commit": "5f43f0e69d40747dc715c6d0f1e701338873b864",
        "date": 1585814743,
        "releases": {
            "previous": "950ce6ce91bd7aafeabb939c487f72f73e77dc71",
            "next": "950ce6ce91bd7aafeabb939c487f72f73e77dc71"
        },
        "commit_message": "Updated GF, Jetty, Mimepull, Moxy, Yasson dependencies (#4425)\n\n* Updated GF, Jetty, Mimepull, Moxy, Yasson dependencies\r\n\r\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "950ce6ce91bd7aafeabb939c487f72f73e77dc71": {
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainer.java": [
                    "public void org.glassfish.jersey.jetty.JettyHttpContainer.commit()"
                ]
            },
            "5f43f0e69d40747dc715c6d0f1e701338873b864": {
                "containers/jetty-http/src/main/java/org/glassfish/jersey/jetty/JettyHttpContainer.java": [
                    "public void org.glassfish.jersey.jetty.JettyHttpContainer.commit()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "5dec4484a61db8186cfe45582996db04c7badfdb",
        "previous_commit": "c9260df8c31285795e71217c3074bf6ff74288a4",
        "date": 1559626630,
        "releases": {
            "previous": "5dec4484a61db8186cfe45582996db04c7badfdb",
            "next": "5dec4484a61db8186cfe45582996db04c7badfdb"
        },
        "commit_message": "SPI Config API for Jersey (#4116)\n\nConfig SPI API for Jersey\r\n\r\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "5dec4484a61db8186cfe45582996db04c7badfdb": {
                "core-server/src/main/java/org/glassfish/jersey/server/ResourceConfig.java": [
                    "final void org.glassfish.jersey.server.ResourceConfig.lock()"
                ]
            },
            "c9260df8c31285795e71217c3074bf6ff74288a4": {
                "core-server/src/main/java/org/glassfish/jersey/server/ResourceConfig.java": [
                    "final void org.glassfish.jersey.server.ResourceConfig.lock()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "e737252ab98b78f00b1de9c11e3f95ec09daae5e",
        "previous_commit": "ea56d57f11749534998dfc9768a6b905e919b113",
        "date": 1625655351,
        "releases": {
            "previous": "e737252ab98b78f00b1de9c11e3f95ec09daae5e",
            "next": "e737252ab98b78f00b1de9c11e3f95ec09daae5e"
        },
        "commit_message": "Remove unnecessary lock\n\nSigned-off-by: Jorge Bescos Gascon <jorge.bescos.gascon@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "e737252ab98b78f00b1de9c11e3f95ec09daae5e": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/DestinationConnectionPool.java": [
                    "private void org.glassfish.jersey.jdk.connector.internal.DestinationConnectionPool.removeAllPendingWithError(Throwable t)"
                ]
            },
            "ea56d57f11749534998dfc9768a6b905e919b113": {
                "connectors/jdk-connector/src/main/java/org/glassfish/jersey/jdk/connector/internal/DestinationConnectionPool.java": [
                    "private synchronized void org.glassfish.jersey.jdk.connector.internal.DestinationConnectionPool.removeAllPendingWithError(Throwable t)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "0a867e9be9450b94b864e2b7e6f0c58d25e8f4f2",
        "previous_commit": "8dcbaf4b5cb0fb345eb949acfa66b1fbe09d1ffb",
        "date": 1565605156,
        "releases": {
            "previous": "0a867e9be9450b94b864e2b7e6f0c58d25e8f4f2",
            "next": "0a867e9be9450b94b864e2b7e6f0c58d25e8f4f2"
        },
        "commit_message": "Prevent race condition in entity filtering (#4204)\n\nSigned-off-by: Jan Supol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "0a867e9be9450b94b864e2b7e6f0c58d25e8f4f2": {
                "ext/entity-filtering/src/main/java/org/glassfish/jersey/message/filtering/EntityInspectorImpl.java": [
                    "public void org.glassfish.jersey.message.filtering.EntityInspectorImpl.inspect(final Class<?> entityClass, final boolean forWriter)"
                ]
            },
            "8dcbaf4b5cb0fb345eb949acfa66b1fbe09d1ffb": {
                "ext/entity-filtering/src/main/java/org/glassfish/jersey/message/filtering/EntityInspectorImpl.java": [
                    "public void org.glassfish.jersey.message.filtering.EntityInspectorImpl.inspect(final Class<?> entityClass, final boolean forWriter)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "fd9dbbdcb069b2f697196474cae46a0ad1570514",
        "previous_commit": "4f171c27bfbf5dcdb7869f3442aa95654a0b1360",
        "date": 1600861376,
        "releases": {
            "previous": "fd9dbbdcb069b2f697196474cae46a0ad1570514",
            "next": "fd9dbbdcb069b2f697196474cae46a0ad1570514"
        },
        "commit_message": "Use Helidon Connector from Helidon (#4569)\n\n* Use Helidon Connector from Helidon\r\n\r\nSigned-off-by: jansupol <jan.supol@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "fd9dbbdcb069b2f697196474cae46a0ad1570514": {
                "connectors/helidon-connector/src/main/java/org/glassfish/jersey/helidon/connector/HelidonConnectorProvider.java": [
                    "public Connector org.glassfish.jersey.helidon.connector.HelidonConnectorProvider.getConnector(Client client, Configuration runtimeConfig)"
                ]
            },
            "4f171c27bfbf5dcdb7869f3442aa95654a0b1360": {
                "connectors/helidon-connector/src/main/java/org/glassfish/jersey/helidon/connector/HelidonConnectorProvider.java": [
                    "public Connector org.glassfish.jersey.helidon.connector.HelidonConnectorProvider.getConnector(Client client, Configuration runtimeConfig)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "b4497f5907e0de5cb570bbc4a78752011bcbbb07",
        "previous_commit": "2645eb0dd23d78c21c2f0b6eb6b4b5415f9a8a00",
        "date": 1561383926,
        "releases": {
            "previous": "b4497f5907e0de5cb570bbc4a78752011bcbbb07",
            "next": "b4497f5907e0de5cb570bbc4a78752011bcbbb07"
        },
        "commit_message": "Consumes and produces value should be now properly changed (#4175)\n\n* Consumes and produces value should be now properly changed\r\n\r\nSigned-off-by: David Kral <david.k.kral@oracle.com>",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "b4497f5907e0de5cb570bbc4a78752011bcbbb07": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "MethodModel org.glassfish.jersey.microprofile.restclient.MethodModel.build()"
                ]
            },
            "2645eb0dd23d78c21c2f0b6eb6b4b5415f9a8a00": {
                "ext/microprofile/mp-rest-client/src/main/java/org/glassfish/jersey/microprofile/restclient/MethodModel.java": [
                    "MethodModel org.glassfish.jersey.microprofile.restclient.MethodModel.build()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "f31fe142bb444053918293ef457990eb85ea4f8c",
        "previous_commit": "9de733a0be7318fc441cb406a80aff979979d496",
        "date": 1536126841,
        "releases": {
            "previous": "f31fe142bb444053918293ef457990eb85ea4f8c",
            "next": "f31fe142bb444053918293ef457990eb85ea4f8c"
        },
        "commit_message": "Jersey dependencies version upgrade (part I)\n\nSigned-off-by: Maxim Nesen <maxim.nesen@oracle.com>\n",
        "jmh_dependency": {
            "benchmark_directory": "tests/performance/benchmarks",
            "benchmark_name": "benchmark.jar"
        },
        "method_changes": {
            "f31fe142bb444053918293ef457990eb85ea4f8c": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/jackson/jaxrs/util/EndpointAsBeanProperty.java": [
                    "public Std org.glassfish.jersey.jackson.internal.jackson.jaxrs.util.EndpointAsBeanProperty.withType(JavaType type)"
                ]
            },
            "9de733a0be7318fc441cb406a80aff979979d496": {
                "media/json-jackson/src/main/java/org/glassfish/jersey/jackson/internal/jackson/jaxrs/util/EndpointAsBeanProperty.java": [
                    "public Std org.glassfish.jersey.jackson.internal.jackson.jaxrs.util.EndpointAsBeanProperty.withType(JavaType type)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    }
]