[
    {
        "commit": "1fd41bce7a2c02e3585be94345d4364d18052f38",
        "previous_commit": "a6be6fc83c802215fb449706cd7bb016558fbfc2",
        "date": 1680002806,
        "releases": {
            "previous": "1fd41bce7a2c02e3585be94345d4364d18052f38",
            "next": "1fd41bce7a2c02e3585be94345d4364d18052f38"
        },
        "commit_message": "Move global tracer and substitute agent-core types with API types where this is trivially possible. (#3054)\n\n---------\r\n\r\nCo-authored-by: Jonas Kunz <Jonas.Kunz@gmx.net>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1fd41bce7a2c02e3585be94345d4364d18052f38": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static ElasticApmInstrumentation co.elastic.apm.agent.bci.ElasticApmAgent.tryInstantiate(Class<? extends ElasticApmInstrumentation> instrumentation, boolean withTracer)",
                    "static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.doReInitInstrumentation(Iterable<ElasticApmInstrumentation> instrumentations)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(final Class<?> classToInstrument, final Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "private static Logger co.elastic.apm.agent.bci.ElasticApmAgent.getLogger()",
                    "public static synchronized Future<?> co.elastic.apm.agent.bci.ElasticApmAgent.reInitInstrumentation()"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/ApacheHttpAsyncClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.ApacheHttpAsyncClientInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object[] enter, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/ApacheHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.ApacheHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable CloseableHttpResponse response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/LegacyApacheHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.LegacyApacheHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable HttpResponse response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/helper/FutureCallbackWrapper.java": [
                    "private void co.elastic.apm.agent.httpclient.v4.helper.FutureCallbackWrapper<T>.finishSpan(@Nullable Exception e)"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureSpanInstrumentation.java": [
                    "public static void co.elastic.apm.agent.pluginapi.CaptureSpanInstrumentation.onMethodExit(@Advice.Enter @Nullable Object span, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureTransactionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.pluginapi.CaptureTransactionInstrumentation.onMethodExit(@Advice.Enter @Nullable Object transaction, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/ElasticApmApiInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.pluginapi.ElasticApmApiInstrumentation.doStartTransaction(@Advice.Origin Class<?> clazz)"
                ],
                "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java": [
                    "static Span<?> co.elastic.apm.agent.asynchttpclient.AbstractAsyncHttpClientInstrumentation.removeAndActivateSpan(AsyncHandler<?> asyncHandler)",
                    "static Span<?> co.elastic.apm.agent.asynchttpclient.AbstractAsyncHttpClientInstrumentation.getAndActivateSpan(AsyncHandler<?> asyncHandler)",
                    "public static void co.elastic.apm.agent.asynchttpclient.AbstractAsyncHttpClientInstrumentation.onMethodExit(@Nullable @Advice.Enter Object spanObj)"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-1-plugin/src/main/java/co/elastic/apm/agent/awssdk/v1/AmazonHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.awssdk.v1.AmazonHttpClientInstrumentation.exitInvoke(@Nullable @Advice.Enter Object spanObj, @Nullable @Advice.Thrown Throwable thrown)"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-1-plugin/src/main/java/co/elastic/apm/agent/awssdk/v1/SQSMessageDispatchingInstrumentation.java": [
                    "protected static void co.elastic.apm.agent.awssdk.v1.SQSMessageDispatchingInstrumentation.endSpan(@Nullable Object spanObj, @Nullable Throwable thrown)"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-1-plugin/src/main/java/co/elastic/apm/agent/awssdk/v1/helper/DynamoDbHelper.java": [
                    "public Span<?> co.elastic.apm.agent.awssdk.v1.helper.DynamoDbHelper.startSpan(Request<?> request, URI httpURI, ExecutionContext context)"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-common/src/main/java/co/elastic/apm/agent/awssdk/common/AbstractMessageIteratorWrapper.java": [
                    "public void co.elastic.apm.agent.awssdk.common.AbstractMessageIteratorWrapper<Message>.endMessageProcessingSpan()",
                    "public Transaction<?> co.elastic.apm.agent.awssdk.common.AbstractMessageIteratorWrapper<Message>.endCurrentTransaction()",
                    "public Message co.elastic.apm.agent.awssdk.common.AbstractMessageIteratorWrapper<Message>.next()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV1TransactionHelper.java": [
                    "public static APIGatewayProxyV1TransactionHelper co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV2TransactionHelper.java": [
                    "public static APIGatewayProxyV2TransactionHelper co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/PlainTransactionHelper.java": [
                    "public static PlainTransactionHelper co.elastic.apm.agent.awslambda.helper.PlainTransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/S3TransactionHelper.java": [
                    "public static S3TransactionHelper co.elastic.apm.agent.awslambda.helper.S3TransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/SNSTransactionHelper.java": [
                    "public static SNSTransactionHelper co.elastic.apm.agent.awslambda.helper.SNSTransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/SQSTransactionHelper.java": [
                    "public static SQSTransactionHelper co.elastic.apm.agent.awslambda.helper.SQSTransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-cassandra/apm-cassandra3-plugin/src/main/java/co/elastic/apm/agent/cassandra3/Cassandra3Instrumentation.java": [
                    "public void co.elastic.apm.agent.cassandra3.Cassandra3Instrumentation.onFailure(Throwable t)",
                    "public static void co.elastic.apm.agent.cassandra3.Cassandra3Instrumentation.onExit(@Advice.Thrown @Nullable Throwable thrown, @Advice.Return ResultSetFuture result, @Nullable @Advice.Enter Object spanObj)"
                ],
                "apm-agent-plugins/apm-cassandra/apm-cassandra4-plugin/src/main/java/co/elastic/apm/agent/cassandra4/Cassandra4Instrumentation.java": [
                    "public static void co.elastic.apm.agent.cassandra4.Cassandra4Instrumentation.onExit(@Advice.Thrown @Nullable Throwable thrown, @Advice.Return Object result, @Nullable @Advice.Enter Object spanObj)"
                ],
                "apm-agent-plugins/apm-ecs-logging-plugin/src/main/java/co/elastic/apm/agent/ecs_logging/Log4j2ServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.ecs_logging.Log4j2ServiceNameInstrumentation.onEnter(@Advice.This EcsLayout.Builder builder)"
                ],
                "apm-agent-plugins/apm-ecs-logging-plugin/src/main/java/co/elastic/apm/agent/ecs_logging/Log4j2ServiceVersionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.ecs_logging.Log4j2ServiceVersionInstrumentation.onEnter(@Advice.This EcsLayout.Builder builder)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-5_6/src/main/java/co/elastic/apm/agent/esrestclient/v5_6/ElasticsearchClientAsyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.esrestclient.v5_6.ElasticsearchClientAsyncInstrumentation.onAfterExecute(@Advice.Thrown @Nullable Throwable t, @Advice.Enter @Nullable Object[] entryArgs)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-5_6/src/main/java/co/elastic/apm/agent/esrestclient/v5_6/ElasticsearchClientSyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.esrestclient.v5_6.ElasticsearchClientSyncInstrumentation.onAfterExecute(@Advice.Return @Nullable Response response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-6_4/src/main/java/co/elastic/apm/agent/esrestclient/v6_4/ElasticsearchClientAsyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.esrestclient.v6_4.ElasticsearchClientAsyncInstrumentation.onAfterExecute(@Advice.Thrown @Nullable Throwable t, @Advice.Enter @Nullable Object[] entryArgs)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-6_4/src/main/java/co/elastic/apm/agent/esrestclient/v6_4/ElasticsearchClientSyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.esrestclient.v6_4.ElasticsearchClientSyncInstrumentation.onAfterExecute(@Advice.Return @Nullable Response response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span<?> co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ResponseListenerWrapper.java": [
                    "private void co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.finishClientSpan(@Nullable Response response, @Nullable Throwable throwable)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ChannelInstrumentation.java": [
                    "public static void co.elastic.apm.agent.grpc.ChannelInstrumentation.onExit(@Advice.Return @Nullable ClientCall<?, ?> clientCall, @Advice.Enter @Nullable Object span)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ClientCallListenerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.grpc.ClientCallListenerInstrumentation.onExit(@Advice.This ClientCall.Listener<?> listener, @Advice.Thrown @Nullable Throwable thrown, @Advice.Enter @Nullable Object span)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.cancelCall(ClientCall<?, ?> clientCall, @Nullable Throwable cause)",
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.replaceClientCallRegistration(ClientCall<?, ?> placeholderClientCall, ClientCall<?, ?> realClientCall)",
                    "public Span<?> co.elastic.apm.agent.grpc.GrpcHelper.onClientCallCreationEntry(@Nullable AbstractSpan<?> parent, @Nullable MethodDescriptor<?, ?> method, @Nullable String authority)",
                    "public Transaction<?> co.elastic.apm.agent.grpc.GrpcHelper.enterServerListenerMethod(ServerCall.Listener<?> listener)",
                    "public Transaction<?> co.elastic.apm.agent.grpc.GrpcHelper.startTransaction(Tracer tracer, ClassLoader cl, ServerCall<?, ?> serverCall, Metadata headers)",
                    "public Span<?> co.elastic.apm.agent.grpc.GrpcHelper.clientCallStartEnter(ClientCall<?, ?> clientCall, ClientCall.Listener<?> listener, Metadata headers)",
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.exitServerCall(Status status, @Nullable Throwable thrown, ServerCall<?, ?> serverCall)",
                    "public Span<?> co.elastic.apm.agent.grpc.GrpcHelper.enterClientListenerMethod(ClientCall.Listener<?> listener)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallListenerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.onExit(@Advice.Thrown @Nullable Throwable thrown, @Advice.This ServerCall.Listener<?> listener, @Advice.Enter @Nullable Object transaction)"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-5_x/src/main/java/co/elastic/apm/agent/hibernatesearch/v5/HibernateSearch5Instrumentation.java": [
                    "public static void co.elastic.apm.agent.hibernatesearch.v5.HibernateSearch5Instrumentation.onAfterExecute(@Advice.Enter @Nullable Object span, @Advice.Thrown Throwable t)"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-6_x/src/main/java/co/elastic/apm/agent/hibernatesearch/HibernateSearch6Instrumentation.java": [
                    "public static void co.elastic.apm.agent.hibernatesearch.HibernateSearch6Instrumentation.onAfterExecute(@Advice.Enter @Nullable Object span, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-common/src/main/java/co/elastic/apm/agent/hibernatesearch/HibernateSearchHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.hibernatesearch.HibernateSearchHelper.createAndActivateSpan(final Tracer tracer, final String methodName, final String query)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/HttpClientHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.httpclient.HttpClientHelper.startHttpClientSpan(AbstractSpan<?> parent, String method, @Nullable String uri, @Nullable String scheme, @Nullable CharSequence hostName, int port)"
                ],
                "apm-agent-plugins/apm-jakarta-websocket-plugin/src/main/java/co/elastic/apm/agent/websocket/BaseServerEndpointInstrumentation.java": [
                    "protected static void co.elastic.apm.agent.websocket.BaseServerEndpointInstrumentation.endTransaction(@Nullable Object transactionOrNull, @Advice.Thrown @Nullable Throwable t)",
                    "protected static Object co.elastic.apm.agent.websocket.BaseServerEndpointInstrumentation.startTransactionOrSetTransactionName(String signature, String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-plugins/apm-java-ldap-plugin/src/main/java/co/elastic/apm/agent/java_ldap/LdapClientAdvice.java": [
                    "public static void co.elastic.apm.agent.java_ldap.LdapClientAdvice.onExit(@Advice.Enter @Nullable Object spanObj, @Nullable @Advice.Return LdapResult ldapResult, @Nullable @Advice.Thrown Throwable t)"
                ],
                "apm-agent-plugins/apm-javalin-plugin/src/main/java/co/elastic/apm/agent/javalin/JavalinRenderInstrumentation.java": [
                    "public static void co.elastic.apm.agent.javalin.JavalinRenderInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "protected static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(String signature, @Nullable String pathAnnotationValue, @Nullable String frameworkVersion)"
                ],
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t, @Advice.Return @Nullable Object returnValue)",
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object span, @Advice.Thrown @Nullable Throwable t, @Advice.Return long returnValue /* bytebuddy converts int to long for us here ! */)",
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.This Statement statement, @Advice.Enter @Nullable Object span, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span<?> co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)",
                    "private boolean co.elastic.apm.agent.jdbc.helper.JdbcHelper.isAlreadyMonitored(@Nullable AbstractSpan<?> parent)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientAdvice.java": [
                    "public static void co.elastic.apm.agent.httpclient.HttpClientAdvice.onAfterExecute(@Advice.Return @Nullable HttpResponse<?> response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientAdviceHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.httpclient.HttpClientAdviceHelper.startSpan(HttpRequest httpRequest)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientAsyncAdvice.java": [
                    "public static void co.elastic.apm.agent.httpclient.HttpClientAsyncAdvice.onAfterExecute(@Advice.Return @Nullable CompletableFuture<HttpResponse<?>> completableFuture, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpRequestHeadersAdvice.java": [
                    "public static HttpHeaders co.elastic.apm.agent.httpclient.HttpRequestHeadersAdvice.onAfterExecute(@Advice.Return @Nullable final HttpHeaders httpHeaders)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public Transaction<?> co.elastic.apm.agent.jms.JmsInstrumentationHelper.startJmsTransaction(Message parentMessage, Class<?> instrumentedClass)",
                    "public void co.elastic.apm.agent.jms.JmsInstrumentationHelper.addMessageDetails(@Nullable Message message, AbstractSpan<?> span)",
                    "public Span<?> co.elastic.apm.agent.jms.JmsInstrumentationHelper.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsMessageListenerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jms.JmsMessageListenerInstrumentation.afterOnMessage(@Advice.Enter @Nullable final Object transactionObj, @Advice.Thrown final Throwable throwable)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsMessageProducerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jms.JmsMessageProducerInstrumentation.afterSend(@Advice.Enter @Nullable final Object spanObj, @Advice.Thrown final Throwable throwable)",
                    "public static void co.elastic.apm.agent.jms.JmsMessageProducerInstrumentation.endSpan(@Advice.Enter @Nullable final Object spanObj, @Advice.Thrown final Throwable throwable)"
                ],
                "apm-agent-plugins/apm-jsf-plugin/src/main/java/co/elastic/apm/agent/jsf/AbstractJsfLifecycleExecuteInstrumentation.java": [
                    "protected static void co.elastic.apm.agent.jsf.AbstractJsfLifecycleExecuteInstrumentation.endAndDeactivateSpan(@Nullable Object span, @Nullable Throwable t)",
                    "protected static Object co.elastic.apm.agent.jsf.AbstractJsfLifecycleExecuteInstrumentation.createAndActivateSpan(boolean withExternalContext, @Nullable String requestServletPath, @Nullable String requestPathInfo)"
                ],
                "apm-agent-plugins/apm-jsf-plugin/src/main/java/co/elastic/apm/agent/jsf/AbstractJsfLifecycleRenderInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.jsf.AbstractJsfLifecycleRenderInstrumentation.createRenderSpan()",
                    "public static void co.elastic.apm.agent.jsf.AbstractJsfLifecycleRenderInstrumentation.endRenderSpan(@Advice.Enter @Nullable Object span, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollEnd(@Advice.Thrown final Throwable throwable)",
                    "public static void co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/NewKafkaPollExitInstrumentation.java": [
                    "public static void co.elastic.apm.agent.kafka.NewKafkaPollExitInstrumentation.pollEnd(@Advice.Thrown final Throwable throwable, @Advice.Return @Nullable ConsumerRecords<?, ?> records)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord<?, ?> co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()",
                    "public void co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.endCurrentTransaction()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHeadersHelper.java": [
                    "public void co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.addSpanLinks(@Nullable ConsumerRecords<?, ?> records, AbstractSpan<?> span)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-spring-plugin/src/main/java/co/elastic/apm/agent/kafka/SpringKafkaBatchListenerInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.kafka.SpringKafkaBatchListenerInstrumentation.onEnter(@Advice.This Object thiz)",
                    "public static void co.elastic.apm.agent.kafka.SpringKafkaBatchListenerInstrumentation.onExit(@Nullable @Advice.Enter Object transactionObj)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/error/LoggerErrorHelper.java": [
                    "public Object co.elastic.apm.agent.loginstr.error.LoggerErrorHelper.enter(@Nullable Throwable exception, Class<?> originClass)"
                ],
                "apm-agent-plugins/apm-mongodb/apm-mongodb-common/src/main/java/co/elastic/apm/agent/mongodb/MongoHelper.java": [
                    "public Span<?> co.elastic.apm.agent.mongodb.MongoHelper.startSpan(@Nullable String database, @Nullable String collection, @Nullable String command, String host, int port, @Nullable BsonDocument commandDocument)"
                ],
                "apm-agent-plugins/apm-mongodb/apm-mongodb3-plugin/src/main/java/co/elastic/apm/agent/mongodb/v3/ConnectionCommandInstrumentation.java": [
                    "public static void co.elastic.apm.agent.mongodb.v3.ConnectionCommandInstrumentation.onExit(@Nullable @Advice.Enter Object spanObj, @Advice.Thrown Throwable thrown)"
                ],
                "apm-agent-plugins/apm-mongodb/apm-mongodb3-plugin/src/main/java/co/elastic/apm/agent/mongodb/v3/ConnectionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.mongodb.v3.ConnectionInstrumentation.onExit(@Nullable @Advice.Enter Object spanObj, @Advice.Thrown Throwable thrown)"
                ],
                "apm-agent-plugins/apm-mongodb/apm-mongodb4-plugin/src/main/java/co/elastic/apm/agent/mongodb/v4/ConnectionCommandInstrumentation.java": [
                    "public static void co.elastic.apm.agent.mongodb.v4.ConnectionCommandInstrumentation.onExit(@Nullable @Advice.Enter Object spanObj, @Advice.Thrown Throwable thrown)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttp3ClientAsyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.okhttp.OkHttp3ClientAsyncInstrumentation.onAfterEnqueue(@Advice.Enter @Nullable Object[] enter)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttp3ClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.okhttp.OkHttp3ClientInstrumentation.onAfterExecute(@Advice.Return @Nullable okhttp3.Response response, @Advice.Thrown @Nullable Throwable t, @Advice.Enter @Nonnull Object[] enter)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttpClientAsyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.okhttp.OkHttpClientAsyncInstrumentation.onAfterEnqueue(@Advice.Enter @Nullable Object[] enter)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.okhttp.OkHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable com.squareup.okhttp.Response response, @Advice.Thrown @Nullable Throwable t, @Advice.Enter @Nonnull Object[] enter)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/ArrayBasedContextInstrumentation.java": [
                    "public static Context co.elastic.apm.agent.opentelemetry.ArrayBasedContextInstrumentation.onExit(@Advice.Return @Nullable Context returnValue)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/GlobalOpenTelemetryInstrumentation.java": [
                    "private static OpenTelemetry co.elastic.apm.agent.opentelemetry.GlobalOpenTelemetryInstrumentation.buildOpenTelemetry(OpenTelemetry delegate)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracingimpl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable AbstractSpan<?> parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ClassLoader applicationClassLoader)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ElasticApmTracerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.opentracingimpl.ElasticApmTracerInstrumentation.close()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ExternalSpanContextInstrumentation.java": [
                    "public static TraceContext co.elastic.apm.agent.opentracingimpl.ExternalSpanContextInstrumentation.parseTextMap(Iterable<Map.Entry<String, String>> textMap)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessHelper.java": [
                    "private void co.elastic.apm.agent.process.ProcessHelper.removeAndEndSpan(Process process, Outcome outcome)",
                    "void co.elastic.apm.agent.process.ProcessHelper.doEndProcess(Process process, boolean checkTerminatedProcess)",
                    "void co.elastic.apm.agent.process.ProcessHelper.doStartProcess(@Nonnull AbstractSpan<?> parentContext, @Nonnull Process process, @Nonnull String processName)"
                ],
                "apm-agent-plugins/apm-quartz-job-plugin/quartz-common/src/main/java/co/elastic/apm/agent/quartzjob/AbstractJobTransactionNameInstrumentation.java": [
                    "protected static <T> void co.elastic.apm.agent.quartzjob.AbstractJobTransactionNameInstrumentation.endTransaction(@Nullable T jobExecutionContext, @Nullable Object transactionObj, @Nullable Throwable t, JobExecutionContextHandler<T> helper)",
                    "private static Transaction<?> co.elastic.apm.agent.quartzjob.AbstractJobTransactionNameInstrumentation.createAndActivateTransaction(Class<?> originClass, String name)",
                    "protected static <T> Transaction<?> co.elastic.apm.agent.quartzjob.AbstractJobTransactionNameInstrumentation.createAndActivateTransaction(@Nullable T jobExecutionContext, String signature, Class<?> clazz, JobExecutionContextHandler<T> helper)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-plugin/src/main/java/co/elastic/apm/agent/rabbitmq/AbstractBaseInstrumentation.java": [
                    "protected static void co.elastic.apm.agent.rabbitmq.AbstractBaseInstrumentation.captureHeaders(@Nullable Map<String, Object> headers, Message message)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-plugin/src/main/java/co/elastic/apm/agent/rabbitmq/ChannelInstrumentation.java": [
                    "public static Span<?> co.elastic.apm.agent.rabbitmq.ChannelInstrumentation.createExitSpan(@Nullable String exchangeOrQueue)",
                    "public static void co.elastic.apm.agent.rabbitmq.ChannelInstrumentation.afterBasicPublish(@Advice.Enter @Nullable Object[] enterArray, @Advice.Thrown @Nullable Throwable throwable)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-plugin/src/main/java/co/elastic/apm/agent/rabbitmq/ConsumerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.rabbitmq.ConsumerInstrumentation.afterHandleDelivery(@Advice.Enter @Nullable final Object transactionObject, @Advice.Thrown @Nullable final Throwable throwable)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/MessageBatchIteratorWrapper.java": [
                    "public void co.elastic.apm.agent.rabbitmq.MessageBatchIteratorWrapper.endCurrentTransaction()"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/SpringAmqpBatchMessageListenerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.rabbitmq.SpringAmqpBatchMessageListenerInstrumentation.afterOnBatch(@Advice.Enter @Nullable Object[] enter, @Advice.Thrown @Nullable Throwable throwable)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/SpringAmqpMessageListenerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.rabbitmq.SpringAmqpMessageListenerInstrumentation.afterMessageHandle(@Advice.Enter @Nullable final Object transactionObject, @Advice.Thrown @Nullable final Throwable throwable)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/SpringAmqpTransactionHelper.java": [
                    "public Transaction<?> co.elastic.apm.agent.rabbitmq.SpringAmqpTransactionHelper.createTransaction(Message message, String transactionNamePrefix)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-lettuce-plugin/src/main/java/co/elastic/apm/agent/lettuce/Lettuce34StartSpanInstrumentation.java": [
                    "public static void co.elastic.apm.agent.lettuce.Lettuce34StartSpanInstrumentation.afterDispatch(@Nullable @Advice.Enter Object spanObj)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-lettuce-plugin/src/main/java/co/elastic/apm/agent/lettuce/Lettuce34StopSpanInstrumentation.java": [
                    "public static void co.elastic.apm.agent.lettuce.Lettuce34StopSpanInstrumentation.beforeComplete(@Advice.This RedisCommand<?, ?, ?> command)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-lettuce-plugin/src/main/java/co/elastic/apm/agent/lettuce/Lettuce5StartSpanInstrumentation.java": [
                    "public static void co.elastic.apm.agent.lettuce.Lettuce5StartSpanInstrumentation.afterDispatch(@Nullable @Advice.Enter Object spanObj)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-lettuce-plugin/src/main/java/co/elastic/apm/agent/lettuce/Lettuce5StopSpanInstrumentation.java": [
                    "public static void co.elastic.apm.agent.lettuce.Lettuce5StopSpanInstrumentation.beforeComplete(@Advice.This RedisCommand<?, ?, ?> command)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-redis-common/src/main/java/co/elastic/apm/agent/redis/RedisSpanUtils.java": [
                    "public static Span<?> co.elastic.apm.agent.redis.RedisSpanUtils.createRedisSpan(String command)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-redisson-plugin/src/main/java/co/elastic/apm/agent/redisson/RedisConnectionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.redisson.RedisConnectionInstrumentation.afterSend(@Nullable @Advice.Enter Object spanObj, @Nullable @Advice.Thrown Throwable thrown)"
                ],
                "apm-agent-plugins/apm-scheduled-annotation-plugin/src/main/java/co/elastic/apm/agent/scheduled/ScheduledTransactionNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.scheduled.ScheduledTransactionNameInstrumentation.onMethodExit(@Advice.Enter @Nullable Object transactionObj, @Advice.Thrown @Nullable Throwable t)",
                    "public static Object co.elastic.apm.agent.scheduled.ScheduledTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature, @Advice.Origin Class<?> clazz)"
                ],
                "apm-agent-plugins/apm-scheduled-annotation-plugin/src/main/java/co/elastic/apm/agent/scheduled/TimerTaskInstrumentation.java": [
                    "public static void co.elastic.apm.agent.scheduled.TimerTaskInstrumentation.onMethodExit(@Advice.Enter @Nullable Object transactionObj, @Advice.Thrown Throwable t)",
                    "public static Object co.elastic.apm.agent.scheduled.TimerTaskInstrumentation.setTransactionName(@SimpleMethodSignatureOffsetMappingFactory.SimpleMethodSignature String signature, @Advice.Origin Class<?> clazz)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/JakartaRequestStreamRecordingInstrumentation.java": [
                    "public static ServletInputStream co.elastic.apm.agent.servlet.JakartaRequestStreamRecordingInstrumentation.afterGetInputStream(@Advice.Return @Nullable ServletInputStream inputStream)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> void co.elastic.apm.agent.servlet.ServletApiAdvice.onExitServlet( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest, Object servletResponse, @Nullable Object transactionOrScopeOrSpan, @Nullable Throwable t, Object thiz)",
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> Object co.elastic.apm.agent.servlet.ServletApiAdvice.onServletEnter( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletServiceNameHelper.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.servlet.ServletServiceNameHelper.determineServiceName(ServletContextAdapter<ServletContext> adapter, @Nullable ServletContext servletContext, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public <HttpServletRequest, ServletContext> Transaction<?> co.elastic.apm.agent.servlet.ServletTransactionHelper.createAndActivateTransaction( ServletRequestAdapter<HttpServletRequest, ServletContext> requestAdapter, ServletContextAdapter<ServletContext> contextAdapter, HttpServletRequest request)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/JakartaAsyncContextAdviceHelper.java": [
                    "public void co.elastic.apm.agent.servlet.helper.JakartaAsyncContextAdviceHelper.onExitStartAsync(AsyncContext asyncContext)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/JavaxAsyncContextAdviceHelper.java": [
                    "public void co.elastic.apm.agent.servlet.helper.JavaxAsyncContextAdviceHelper.onExitStartAsync(AsyncContext asyncContext)"
                ],
                "apm-agent-plugins/apm-sparkjava-plugin/src/main/java/co/elastic/apm/agent/sparkjava/RoutesAdvice.java": [
                    "public static void co.elastic.apm.agent.sparkjava.RoutesAdvice.onExitFind(@Advice.Return RouteMatch routeMatch)"
                ],
                "apm-agent-plugins/apm-spring-resttemplate/apm-spring-resttemplate-plugin/src/main/java/co/elastic/apm/agent/resttemplate/SpringRestTemplateAdvice.java": [
                    "public static void co.elastic.apm.agent.resttemplate.SpringRestTemplateAdvice.afterExecute(@Advice.Return @Nullable ClientHttpResponse clientHttpResponse, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)",
                    "public static Object co.elastic.apm.agent.resttemplate.SpringRestTemplateAdvice.beforeExecute(@Advice.This ClientHttpRequest request)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webclient-plugin/src/main/java/co/elastic/apm/agent/springwebclient/WebClientExchangeFunctionInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.springwebclient.WebClientExchangeFunctionInstrumentation.afterExecute(@Advice.Return @Nullable Publisher<?> returnValue, @Advice.Enter @Nullable Object[] spanRequestObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webclient-plugin/src/main/java/co/elastic/apm/agent/springwebclient/WebClientSubscriber.java": [
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onSubscribe(Subscription s)",
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onComplete()",
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onError(Throwable throwable)",
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onNext(T t)",
                    "private void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.cancelSpan()"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/TransactionAwareSubscriber.java": [
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onError(Throwable t)",
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onSubscribe(Subscription s)",
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onNext(T next)",
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onComplete()",
                    "private void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.cancelTransaction()"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "public static Transaction<?> co.elastic.apm.agent.springwebflux.WebfluxHelper.getOrCreateTransaction(Tracer tracer, ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxServletHelper.java": [
                    "public static Transaction<?> co.elastic.apm.agent.springwebflux.WebfluxServletHelper.getServletTransaction(ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/ViewRenderInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.ViewRenderInstrumentation.afterExecute(@Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)",
                    "public static Object co.elastic.apm.agent.springwebmvc.ViewRenderInstrumentation.beforeExecute(@Advice.This Object thiz)"
                ],
                "apm-agent-plugins/apm-struts-plugin/src/main/java/co/elastic/apm/agent/struts/ActionProxyAdvice.java": [
                    "public static Object co.elastic.apm.agent.struts.ActionProxyAdvice.onEnterExecute(@Advice.This ActionProxy actionProxy)",
                    "public static void co.elastic.apm.agent.struts.ActionProxyAdvice.onExitExecute(@Advice.Enter @Nullable Object spanOrNull, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractHttpTransactionHelper.java": [
                    "protected void co.elastic.apm.agent.vertx.AbstractHttpTransactionHelper.fillUrlRelatedFields(Request request, @Nullable String scheme, @Nullable String serverName, int serverPort, String requestURI, @Nullable String queryString)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebClientHelper.java": [
                    "private void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.finalizeSpan(HttpContext<?> httpContext, int statusCode, @Nullable Throwable thrown, @Nullable AbstractSpan<?> parent)",
                    "public void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.followRedirect(HttpContext<?> httpContext, HttpClientRequest httpRequest)",
                    "public void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.startSpan(AbstractSpan<?> parent, HttpContext<?> httpContext, HttpClientRequest httpRequest)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebHelper.java": [
                    "protected Transaction<?> co.elastic.apm.agent.vertx.AbstractVertxWebHelper.startOrGetTransaction(HttpServerRequest httpServerRequest)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx3-plugin/src/main/java/co/elastic/apm/agent/vertx/v3/web/WebHelper.java": [
                    "public Transaction<?> co.elastic.apm.agent.vertx.v3.web.WebHelper.getTransactionForRequest(HttpServerRequest request)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx3-plugin/src/main/java/co/elastic/apm/agent/vertx/v3/web/http1/Http1StartTransactionInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.vertx.v3.web.http1.Http1StartTransactionInstrumentation.enter(@Advice.This HttpServerRequestImpl request)",
                    "public static void co.elastic.apm.agent.vertx.v3.web.http1.Http1StartTransactionInstrumentation.exit(@Advice.Enter Object transactionObj, @Advice.Thrown @Nullable Throwable thrown)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx3-plugin/src/main/java/co/elastic/apm/agent/vertx/v3/web/http2/Http2ServerResponseImplEndInstrumentation.java": [
                    "public static void co.elastic.apm.agent.vertx.v3.web.http2.Http2ServerResponseImplEndInstrumentation.closeExit(@Advice.This Http2ServerResponseImpl response)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx3-plugin/src/main/java/co/elastic/apm/agent/vertx/v3/web/http2/Http2StartTransactionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.vertx.v3.web.http2.Http2StartTransactionInstrumentation.exit(@Advice.Return Http2ServerRequestImpl request)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx4-plugin/src/main/java/co/elastic/apm/agent/vertx/v4/web/WebHelper.java": [
                    "public Transaction<?> co.elastic.apm.agent.vertx.v4.web.WebHelper.setRouteBasedNameForCurrentTransaction(RoutingContext routingContext)"
                ]
            },
            "a6be6fc83c802215fb449706cd7bb016558fbfc2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static ElasticApmInstrumentation co.elastic.apm.agent.bci.ElasticApmAgent.tryInstantiate(Class<? extends ElasticApmInstrumentation> instrumentation, boolean withTracer)",
                    "static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.doReInitInstrumentation(Iterable<ElasticApmInstrumentation> instrumentations)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(final Class<?> classToInstrument, final Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "private static Logger co.elastic.apm.agent.bci.ElasticApmAgent.getLogger()",
                    "public static synchronized Future<?> co.elastic.apm.agent.bci.ElasticApmAgent.reInitInstrumentation()"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/ApacheHttpAsyncClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.ApacheHttpAsyncClientInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object[] enter, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/ApacheHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.ApacheHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable CloseableHttpResponse response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/LegacyApacheHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.LegacyApacheHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable HttpResponse response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/helper/FutureCallbackWrapper.java": [
                    "private void co.elastic.apm.agent.httpclient.v4.helper.FutureCallbackWrapper<T>.finishSpan(@Nullable Exception e)"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureSpanInstrumentation.java": [
                    "public static void co.elastic.apm.agent.pluginapi.CaptureSpanInstrumentation.onMethodExit(@Advice.Enter @Nullable Object span, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureTransactionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.pluginapi.CaptureTransactionInstrumentation.onMethodExit(@Advice.Enter @Nullable Object transaction, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/ElasticApmApiInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.pluginapi.ElasticApmApiInstrumentation.doStartTransaction(@Advice.Origin Class<?> clazz)"
                ],
                "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java": [
                    "static Span co.elastic.apm.agent.asynchttpclient.AbstractAsyncHttpClientInstrumentation.removeAndActivateSpan(AsyncHandler<?> asyncHandler)",
                    "static Span co.elastic.apm.agent.asynchttpclient.AbstractAsyncHttpClientInstrumentation.getAndActivateSpan(AsyncHandler<?> asyncHandler)",
                    "public static void co.elastic.apm.agent.asynchttpclient.AbstractAsyncHttpClientInstrumentation.onMethodExit(@Nullable @Advice.Enter Object spanObj)"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-1-plugin/src/main/java/co/elastic/apm/agent/awssdk/v1/AmazonHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.awssdk.v1.AmazonHttpClientInstrumentation.exitInvoke(@Nullable @Advice.Enter Object spanObj, @Nullable @Advice.Thrown Throwable thrown)"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-1-plugin/src/main/java/co/elastic/apm/agent/awssdk/v1/SQSMessageDispatchingInstrumentation.java": [
                    "protected static void co.elastic.apm.agent.awssdk.v1.SQSMessageDispatchingInstrumentation.endSpan(@Nullable Object spanObj, @Nullable Throwable thrown)"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-1-plugin/src/main/java/co/elastic/apm/agent/awssdk/v1/helper/DynamoDbHelper.java": [
                    "public Span co.elastic.apm.agent.awssdk.v1.helper.DynamoDbHelper.startSpan(Request<?> request, URI httpURI, ExecutionContext context)"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-common/src/main/java/co/elastic/apm/agent/awssdk/common/AbstractMessageIteratorWrapper.java": [
                    "public void co.elastic.apm.agent.awssdk.common.AbstractMessageIteratorWrapper<Message>.endMessageProcessingSpan()",
                    "public Transaction co.elastic.apm.agent.awssdk.common.AbstractMessageIteratorWrapper<Message>.endCurrentTransaction()",
                    "public Message co.elastic.apm.agent.awssdk.common.AbstractMessageIteratorWrapper<Message>.next()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV1TransactionHelper.java": [
                    "public static APIGatewayProxyV1TransactionHelper co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV2TransactionHelper.java": [
                    "public static APIGatewayProxyV2TransactionHelper co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/PlainTransactionHelper.java": [
                    "public static PlainTransactionHelper co.elastic.apm.agent.awslambda.helper.PlainTransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/S3TransactionHelper.java": [
                    "public static S3TransactionHelper co.elastic.apm.agent.awslambda.helper.S3TransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/SNSTransactionHelper.java": [
                    "public static SNSTransactionHelper co.elastic.apm.agent.awslambda.helper.SNSTransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/SQSTransactionHelper.java": [
                    "public static SQSTransactionHelper co.elastic.apm.agent.awslambda.helper.SQSTransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-cassandra/apm-cassandra3-plugin/src/main/java/co/elastic/apm/agent/cassandra3/Cassandra3Instrumentation.java": [
                    "public void co.elastic.apm.agent.cassandra3.Cassandra3Instrumentation.onFailure(Throwable t)",
                    "public static void co.elastic.apm.agent.cassandra3.Cassandra3Instrumentation.onExit(@Advice.Thrown @Nullable Throwable thrown, @Advice.Return ResultSetFuture result, @Nullable @Advice.Enter Object spanObj)"
                ],
                "apm-agent-plugins/apm-cassandra/apm-cassandra4-plugin/src/main/java/co/elastic/apm/agent/cassandra4/Cassandra4Instrumentation.java": [
                    "public static void co.elastic.apm.agent.cassandra4.Cassandra4Instrumentation.onExit(@Advice.Thrown @Nullable Throwable thrown, @Advice.Return Object result, @Nullable @Advice.Enter Object spanObj)"
                ],
                "apm-agent-plugins/apm-ecs-logging-plugin/src/main/java/co/elastic/apm/agent/ecs_logging/Log4j2ServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.ecs_logging.Log4j2ServiceNameInstrumentation.onEnter(@Advice.This EcsLayout.Builder builder)"
                ],
                "apm-agent-plugins/apm-ecs-logging-plugin/src/main/java/co/elastic/apm/agent/ecs_logging/Log4j2ServiceVersionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.ecs_logging.Log4j2ServiceVersionInstrumentation.onEnter(@Advice.This EcsLayout.Builder builder)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-5_6/src/main/java/co/elastic/apm/agent/esrestclient/v5_6/ElasticsearchClientAsyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.esrestclient.v5_6.ElasticsearchClientAsyncInstrumentation.onAfterExecute(@Advice.Thrown @Nullable Throwable t, @Advice.Enter @Nullable Object[] entryArgs)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-5_6/src/main/java/co/elastic/apm/agent/esrestclient/v5_6/ElasticsearchClientSyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.esrestclient.v5_6.ElasticsearchClientSyncInstrumentation.onAfterExecute(@Advice.Return @Nullable Response response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-6_4/src/main/java/co/elastic/apm/agent/esrestclient/v6_4/ElasticsearchClientAsyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.esrestclient.v6_4.ElasticsearchClientAsyncInstrumentation.onAfterExecute(@Advice.Thrown @Nullable Throwable t, @Advice.Enter @Nullable Object[] entryArgs)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-6_4/src/main/java/co/elastic/apm/agent/esrestclient/v6_4/ElasticsearchClientSyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.esrestclient.v6_4.ElasticsearchClientSyncInstrumentation.onAfterExecute(@Advice.Return @Nullable Response response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ResponseListenerWrapper.java": [
                    "private void co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.finishClientSpan(@Nullable Response response, @Nullable Throwable throwable)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ChannelInstrumentation.java": [
                    "public static void co.elastic.apm.agent.grpc.ChannelInstrumentation.onExit(@Advice.Return @Nullable ClientCall<?, ?> clientCall, @Advice.Enter @Nullable Object span)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ClientCallListenerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.grpc.ClientCallListenerInstrumentation.onExit(@Advice.This ClientCall.Listener<?> listener, @Advice.Thrown @Nullable Throwable thrown, @Advice.Enter @Nullable Object span)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.cancelCall(ClientCall<?, ?> clientCall, @Nullable Throwable cause)",
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.replaceClientCallRegistration(ClientCall<?, ?> placeholderClientCall, ClientCall<?, ?> realClientCall)",
                    "public Span co.elastic.apm.agent.grpc.GrpcHelper.onClientCallCreationEntry(@Nullable AbstractSpan<?> parent, @Nullable MethodDescriptor<?, ?> method, @Nullable String authority)",
                    "public Transaction co.elastic.apm.agent.grpc.GrpcHelper.startTransaction(Tracer tracer, ClassLoader cl, ServerCall<?, ?> serverCall, Metadata headers)",
                    "public Span co.elastic.apm.agent.grpc.GrpcHelper.clientCallStartEnter(ClientCall<?, ?> clientCall, ClientCall.Listener<?> listener, Metadata headers)",
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.exitServerCall(Status status, @Nullable Throwable thrown, ServerCall<?, ?> serverCall)",
                    "public Span co.elastic.apm.agent.grpc.GrpcHelper.enterClientListenerMethod(ClientCall.Listener<?> listener)",
                    "public Transaction co.elastic.apm.agent.grpc.GrpcHelper.enterServerListenerMethod(ServerCall.Listener<?> listener)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallListenerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.onExit(@Advice.Thrown @Nullable Throwable thrown, @Advice.This ServerCall.Listener<?> listener, @Advice.Enter @Nullable Object transaction)"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-5_x/src/main/java/co/elastic/apm/agent/hibernatesearch/v5/HibernateSearch5Instrumentation.java": [
                    "public static void co.elastic.apm.agent.hibernatesearch.v5.HibernateSearch5Instrumentation.onAfterExecute(@Advice.Enter @Nullable Object span, @Advice.Thrown Throwable t)"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-6_x/src/main/java/co/elastic/apm/agent/hibernatesearch/HibernateSearch6Instrumentation.java": [
                    "public static void co.elastic.apm.agent.hibernatesearch.HibernateSearch6Instrumentation.onAfterExecute(@Advice.Enter @Nullable Object span, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-common/src/main/java/co/elastic/apm/agent/hibernatesearch/HibernateSearchHelper.java": [
                    "public static Span co.elastic.apm.agent.hibernatesearch.HibernateSearchHelper.createAndActivateSpan(final Tracer tracer, final String methodName, final String query)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.httpclient.HttpClientHelper.startHttpClientSpan(AbstractSpan<?> parent, String method, @Nullable String uri, @Nullable String scheme, @Nullable CharSequence hostName, int port)"
                ],
                "apm-agent-plugins/apm-jakarta-websocket-plugin/src/main/java/co/elastic/apm/agent/websocket/BaseServerEndpointInstrumentation.java": [
                    "protected static void co.elastic.apm.agent.websocket.BaseServerEndpointInstrumentation.endTransaction(@Nullable Object transactionOrNull, @Advice.Thrown @Nullable Throwable t)",
                    "protected static Object co.elastic.apm.agent.websocket.BaseServerEndpointInstrumentation.startTransactionOrSetTransactionName(String signature, String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-plugins/apm-java-ldap-plugin/src/main/java/co/elastic/apm/agent/java_ldap/LdapClientAdvice.java": [
                    "public static void co.elastic.apm.agent.java_ldap.LdapClientAdvice.onExit(@Advice.Enter @Nullable Object spanObj, @Nullable @Advice.Return LdapResult ldapResult, @Nullable @Advice.Thrown Throwable t)"
                ],
                "apm-agent-plugins/apm-javalin-plugin/src/main/java/co/elastic/apm/agent/javalin/JavalinRenderInstrumentation.java": [
                    "public static void co.elastic.apm.agent.javalin.JavalinRenderInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "protected static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(String signature, @Nullable String pathAnnotationValue, @Nullable String frameworkVersion)"
                ],
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t, @Advice.Return @Nullable Object returnValue)",
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object span, @Advice.Thrown @Nullable Throwable t, @Advice.Return long returnValue /* bytebuddy converts int to long for us here ! */)",
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.This Statement statement, @Advice.Enter @Nullable Object span, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "private boolean co.elastic.apm.agent.jdbc.helper.JdbcHelper.isAlreadyMonitored(@Nullable AbstractSpan<?> parent)",
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientAdvice.java": [
                    "public static void co.elastic.apm.agent.httpclient.HttpClientAdvice.onAfterExecute(@Advice.Return @Nullable HttpResponse<?> response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientAdviceHelper.java": [
                    "public static Span co.elastic.apm.agent.httpclient.HttpClientAdviceHelper.startSpan(HttpRequest httpRequest)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientAsyncAdvice.java": [
                    "public static void co.elastic.apm.agent.httpclient.HttpClientAsyncAdvice.onAfterExecute(@Advice.Return @Nullable CompletableFuture<HttpResponse<?>> completableFuture, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpRequestHeadersAdvice.java": [
                    "public static HttpHeaders co.elastic.apm.agent.httpclient.HttpRequestHeadersAdvice.onAfterExecute(@Advice.Return @Nullable final HttpHeaders httpHeaders)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public void co.elastic.apm.agent.jms.JmsInstrumentationHelper.addMessageDetails(@Nullable Message message, AbstractSpan<?> span)",
                    "public Transaction co.elastic.apm.agent.jms.JmsInstrumentationHelper.startJmsTransaction(Message parentMessage, Class<?> instrumentedClass)",
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelper.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsMessageListenerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jms.JmsMessageListenerInstrumentation.afterOnMessage(@Advice.Enter @Nullable final Object transactionObj, @Advice.Thrown final Throwable throwable)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsMessageProducerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jms.JmsMessageProducerInstrumentation.afterSend(@Advice.Enter @Nullable final Object spanObj, @Advice.Thrown final Throwable throwable)",
                    "public static void co.elastic.apm.agent.jms.JmsMessageProducerInstrumentation.endSpan(@Advice.Enter @Nullable final Object spanObj, @Advice.Thrown final Throwable throwable)"
                ],
                "apm-agent-plugins/apm-jsf-plugin/src/main/java/co/elastic/apm/agent/jsf/AbstractJsfLifecycleExecuteInstrumentation.java": [
                    "protected static void co.elastic.apm.agent.jsf.AbstractJsfLifecycleExecuteInstrumentation.endAndDeactivateSpan(@Nullable Object span, @Nullable Throwable t)",
                    "protected static Object co.elastic.apm.agent.jsf.AbstractJsfLifecycleExecuteInstrumentation.createAndActivateSpan(boolean withExternalContext, @Nullable String requestServletPath, @Nullable String requestPathInfo)"
                ],
                "apm-agent-plugins/apm-jsf-plugin/src/main/java/co/elastic/apm/agent/jsf/AbstractJsfLifecycleRenderInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.jsf.AbstractJsfLifecycleRenderInstrumentation.createRenderSpan()",
                    "public static void co.elastic.apm.agent.jsf.AbstractJsfLifecycleRenderInstrumentation.endRenderSpan(@Advice.Enter @Nullable Object span, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollEnd(@Advice.Thrown final Throwable throwable)",
                    "public static void co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/NewKafkaPollExitInstrumentation.java": [
                    "public static void co.elastic.apm.agent.kafka.NewKafkaPollExitInstrumentation.pollEnd(@Advice.Thrown final Throwable throwable, @Advice.Return @Nullable ConsumerRecords<?, ?> records)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord<?, ?> co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()",
                    "public void co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.endCurrentTransaction()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHeadersHelper.java": [
                    "public void co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.addSpanLinks(@Nullable ConsumerRecords<?, ?> records, AbstractSpan<?> span)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-spring-plugin/src/main/java/co/elastic/apm/agent/kafka/SpringKafkaBatchListenerInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.kafka.SpringKafkaBatchListenerInstrumentation.onEnter(@Advice.This Object thiz)",
                    "public static void co.elastic.apm.agent.kafka.SpringKafkaBatchListenerInstrumentation.onExit(@Nullable @Advice.Enter Object transactionObj)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/error/LoggerErrorHelper.java": [
                    "public Object co.elastic.apm.agent.loginstr.error.LoggerErrorHelper.enter(@Nullable Throwable exception, Class<?> originClass)"
                ],
                "apm-agent-plugins/apm-mongodb/apm-mongodb-common/src/main/java/co/elastic/apm/agent/mongodb/MongoHelper.java": [
                    "public Span co.elastic.apm.agent.mongodb.MongoHelper.startSpan(@Nullable String database, @Nullable String collection, @Nullable String command, String host, int port, @Nullable BsonDocument commandDocument)"
                ],
                "apm-agent-plugins/apm-mongodb/apm-mongodb3-plugin/src/main/java/co/elastic/apm/agent/mongodb/v3/ConnectionCommandInstrumentation.java": [
                    "public static void co.elastic.apm.agent.mongodb.v3.ConnectionCommandInstrumentation.onExit(@Nullable @Advice.Enter Object spanObj, @Advice.Thrown Throwable thrown)"
                ],
                "apm-agent-plugins/apm-mongodb/apm-mongodb3-plugin/src/main/java/co/elastic/apm/agent/mongodb/v3/ConnectionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.mongodb.v3.ConnectionInstrumentation.onExit(@Nullable @Advice.Enter Object spanObj, @Advice.Thrown Throwable thrown)"
                ],
                "apm-agent-plugins/apm-mongodb/apm-mongodb4-plugin/src/main/java/co/elastic/apm/agent/mongodb/v4/ConnectionCommandInstrumentation.java": [
                    "public static void co.elastic.apm.agent.mongodb.v4.ConnectionCommandInstrumentation.onExit(@Nullable @Advice.Enter Object spanObj, @Advice.Thrown Throwable thrown)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttp3ClientAsyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.okhttp.OkHttp3ClientAsyncInstrumentation.onAfterEnqueue(@Advice.Enter @Nullable Object[] enter)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttp3ClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.okhttp.OkHttp3ClientInstrumentation.onAfterExecute(@Advice.Return @Nullable okhttp3.Response response, @Advice.Thrown @Nullable Throwable t, @Advice.Enter @Nonnull Object[] enter)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttpClientAsyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.okhttp.OkHttpClientAsyncInstrumentation.onAfterEnqueue(@Advice.Enter @Nullable Object[] enter)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.okhttp.OkHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable com.squareup.okhttp.Response response, @Advice.Thrown @Nullable Throwable t, @Advice.Enter @Nonnull Object[] enter)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/ArrayBasedContextInstrumentation.java": [
                    "public static Context co.elastic.apm.agent.opentelemetry.ArrayBasedContextInstrumentation.onExit(@Advice.Return @Nullable Context returnValue)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/GlobalOpenTelemetryInstrumentation.java": [
                    "private static OpenTelemetry co.elastic.apm.agent.opentelemetry.GlobalOpenTelemetryInstrumentation.buildOpenTelemetry(OpenTelemetry delegate)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracingimpl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable AbstractSpan<?> parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ClassLoader applicationClassLoader)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ElasticApmTracerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.opentracingimpl.ElasticApmTracerInstrumentation.close()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ExternalSpanContextInstrumentation.java": [
                    "public static TraceContext co.elastic.apm.agent.opentracingimpl.ExternalSpanContextInstrumentation.parseTextMap(Iterable<Map.Entry<String, String>> textMap)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessHelper.java": [
                    "private void co.elastic.apm.agent.process.ProcessHelper.removeAndEndSpan(Process process, Outcome outcome)",
                    "void co.elastic.apm.agent.process.ProcessHelper.doEndProcess(Process process, boolean checkTerminatedProcess)",
                    "void co.elastic.apm.agent.process.ProcessHelper.doStartProcess(@Nonnull AbstractSpan<?> parentContext, @Nonnull Process process, @Nonnull String processName)"
                ],
                "apm-agent-plugins/apm-quartz-job-plugin/quartz-common/src/main/java/co/elastic/apm/agent/quartzjob/AbstractJobTransactionNameInstrumentation.java": [
                    "protected static <T> Transaction co.elastic.apm.agent.quartzjob.AbstractJobTransactionNameInstrumentation.createAndActivateTransaction(@Nullable T jobExecutionContext, String signature, Class<?> clazz, JobExecutionContextHandler<T> helper)",
                    "protected static <T> void co.elastic.apm.agent.quartzjob.AbstractJobTransactionNameInstrumentation.endTransaction(@Nullable T jobExecutionContext, @Nullable Object transactionObj, @Nullable Throwable t, JobExecutionContextHandler<T> helper)",
                    "private static Transaction co.elastic.apm.agent.quartzjob.AbstractJobTransactionNameInstrumentation.createAndActivateTransaction(Class<?> originClass, String name)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-plugin/src/main/java/co/elastic/apm/agent/rabbitmq/AbstractBaseInstrumentation.java": [
                    "protected static void co.elastic.apm.agent.rabbitmq.AbstractBaseInstrumentation.captureHeaders(@Nullable Map<String, Object> headers, Message message)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-plugin/src/main/java/co/elastic/apm/agent/rabbitmq/ChannelInstrumentation.java": [
                    "public static Span co.elastic.apm.agent.rabbitmq.ChannelInstrumentation.createExitSpan(@Nullable String exchangeOrQueue)",
                    "public static void co.elastic.apm.agent.rabbitmq.ChannelInstrumentation.afterBasicPublish(@Advice.Enter @Nullable Object[] enterArray, @Advice.Thrown @Nullable Throwable throwable)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-plugin/src/main/java/co/elastic/apm/agent/rabbitmq/ConsumerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.rabbitmq.ConsumerInstrumentation.afterHandleDelivery(@Advice.Enter @Nullable final Object transactionObject, @Advice.Thrown @Nullable final Throwable throwable)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/MessageBatchIteratorWrapper.java": [
                    "public void co.elastic.apm.agent.rabbitmq.MessageBatchIteratorWrapper.endCurrentTransaction()"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/SpringAmqpBatchMessageListenerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.rabbitmq.SpringAmqpBatchMessageListenerInstrumentation.afterOnBatch(@Advice.Enter @Nullable Object[] enter, @Advice.Thrown @Nullable Throwable throwable)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/SpringAmqpMessageListenerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.rabbitmq.SpringAmqpMessageListenerInstrumentation.afterMessageHandle(@Advice.Enter @Nullable final Object transactionObject, @Advice.Thrown @Nullable final Throwable throwable)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/SpringAmqpTransactionHelper.java": [
                    "public Transaction co.elastic.apm.agent.rabbitmq.SpringAmqpTransactionHelper.createTransaction(Message message, String transactionNamePrefix)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-lettuce-plugin/src/main/java/co/elastic/apm/agent/lettuce/Lettuce34StartSpanInstrumentation.java": [
                    "public static void co.elastic.apm.agent.lettuce.Lettuce34StartSpanInstrumentation.afterDispatch(@Nullable @Advice.Enter Object spanObj)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-lettuce-plugin/src/main/java/co/elastic/apm/agent/lettuce/Lettuce34StopSpanInstrumentation.java": [
                    "public static void co.elastic.apm.agent.lettuce.Lettuce34StopSpanInstrumentation.beforeComplete(@Advice.This RedisCommand<?, ?, ?> command)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-lettuce-plugin/src/main/java/co/elastic/apm/agent/lettuce/Lettuce5StartSpanInstrumentation.java": [
                    "public static void co.elastic.apm.agent.lettuce.Lettuce5StartSpanInstrumentation.afterDispatch(@Nullable @Advice.Enter Object spanObj)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-lettuce-plugin/src/main/java/co/elastic/apm/agent/lettuce/Lettuce5StopSpanInstrumentation.java": [
                    "public static void co.elastic.apm.agent.lettuce.Lettuce5StopSpanInstrumentation.beforeComplete(@Advice.This RedisCommand<?, ?, ?> command)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-redis-common/src/main/java/co/elastic/apm/agent/redis/RedisSpanUtils.java": [
                    "public static Span co.elastic.apm.agent.redis.RedisSpanUtils.createRedisSpan(String command)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-redisson-plugin/src/main/java/co/elastic/apm/agent/redisson/RedisConnectionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.redisson.RedisConnectionInstrumentation.afterSend(@Nullable @Advice.Enter Object spanObj, @Nullable @Advice.Thrown Throwable thrown)"
                ],
                "apm-agent-plugins/apm-scheduled-annotation-plugin/src/main/java/co/elastic/apm/agent/scheduled/ScheduledTransactionNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.scheduled.ScheduledTransactionNameInstrumentation.onMethodExit(@Advice.Enter @Nullable Object transactionObj, @Advice.Thrown @Nullable Throwable t)",
                    "public static Object co.elastic.apm.agent.scheduled.ScheduledTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature, @Advice.Origin Class<?> clazz)"
                ],
                "apm-agent-plugins/apm-scheduled-annotation-plugin/src/main/java/co/elastic/apm/agent/scheduled/TimerTaskInstrumentation.java": [
                    "public static void co.elastic.apm.agent.scheduled.TimerTaskInstrumentation.onMethodExit(@Advice.Enter @Nullable Object transactionObj, @Advice.Thrown Throwable t)",
                    "public static Object co.elastic.apm.agent.scheduled.TimerTaskInstrumentation.setTransactionName(@SimpleMethodSignatureOffsetMappingFactory.SimpleMethodSignature String signature, @Advice.Origin Class<?> clazz)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/JakartaRequestStreamRecordingInstrumentation.java": [
                    "public static ServletInputStream co.elastic.apm.agent.servlet.JakartaRequestStreamRecordingInstrumentation.afterGetInputStream(@Advice.Return @Nullable ServletInputStream inputStream)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> void co.elastic.apm.agent.servlet.ServletApiAdvice.onExitServlet( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest, Object servletResponse, @Nullable Object transactionOrScopeOrSpan, @Nullable Throwable t, Object thiz)",
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> Object co.elastic.apm.agent.servlet.ServletApiAdvice.onServletEnter( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletServiceNameHelper.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.servlet.ServletServiceNameHelper.determineServiceName(ServletContextAdapter<ServletContext> adapter, @Nullable ServletContext servletContext, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public <HttpServletRequest, ServletContext> Transaction co.elastic.apm.agent.servlet.ServletTransactionHelper.createAndActivateTransaction( ServletRequestAdapter<HttpServletRequest, ServletContext> requestAdapter, ServletContextAdapter<ServletContext> contextAdapter, HttpServletRequest request)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/JakartaAsyncContextAdviceHelper.java": [
                    "public void co.elastic.apm.agent.servlet.helper.JakartaAsyncContextAdviceHelper.onExitStartAsync(AsyncContext asyncContext)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/JavaxAsyncContextAdviceHelper.java": [
                    "public void co.elastic.apm.agent.servlet.helper.JavaxAsyncContextAdviceHelper.onExitStartAsync(AsyncContext asyncContext)"
                ],
                "apm-agent-plugins/apm-sparkjava-plugin/src/main/java/co/elastic/apm/agent/sparkjava/RoutesAdvice.java": [
                    "public static void co.elastic.apm.agent.sparkjava.RoutesAdvice.onExitFind(@Advice.Return RouteMatch routeMatch)"
                ],
                "apm-agent-plugins/apm-spring-resttemplate/apm-spring-resttemplate-plugin/src/main/java/co/elastic/apm/agent/resttemplate/SpringRestTemplateAdvice.java": [
                    "public static void co.elastic.apm.agent.resttemplate.SpringRestTemplateAdvice.afterExecute(@Advice.Return @Nullable ClientHttpResponse clientHttpResponse, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)",
                    "public static Object co.elastic.apm.agent.resttemplate.SpringRestTemplateAdvice.beforeExecute(@Advice.This ClientHttpRequest request)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webclient-plugin/src/main/java/co/elastic/apm/agent/springwebclient/WebClientExchangeFunctionInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.springwebclient.WebClientExchangeFunctionInstrumentation.afterExecute(@Advice.Return @Nullable Publisher<?> returnValue, @Advice.Enter @Nullable Object[] spanRequestObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webclient-plugin/src/main/java/co/elastic/apm/agent/springwebclient/WebClientSubscriber.java": [
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onSubscribe(Subscription s)",
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onComplete()",
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onError(Throwable throwable)",
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onNext(T t)",
                    "private void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.cancelSpan()"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/TransactionAwareSubscriber.java": [
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onError(Throwable t)",
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onSubscribe(Subscription s)",
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onNext(T next)",
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onComplete()",
                    "private void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.cancelTransaction()"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "public static Transaction co.elastic.apm.agent.springwebflux.WebfluxHelper.getOrCreateTransaction(Tracer tracer, ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxServletHelper.java": [
                    "public static Transaction co.elastic.apm.agent.springwebflux.WebfluxServletHelper.getServletTransaction(ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/ViewRenderInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.ViewRenderInstrumentation.afterExecute(@Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)",
                    "public static Object co.elastic.apm.agent.springwebmvc.ViewRenderInstrumentation.beforeExecute(@Advice.This Object thiz)"
                ],
                "apm-agent-plugins/apm-struts-plugin/src/main/java/co/elastic/apm/agent/struts/ActionProxyAdvice.java": [
                    "public static Object co.elastic.apm.agent.struts.ActionProxyAdvice.onEnterExecute(@Advice.This ActionProxy actionProxy)",
                    "public static void co.elastic.apm.agent.struts.ActionProxyAdvice.onExitExecute(@Advice.Enter @Nullable Object spanOrNull, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractHttpTransactionHelper.java": [
                    "protected void co.elastic.apm.agent.vertx.AbstractHttpTransactionHelper.fillUrlRelatedFields(Request request, @Nullable String scheme, @Nullable String serverName, int serverPort, String requestURI, @Nullable String queryString)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebClientHelper.java": [
                    "private void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.finalizeSpan(HttpContext<?> httpContext, int statusCode, @Nullable Throwable thrown, @Nullable AbstractSpan<?> parent)",
                    "public void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.followRedirect(HttpContext<?> httpContext, HttpClientRequest httpRequest)",
                    "public void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.startSpan(AbstractSpan<?> parent, HttpContext<?> httpContext, HttpClientRequest httpRequest)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebHelper.java": [
                    "protected Transaction co.elastic.apm.agent.vertx.AbstractVertxWebHelper.startOrGetTransaction(HttpServerRequest httpServerRequest)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx3-plugin/src/main/java/co/elastic/apm/agent/vertx/v3/web/WebHelper.java": [
                    "public Transaction co.elastic.apm.agent.vertx.v3.web.WebHelper.getTransactionForRequest(HttpServerRequest request)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx3-plugin/src/main/java/co/elastic/apm/agent/vertx/v3/web/http1/Http1StartTransactionInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.vertx.v3.web.http1.Http1StartTransactionInstrumentation.enter(@Advice.This HttpServerRequestImpl request)",
                    "public static void co.elastic.apm.agent.vertx.v3.web.http1.Http1StartTransactionInstrumentation.exit(@Advice.Enter Object transactionObj, @Advice.Thrown @Nullable Throwable thrown)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx3-plugin/src/main/java/co/elastic/apm/agent/vertx/v3/web/http2/Http2ServerResponseImplEndInstrumentation.java": [
                    "public static void co.elastic.apm.agent.vertx.v3.web.http2.Http2ServerResponseImplEndInstrumentation.closeExit(@Advice.This Http2ServerResponseImpl response)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx3-plugin/src/main/java/co/elastic/apm/agent/vertx/v3/web/http2/Http2StartTransactionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.vertx.v3.web.http2.Http2StartTransactionInstrumentation.exit(@Advice.Return Http2ServerRequestImpl request)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx4-plugin/src/main/java/co/elastic/apm/agent/vertx/v4/web/WebHelper.java": [
                    "public Transaction co.elastic.apm.agent.vertx.v4.web.WebHelper.setRouteBasedNameForCurrentTransaction(RoutingContext routingContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0b0082d92686c5ba4fedbc4a251bcefbdbf6b8f8",
        "previous_commit": "cd893419137fd80981505c754ecea5cce6fb0bbd",
        "date": 1718623569,
        "releases": {
            "previous": "0b0082d92686c5ba4fedbc4a251bcefbdbf6b8f8",
            "next": "0b0082d92686c5ba4fedbc4a251bcefbdbf6b8f8"
        },
        "commit_message": "Remove unused API and resolve naming ambiguities (#3561)\n\n* Rename implementation versions of interfaces to reflect their state as non-API.\r\n\r\n* Merge main branch.\r\n\r\n* Fix test imports.\r\n\r\n* Fix plugin imports.\r\n\r\n* Fix plugin imports.",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0b0082d92686c5ba4fedbc4a251bcefbdbf6b8f8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initialize(@Nullable final String agentArguments, final Instrumentation instrumentation, final File agentJarFile, final boolean premain)",
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.initAgentBuilder(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)",
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation, boolean premain)",
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.applyInstrumentation(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses, Set<Collection<Class<? extends ElasticApmInstrumentation>>> appliedInstrumentations, ElasticApmTracer tracer)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()",
                    "private static Iterable<ElasticApmInstrumentation> co.elastic.apm.agent.bci.ElasticApmAgent.loadInstrumentations(ElasticApmTracer tracer)",
                    "public static synchronized Future<?> co.elastic.apm.agent.bci.ElasticApmAgent.reInitInstrumentation()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ErrorLoggingListener.java": [
                    "public void co.elastic.apm.agent.bci.bytebuddy.ErrorLoggingListener.onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.fetchConfig(final ConfigurationRegistry configurationRegistry)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "void co.elastic.apm.agent.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ActiveStack.java": [
                    "boolean co.elastic.apm.agent.impl.ActiveStack.activate(TraceStateImpl<?> context, List<ActivationListener> activationListeners)",
                    "<T extends TraceStateImpl<T>> T co.elastic.apm.agent.impl.ActiveStack.wrapActiveContextIfRequired(Class<T> wrapperClass, Callable<T> wrapFunction, int approximateContextSize)",
                    "boolean co.elastic.apm.agent.impl.ActiveStack.deactivate(TraceStateImpl<?> context, List<ActivationListener> activationListeners, boolean assertionsEnabled)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public boolean co.elastic.apm.agent.impl.ElasticApmTracer.isRunning()",
                    "public TracerState co.elastic.apm.agent.impl.ElasticApmTracer.getState()",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.setServiceInfoForClassLoader(@Nullable ClassLoader classLoader, ServiceInfo serviceInfo)",
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.stop()",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureAndReportException(@Nullable Throwable e, ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)",
                    "public static List<ConfigurationSource> co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getConfigSources(@Nullable String agentArguments, boolean premain)",
                    "private ConfigurationRegistry co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry(List<ConfigurationSource> configSources)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/baggage/W3CBaggagePropagation.java": [
                    "public static <T, C> void co.elastic.apm.agent.impl.baggage.W3CBaggagePropagation.parse(C carrier, HeaderGetter<T, C> headerGetter, BaggageImpl.Builder into)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/MetaData.java": [
                    "public static MetaDataFuture co.elastic.apm.agent.impl.metadata.MetaData.create(ConfigurationRegistry configurationRegistry, @Nullable String ephemeralId)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/ServiceFactory.java": [
                    "private void co.elastic.apm.agent.impl.metadata.ServiceFactory.augmentServiceForAWSLambda(ServiceImpl service)",
                    "public ServiceImpl co.elastic.apm.agent.impl.metadata.ServiceFactory.createService(CoreConfiguration coreConfiguration, String ephemeralId, boolean runsOnAwsLambda)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/DroppedSpanStats.java": [
                    "Stats co.elastic.apm.agent.impl.transaction.DroppedSpanStats.getStats(String serviceType, @Nullable String serviceName, Outcome outcome)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java": [
                    "public static <C> boolean co.elastic.apm.agent.impl.transaction.TraceState.includesElasticVendor(HeaderGetter<?, C> headers, C parent)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/ApmServerLogAppender.java": [
                    "public LifecycleListener co.elastic.apm.agent.logging.ApmServerLogAppender.getInitListener()",
                    "public void co.elastic.apm.agent.logging.ApmServerLogAppender.init(Tracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "private LayoutComponentBuilder co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.createLayout(ConfigurationBuilder<BuiltConfiguration> builder, LogFormat logFormat)",
                    "private AppenderRefComponentBuilder co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.createFileAppender(ConfigurationBuilder<BuiltConfiguration> builder, String logFile, LayoutComponentBuilder layout)",
                    "private Level co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.getLogLevel()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/AgentOverheadMetrics.java": [
                    "public void co.elastic.apm.agent.metrics.builtin.AgentOverheadMetrics.start(Tracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final SpanImpl span)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeService(final ServiceImpl service, final StringBuilder replaceBuilder, final JsonWriter jw, boolean supportsAgentActivationMethod)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final TransactionImpl transaction)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanLinks(List<TraceContextImpl> spanLinks)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistryReporter.java": [
                    "public void co.elastic.apm.agent.report.serialize.MetricRegistryReporter.start(Tracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/tracemethods/TraceMethodInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.tracemethods.TraceMethodInstrumentation.onMethodEnter(@Advice.Origin Class<?> clazz, @SimpleMethodSignatureOffsetMappingFactory.SimpleMethodSignature String signature)",
                    "public static void co.elastic.apm.agent.tracemethods.TraceMethodInstrumentation.onMethodExit(@Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/universalprofiling/ProfilerSharedMemoryWriter.java": [
                    "static void co.elastic.apm.agent.universalprofiling.ProfilerSharedMemoryWriter.updateThreadCorrelationStorage(@Nullable AbstractSpanImpl<?> newSpan)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/universalprofiling/UniversalProfilingIntegration.java": [
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.start(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ThreadDump.java": [
                    "public void co.elastic.apm.agent.util.ThreadDump.start(Tracer tracer)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient-common/src/main/java/co/elastic/apm/agent/httpclient/common/AbstractApacheHttpClientAdvice.java": [
                    "public static <REQUEST, WRAPPER extends REQUEST, HTTPHOST, RESPONSE,\n HeaderAccessor extends TextHeaderSetter<REQUEST> &\n TextHeaderGetter<REQUEST>> Object co.elastic.apm.agent.httpclient.common.AbstractApacheHttpClientAdvice.startSpan(final Tracer tracer, final ApacheHttpClientApiAdapter<REQUEST, WRAPPER, HTTPHOST, RESPONSE> adapter, final WRAPPER request, @Nullable final HTTPHOST httpHost, final HeaderAccessor headerAccessor)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient-common/src/main/java/co/elastic/apm/agent/httpclient/common/AbstractApacheHttpClientAsyncAdvice.java": [
                    "public static <PRODUCER, WRAPPER extends PRODUCER, CALLBACK, CALLBACK_WRAPPER extends CALLBACK, CONTEXT> Object[] co.elastic.apm.agent.httpclient.common.AbstractApacheHttpClientAsyncAdvice.startSpan( Tracer tracer, ApacheHttpClientAsyncHelper<PRODUCER, WRAPPER, CALLBACK, CALLBACK_WRAPPER, CONTEXT> asyncHelper, PRODUCER asyncRequestProducer, CONTEXT context, CALLBACK futureCallback)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient3-plugin/src/main/java/co/elastic/apm/agent/httpclient/v3/HttpClient3Instrumentation.java": [
                    "private static Span<?> co.elastic.apm.agent.httpclient.v3.HttpClient3Instrumentation.startClientSpan(HttpMethod httpMethod, HostConfiguration hostConfiguration)"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-common/src/main/java/co/elastic/apm/agent/hibernatesearch/HibernateSearchHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.hibernatesearch.HibernateSearchHelper.createAndActivateSpan(final Tracer tracer, final String methodName, final String query)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "public static <T> Callable<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Callable<T> callable, Tracer tracer)",
                    "public static TraceState<?> co.elastic.apm.agent.concurrent.JavaConcurrent.restoreContext(Object o, Tracer tracer)",
                    "public static Runnable co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Runnable runnable, Tracer tracer)",
                    "public static <T> ForkJoinTask<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable ForkJoinTask<T> task, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/RunnableCallableForkJoinTaskInstrumentation.java": [
                    "public static void co.elastic.apm.agent.concurrent.RunnableCallableForkJoinTaskInstrumentation.onExit(@Nullable @Advice.Enter Object context)"
                ],
                "apm-agent-plugins/apm-jsf-plugin/src/main/java/co/elastic/apm/agent/jsf/AbstractJsfLifecycleExecuteInstrumentation.java": [
                    "protected static Object co.elastic.apm.agent.jsf.AbstractJsfLifecycleExecuteInstrumentation.createAndActivateSpan(boolean withExternalContext, @Nullable String requestServletPath, @Nullable String requestPathInfo)"
                ],
                "apm-agent-plugins/apm-jsf-plugin/src/main/java/co/elastic/apm/agent/jsf/AbstractJsfLifecycleRenderInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.jsf.AbstractJsfLifecycleRenderInstrumentation.createRenderSpan()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/context/OTelContextStorage.java": [
                    "public Context co.elastic.apm.agent.opentelemetry.context.OTelContextStorage.current()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelBridgeContext.java": [
                    "public BaggageImpl co.elastic.apm.agent.opentelemetry.tracing.OTelBridgeContext.getBaggage()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpan.java": [
                    "private void co.elastic.apm.agent.opentelemetry.tracing.OTelSpan.onSpanEnd(SpanImpl s)",
                    "public void co.elastic.apm.agent.opentelemetry.tracing.OTelSpan.end(long timestamp, TimeUnit unit)",
                    "public void co.elastic.apm.agent.opentelemetry.tracing.OTelSpan.end()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpanBuilder.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.tracing.OTelSpanBuilder.startSpan()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanBuilderInstrumentation.java": [
                    "private static AbstractSpanImpl<?> co.elastic.apm.agent.opentracingimpl.ApmSpanBuilderInstrumentation.createTransaction(Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ElasticApmTracer tracer, ClassLoader classLoader)",
                    "public static AbstractSpanImpl<?> co.elastic.apm.agent.opentracingimpl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable AbstractSpanImpl<?> parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ClassLoader applicationClassLoader)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanInstrumentation.java": [
                    "public static void co.elastic.apm.agent.opentracingimpl.ApmSpanInstrumentation.doFinishInternal(AbstractSpanImpl<?> abstractSpan, long finishMicros)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ElasticApmTracerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.opentracingimpl.ElasticApmTracerInstrumentation.close()"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessStartInstrumentation.java": [
                    "public static void co.elastic.apm.agent.process.ProcessStartInstrumentation.onExit(@Advice.This ProcessBuilder processBuilder, @Advice.Return @Nullable Process process, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "public void co.elastic.apm.agent.profiler.CallTree.onActivation(byte[] active, long timestamp)",
                    "public void co.elastic.apm.agent.profiler.CallTree.addStackTrace(ElasticApmTracer tracer, List<StackFrame> stackTrace, long nanoTime, ObjectPool<CallTree> callTreePool, long minDurationNs)",
                    "protected SpanImpl co.elastic.apm.agent.profiler.CallTree.asSpan(Root root, TraceContextImpl parentContext, TraceContextImpl nonInferredParentContext)",
                    "public void co.elastic.apm.agent.profiler.CallTree.onDeactivation(byte[] deactivated, byte[] active, long timestamp)",
                    "int co.elastic.apm.agent.profiler.CallTree.spanify(CallTree.Root root, TraceContextImpl parentContext, TraceContextImpl nonInferredParentContext)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/ProfilingActivationListener.java": [
                    "public void co.elastic.apm.agent.profiler.ProfilingActivationListener.beforeActivate(AbstractSpanImpl<?> context)",
                    "public void co.elastic.apm.agent.profiler.ProfilingActivationListener.afterDeactivate(AbstractSpanImpl<?> deactivatedContext)"
                ],
                "apm-agent-plugins/apm-reactor-plugin/src/main/java/co/elastic/apm/agent/reactor/TracedSubscriber.java": [
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onComplete()",
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onNext(T next)",
                    "public CoreSubscriber<? super X> co.elastic.apm.agent.reactor.TracedSubscriber<T>.apply(Publisher publisher, CoreSubscriber<? super X> subscriber)",
                    "private static <X> Function<? super Publisher<X>, ? extends Publisher<X>> co.elastic.apm.agent.reactor.TracedSubscriber<T>.wrapOperators(final Tracer tracer)",
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onError(Throwable t)",
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onSubscribe(Subscription s)"
                ],
                "apm-agent-plugins/apm-scala-concurrent-plugin/src/main/java/co/elastic/apm/agent/scalaconcurrent/FutureInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.scalaconcurrent.FutureInstrumentation.onEnter(@Advice.This Object thiz)",
                    "public static void co.elastic.apm.agent.scalaconcurrent.FutureInstrumentation.onExit(@Advice.This Object thiz)",
                    "public static void co.elastic.apm.agent.scalaconcurrent.FutureInstrumentation.onExit(@Advice.Enter @Nullable Object contextObj)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> Object co.elastic.apm.agent.servlet.ServletApiAdvice.onServletEnter( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletServiceNameHelper.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.servlet.ServletServiceNameHelper.determineServiceName(ServletContextAdapter<ServletContext> adapter, @Nullable ServletContext servletContext, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-spring-webmvc/apm-spring-webmvc-spring5/src/main/java/co/elastic/apm/agent/springwebmvc/AbstractSpringServiceNameInstrumentation.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.springwebmvc.AbstractSpringServiceNameInstrumentation.detectSpringServiceName(ServletContextAdapter<ServletContext> adapter, WebApplicationContext applicationContext, @Nullable ServletContext servletContext)"
                ],
                "apm-agent-plugins/apm-struts-plugin/src/main/java/co/elastic/apm/agent/struts/ActionProxyAdvice.java": [
                    "public static Object co.elastic.apm.agent.struts.ActionProxyAdvice.onEnterExecute(@Advice.This ActionProxy actionProxy)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebClientHelper.java": [
                    "public void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.startSpanOrFollowRedirect(TraceState<?> activeContext, HttpContext<?> httpContext, HttpClientRequest httpRequest)",
                    "public void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.followRedirect(HttpContext<?> httpContext, HttpClientRequest httpRequest)",
                    "private void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.finalizeSpan(HttpContext<?> httpContext, int statusCode, @Nullable Throwable thrown, @Nullable AbstractSpan<?> parent)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/GenericHandlerWrapper.java": [
                    "public static <T> Handler<T> co.elastic.apm.agent.vertx.GenericHandlerWrapper<T>.wrapIfNonEmptyContext(Handler<T> handler)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/SetTimerWrapper.java": [
                    "public static Handler<Long> co.elastic.apm.agent.vertx.SetTimerWrapper.wrapTimerIfNonEmptyContext(Handler<Long> handler)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx4-plugin/src/main/java/co/elastic/apm/agent/vertx/v4/webclient/HttpContextInstrumentation.java": [
                    "public static void co.elastic.apm.agent.vertx.v4.webclient.HttpContextInstrumentation.prepareRequest(@Advice.This HttpContext<?> httpContext)"
                ]
            },
            "cd893419137fd80981505c754ecea5cce6fb0bbd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initialize(@Nullable final String agentArguments, final Instrumentation instrumentation, final File agentJarFile, final boolean premain)",
                    "private static Iterable<ElasticApmInstrumentation> co.elastic.apm.agent.bci.ElasticApmAgent.loadInstrumentations(Tracer tracer)",
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.initAgentBuilder(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)",
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation, boolean premain)",
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.applyInstrumentation(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses, Set<Collection<Class<? extends ElasticApmInstrumentation>>> appliedInstrumentations, ElasticApmTracer tracer)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()",
                    "public static synchronized Future<?> co.elastic.apm.agent.bci.ElasticApmAgent.reInitInstrumentation()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ErrorLoggingListener.java": [
                    "public void co.elastic.apm.agent.bci.bytebuddy.ErrorLoggingListener.onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.fetchConfig(final ConfigurationRegistry configurationRegistry)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "void co.elastic.apm.agent.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ActiveStack.java": [
                    "boolean co.elastic.apm.agent.impl.ActiveStack.deactivate(ElasticContext<?> context, List<ActivationListener> activationListeners, boolean assertionsEnabled)",
                    "boolean co.elastic.apm.agent.impl.ActiveStack.activate(ElasticContext<?> context, List<ActivationListener> activationListeners)",
                    "<T extends ElasticContext<T>> T co.elastic.apm.agent.impl.ActiveStack.wrapActiveContextIfRequired(Class<T> wrapperClass, Callable<T> wrapFunction, int approximateContextSize)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)",
                    "public static List<ConfigurationSource> co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getConfigSources(@Nullable String agentArguments, boolean premain)",
                    "private ConfigurationRegistry co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry(List<ConfigurationSource> configSources)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/baggage/W3CBaggagePropagation.java": [
                    "public static <T, C> void co.elastic.apm.agent.impl.baggage.W3CBaggagePropagation.parse(C carrier, HeaderGetter<T, C> headerGetter, Baggage.Builder into)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/MetaData.java": [
                    "public static MetaDataFuture co.elastic.apm.agent.impl.metadata.MetaData.create(ConfigurationRegistry configurationRegistry, @Nullable String ephemeralId)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/ServiceFactory.java": [
                    "private void co.elastic.apm.agent.impl.metadata.ServiceFactory.augmentServiceForAWSLambda(Service service)",
                    "public Service co.elastic.apm.agent.impl.metadata.ServiceFactory.createService(CoreConfiguration coreConfiguration, String ephemeralId, boolean runsOnAwsLambda)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/DroppedSpanStats.java": [
                    "Stats co.elastic.apm.agent.impl.transaction.DroppedSpanStats.getStats(String serviceType, @Nullable String serviceName, Outcome outcome)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java": [
                    "public static <C> boolean co.elastic.apm.agent.impl.transaction.TraceState.includesElasticVendor(HeaderGetter<?, C> headers, C parent)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/ApmServerLogAppender.java": [
                    "public LifecycleListener co.elastic.apm.agent.logging.ApmServerLogAppender.getInitListener()",
                    "public void co.elastic.apm.agent.logging.ApmServerLogAppender.init(Tracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "private LayoutComponentBuilder co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.createLayout(ConfigurationBuilder<BuiltConfiguration> builder, LogFormat logFormat)",
                    "private AppenderRefComponentBuilder co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.createFileAppender(ConfigurationBuilder<BuiltConfiguration> builder, String logFile, LayoutComponentBuilder layout)",
                    "private Level co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.getLogLevel()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/AgentOverheadMetrics.java": [
                    "public void co.elastic.apm.agent.metrics.builtin.AgentOverheadMetrics.start(Tracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeService(final Service service, final StringBuilder replaceBuilder, final JsonWriter jw, boolean supportsAgentActivationMethod)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanLinks(List<TraceContext> spanLinks)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistryReporter.java": [
                    "public void co.elastic.apm.agent.report.serialize.MetricRegistryReporter.start(Tracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/tracemethods/TraceMethodInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.tracemethods.TraceMethodInstrumentation.onMethodEnter(@Advice.Origin Class<?> clazz, @SimpleMethodSignatureOffsetMappingFactory.SimpleMethodSignature String signature)",
                    "public static void co.elastic.apm.agent.tracemethods.TraceMethodInstrumentation.onMethodExit(@Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/universalprofiling/ProfilerSharedMemoryWriter.java": [
                    "static void co.elastic.apm.agent.universalprofiling.ProfilerSharedMemoryWriter.updateThreadCorrelationStorage(@Nullable AbstractSpan<?> newSpan)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/universalprofiling/UniversalProfilingIntegration.java": [
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.start(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ThreadDump.java": [
                    "public void co.elastic.apm.agent.util.ThreadDump.start(Tracer tracer)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient-common/src/main/java/co/elastic/apm/agent/httpclient/common/AbstractApacheHttpClientAdvice.java": [
                    "public static <REQUEST, WRAPPER extends REQUEST, HTTPHOST, RESPONSE,\n HeaderAccessor extends TextHeaderSetter<REQUEST> &\n TextHeaderGetter<REQUEST>> Object co.elastic.apm.agent.httpclient.common.AbstractApacheHttpClientAdvice.startSpan(final Tracer tracer, final ApacheHttpClientApiAdapter<REQUEST, WRAPPER, HTTPHOST, RESPONSE> adapter, final WRAPPER request, @Nullable final HTTPHOST httpHost, final HeaderAccessor headerAccessor)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient-common/src/main/java/co/elastic/apm/agent/httpclient/common/AbstractApacheHttpClientAsyncAdvice.java": [
                    "public static <PRODUCER, WRAPPER extends PRODUCER, CALLBACK, CALLBACK_WRAPPER extends CALLBACK, CONTEXT> Object[] co.elastic.apm.agent.httpclient.common.AbstractApacheHttpClientAsyncAdvice.startSpan( Tracer tracer, ApacheHttpClientAsyncHelper<PRODUCER, WRAPPER, CALLBACK, CALLBACK_WRAPPER, CONTEXT> asyncHelper, PRODUCER asyncRequestProducer, CONTEXT context, CALLBACK futureCallback)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient3-plugin/src/main/java/co/elastic/apm/agent/httpclient/v3/HttpClient3Instrumentation.java": [
                    "private static Span<?> co.elastic.apm.agent.httpclient.v3.HttpClient3Instrumentation.startClientSpan(HttpMethod httpMethod, HostConfiguration hostConfiguration)"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-common/src/main/java/co/elastic/apm/agent/hibernatesearch/HibernateSearchHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.hibernatesearch.HibernateSearchHelper.createAndActivateSpan(final Tracer tracer, final String methodName, final String query)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "public static <T> Callable<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Callable<T> callable, Tracer tracer)",
                    "public static ElasticContext<?> co.elastic.apm.agent.concurrent.JavaConcurrent.restoreContext(Object o, Tracer tracer)",
                    "public static Runnable co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Runnable runnable, Tracer tracer)",
                    "public static <T> ForkJoinTask<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable ForkJoinTask<T> task, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/RunnableCallableForkJoinTaskInstrumentation.java": [
                    "public static void co.elastic.apm.agent.concurrent.RunnableCallableForkJoinTaskInstrumentation.onExit(@Nullable @Advice.Enter Object context)"
                ],
                "apm-agent-plugins/apm-jsf-plugin/src/main/java/co/elastic/apm/agent/jsf/AbstractJsfLifecycleExecuteInstrumentation.java": [
                    "protected static Object co.elastic.apm.agent.jsf.AbstractJsfLifecycleExecuteInstrumentation.createAndActivateSpan(boolean withExternalContext, @Nullable String requestServletPath, @Nullable String requestPathInfo)"
                ],
                "apm-agent-plugins/apm-jsf-plugin/src/main/java/co/elastic/apm/agent/jsf/AbstractJsfLifecycleRenderInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.jsf.AbstractJsfLifecycleRenderInstrumentation.createRenderSpan()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/context/OTelContextStorage.java": [
                    "public Context co.elastic.apm.agent.opentelemetry.context.OTelContextStorage.current()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelBridgeContext.java": [
                    "public Baggage co.elastic.apm.agent.opentelemetry.tracing.OTelBridgeContext.getBaggage()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpan.java": [
                    "public void co.elastic.apm.agent.opentelemetry.tracing.OTelSpan.end(long timestamp, TimeUnit unit)",
                    "private void co.elastic.apm.agent.opentelemetry.tracing.OTelSpan.onSpanEnd(co.elastic.apm.agent.impl.transaction.Span s)",
                    "public void co.elastic.apm.agent.opentelemetry.tracing.OTelSpan.end()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpanBuilder.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.tracing.OTelSpanBuilder.startSpan()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracingimpl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable AbstractSpan<?> parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ClassLoader applicationClassLoader)",
                    "private static AbstractSpan<?> co.elastic.apm.agent.opentracingimpl.ApmSpanBuilderInstrumentation.createTransaction(Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ElasticApmTracer tracer, ClassLoader classLoader)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanInstrumentation.java": [
                    "public static void co.elastic.apm.agent.opentracingimpl.ApmSpanInstrumentation.doFinishInternal(AbstractSpan<?> abstractSpan, long finishMicros)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ElasticApmTracerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.opentracingimpl.ElasticApmTracerInstrumentation.close()"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessStartInstrumentation.java": [
                    "public static void co.elastic.apm.agent.process.ProcessStartInstrumentation.onExit(@Advice.This ProcessBuilder processBuilder, @Advice.Return @Nullable Process process, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "public void co.elastic.apm.agent.profiler.CallTree.onActivation(byte[] active, long timestamp)",
                    "int co.elastic.apm.agent.profiler.CallTree.spanify(CallTree.Root root, TraceContext parentContext, TraceContext nonInferredParentContext)",
                    "public void co.elastic.apm.agent.profiler.CallTree.addStackTrace(ElasticApmTracer tracer, List<StackFrame> stackTrace, long nanoTime, ObjectPool<CallTree> callTreePool, long minDurationNs)",
                    "public void co.elastic.apm.agent.profiler.CallTree.onDeactivation(byte[] deactivated, byte[] active, long timestamp)",
                    "protected Span co.elastic.apm.agent.profiler.CallTree.asSpan(Root root, TraceContext parentContext, TraceContext nonInferredParentContext)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/ProfilingActivationListener.java": [
                    "public void co.elastic.apm.agent.profiler.ProfilingActivationListener.beforeActivate(AbstractSpan<?> context)",
                    "public void co.elastic.apm.agent.profiler.ProfilingActivationListener.afterDeactivate(AbstractSpan<?> deactivatedContext)"
                ],
                "apm-agent-plugins/apm-reactor-plugin/src/main/java/co/elastic/apm/agent/reactor/TracedSubscriber.java": [
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onComplete()",
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onNext(T next)",
                    "public CoreSubscriber<? super X> co.elastic.apm.agent.reactor.TracedSubscriber<T>.apply(Publisher publisher, CoreSubscriber<? super X> subscriber)",
                    "private static <X> Function<? super Publisher<X>, ? extends Publisher<X>> co.elastic.apm.agent.reactor.TracedSubscriber<T>.wrapOperators(final Tracer tracer)",
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onError(Throwable t)",
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onSubscribe(Subscription s)"
                ],
                "apm-agent-plugins/apm-scala-concurrent-plugin/src/main/java/co/elastic/apm/agent/scalaconcurrent/FutureInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.scalaconcurrent.FutureInstrumentation.onEnter(@Advice.This Object thiz)",
                    "public static void co.elastic.apm.agent.scalaconcurrent.FutureInstrumentation.onExit(@Advice.This Object thiz)",
                    "public static void co.elastic.apm.agent.scalaconcurrent.FutureInstrumentation.onExit(@Advice.Enter @Nullable Object contextObj)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> Object co.elastic.apm.agent.servlet.ServletApiAdvice.onServletEnter( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletServiceNameHelper.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.servlet.ServletServiceNameHelper.determineServiceName(ServletContextAdapter<ServletContext> adapter, @Nullable ServletContext servletContext, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-spring-webmvc/apm-spring-webmvc-spring5/src/main/java/co/elastic/apm/agent/springwebmvc/AbstractSpringServiceNameInstrumentation.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.springwebmvc.AbstractSpringServiceNameInstrumentation.detectSpringServiceName(ServletContextAdapter<ServletContext> adapter, WebApplicationContext applicationContext, @Nullable ServletContext servletContext)"
                ],
                "apm-agent-plugins/apm-struts-plugin/src/main/java/co/elastic/apm/agent/struts/ActionProxyAdvice.java": [
                    "public static Object co.elastic.apm.agent.struts.ActionProxyAdvice.onEnterExecute(@Advice.This ActionProxy actionProxy)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebClientHelper.java": [
                    "public void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.followRedirect(HttpContext<?> httpContext, HttpClientRequest httpRequest)",
                    "private void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.finalizeSpan(HttpContext<?> httpContext, int statusCode, @Nullable Throwable thrown, @Nullable AbstractSpan<?> parent)",
                    "public void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.startSpanOrFollowRedirect(ElasticContext<?> activeContext, HttpContext<?> httpContext, HttpClientRequest httpRequest)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/GenericHandlerWrapper.java": [
                    "public static <T> Handler<T> co.elastic.apm.agent.vertx.GenericHandlerWrapper<T>.wrapIfNonEmptyContext(Handler<T> handler)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/SetTimerWrapper.java": [
                    "public static Handler<Long> co.elastic.apm.agent.vertx.SetTimerWrapper.wrapTimerIfNonEmptyContext(Handler<Long> handler)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx4-plugin/src/main/java/co/elastic/apm/agent/vertx/v4/webclient/HttpContextInstrumentation.java": [
                    "public static void co.elastic.apm.agent.vertx.v4.webclient.HttpContextInstrumentation.prepareRequest(@Advice.This HttpContext<?> httpContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "965c6567186b91c179314570270ebff62a46f130",
        "previous_commit": "50bb1f1632da89c5d4f029e7d7b48a8d4d45c5ef",
        "date": 1669227122,
        "releases": {
            "previous": "965c6567186b91c179314570270ebff62a46f130",
            "next": "965c6567186b91c179314570270ebff62a46f130"
        },
        "commit_message": "Fix security manager issues (#2871)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "965c6567186b91c179314570270ebff62a46f130": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bbwarmup/WarmupInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.bbwarmup.WarmupInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)",
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "private static Collection<? extends ClassLoader> co.elastic.apm.agent.bci.ElasticApmAgent.createExternalPluginClassLoaders(@Nullable String pluginsDirString)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "public static ClassLoader co.elastic.apm.agent.bci.ElasticApmAgent.getAgentClassLoader()",
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.logClassLoaderHierarchy(@Nullable ClassLoader classLoader, Logger logger, ElasticApmInstrumentation advice)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdvice(ElasticApmInstrumentation instrumentation)",
                    "private static Iterable<ElasticApmInstrumentation> co.elastic.apm.agent.bci.ElasticApmAgent.loadInstrumentations(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServerlessConfiguration.java": [
                    "public boolean co.elastic.apm.agent.configuration.ServerlessConfiguration.runsOnAwsLambda()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/source/ConfigSources.java": [
                    "static Properties co.elastic.apm.agent.configuration.source.ConfigSources.getPropertiesFromFilesystem(String location)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/GlobalTracer.java": [
                    "private static void co.elastic.apm.agent.impl.GlobalTracer.checkClassloader()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/CloudMetadataProvider.java": [
                    "static CloudProviderInfo co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.getCloudInfoProvider(final CoreConfiguration.CloudProvider cloudProvider, final int queryTimeoutMs, ServerlessConfiguration serverlessConfiguration)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/ServiceFactory.java": [
                    "private void co.elastic.apm.agent.impl.metadata.ServiceFactory.augmentServiceForAWSLambda(Service service)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2LoggerBridge.java": [
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.warn(final String format, final Object o)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.error(final String format, final Object o)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.info(final String format, final Object o)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.debug(final String format, final Object arg1, final Object arg2)",
                    "public boolean co.elastic.apm.agent.logging.Log4j2LoggerBridge.isTraceEnabled()",
                    "public boolean co.elastic.apm.agent.logging.Log4j2LoggerBridge.isDebugEnabled()",
                    "public boolean co.elastic.apm.agent.logging.Log4j2LoggerBridge.isErrorEnabled()",
                    "public boolean co.elastic.apm.agent.logging.Log4j2LoggerBridge.isInfoEnabled()",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.debug(final String format, final Object... args)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.trace(final String format, final Object arg1, final Object arg2)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.error(final String format, final Object arg1, final Object arg2)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.warn(final String format)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.warn(final String format, final Object arg1, final Object arg2)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.info(final String format, final Throwable t)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.info(final String format, final Object arg1, final Object arg2)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.debug(final String format, final Object o)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.trace(final String format, final Object... args)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.trace(final String format)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.error(final String format)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.warn(final String format, final Object... args)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.error(final String format, final Object... args)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.info(final String format, final Object... args)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.trace(final String format, final Throwable t)",
                    "public boolean co.elastic.apm.agent.logging.Log4j2LoggerBridge.isWarnEnabled()",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.warn(final String format, final Throwable t)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.debug(final String format)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.info(final String format)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.debug(final String format, final Throwable t)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.error(final String format, final Throwable t)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.trace(final String format, final Object o)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ssl/SslUtils.java": [
                    "public static KeyManager[] co.elastic.apm.agent.report.ssl.SslUtils.getKeyManagers()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/tracemethods/TraceMethodInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.tracemethods.TraceMethodInstrumentation.onMethodEnter(@Advice.Origin Class<?> clazz, @SimpleMethodSignatureOffsetMappingFactory.SimpleMethodSignature String signature)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ClassLoaderUtils.java": [
                    "public static boolean co.elastic.apm.agent.util.ClassLoaderUtils.isAgentClassLoader(@Nullable ClassLoader classLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public Thread co.elastic.apm.agent.util.ExecutorUtils.newThread(Runnable r)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/VersionUtils.java": [
                    "public static String co.elastic.apm.agent.util.VersionUtils.getManifestEntry(@Nullable File jarFile, String manifestAttribute)"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/logging/LoggerFactory.java": [
                    "private static Logger co.elastic.apm.agent.sdk.logging.LoggerFactory.getLoggerFromFactory(final String name)"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/state/GlobalVariables.java": [
                    "public static <T> T co.elastic.apm.agent.sdk.state.GlobalVariables.get(Class<?> adviceClass, String key, T defaultValue)"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/ElasticApmApiInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.pluginapi.ElasticApmApiInstrumentation.doStartTransaction(@Advice.Origin Class<?> clazz)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV1TransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.doStartTransaction(APIGatewayProxyRequestEvent apiGatewayEvent, Context lambdaContext)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV2TransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.doStartTransaction(APIGatewayV2HTTPEvent apiGatewayEvent, Context lambdaContext)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/PlainTransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.PlainTransactionHelper.doStartTransaction(Object input, Context lambdaContext)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/S3TransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.S3TransactionHelper.doStartTransaction(S3Event s3Event, Context lambdaContext)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public Transaction co.elastic.apm.agent.jms.JmsInstrumentationHelper.startJmsTransaction(Message parentMessage, Class<?> instrumentedClass)"
                ],
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.deferInit()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord<?, ?> co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-spring-plugin/src/main/java/co/elastic/apm/agent/kafka/SpringKafkaBatchListenerInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.kafka.SpringKafkaBatchListenerInstrumentation.onEnter(@Advice.This Object thiz)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-jul-plugin/src/main/java/co/elastic/apm/agent/jul/reformatting/AbstractJulEcsReformattingHelper.java": [
                    "protected Handler co.elastic.apm.agent.jul.reformatting.AbstractJulEcsReformattingHelper.createAndStartEcsAppender(Handler originalHandler, String ecsAppenderName, Formatter ecsFormatter)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-jul-plugin/src/main/java/co/elastic/apm/agent/jul/reformatting/JulEcsReformattingHelper.java": [
                    "static String co.elastic.apm.agent.jul.reformatting.JulEcsReformattingHelper.computeEcsFileHandlerPattern(String pattern, Path originalFilePath, @Nullable String configuredReformattingDir, boolean createDirs)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/error/LoggerErrorHelper.java": [
                    "public Object co.elastic.apm.agent.loginstr.error.LoggerErrorHelper.enter(@Nullable Throwable exception, Class<?> originClass)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-tomcat-logging-plugin/src/main/java/co/elastic/apm/agent/tomcatlogging/reformatting/TomcatReformattingHelper.java": [
                    "protected String co.elastic.apm.agent.tomcatlogging.reformatting.TomcatReformattingHelper.getShadeFilePatternAndCreateDir()"
                ],
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "boolean co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelSpanBuilder.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.sdk.OTelSpanBuilder.startSpan()"
                ],
                "apm-agent-plugins/apm-quartz-job-plugin/quartz-common/src/main/java/co/elastic/apm/agent/quartzjob/AbstractJobTransactionNameInstrumentation.java": [
                    "private static Transaction co.elastic.apm.agent.quartzjob.AbstractJobTransactionNameInstrumentation.createAndActivateTransaction(Class<?> originClass, String name)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/SpringAmqpTransactionHelper.java": [
                    "public Transaction co.elastic.apm.agent.rabbitmq.SpringAmqpTransactionHelper.createTransaction(Message message, String transactionNamePrefix)"
                ],
                "apm-agent-plugins/apm-scheduled-annotation-plugin/src/main/java/co/elastic/apm/agent/scheduled/ScheduledTransactionNameInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.scheduled.ScheduledTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature, @Advice.Origin Class<?> clazz)"
                ],
                "apm-agent-plugins/apm-scheduled-annotation-plugin/src/main/java/co/elastic/apm/agent/scheduled/TimerTaskInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.scheduled.TimerTaskInstrumentation.setTransactionName(@SimpleMethodSignatureOffsetMappingFactory.SimpleMethodSignature String signature, @Advice.Origin Class<?> clazz)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "public static Transaction co.elastic.apm.agent.springwebflux.WebfluxHelper.getOrCreateTransaction(Tracer tracer, ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebHelper.java": [
                    "protected Transaction co.elastic.apm.agent.vertx.AbstractVertxWebHelper.startOrGetTransaction(HttpServerRequest httpServerRequest)"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/ShadedClassLoader.java": [
                    "private byte[] co.elastic.apm.agent.premain.ShadedClassLoader.getShadedClassBytes(String name)",
                    "private Class<?> co.elastic.apm.agent.premain.ShadedClassLoader.defineClass(String name, byte[] classBytes)",
                    "protected Class<?> co.elastic.apm.agent.premain.ShadedClassLoader.findClass(String name)"
                ]
            },
            "50bb1f1632da89c5d4f029e7d7b48a8d4d45c5ef": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bbwarmup/WarmupInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.bbwarmup.WarmupInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)",
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "private static Collection<? extends ClassLoader> co.elastic.apm.agent.bci.ElasticApmAgent.createExternalPluginClassLoaders(@Nullable String pluginsDirString)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "public static ClassLoader co.elastic.apm.agent.bci.ElasticApmAgent.getAgentClassLoader()",
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.logClassLoaderHierarchy(@Nullable ClassLoader classLoader, Logger logger, ElasticApmInstrumentation advice)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdvice(ElasticApmInstrumentation instrumentation)",
                    "private static Iterable<ElasticApmInstrumentation> co.elastic.apm.agent.bci.ElasticApmAgent.loadInstrumentations(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServerlessConfiguration.java": [
                    "public boolean co.elastic.apm.agent.configuration.ServerlessConfiguration.runsOnAwsLambda()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/source/ConfigSources.java": [
                    "static Properties co.elastic.apm.agent.configuration.source.ConfigSources.getPropertiesFromFilesystem(String location)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/GlobalTracer.java": [
                    "private static void co.elastic.apm.agent.impl.GlobalTracer.checkClassloader()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/CloudMetadataProvider.java": [
                    "static CloudProviderInfo co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.getCloudInfoProvider(final CoreConfiguration.CloudProvider cloudProvider, final int queryTimeoutMs, ServerlessConfiguration serverlessConfiguration)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/ServiceFactory.java": [
                    "private void co.elastic.apm.agent.impl.metadata.ServiceFactory.augmentServiceForAWSLambda(Service service)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2LoggerBridge.java": [
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.warn(final String format, final Object o)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.error(final String format, final Object o)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.info(final String format, final Object o)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.debug(final String format, final Object arg1, final Object arg2)",
                    "public boolean co.elastic.apm.agent.logging.Log4j2LoggerBridge.isTraceEnabled()",
                    "public boolean co.elastic.apm.agent.logging.Log4j2LoggerBridge.isDebugEnabled()",
                    "public boolean co.elastic.apm.agent.logging.Log4j2LoggerBridge.isErrorEnabled()",
                    "public boolean co.elastic.apm.agent.logging.Log4j2LoggerBridge.isInfoEnabled()",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.debug(final String format, final Object... args)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.trace(final String format, final Object arg1, final Object arg2)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.error(final String format, final Object arg1, final Object arg2)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.warn(final String format)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.warn(final String format, final Object arg1, final Object arg2)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.info(final String format, final Throwable t)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.info(final String format, final Object arg1, final Object arg2)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.debug(final String format, final Object o)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.trace(final String format, final Object... args)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.trace(final String format)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.error(final String format)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.warn(final String format, final Object... args)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.error(final String format, final Object... args)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.info(final String format, final Object... args)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.trace(final String format, final Throwable t)",
                    "public boolean co.elastic.apm.agent.logging.Log4j2LoggerBridge.isWarnEnabled()",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.warn(final String format, final Throwable t)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.debug(final String format)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.info(final String format)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.debug(final String format, final Throwable t)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.error(final String format, final Throwable t)",
                    "public void co.elastic.apm.agent.logging.Log4j2LoggerBridge.trace(final String format, final Object o)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ssl/SslUtils.java": [
                    "public static KeyManager[] co.elastic.apm.agent.report.ssl.SslUtils.getKeyManagers()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/tracemethods/TraceMethodInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.tracemethods.TraceMethodInstrumentation.onMethodEnter(@Advice.Origin Class<?> clazz, @SimpleMethodSignatureOffsetMappingFactory.SimpleMethodSignature String signature)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ClassLoaderUtils.java": [
                    "public static boolean co.elastic.apm.agent.util.ClassLoaderUtils.isAgentClassLoader(@Nullable ClassLoader classLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public Thread co.elastic.apm.agent.util.ExecutorUtils.newThread(Runnable r)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/VersionUtils.java": [
                    "public static String co.elastic.apm.agent.util.VersionUtils.getManifestEntry(@Nullable File jarFile, String manifestAttribute)"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/logging/LoggerFactory.java": [
                    "private static Logger co.elastic.apm.agent.sdk.logging.LoggerFactory.getLoggerFromFactory(final String name)"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/state/GlobalVariables.java": [
                    "public static <T> T co.elastic.apm.agent.sdk.state.GlobalVariables.get(Class<?> adviceClass, String key, T defaultValue)"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/ElasticApmApiInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.pluginapi.ElasticApmApiInstrumentation.doStartTransaction(@Advice.Origin Class<?> clazz)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV1TransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.doStartTransaction(APIGatewayProxyRequestEvent apiGatewayEvent, Context lambdaContext)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV2TransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.doStartTransaction(APIGatewayV2HTTPEvent apiGatewayEvent, Context lambdaContext)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/PlainTransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.PlainTransactionHelper.doStartTransaction(Object input, Context lambdaContext)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/S3TransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.S3TransactionHelper.doStartTransaction(S3Event s3Event, Context lambdaContext)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public Transaction co.elastic.apm.agent.jms.JmsInstrumentationHelper.startJmsTransaction(Message parentMessage, Class<?> instrumentedClass)"
                ],
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.deferInit()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord<?, ?> co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-spring-plugin/src/main/java/co/elastic/apm/agent/kafka/SpringKafkaBatchListenerInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.kafka.SpringKafkaBatchListenerInstrumentation.onEnter(@Advice.This Object thiz)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-jul-plugin/src/main/java/co/elastic/apm/agent/jul/reformatting/AbstractJulEcsReformattingHelper.java": [
                    "protected Handler co.elastic.apm.agent.jul.reformatting.AbstractJulEcsReformattingHelper.createAndStartEcsAppender(Handler originalHandler, String ecsAppenderName, Formatter ecsFormatter)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-jul-plugin/src/main/java/co/elastic/apm/agent/jul/reformatting/JulEcsReformattingHelper.java": [
                    "static String co.elastic.apm.agent.jul.reformatting.JulEcsReformattingHelper.computeEcsFileHandlerPattern(String pattern, Path originalFilePath, @Nullable String configuredReformattingDir, boolean createDirs)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/error/LoggerErrorHelper.java": [
                    "public Object co.elastic.apm.agent.loginstr.error.LoggerErrorHelper.enter(@Nullable Throwable exception, Class<?> originClass)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-tomcat-logging-plugin/src/main/java/co/elastic/apm/agent/tomcatlogging/reformatting/TomcatReformattingHelper.java": [
                    "protected String co.elastic.apm.agent.tomcatlogging.reformatting.TomcatReformattingHelper.getShadeFilePatternAndCreateDir()"
                ],
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "boolean co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelSpanBuilder.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.sdk.OTelSpanBuilder.startSpan()"
                ],
                "apm-agent-plugins/apm-quartz-job-plugin/quartz-common/src/main/java/co/elastic/apm/agent/quartzjob/AbstractJobTransactionNameInstrumentation.java": [
                    "private static Transaction co.elastic.apm.agent.quartzjob.AbstractJobTransactionNameInstrumentation.createAndActivateTransaction(Class<?> originClass, String name)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/SpringAmqpTransactionHelper.java": [
                    "public Transaction co.elastic.apm.agent.rabbitmq.SpringAmqpTransactionHelper.createTransaction(Message message, String transactionNamePrefix)"
                ],
                "apm-agent-plugins/apm-scheduled-annotation-plugin/src/main/java/co/elastic/apm/agent/scheduled/ScheduledTransactionNameInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.scheduled.ScheduledTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature, @Advice.Origin Class<?> clazz)"
                ],
                "apm-agent-plugins/apm-scheduled-annotation-plugin/src/main/java/co/elastic/apm/agent/scheduled/TimerTaskInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.scheduled.TimerTaskInstrumentation.setTransactionName(@SimpleMethodSignatureOffsetMappingFactory.SimpleMethodSignature String signature, @Advice.Origin Class<?> clazz)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "public static Transaction co.elastic.apm.agent.springwebflux.WebfluxHelper.getOrCreateTransaction(Tracer tracer, ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebHelper.java": [
                    "protected Transaction co.elastic.apm.agent.vertx.AbstractVertxWebHelper.startOrGetTransaction(HttpServerRequest httpServerRequest)"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/ShadedClassLoader.java": [
                    "private byte[] co.elastic.apm.agent.premain.ShadedClassLoader.getShadedClassBytes(String name)",
                    "private Class<?> co.elastic.apm.agent.premain.ShadedClassLoader.defineClass(String name, byte[] classBytes)",
                    "protected Class<?> co.elastic.apm.agent.premain.ShadedClassLoader.findClass(String name)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "01b7db060f521b07264e16b8d8424b87f9839062",
        "previous_commit": "11a2527f660e19b6fc2af6f42303bd15881d113c",
        "date": 1681741306,
        "releases": {
            "previous": "01b7db060f521b07264e16b8d8424b87f9839062",
            "next": "01b7db060f521b07264e16b8d8424b87f9839062"
        },
        "commit_message": "Avoid use of trace context static methods in favor of Tracer-defined behavior (#3082)\n\n\r\n\r\n---------\r\n\r\nCo-authored-by: Jonas Kunz <jonas.kunz@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "01b7db060f521b07264e16b8d8424b87f9839062": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "<C> boolean co.elastic.apm.agent.impl.transaction.TraceContext.propagateTraceContext(C carrier, BinaryHeaderSetter<C> headerSetter)",
                    "public static <C> void co.elastic.apm.agent.impl.transaction.TraceContext.removeTraceContextHeaders(C carrier, HeaderRemover<C> headerRemover)",
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext child, @Nullable Object carrier, HeaderGetter<byte[], Object> traceContextHeaderGetter)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/helper/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.v4.helper.HttpAsyncRequestProducerWrapper.generateRequest()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-1-plugin/src/main/java/co/elastic/apm/agent/awssdk/v1/helper/SQSHelper.java": [
                    "public void co.elastic.apm.agent.awssdk.v1.helper.SQSHelper.setMessageAttributeNames(ReceiveMessageRequest receiveMessageRequest)",
                    "protected void co.elastic.apm.agent.awssdk.v1.helper.SQSHelper.setMessageContext(@Nullable Message sqsMessage, @Nullable String queueName, co.elastic.apm.agent.tracer.metadata.Message message)"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/helper/SQSHelper.java": [
                    "public void co.elastic.apm.agent.awssdk.v2.helper.SQSHelper.modifyRequestObject(@Nullable Span<?> span, ClientExecutionParams clientExecutionParams, ExecutionContext executionContext)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/S3TransactionHelper.java": [
                    "protected void co.elastic.apm.agent.awslambda.helper.S3TransactionHelper.setTransactionName(Transaction transaction, S3Event s3Event, Context lambdaContext)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/SNSTransactionHelper.java": [
                    "protected void co.elastic.apm.agent.awslambda.helper.SNSTransactionHelper.addSpanLinks(Transaction transaction, SNSEvent event)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/SQSTransactionHelper.java": [
                    "protected void co.elastic.apm.agent.awslambda.helper.SQSTransactionHelper.addSpanLinks(Transaction transaction, SQSEvent event)"
                ],
                "apm-agent-plugins/apm-cassandra/apm-cassandra-core-plugin/src/main/java/co/elastic/apm/agent/cassandra/CassandraHelper.java": [
                    "public Span<?> co.elastic.apm.agent.cassandra.CassandraHelper.startCassandraSpan(@Nullable String query, boolean preparedStatement, @Nullable String keyspace)"
                ],
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/helper/DubboTraceHelper.java": [
                    "public static void co.elastic.apm.agent.dubbo.helper.DubboTraceHelper.fillTransaction(Transaction<?> transaction, Class<?> apiClass, String methodName)",
                    "public static Span<?> co.elastic.apm.agent.dubbo.helper.DubboTraceHelper.createConsumerSpan(Tracer tracer, Class<?> apiClass, String methodName, InetSocketAddress remoteAddress)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public Span<?> co.elastic.apm.agent.grpc.GrpcHelper.clientCallStartEnter(ClientCall<?, ?> clientCall, ClientCall.Listener<?> listener, Metadata headers)"
                ],
                "apm-agent-plugins/apm-jakarta-websocket-plugin/src/main/java/co/elastic/apm/agent/websocket/BaseServerEndpointInstrumentation.java": [
                    "private static void co.elastic.apm.agent.websocket.BaseServerEndpointInstrumentation.setTransactionTypeAndName(Transaction<?> transaction, String signature, String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "protected static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(String signature, @Nullable String pathAnnotationValue, @Nullable String frameworkVersion)"
                ],
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span<?> co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public void co.elastic.apm.agent.jms.JmsInstrumentationHelper.addMessageDetails(@Nullable Message message, AbstractSpan<?> span)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsMessagePropertyAccessor.java": [
                    "public void co.elastic.apm.agent.jms.JmsMessagePropertyAccessor.setHeader(String headerName, String headerValue, Message message)",
                    "public String co.elastic.apm.agent.jms.JmsMessagePropertyAccessor.getFirstHeader(String headerName, Message message)"
                ],
                "apm-agent-plugins/apm-jsf-plugin/src/main/java/co/elastic/apm/agent/jsf/AbstractJsfLifecycleExecuteInstrumentation.java": [
                    "protected static Object co.elastic.apm.agent.jsf.AbstractJsfLifecycleExecuteInstrumentation.createAndActivateSpan(boolean withExternalContext, @Nullable String requestServletPath, @Nullable String requestPathInfo)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIterableWrapper.java": [
                    "public Iterator<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.ConsumerRecordsIterableWrapper.iterator()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord<?, ?> co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsListWrapper.java": [
                    "public List<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.ConsumerRecordsListWrapper.subList(int fromIndex, int toIndex)",
                    "public Iterator<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.ConsumerRecordsListWrapper.iterator()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHeadersHelper.java": [
                    "public Iterator<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.wrapConsumerRecordIterator(Iterator<ConsumerRecord<?, ?>> consumerRecordIterator)",
                    "public List<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.wrapConsumerRecordList(List<ConsumerRecord<?, ?>> consumerRecordList)",
                    "public Iterable<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.wrapConsumerRecordIterable(Iterable<ConsumerRecord<?, ?>> consumerRecordIterable)",
                    "public void co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.removeTraceContextHeader(ProducerRecord<?, ?> producerRecord)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaRecordHeaderAccessor.java": [
                    "public byte[] co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.getFirstHeader(String headerName, ConsumerRecord record)",
                    "public void co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.remove(String headerName, ProducerRecord carrier)",
                    "public void co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.setHeader(String headerName, byte[] headerValue, ProducerRecord record)",
                    "public <S> void co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.forEach(String headerName, ConsumerRecord carrier, S state, HeaderConsumer<byte[], S> consumer)",
                    "public byte[] co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.getFixedLengthByteArray(String headerName, int length)"
                ],
                "apm-agent-plugins/apm-mongodb/apm-mongodb-common/src/main/java/co/elastic/apm/agent/mongodb/MongoHelper.java": [
                    "public Span<?> co.elastic.apm.agent.mongodb.MongoHelper.startSpan(@Nullable String database, @Nullable String collection, @Nullable String command, String host, int port, @Nullable BsonDocument commandDocument)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpan.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.tracing.OTelSpan.updateName(String name)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.agent.opentracingimpl.ApmSpanInstrumentation.handleSpecialTransactionTag(Transaction transaction, String key, Object value)",
                    "public static void co.elastic.apm.agent.opentracingimpl.ApmSpanInstrumentation.doFinishInternal(AbstractSpan<?> abstractSpan, long finishMicros)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "protected Span co.elastic.apm.agent.profiler.CallTree.asSpan(Root root, TraceContext parentContext)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> void co.elastic.apm.agent.servlet.ServletApiAdvice.onExitServlet( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest, Object servletResponse, @Nullable Object transactionOrScopeOrSpan, @Nullable Throwable t, Object thiz)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "void co.elastic.apm.agent.servlet.ServletTransactionHelper.applyDefaultTransactionName(String method, String servletPath, @Nullable String pathInfo, Transaction<?> transaction)"
                ],
                "apm-agent-plugins/apm-sparkjava-plugin/src/main/java/co/elastic/apm/agent/sparkjava/RoutesAdvice.java": [
                    "public static void co.elastic.apm.agent.sparkjava.RoutesAdvice.onExitFind(@Advice.Return RouteMatch routeMatch)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-spring5/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "public static void co.elastic.apm.agent.springwebflux.WebfluxHelper.setTransactionName(@Nullable Transaction<?> transaction, ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-struts-plugin/src/main/java/co/elastic/apm/agent/struts/ActionProxyAdvice.java": [
                    "public static Object co.elastic.apm.agent.struts.ActionProxyAdvice.onEnterExecute(@Advice.This ActionProxy actionProxy)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractHttpTransactionHelper.java": [
                    "public void co.elastic.apm.agent.vertx.AbstractHttpTransactionHelper.applyDefaultTransactionName(String method, String pathFirstPart, @Nullable String pathSecondPart, Transaction<?> transaction, int priorityOffset)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebHelper.java": [
                    "protected void co.elastic.apm.agent.vertx.AbstractVertxWebHelper.setRouteBasedTransactionName(Transaction<?> transaction, RoutingContext routingContext)"
                ]
            },
            "11a2527f660e19b6fc2af6f42303bd15881d113c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "<C> boolean co.elastic.apm.agent.impl.transaction.TraceContext.propagateTraceContext(C carrier, BinaryHeaderSetter<C> headerSetter)",
                    "public static <C> void co.elastic.apm.agent.impl.transaction.TraceContext.removeTraceContextHeaders(C carrier, HeaderRemover<C> headerRemover)",
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext child, @Nullable Object carrier, HeaderGetter<byte[], Object> traceContextHeaderGetter)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/helper/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.v4.helper.HttpAsyncRequestProducerWrapper.generateRequest()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-1-plugin/src/main/java/co/elastic/apm/agent/awssdk/v1/helper/SQSHelper.java": [
                    "public void co.elastic.apm.agent.awssdk.v1.helper.SQSHelper.setMessageAttributeNames(ReceiveMessageRequest receiveMessageRequest)",
                    "protected void co.elastic.apm.agent.awssdk.v1.helper.SQSHelper.setMessageContext(@Nullable Message sqsMessage, @Nullable String queueName, co.elastic.apm.agent.tracer.metadata.Message message)"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/helper/SQSHelper.java": [
                    "public void co.elastic.apm.agent.awssdk.v2.helper.SQSHelper.modifyRequestObject(@Nullable Span<?> span, ClientExecutionParams clientExecutionParams, ExecutionContext executionContext)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/S3TransactionHelper.java": [
                    "protected void co.elastic.apm.agent.awslambda.helper.S3TransactionHelper.setTransactionName(Transaction transaction, S3Event s3Event, Context lambdaContext)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/SNSTransactionHelper.java": [
                    "protected void co.elastic.apm.agent.awslambda.helper.SNSTransactionHelper.addSpanLinks(Transaction transaction, SNSEvent event)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/SQSTransactionHelper.java": [
                    "protected void co.elastic.apm.agent.awslambda.helper.SQSTransactionHelper.addSpanLinks(Transaction transaction, SQSEvent event)"
                ],
                "apm-agent-plugins/apm-cassandra/apm-cassandra-core-plugin/src/main/java/co/elastic/apm/agent/cassandra/CassandraHelper.java": [
                    "public Span<?> co.elastic.apm.agent.cassandra.CassandraHelper.startCassandraSpan(@Nullable String query, boolean preparedStatement, @Nullable String keyspace)"
                ],
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/helper/DubboTraceHelper.java": [
                    "public static void co.elastic.apm.agent.dubbo.helper.DubboTraceHelper.fillTransaction(Transaction<?> transaction, Class<?> apiClass, String methodName)",
                    "public static Span<?> co.elastic.apm.agent.dubbo.helper.DubboTraceHelper.createConsumerSpan(Tracer tracer, Class<?> apiClass, String methodName, InetSocketAddress remoteAddress)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public Span<?> co.elastic.apm.agent.grpc.GrpcHelper.clientCallStartEnter(ClientCall<?, ?> clientCall, ClientCall.Listener<?> listener, Metadata headers)"
                ],
                "apm-agent-plugins/apm-jakarta-websocket-plugin/src/main/java/co/elastic/apm/agent/websocket/BaseServerEndpointInstrumentation.java": [
                    "private static void co.elastic.apm.agent.websocket.BaseServerEndpointInstrumentation.setTransactionTypeAndName(Transaction<?> transaction, String signature, String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "protected static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(String signature, @Nullable String pathAnnotationValue, @Nullable String frameworkVersion)"
                ],
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span<?> co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public void co.elastic.apm.agent.jms.JmsInstrumentationHelper.addMessageDetails(@Nullable Message message, AbstractSpan<?> span)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsMessagePropertyAccessor.java": [
                    "public void co.elastic.apm.agent.jms.JmsMessagePropertyAccessor.setHeader(String headerName, String headerValue, Message message)",
                    "public String co.elastic.apm.agent.jms.JmsMessagePropertyAccessor.getFirstHeader(String headerName, Message message)"
                ],
                "apm-agent-plugins/apm-jsf-plugin/src/main/java/co/elastic/apm/agent/jsf/AbstractJsfLifecycleExecuteInstrumentation.java": [
                    "protected static Object co.elastic.apm.agent.jsf.AbstractJsfLifecycleExecuteInstrumentation.createAndActivateSpan(boolean withExternalContext, @Nullable String requestServletPath, @Nullable String requestPathInfo)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIterableWrapper.java": [
                    "public Iterator<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.ConsumerRecordsIterableWrapper.iterator()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord<?, ?> co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsListWrapper.java": [
                    "public List<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.ConsumerRecordsListWrapper.subList(int fromIndex, int toIndex)",
                    "public Iterator<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.ConsumerRecordsListWrapper.iterator()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHeadersHelper.java": [
                    "public Iterator<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.wrapConsumerRecordIterator(Iterator<ConsumerRecord<?, ?>> consumerRecordIterator)",
                    "public List<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.wrapConsumerRecordList(List<ConsumerRecord<?, ?>> consumerRecordList)",
                    "public Iterable<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.wrapConsumerRecordIterable(Iterable<ConsumerRecord<?, ?>> consumerRecordIterable)",
                    "public void co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.removeTraceContextHeader(ProducerRecord<?, ?> producerRecord)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaRecordHeaderAccessor.java": [
                    "public byte[] co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.getFirstHeader(String headerName, ConsumerRecord record)",
                    "public void co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.remove(String headerName, ProducerRecord carrier)",
                    "public void co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.setHeader(String headerName, byte[] headerValue, ProducerRecord record)",
                    "public <S> void co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.forEach(String headerName, ConsumerRecord carrier, S state, HeaderConsumer<byte[], S> consumer)",
                    "public byte[] co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.getFixedLengthByteArray(String headerName, int length)"
                ],
                "apm-agent-plugins/apm-mongodb/apm-mongodb-common/src/main/java/co/elastic/apm/agent/mongodb/MongoHelper.java": [
                    "public Span<?> co.elastic.apm.agent.mongodb.MongoHelper.startSpan(@Nullable String database, @Nullable String collection, @Nullable String command, String host, int port, @Nullable BsonDocument commandDocument)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpan.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.tracing.OTelSpan.updateName(String name)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.agent.opentracingimpl.ApmSpanInstrumentation.handleSpecialTransactionTag(Transaction transaction, String key, Object value)",
                    "public static void co.elastic.apm.agent.opentracingimpl.ApmSpanInstrumentation.doFinishInternal(AbstractSpan<?> abstractSpan, long finishMicros)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "protected Span co.elastic.apm.agent.profiler.CallTree.asSpan(Root root, TraceContext parentContext)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> void co.elastic.apm.agent.servlet.ServletApiAdvice.onExitServlet( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest, Object servletResponse, @Nullable Object transactionOrScopeOrSpan, @Nullable Throwable t, Object thiz)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "void co.elastic.apm.agent.servlet.ServletTransactionHelper.applyDefaultTransactionName(String method, String servletPath, @Nullable String pathInfo, Transaction<?> transaction)"
                ],
                "apm-agent-plugins/apm-sparkjava-plugin/src/main/java/co/elastic/apm/agent/sparkjava/RoutesAdvice.java": [
                    "public static void co.elastic.apm.agent.sparkjava.RoutesAdvice.onExitFind(@Advice.Return RouteMatch routeMatch)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-spring5/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "public static void co.elastic.apm.agent.springwebflux.WebfluxHelper.setTransactionName(@Nullable Transaction<?> transaction, ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-struts-plugin/src/main/java/co/elastic/apm/agent/struts/ActionProxyAdvice.java": [
                    "public static Object co.elastic.apm.agent.struts.ActionProxyAdvice.onEnterExecute(@Advice.This ActionProxy actionProxy)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractHttpTransactionHelper.java": [
                    "public void co.elastic.apm.agent.vertx.AbstractHttpTransactionHelper.applyDefaultTransactionName(String method, String pathFirstPart, @Nullable String pathSecondPart, Transaction<?> transaction, int priorityOffset)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebHelper.java": [
                    "protected void co.elastic.apm.agent.vertx.AbstractVertxWebHelper.setRouteBasedTransactionName(Transaction<?> transaction, RoutingContext routingContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4858631fb5ddc91569eb31101304c03e52b56c61",
        "previous_commit": "464b9c134c9d74e2a482367e9c1e8a1a8e2ba97e",
        "date": 1710278438,
        "releases": {
            "previous": "4858631fb5ddc91569eb31101304c03e52b56c61",
            "next": "4858631fb5ddc91569eb31101304c03e52b56c61"
        },
        "commit_message": "Introduce API for metrics collection that does not depend on agent-core (#3522)\n\n* Remove logging API.\n\n* Clean up core dependencies from POMs that do not need it.\n\n* Add API for handling lambda instrumentation and apply to the AWS plugin.\n\n* Move metrics API to tracer.\n\n* Factor out JSON DSL for metrics.\n\n* Fix import issue.\n\n* Fix imports.\n\n* Fix imports.\n\n* fix formatting\n\n---------\n\nCo-authored-by: Sylvain Juge <763082+SylvainJuge@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4858631fb5ddc91569eb31101304c03e52b56c61": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "public void co.elastic.apm.agent.configuration.ApmServerConfigurationSource.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/ApmServerLogAppender.java": [
                    "public LifecycleListener co.elastic.apm.agent.logging.ApmServerLogAppender.getInitListener()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeField(final String fieldName, final long value, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeKubePodInfo(@Nullable SystemInfo.Kubernetes.Pod pod, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeFieldName(final String fieldName)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeLanguage(final Language language, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeNameAndIdField(@Nullable NameAndIdField nameAndIdField, String fieldName, StringBuilder replaceBuilder, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeKubernetesInfo(@Nullable SystemInfo.Kubernetes kubernetes, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStringKeyScalarValueMap(Iterator<? extends Map.Entry<String, ? /* String|Number|Boolean */>> it, final StringBuilder replaceBuilder, final JsonWriter jw, boolean extendedStringLimit, boolean supportsNonStringValues)",
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeUrl(final Url url)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeComposite(Composite composite)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeCloudProvider(final CloudProviderInfo cloudProviderInfo, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serialize(Labels labels, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeLabels(Labels labels, final String serviceName, final String serviceVersion, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeScalarValue(final StringBuilder replaceBuilder, final JsonWriter jw, Object value, boolean extendedStringLimit, boolean supportsNonStringValues)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeService(final Service service, final StringBuilder replaceBuilder, final JsonWriter jw, boolean supportsAgentActivationMethod)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeContainerInfo(@Nullable SystemInfo.Container container, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "public static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeLastField(final String fieldName, @Nullable final CharSequence value, StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStackTraceElement(StackFrame frame, StringBuilder replaceBuilder)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeKubeNodeInfo(@Nullable SystemInfo.Kubernetes.Node node, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeStringValue(CharSequence value)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeAgent(final Agent agent, final StringBuilder replaceBuilder, final JsonWriter jw, boolean supportsAgentActivationMethod)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeFramework(final Framework framework, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSystem(SystemInfo system, StringBuilder replaceBuilder, JsonWriter jw, boolean supportsConfiguredAndDetectedHostname)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeNode(final Node node, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeProcess(final ProcessInfo process, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeService(@Nullable final CharSequence serviceName, @Nullable final CharSequence serviceVersion, @Nullable ServiceTarget serviceTarget, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeRuntime(final RuntimeInfo runtime, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeField(final String fieldName, final List<String> values, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeGlobalLabels(ArrayList<String> globalLabelKeys, ArrayList<String> globalLabelValues, final StringBuilder replaceBuilder, JsonWriter jw)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeField(final String fieldName, @Nullable final CharSequence value, final StringBuilder replaceBuilder, final JsonWriter jw, boolean writeNull)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistryReporter.java": [
                    "public void co.elastic.apm.agent.report.serialize.MetricRegistryReporter.start(Tracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "private static boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serialize(MetricSet metricSet, long epochMicros, String serviceName, String serviceVersion, StringBuilder replaceBuilder, JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.onChange(ConfigurationOption<?> configurationOption, List<JmxMetric> oldValue, List<JmxMetric> newValue)",
                    "public double co.elastic.apm.agent.jmx.JmxMetricTracker.get()",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.register(List<JmxMetric> jmxMetrics, MBeanServer server, List<JmxMetric> failedMetrics)",
                    "synchronized void co.elastic.apm.agent.jmx.JmxMetricTracker.init(final MBeanServer platformMBeanServer)"
                ],
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "boolean co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeTags(List<Tag> tags, StringBuilder replaceBuilder, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeObjectStart(String key, String objectName, String suffix, JsonWriter jw, StringBuilder replaceBuilder, boolean dedotMetricName)"
                ],
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMetricsReporter.java": [
                    "public void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.close()",
                    "void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.run(final long now)",
                    "private synchronized void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.scheduleReporting()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-metricsdk-plugin/src/main/java/co/elastic/apm/agent/otelmetricsdk/MetricSetSerializer.java": [
                    "private void co.elastic.apm.agent.otelmetricsdk.MetricSetSerializer.serializeAttributes(CharSequence instrumentationScopeName, Attributes attributes)",
                    "private boolean co.elastic.apm.agent.otelmetricsdk.MetricSetSerializer.serializeAttribute(AttributeKey<?> key, @Nullable Object value, boolean prependComma)"
                ]
            },
            "464b9c134c9d74e2a482367e9c1e8a1a8e2ba97e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "public void co.elastic.apm.agent.configuration.ApmServerConfigurationSource.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/ApmServerLogAppender.java": [
                    "public LifecycleListener co.elastic.apm.agent.logging.ApmServerLogAppender.getInitListener()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeField(final String fieldName, final long value, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeKubePodInfo(@Nullable SystemInfo.Kubernetes.Pod pod, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeFieldName(final String fieldName)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeLanguage(final Language language, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeNameAndIdField(@Nullable NameAndIdField nameAndIdField, String fieldName, StringBuilder replaceBuilder, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeKubernetesInfo(@Nullable SystemInfo.Kubernetes kubernetes, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStringKeyScalarValueMap(Iterator<? extends Map.Entry<String, ? /* String|Number|Boolean */>> it, final StringBuilder replaceBuilder, final JsonWriter jw, boolean extendedStringLimit, boolean supportsNonStringValues)",
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeUrl(final Url url)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeComposite(Composite composite)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeCloudProvider(final CloudProviderInfo cloudProviderInfo, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serialize(Labels labels, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeLabels(Labels labels, final String serviceName, final String serviceVersion, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeScalarValue(final StringBuilder replaceBuilder, final JsonWriter jw, Object value, boolean extendedStringLimit, boolean supportsNonStringValues)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeService(final Service service, final StringBuilder replaceBuilder, final JsonWriter jw, boolean supportsAgentActivationMethod)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeContainerInfo(@Nullable SystemInfo.Container container, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "public static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeLastField(final String fieldName, @Nullable final CharSequence value, StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStackTraceElement(StackFrame frame, StringBuilder replaceBuilder)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeKubeNodeInfo(@Nullable SystemInfo.Kubernetes.Node node, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeStringValue(CharSequence value)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeAgent(final Agent agent, final StringBuilder replaceBuilder, final JsonWriter jw, boolean supportsAgentActivationMethod)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeFramework(final Framework framework, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSystem(SystemInfo system, StringBuilder replaceBuilder, JsonWriter jw, boolean supportsConfiguredAndDetectedHostname)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeNode(final Node node, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeProcess(final ProcessInfo process, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeService(@Nullable final CharSequence serviceName, @Nullable final CharSequence serviceVersion, @Nullable ServiceTarget serviceTarget, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeRuntime(final RuntimeInfo runtime, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeField(final String fieldName, final List<String> values, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeGlobalLabels(ArrayList<String> globalLabelKeys, ArrayList<String> globalLabelValues, final StringBuilder replaceBuilder, JsonWriter jw)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeField(final String fieldName, @Nullable final CharSequence value, final StringBuilder replaceBuilder, final JsonWriter jw, boolean writeNull)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistryReporter.java": [
                    "public void co.elastic.apm.agent.report.serialize.MetricRegistryReporter.start(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "private static boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serialize(MetricSet metricSet, long epochMicros, String serviceName, String serviceVersion, StringBuilder replaceBuilder, JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.onChange(ConfigurationOption<?> configurationOption, List<JmxMetric> oldValue, List<JmxMetric> newValue)",
                    "public double co.elastic.apm.agent.jmx.JmxMetricTracker.get()",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.register(List<JmxMetric> jmxMetrics, MBeanServer server, List<JmxMetric> failedMetrics)",
                    "synchronized void co.elastic.apm.agent.jmx.JmxMetricTracker.init(final MBeanServer platformMBeanServer)"
                ],
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "boolean co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeTags(List<Tag> tags, StringBuilder replaceBuilder, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeObjectStart(String key, String objectName, String suffix, JsonWriter jw, StringBuilder replaceBuilder, boolean dedotMetricName)"
                ],
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMetricsReporter.java": [
                    "public void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.close()",
                    "void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.run(final long now)",
                    "private synchronized void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.scheduleReporting()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-metricsdk-plugin/src/main/java/co/elastic/apm/agent/otelmetricsdk/MetricSetSerializer.java": [
                    "private void co.elastic.apm.agent.otelmetricsdk.MetricSetSerializer.serializeAttributes(CharSequence instrumentationScopeName, Attributes attributes)",
                    "private boolean co.elastic.apm.agent.otelmetricsdk.MetricSetSerializer.serializeAttribute(AttributeKey<?> key, @Nullable Object value, boolean prependComma)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9ca4ee42831b11c302447f1dd43f1036691c5784",
        "previous_commit": "275ee58a106ea7e25eb270899c46acde695a6cba",
        "date": 1526993934,
        "releases": {
            "previous": "9ca4ee42831b11c302447f1dd43f1036691c5784",
            "next": "9ca4ee42831b11c302447f1dd43f1036691c5784"
        },
        "commit_message": "Add support for distributed tracing (#85)\n\nImplements TraceContext based on the w3c trace context draft",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9ca4ee42831b11c302447f1dd43f1036691c5784": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span, boolean releaseActiveSpan)",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction, @Nullable Span parentSpan, long nanoTime)",
                    "private boolean co.elastic.apm.impl.ElasticApmTracer.isTransactionSpanLimitReached(Transaction transaction)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/TransactionReference.java": [
                    "public void co.elastic.apm.impl.error.TransactionReference.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/TransactionPayload.java": [
                    "public void co.elastic.apm.impl.payload.TransactionPayload.resetState()",
                    "public void co.elastic.apm.impl.payload.TransactionPayload.recycle()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.withType(@Nullable String type)",
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span parentSpan, long nanoTime, boolean dropped)",
                    "public Span co.elastic.apm.impl.transaction.Span.withName(@Nullable String name)",
                    "public void co.elastic.apm.impl.transaction.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/SpanCount.java": [
                    "public void co.elastic.apm.impl.transaction.SpanCount.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.setType(@Nullable String type)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.addSpan(Span span)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.withName(@Nullable String name)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.withResult(@Nullable String result)",
                    "public void co.elastic.apm.impl.transaction.Transaction.addTag(String key, String value)",
                    "public void co.elastic.apm.impl.transaction.Transaction.setUser(String id, String email, String username)",
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public void co.elastic.apm.impl.transaction.Transaction.end(long nanoTime, boolean releaseActiveTransaction)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.startNoop(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeUrl(final Url url)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpans(final List<Span> spans)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransactionPayload(final TransactionPayload payload)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransactionReference(ErrorCapture errorCapture)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/util/HexUtils.java": [
                    "public static String co.elastic.apm.util.HexUtils.bytesToHex(byte[] bytes)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "void co.elastic.apm.servlet.ApmFilter.captureTransaction(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public Transaction co.elastic.apm.servlet.ServletTransactionHelper.onBefore(String servletPath, String pathInfo, String requestURI, @Nullable String userAgentHeader, @Nullable String traceContextHeader)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpanBuilder.java": [
                    "private ApmSpan co.elastic.apm.opentracing.ApmSpanBuilder.startApmSpan()",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.addReference(String referenceType, SpanContext referencedContext)",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.asChildOf(SpanContext parent)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmTracer.java": [
                    "public <C> void co.elastic.apm.opentracing.ApmTracer.inject(SpanContext spanContext, Format<C> format, C carrier)",
                    "public <C> SpanContext co.elastic.apm.opentracing.ApmTracer.extract(Format<C> format, C carrier)"
                ]
            },
            "275ee58a106ea7e25eb270899c46acde695a6cba": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span, boolean releaseActiveSpan)",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction, @Nullable Span parentSpan, long nanoTime)",
                    "private boolean co.elastic.apm.impl.ElasticApmTracer.isTransactionSpanLimitReached(Transaction transaction)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/TransactionReference.java": [
                    "public void co.elastic.apm.impl.error.TransactionReference.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/TransactionPayload.java": [
                    "public void co.elastic.apm.impl.payload.TransactionPayload.resetState()",
                    "public void co.elastic.apm.impl.payload.TransactionPayload.recycle()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.withType(@Nullable String type)",
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span parentSpan, long nanoTime, boolean dropped)",
                    "public Span co.elastic.apm.impl.transaction.Span.withName(@Nullable String name)",
                    "public void co.elastic.apm.impl.transaction.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/SpanCount.java": [
                    "public void co.elastic.apm.impl.transaction.SpanCount.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.setType(@Nullable String type)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.addSpan(Span span)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.withName(@Nullable String name)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.withResult(@Nullable String result)",
                    "public void co.elastic.apm.impl.transaction.Transaction.addTag(String key, String value)",
                    "public void co.elastic.apm.impl.transaction.Transaction.setUser(String id, String email, String username)",
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public void co.elastic.apm.impl.transaction.Transaction.end(long nanoTime, boolean releaseActiveTransaction)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.startNoop(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeUrl(final Url url)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpans(final List<Span> spans)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransactionPayload(final TransactionPayload payload)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransactionReference(ErrorCapture errorCapture)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/util/HexUtils.java": [
                    "public static String co.elastic.apm.util.HexUtils.bytesToHex(byte[] bytes)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "void co.elastic.apm.servlet.ApmFilter.captureTransaction(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public Transaction co.elastic.apm.servlet.ServletTransactionHelper.onBefore(String servletPath, String pathInfo, String requestURI, String userAgentHeader)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpanBuilder.java": [
                    "private ApmSpan co.elastic.apm.opentracing.ApmSpanBuilder.startApmSpan()",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.addReference(String referenceType, SpanContext referencedContext)",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.asChildOf(SpanContext parent)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmTracer.java": [
                    "public <C> void co.elastic.apm.opentracing.ApmTracer.inject(SpanContext spanContext, Format<C> format, C carrier)",
                    "public <C> SpanContext co.elastic.apm.opentracing.ApmTracer.extract(Format<C> format, C carrier)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "dd3e45ff28f5969024ad99240c8954483306e7c3",
        "previous_commit": "6bff7bd65105986d1989ce2e6ee6ccf441c800c8",
        "date": 1594042843,
        "releases": {
            "previous": "dd3e45ff28f5969024ad99240c8954483306e7c3",
            "next": "dd3e45ff28f5969024ad99240c8954483306e7c3"
        },
        "commit_message": "Add GlobalTracer\n\nbye bye tracer null checks\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "dd3e45ff28f5969024ad99240c8954483306e7c3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "public void co.elastic.apm.agent.bci.ElasticApmAgent.run()",
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "private static ElasticApmInstrumentation co.elastic.apm.agent.bci.ElasticApmAgent.tryInstantiate(Class<? extends ElasticApmInstrumentation> instrumentation, boolean withTracer)",
                    "public static synchronized Future<?> co.elastic.apm.agent.bci.ElasticApmAgent.reInitInstrumentation()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/TraceMethodInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.bci.methodmatching.TraceMethodInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/plugin/api/ElasticApmApiInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.plugin.api.ElasticApmApiInstrumentation.doGetCurrentSpan()",
                    "public static Object co.elastic.apm.agent.plugin.api.ElasticApmApiInstrumentation.doStartTransaction(@Advice.Origin Class<?> clazz)",
                    "public static Object co.elastic.apm.agent.plugin.api.ElasticApmApiInstrumentation.doGetCurrentTransaction()"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-common/src/main/java/co/elastic/apm/agent/hibernate/search/HibernateSearchHelper.java": [
                    "public static Span co.elastic.apm.agent.hibernate.search.HibernateSearchHelper.createAndActivateSpan(final Tracer tracer, final String methodName, final String query)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.concurrent.JavaConcurrent.restoreContext(Object o, Tracer tracer)",
                    "public static Runnable co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Runnable runnable, Tracer tracer)",
                    "public static <T> Collection<? extends Callable<T>> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Collection<? extends Callable<T>> callables, Tracer tracer)",
                    "public static <T> Callable<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Callable<T> callable, Tracer tracer)",
                    "public static <T> ForkJoinTask<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable ForkJoinTask<T> task, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature, @JaxRsPath @Nullable String pathAnnotationValue)"
                ],
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.jdbc.StatementInstrumentation.onBeforeExecute(@Advice.This Statement statement)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static Span co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsIteratorInstrumentation.java": [
                    "public static Iterator<ConsumerRecord> co.elastic.apm.agent.kafka.ConsumerRecordsIteratorInstrumentation.wrapIterator(@Nullable @Advice.Return final Iterator<ConsumerRecord> iterator)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsRecordListInstrumentation.java": [
                    "public static List<ConsumerRecord> co.elastic.apm.agent.kafka.ConsumerRecordsRecordListInstrumentation.wrapRecordList(@Nullable @Advice.Return final List<ConsumerRecord> list)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsRecordsInstrumentation.java": [
                    "public static Iterable<ConsumerRecord> co.elastic.apm.agent.kafka.ConsumerRecordsRecordsInstrumentation.wrapIterable(@Nullable @Advice.Return final Iterable<ConsumerRecord> iterable)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable AbstractSpan<?> parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ClassLoader applicationClassLoader)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ElasticApmTracerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.opentracing.impl.ElasticApmTracerInstrumentation.close()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ExternalSpanContextInstrumentation.java": [
                    "public static TraceContext co.elastic.apm.agent.opentracing.impl.ExternalSpanContextInstrumentation.parseTextMap(Iterable<Map.Entry<String, String>> textMap)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ScopeManagerInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.opentracing.impl.ScopeManagerInstrumentation.getCurrentSpan()",
                    "public static Object co.elastic.apm.agent.opentracing.impl.ScopeManagerInstrumentation.getCurrentTraceContext()"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessExitInstrumentation.java": [
                    "public static void co.elastic.apm.agent.process.ProcessExitInstrumentation.onExit(@Advice.This Process process)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessStartInstrumentation.java": [
                    "public static void co.elastic.apm.agent.process.ProcessStartInstrumentation.onExit(@Advice.This ProcessBuilder processBuilder, @Advice.Return Process process, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-redis-common/src/main/java/co/elastic/apm/agent/redis/RedisSpanUtils.java": [
                    "public static Span co.elastic.apm.agent.redis.RedisSpanUtils.createRedisSpan(String command)"
                ],
                "apm-agent-plugins/apm-scala-concurrent-plugin/src/main/java/co/elastic/apm/agent/scala/concurrent/FutureInstrumentation.java": [
                    "public static void co.elastic.apm.agent.scala.concurrent.FutureInstrumentation.onExit(@Advice.This Object thiz)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/RequestStreamRecordingInstrumentation.java": [
                    "public static ServletInputStream co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.afterGetInputStream(@Advice.Return @Nullable ServletInputStream inputStream)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public static void co.elastic.apm.agent.servlet.ServletTransactionHelper.determineServiceName(@Nullable String servletContextName, ClassLoader servletContextClassLoader, @Nullable String contextPath)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/spring/webmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.spring.webmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            },
            "6bff7bd65105986d1989ce2e6ee6ccf441c800c8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "public void co.elastic.apm.agent.bci.ElasticApmAgent.run()",
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "private static ElasticApmInstrumentation co.elastic.apm.agent.bci.ElasticApmAgent.tryInstantiate(Class<? extends ElasticApmInstrumentation> instrumentation, boolean withTracer)",
                    "public static synchronized Future<?> co.elastic.apm.agent.bci.ElasticApmAgent.reInitInstrumentation()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/TraceMethodInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.bci.methodmatching.TraceMethodInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/plugin/api/ElasticApmApiInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.plugin.api.ElasticApmApiInstrumentation.doGetCurrentSpan()",
                    "public static Object co.elastic.apm.agent.plugin.api.ElasticApmApiInstrumentation.doStartTransaction(@Advice.Origin Class<?> clazz)",
                    "public static Object co.elastic.apm.agent.plugin.api.ElasticApmApiInstrumentation.doGetCurrentTransaction()"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-common/src/main/java/co/elastic/apm/agent/hibernate/search/HibernateSearchHelper.java": [
                    "public static Span co.elastic.apm.agent.hibernate.search.HibernateSearchHelper.createAndActivateSpan(final ElasticApmTracer tracer, final String methodName, final String query)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.concurrent.JavaConcurrent.restoreContext(Object o, @Nullable ElasticApmTracer tracer)",
                    "public static <T> ForkJoinTask<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable ForkJoinTask<T> task, @Nullable ElasticApmTracer tracer)",
                    "public static <T> Callable<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Callable<T> callable, @Nullable ElasticApmTracer tracer)",
                    "public static <T> Collection<? extends Callable<T>> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Collection<? extends Callable<T>> callables, @Nullable ElasticApmTracer tracer)",
                    "public static Runnable co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Runnable runnable, @Nullable ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature, @JaxRsPath @Nullable String pathAnnotationValue)"
                ],
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.jdbc.StatementInstrumentation.onBeforeExecute(@Advice.This Statement statement)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static Span co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsIteratorInstrumentation.java": [
                    "public static Iterator<ConsumerRecord> co.elastic.apm.agent.kafka.ConsumerRecordsIteratorInstrumentation.wrapIterator(@Nullable @Advice.Return final Iterator<ConsumerRecord> iterator)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsRecordListInstrumentation.java": [
                    "public static List<ConsumerRecord> co.elastic.apm.agent.kafka.ConsumerRecordsRecordListInstrumentation.wrapRecordList(@Nullable @Advice.Return final List<ConsumerRecord> list)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsRecordsInstrumentation.java": [
                    "public static Iterable<ConsumerRecord> co.elastic.apm.agent.kafka.ConsumerRecordsRecordsInstrumentation.wrapIterable(@Nullable @Advice.Return final Iterable<ConsumerRecord> iterable)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable AbstractSpan<?> parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ClassLoader applicationClassLoader)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ElasticApmTracerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.opentracing.impl.ElasticApmTracerInstrumentation.close()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ExternalSpanContextInstrumentation.java": [
                    "public static TraceContext co.elastic.apm.agent.opentracing.impl.ExternalSpanContextInstrumentation.parseTextMap(Iterable<Map.Entry<String, String>> textMap)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ScopeManagerInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.opentracing.impl.ScopeManagerInstrumentation.getCurrentSpan()",
                    "public static Object co.elastic.apm.agent.opentracing.impl.ScopeManagerInstrumentation.getCurrentTraceContext()"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessExitInstrumentation.java": [
                    "public static void co.elastic.apm.agent.process.ProcessExitInstrumentation.onExit(@Advice.This Process process)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessStartInstrumentation.java": [
                    "public static void co.elastic.apm.agent.process.ProcessStartInstrumentation.onExit(@Advice.This ProcessBuilder processBuilder, @Advice.Return Process process, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-redis-common/src/main/java/co/elastic/apm/agent/redis/RedisSpanUtils.java": [
                    "public static Span co.elastic.apm.agent.redis.RedisSpanUtils.createRedisSpan(String command)"
                ],
                "apm-agent-plugins/apm-scala-concurrent-plugin/src/main/java/co/elastic/apm/agent/scala/concurrent/FutureInstrumentation.java": [
                    "public static void co.elastic.apm.agent.scala.concurrent.FutureInstrumentation.onExit(@Advice.This Object thiz)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/RequestStreamRecordingInstrumentation.java": [
                    "public static ServletInputStream co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.afterGetInputStream(@Advice.Return @Nullable ServletInputStream inputStream)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public static void co.elastic.apm.agent.servlet.ServletTransactionHelper.determineServiceName(@Nullable String servletContextName, ClassLoader servletContextClassLoader, @Nullable String contextPath)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/spring/webmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.spring.webmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "86184c5440887feb03d69dda41e30dfc4ce78e34",
        "previous_commit": "48d2a231e604414ccb4385792a8c5e364567dcd9",
        "date": 1688995490,
        "releases": {
            "previous": "86184c5440887feb03d69dda41e30dfc4ce78e34",
            "next": "86184c5440887feb03d69dda41e30dfc4ce78e34"
        },
        "commit_message": "Context propagation refactorings (#3206)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "86184c5440887feb03d69dda41e30dfc4ce78e34": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ActiveStack.java": [
                    "boolean co.elastic.apm.agent.impl.ActiveStack.deactivate(ElasticContext<?> context, List<ActivationListener> activationListeners, boolean assertionsEnabled)",
                    "boolean co.elastic.apm.agent.impl.ActiveStack.activate(ElasticContext<?> context, List<ActivationListener> activationListeners)",
                    "public ElasticContext<?> co.elastic.apm.agent.impl.ActiveStack.currentContext()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public AbstractSpan<?> co.elastic.apm.agent.impl.ElasticApmTracer.getActive()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/tracemethods/TraceMethodInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.tracemethods.TraceMethodInstrumentation.onMethodEnter(@Advice.Origin Class<?> clazz, @SimpleMethodSignatureOffsetMappingFactory.SimpleMethodSignature String signature)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/ApacheHttpAsyncClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.ApacheHttpAsyncClientInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object[] enter, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/helper/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.v4.helper.HttpAsyncRequestProducerWrapper.generateRequest()",
                    "public void co.elastic.apm.agent.httpclient.v4.helper.HttpAsyncRequestProducerWrapper.resetState()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/helper/SQSHelper.java": [
                    "public void co.elastic.apm.agent.awssdk.v2.helper.SQSHelper.modifyRequestObject(ElasticContext<?> toPropagate, ClientExecutionParams clientExecutionParams, ExecutionContext executionContext)"
                ],
                "apm-agent-plugins/apm-cassandra/apm-cassandra-core-plugin/src/main/java/co/elastic/apm/agent/cassandra/CassandraHelper.java": [
                    "public Span<?> co.elastic.apm.agent.cassandra.CassandraHelper.startCassandraSpan(@Nullable String query, boolean preparedStatement, @Nullable String keyspace)"
                ],
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/helper/DubboTraceHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.dubbo.helper.DubboTraceHelper.createConsumerSpan(Tracer tracer, Class<?> apiClass, String methodName, InetSocketAddress remoteAddress)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span<?> co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public Span<?> co.elastic.apm.agent.grpc.GrpcHelper.clientCallStartEnter(ClientCall<?, ?> clientCall, ClientCall.Listener<?> listener, Metadata headers)",
                    "public Span<?> co.elastic.apm.agent.grpc.GrpcHelper.onClientCallCreationEntry(ElasticContext<?> parent, @Nullable MethodDescriptor<?, ?> method, @Nullable String authority)"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-common/src/main/java/co/elastic/apm/agent/hibernatesearch/HibernateSearchHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.hibernatesearch.HibernateSearchHelper.createAndActivateSpan(final Tracer tracer, final String methodName, final String query)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/HttpClientHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.httpclient.HttpClientHelper.startHttpClientSpan(ElasticContext<?> activeContext, String method, @Nullable URI uri, @Nullable CharSequence hostName)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.jdbc.StatementInstrumentation.onBeforeExecute(@Advice.This Statement statement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span<?> co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, ElasticContext<?> activeContext, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientAdviceHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.httpclient.HttpClientAdviceHelper.startSpan(HttpRequest httpRequest)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpRequestHeadersAdvice.java": [
                    "public static HttpHeaders co.elastic.apm.agent.httpclient.HttpRequestHeadersAdvice.onAfterExecute(@Advice.Return @Nullable final HttpHeaders httpHeaders)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public Span<?> co.elastic.apm.agent.jms.JmsInstrumentationHelper.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-jsf-plugin/src/main/java/co/elastic/apm/agent/jsf/AbstractJsfLifecycleExecuteInstrumentation.java": [
                    "protected static Object co.elastic.apm.agent.jsf.AbstractJsfLifecycleExecuteInstrumentation.createAndActivateSpan(boolean withExternalContext, @Nullable String requestServletPath, @Nullable String requestPathInfo)"
                ],
                "apm-agent-plugins/apm-jsf-plugin/src/main/java/co/elastic/apm/agent/jsf/AbstractJsfLifecycleRenderInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.jsf.AbstractJsfLifecycleRenderInstrumentation.createRenderSpan()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHelper.java": [
                    "public Span<?> co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHelper.onSendStart(ProducerRecord<?, ?> record)"
                ],
                "apm-agent-plugins/apm-mongodb/apm-mongodb-common/src/main/java/co/elastic/apm/agent/mongodb/MongoHelper.java": [
                    "public Span<?> co.elastic.apm.agent.mongodb.MongoHelper.startSpan(@Nullable String database, @Nullable String collection, @Nullable String command, String host, int port, @Nullable BsonDocument commandDocument)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/context/OTelContextStorage.java": [
                    "public Context co.elastic.apm.agent.opentelemetry.context.OTelContextStorage.current()"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessStartInstrumentation.java": [
                    "public static void co.elastic.apm.agent.process.ProcessStartInstrumentation.onExit(@Advice.This ProcessBuilder processBuilder, @Advice.Return @Nullable Process process, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-plugin/src/main/java/co/elastic/apm/agent/rabbitmq/ChannelInstrumentation.java": [
                    "public static Span<?> co.elastic.apm.agent.rabbitmq.ChannelInstrumentation.createExitSpan(@Nullable String exchangeOrQueue)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-redis-common/src/main/java/co/elastic/apm/agent/redis/RedisSpanUtils.java": [
                    "public static Span<?> co.elastic.apm.agent.redis.RedisSpanUtils.createRedisSpan(String command)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> Object co.elastic.apm.agent.servlet.ServletApiAdvice.onServletEnter( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest)"
                ],
                "apm-agent-plugins/apm-spring-resttemplate/apm-spring-resttemplate-plugin/src/main/java/co/elastic/apm/agent/resttemplate/SpringRestTemplateAdvice.java": [
                    "public static Object co.elastic.apm.agent.resttemplate.SpringRestTemplateAdvice.beforeExecute(@Advice.This ClientHttpRequest request)"
                ],
                "apm-agent-plugins/apm-spring-webmvc/apm-spring-webmvc-spring5/src/main/java/co/elastic/apm/agent/springwebmvc/ViewRenderInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.springwebmvc.ViewRenderInstrumentation.beforeExecute(@Advice.This Object thiz)"
                ],
                "apm-agent-plugins/apm-struts-plugin/src/main/java/co/elastic/apm/agent/struts/ActionProxyAdvice.java": [
                    "public static Object co.elastic.apm.agent.struts.ActionProxyAdvice.onEnterExecute(@Advice.This ActionProxy actionProxy)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebClientHelper.java": [
                    "public void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.followRedirect(HttpContext<?> httpContext, HttpClientRequest httpRequest)"
                ]
            },
            "48d2a231e604414ccb4385792a8c5e364567dcd9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ActiveStack.java": [
                    "boolean co.elastic.apm.agent.impl.ActiveStack.deactivate(ElasticContext<?> context, List<ActivationListener> activationListeners, boolean assertionsEnabled)",
                    "boolean co.elastic.apm.agent.impl.ActiveStack.activate(ElasticContext<?> context, List<ActivationListener> activationListeners)",
                    "public ElasticContext<?> co.elastic.apm.agent.impl.ActiveStack.currentContext()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public AbstractSpan<?> co.elastic.apm.agent.impl.ElasticApmTracer.getActive()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/tracemethods/TraceMethodInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.tracemethods.TraceMethodInstrumentation.onMethodEnter(@Advice.Origin Class<?> clazz, @SimpleMethodSignatureOffsetMappingFactory.SimpleMethodSignature String signature)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/ApacheHttpAsyncClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.ApacheHttpAsyncClientInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object[] enter, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/helper/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.v4.helper.HttpAsyncRequestProducerWrapper.generateRequest()",
                    "public void co.elastic.apm.agent.httpclient.v4.helper.HttpAsyncRequestProducerWrapper.resetState()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/helper/SQSHelper.java": [
                    "public void co.elastic.apm.agent.awssdk.v2.helper.SQSHelper.modifyRequestObject(@Nullable Span<?> span, ClientExecutionParams clientExecutionParams, ExecutionContext executionContext)"
                ],
                "apm-agent-plugins/apm-cassandra/apm-cassandra-core-plugin/src/main/java/co/elastic/apm/agent/cassandra/CassandraHelper.java": [
                    "public Span<?> co.elastic.apm.agent.cassandra.CassandraHelper.startCassandraSpan(@Nullable String query, boolean preparedStatement, @Nullable String keyspace)"
                ],
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/helper/DubboTraceHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.dubbo.helper.DubboTraceHelper.createConsumerSpan(Tracer tracer, Class<?> apiClass, String methodName, InetSocketAddress remoteAddress)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span<?> co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public Span<?> co.elastic.apm.agent.grpc.GrpcHelper.clientCallStartEnter(ClientCall<?, ?> clientCall, ClientCall.Listener<?> listener, Metadata headers)",
                    "public Span<?> co.elastic.apm.agent.grpc.GrpcHelper.onClientCallCreationEntry(@Nullable AbstractSpan<?> parent, @Nullable MethodDescriptor<?, ?> method, @Nullable String authority)"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-common/src/main/java/co/elastic/apm/agent/hibernatesearch/HibernateSearchHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.hibernatesearch.HibernateSearchHelper.createAndActivateSpan(final Tracer tracer, final String methodName, final String query)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/HttpClientHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.httpclient.HttpClientHelper.startHttpClientSpan(AbstractSpan<?> parent, String method, @Nullable URI uri, @Nullable CharSequence hostName)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.jdbc.StatementInstrumentation.onBeforeExecute(@Advice.This Statement statement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span<?> co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientAdviceHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.httpclient.HttpClientAdviceHelper.startSpan(HttpRequest httpRequest)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpRequestHeadersAdvice.java": [
                    "public static HttpHeaders co.elastic.apm.agent.httpclient.HttpRequestHeadersAdvice.onAfterExecute(@Advice.Return @Nullable final HttpHeaders httpHeaders)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public Span<?> co.elastic.apm.agent.jms.JmsInstrumentationHelper.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-jsf-plugin/src/main/java/co/elastic/apm/agent/jsf/AbstractJsfLifecycleExecuteInstrumentation.java": [
                    "protected static Object co.elastic.apm.agent.jsf.AbstractJsfLifecycleExecuteInstrumentation.createAndActivateSpan(boolean withExternalContext, @Nullable String requestServletPath, @Nullable String requestPathInfo)"
                ],
                "apm-agent-plugins/apm-jsf-plugin/src/main/java/co/elastic/apm/agent/jsf/AbstractJsfLifecycleRenderInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.jsf.AbstractJsfLifecycleRenderInstrumentation.createRenderSpan()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHelper.java": [
                    "public Span<?> co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHelper.onSendStart(ProducerRecord<?, ?> record)"
                ],
                "apm-agent-plugins/apm-mongodb/apm-mongodb-common/src/main/java/co/elastic/apm/agent/mongodb/MongoHelper.java": [
                    "public Span<?> co.elastic.apm.agent.mongodb.MongoHelper.startSpan(@Nullable String database, @Nullable String collection, @Nullable String command, String host, int port, @Nullable BsonDocument commandDocument)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/context/OTelContextStorage.java": [
                    "public Context co.elastic.apm.agent.opentelemetry.context.OTelContextStorage.current()"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessStartInstrumentation.java": [
                    "public static void co.elastic.apm.agent.process.ProcessStartInstrumentation.onExit(@Advice.This ProcessBuilder processBuilder, @Advice.Return @Nullable Process process, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-plugin/src/main/java/co/elastic/apm/agent/rabbitmq/ChannelInstrumentation.java": [
                    "public static Span<?> co.elastic.apm.agent.rabbitmq.ChannelInstrumentation.createExitSpan(@Nullable String exchangeOrQueue)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-redis-common/src/main/java/co/elastic/apm/agent/redis/RedisSpanUtils.java": [
                    "public static Span<?> co.elastic.apm.agent.redis.RedisSpanUtils.createRedisSpan(String command)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> Object co.elastic.apm.agent.servlet.ServletApiAdvice.onServletEnter( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest)"
                ],
                "apm-agent-plugins/apm-spring-resttemplate/apm-spring-resttemplate-plugin/src/main/java/co/elastic/apm/agent/resttemplate/SpringRestTemplateAdvice.java": [
                    "public static Object co.elastic.apm.agent.resttemplate.SpringRestTemplateAdvice.beforeExecute(@Advice.This ClientHttpRequest request)"
                ],
                "apm-agent-plugins/apm-spring-webmvc/apm-spring-webmvc-spring5/src/main/java/co/elastic/apm/agent/springwebmvc/ViewRenderInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.springwebmvc.ViewRenderInstrumentation.beforeExecute(@Advice.This Object thiz)"
                ],
                "apm-agent-plugins/apm-struts-plugin/src/main/java/co/elastic/apm/agent/struts/ActionProxyAdvice.java": [
                    "public static Object co.elastic.apm.agent.struts.ActionProxyAdvice.onEnterExecute(@Advice.This ActionProxy actionProxy)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebClientHelper.java": [
                    "public void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.followRedirect(HttpContext<?> httpContext, HttpClientRequest httpRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e2b3ecb24c1a7f2b77a7845fe9046b1fd4ef5d1c",
        "previous_commit": "1c898918878bfd7876ac24e10cd52752c791e1cb",
        "date": 1540972521,
        "releases": {
            "previous": "e2b3ecb24c1a7f2b77a7845fe9046b1fd4ef5d1c",
            "next": "e2b3ecb24c1a7f2b77a7845fe9046b1fd4ef5d1c"
        },
        "commit_message": "OT: preserve SpanContext after finish (#251)\n\n- Adds ability to activate a TraceContext\r\n- Enables context propagation in async scenarios\r\n- Introduces ChildContextCreator abstraction\r\n- Move Clock from AbstractSpan to TraceContext\r\n- Remove AbstractSpan#getTransaction\r\n- Use a non-recycled TraceContext for OT's SpanContext\r\n- Add warning logs if calling methods on an already finished span\r\n- Fix race condition when activating and concurrently finishing span\r\n\r\ncloses #179",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e2b3ecb24c1a7f2b77a7845fe9046b1fd4ef5d1c": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.currentSpan()",
                    "public void co.elastic.apm.impl.ElasticApmTracer.deactivate(AbstractSpan<?> span)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.currentTransaction()",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()",
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(@Nullable Throwable e)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan(AbstractSpan<?> parent, long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.resetState()",
                    "public void co.elastic.apm.impl.transaction.Span.doEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.impl.transaction.TraceContext.asChildOf(TraceContext parent)",
                    "public void co.elastic.apm.impl.transaction.TraceContext.resetState()",
                    "public void co.elastic.apm.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.impl.transaction.TraceContext.asRootSpan(Sampler sampler)",
                    "public boolean co.elastic.apm.impl.transaction.TraceContext.asChildOf(String traceParentHeader)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public static Span co.elastic.apm.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "private static AbstractSpan<?> co.elastic.apm.opentracing.impl.ApmSpanBuilderInstrumentation.createTransaction(Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public Transaction co.elastic.apm.servlet.ServletTransactionHelper.onBefore(String servletPath, String pathInfo, String requestURI, @Nullable String userAgentHeader, @Nullable String traceContextHeader)",
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScope.java": [
                    "public void co.elastic.apm.opentracing.ApmScope.close()"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScopeManager.java": [
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.active()",
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.activate(@Nonnull Span span, boolean finishSpanOnClose)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpan.java": [
                    "Object co.elastic.apm.opentracing.ApmSpan.getSpan()",
                    "public String co.elastic.apm.opentracing.ApmSpan.getBaggageItem(String key)",
                    "public ApmSpan co.elastic.apm.opentracing.ApmSpan.log(long timestampMicroseconds, Map<String, ?> fields)",
                    "public String co.elastic.apm.opentracing.ApmSpan.toString()",
                    "public void co.elastic.apm.opentracing.ApmSpan.finish(long finishMicros)",
                    "public void co.elastic.apm.opentracing.ApmSpan.finish()",
                    "public ApmSpan co.elastic.apm.opentracing.ApmSpan.log(Map<String, ?> fields)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpanBuilder.java": [
                    "private ApmSpan co.elastic.apm.opentracing.ApmSpanBuilder.startApmSpan()",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.asChildOf(Span parent)",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.asChildOf(SpanContext parent)"
                ]
            },
            "1c898918878bfd7876ac24e10cd52752c791e1cb": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.currentSpan()",
                    "public void co.elastic.apm.impl.ElasticApmTracer.deactivate(AbstractSpan<?> span)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.currentTransaction()",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()",
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(@Nullable Throwable e)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan(AbstractSpan<?> parent, long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.resetState()",
                    "public void co.elastic.apm.impl.transaction.Span.doEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.impl.transaction.TraceContext.asChildOf(TraceContext parent)",
                    "public void co.elastic.apm.impl.transaction.TraceContext.resetState()",
                    "public void co.elastic.apm.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.impl.transaction.TraceContext.asRootSpan(Sampler sampler)",
                    "public boolean co.elastic.apm.impl.transaction.TraceContext.asChildOf(String traceParentHeader)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public static Span co.elastic.apm.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "private static AbstractSpan<?> co.elastic.apm.opentracing.impl.ApmSpanBuilderInstrumentation.createTransaction(Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public Transaction co.elastic.apm.servlet.ServletTransactionHelper.onBefore(String servletPath, String pathInfo, String requestURI, @Nullable String userAgentHeader, @Nullable String traceContextHeader)",
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScope.java": [
                    "public void co.elastic.apm.opentracing.ApmScope.close()"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScopeManager.java": [
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.active()",
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.activate(@Nonnull Span span, boolean finishSpanOnClose)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpan.java": [
                    "Object co.elastic.apm.opentracing.ApmSpan.getSpan()",
                    "public String co.elastic.apm.opentracing.ApmSpan.getBaggageItem(String key)",
                    "public ApmSpan co.elastic.apm.opentracing.ApmSpan.log(long timestampMicroseconds, Map<String, ?> fields)",
                    "public String co.elastic.apm.opentracing.ApmSpan.toString()",
                    "public void co.elastic.apm.opentracing.ApmSpan.finish(long finishMicros)",
                    "public void co.elastic.apm.opentracing.ApmSpan.finish()",
                    "public ApmSpan co.elastic.apm.opentracing.ApmSpan.log(Map<String, ?> fields)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpanBuilder.java": [
                    "private ApmSpan co.elastic.apm.opentracing.ApmSpanBuilder.startApmSpan()",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.asChildOf(Span parent)",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.asChildOf(SpanContext parent)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ec2b16c6d5453f21de6478ab166443705eb84dc9",
        "previous_commit": "f49486c5fa62f77700bb1df87e4941681742e318",
        "date": 1588748870,
        "releases": {
            "previous": "ec2b16c6d5453f21de6478ab166443705eb84dc9",
            "next": "ec2b16c6d5453f21de6478ab166443705eb84dc9"
        },
        "commit_message": "Add span_min_duration flag (#1150)\n\ncloses #1094\r\n\r\nMakes only AbstractSpan de/activate-able\r\n- TraceContext can't be de/activated anymore, only AbstractSpans\r\n  - Removes lots of baggage in the internal API\r\n  - This was only used to reduce (but not avoid) allocations when using the OpenTracing API bridge\r\n  - Historically, activating a TraceContext was also needed when activating an ended span.\r\n    Nowadays, we use reference counting to determine whether it's safe to recycle a span rather than recycling after it's ended and serialized.\r\n- Avoids context propagation directly via TraceContext which would not mark the span as non-discardable\r\n- Makes Spans used in OT API bridge non-recyclable\r\n  - Previously, TraceContext has been used for finished spans\r\n  - Now, TraceContext can't be activated anymore,\r\n    thus spans are GC'd rather than recycled so that OT spans can be activated after they have been finished",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ec2b16c6d5453f21de6478ab166443705eb84dc9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmInstrumentation.java": [
                    "public static Span co.elastic.apm.agent.bci.ElasticApmInstrumentation.createExitSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> parent, @Nullable ClassLoader initiatingClassLoader)",
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()",
                    "public <T> Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public <T> Span co.elastic.apm.agent.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/SpanCount.java": [
                    "public void co.elastic.apm.agent.impl.transaction.SpanCount.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "private void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(byte[] buffer, @Nullable String serviceName)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.serialize(byte[] buffer)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.deserialize(byte[] buffer, @Nullable String serviceName)",
                    "public Span co.elastic.apm.agent.impl.transaction.TraceContext.createSpan()",
                    "public Span co.elastic.apm.agent.impl.transaction.TraceContext.createSpan(long epochMicros)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()",
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext child, ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.onTransactionStart(boolean startedAsChild, long epochMicros, Sampler sampler)",
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanCount(final SpanCount spanCount)"
                ],
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/helper/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.helper.HttpAsyncRequestProducerWrapper.generateRequest()"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.es.restclient.ElasticsearchRestClientInstrumentationHelperImpl.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/helper/GrpcHelperImpl.java": [
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.startSpan(ClientCall<?, ?> clientCall, ClientCall.Listener<?> responseListener, Metadata headers)"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-common/src/main/java/co/elastic/apm/agent/hibernate/search/HibernateSearchHelper.java": [
                    "public static Span co.elastic.apm.agent.hibernate.search.HibernateSearchHelper.createAndActivateSpan(final ElasticApmTracer tracer, final String methodName, final String query)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static Span co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHelperImpl.onSendStart(ProducerRecord record)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHeadersHelperImpl.java": [
                    "public void co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelperImpl.setOutgoingTraceContextHeaders(Span span, ProducerRecord producerRecord)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessStartInstrumentation.java": [
                    "public static void co.elastic.apm.agent.process.ProcessStartInstrumentation.onExit(@Advice.This ProcessBuilder processBuilder, @Advice.Return Process process, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.stopProfiling(SamplingProfiler samplingProfiler)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processTraces()"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-redis-common/src/main/java/co/elastic/apm/agent/redis/RedisSpanUtils.java": [
                    "public static Span co.elastic.apm.agent.redis.RedisSpanUtils.createRedisSpan(String command)"
                ]
            },
            "f49486c5fa62f77700bb1df87e4941681742e318": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmInstrumentation.java": [
                    "public static Span co.elastic.apm.agent.bci.ElasticApmInstrumentation.createExitSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()",
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable TraceContextHolder<?> parent, @Nullable ClassLoader initiatingClassLoader)",
                    "public <T> Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public <T> Span co.elastic.apm.agent.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/SpanCount.java": [
                    "public void co.elastic.apm.agent.impl.transaction.SpanCount.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "private void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(byte[] buffer, @Nullable String serviceName)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.serialize(byte[] buffer)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.deserialize(byte[] buffer, @Nullable String serviceName)",
                    "public Span co.elastic.apm.agent.impl.transaction.TraceContext.createSpan()",
                    "public Span co.elastic.apm.agent.impl.transaction.TraceContext.createSpan(long epochMicros)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()",
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext child, ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.onTransactionStart(boolean startedAsChild, long epochMicros, Sampler sampler)",
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanCount(final SpanCount spanCount)"
                ],
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/helper/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.helper.HttpAsyncRequestProducerWrapper.generateRequest()"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.es.restclient.ElasticsearchRestClientInstrumentationHelperImpl.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/helper/GrpcHelperImpl.java": [
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.startSpan(ClientCall<?, ?> clientCall, ClientCall.Listener<?> responseListener, Metadata headers)"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-common/src/main/java/co/elastic/apm/agent/hibernate/search/HibernateSearchHelper.java": [
                    "public static Span co.elastic.apm.agent.hibernate.search.HibernateSearchHelper.createAndActivateSpan(final ElasticApmTracer tracer, final String methodName, final String query)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static Span co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHelperImpl.onSendStart(ProducerRecord record)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHeadersHelperImpl.java": [
                    "public void co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelperImpl.setOutgoingTraceContextHeaders(Span span, ProducerRecord producerRecord)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessStartInstrumentation.java": [
                    "public static void co.elastic.apm.agent.process.ProcessStartInstrumentation.onExit(@Advice.This ProcessBuilder processBuilder, @Advice.Return Process process, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.stopProfiling(SamplingProfiler samplingProfiler)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processTraces()"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-redis-common/src/main/java/co/elastic/apm/agent/redis/RedisSpanUtils.java": [
                    "public static Span co.elastic.apm.agent.redis.RedisSpanUtils.createRedisSpan(String command)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a43c21b70c93a67275ef7275c1c291404956bde6",
        "previous_commit": "0035152f9f8b3f9e26cab458b917c92e72d6a1c3",
        "date": 1643270652,
        "releases": {
            "previous": "a43c21b70c93a67275ef7275c1c291404956bde6",
            "next": "a43c21b70c93a67275ef7275c1c291404956bde6"
        },
        "commit_message": "Added support for overwriting the service version per classloader (#1726)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a43c21b70c93a67275ef7275c1c291404956bde6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> parent, @Nullable ClassLoader initiatingClassLoader)",
                    "private void co.elastic.apm.agent.impl.ElasticApmTracer.afterTransactionStart(@Nullable ClassLoader initiatingClassLoader, Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.deserialize(byte[] buffer, @Nullable String serviceName, @Nullable String serviceVersion)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()",
                    "private void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(byte[] buffer, @Nullable String serviceName, @Nullable String serviceVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.trackMetrics()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/Labels.java": [
                    "public void co.elastic.apm.agent.metrics.Mutable.resetState()",
                    "public boolean co.elastic.apm.agent.metrics.AbstractBase.equals(Object o)",
                    "public boolean co.elastic.apm.agent.metrics.AbstractBase.isEmpty()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context, TraceContext traceContext)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeServiceNameWithFramework(@Nullable final Transaction transaction, final TraceContext traceContext, final ServiceOrigin serviceOrigin)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistryReporter.java": [
                    "public void co.elastic.apm.agent.report.serialize.MetricRegistryReporter.report(Map<? extends Labels, MetricSet> metricSets)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "private boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serialize(MetricSet metricSet, String serviceName, String serviceVersion, JsonWriter jw)",
                    "private static boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serialize(MetricSet metricSet, long epochMicros, String serviceName, String serviceVersion, StringBuilder replaceBuilder, JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "public static CallTree.Root co.elastic.apm.agent.profiler.CallTree.createRoot(ObjectPool<CallTree.Root> rootPool, byte[] traceContext, @Nullable String serviceName, @Nullable String serviceVersion, long nanoTime)",
                    "public void co.elastic.apm.agent.profiler.CallTree.addStackTrace(ElasticApmTracer tracer, List<StackFrame> stackTrace, long nanoTime, ObjectPool<CallTree> callTreePool, long minDurationNs)",
                    "private void co.elastic.apm.agent.profiler.CallTree.set(byte[] traceContext, @Nullable String serviceName, @Nullable String serviceVersion, long nanoTime)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.set(TraceContext traceContext, long threadId, boolean activation, @Nullable TraceContext previousContext, long nanoTime)",
                    "private TraceContext co.elastic.apm.agent.profiler.SamplingProfiler.deserialize(SamplingProfiler samplingProfiler, byte[] traceContextBuffer)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.deserialize(ByteBuffer buf)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.serialize(ByteBuffer buf)",
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.startProfiling(SamplingProfiler samplingProfiler)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public static void co.elastic.apm.agent.servlet.ServletTransactionHelper.determineServiceName(@Nullable String servletContextName, @Nullable ClassLoader servletContextClassLoader, @Nullable String contextPath)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            },
            "0035152f9f8b3f9e26cab458b917c92e72d6a1c3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> parent, @Nullable ClassLoader initiatingClassLoader)",
                    "private void co.elastic.apm.agent.impl.ElasticApmTracer.afterTransactionStart(@Nullable ClassLoader initiatingClassLoader, Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "private void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(byte[] buffer, @Nullable String serviceName)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.deserialize(byte[] buffer, @Nullable String serviceName)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.trackMetrics()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/Labels.java": [
                    "public void co.elastic.apm.agent.metrics.Mutable.resetState()",
                    "public boolean co.elastic.apm.agent.metrics.AbstractBase.equals(Object o)",
                    "public boolean co.elastic.apm.agent.metrics.AbstractBase.isEmpty()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context, TraceContext traceContext)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeServiceNameWithFramework(@Nullable final Transaction transaction, final TraceContext traceContext, final ServiceOrigin serviceOrigin)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistryReporter.java": [
                    "public void co.elastic.apm.agent.report.serialize.MetricRegistryReporter.report(Map<? extends Labels, MetricSet> metricSets)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "private boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serialize(MetricSet metricSet, String serviceName, JsonWriter jw)",
                    "private static boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serialize(MetricSet metricSet, long epochMicros, String serviceName, StringBuilder replaceBuilder, JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "public void co.elastic.apm.agent.profiler.CallTree.addStackTrace(ElasticApmTracer tracer, List<StackFrame> stackTrace, long nanoTime, ObjectPool<CallTree> callTreePool, long minDurationNs)",
                    "private void co.elastic.apm.agent.profiler.CallTree.set(byte[] traceContext, @Nullable String serviceName, long nanoTime)",
                    "public static CallTree.Root co.elastic.apm.agent.profiler.CallTree.createRoot(ObjectPool<CallTree.Root> rootPool, byte[] traceContext, @Nullable String serviceName, long nanoTime)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.set(TraceContext traceContext, long threadId, boolean activation, @Nullable TraceContext previousContext, long nanoTime)",
                    "private TraceContext co.elastic.apm.agent.profiler.SamplingProfiler.deserialize(SamplingProfiler samplingProfiler, byte[] traceContextBuffer)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.deserialize(ByteBuffer buf)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.serialize(ByteBuffer buf)",
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.startProfiling(SamplingProfiler samplingProfiler)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public static void co.elastic.apm.agent.servlet.ServletTransactionHelper.determineServiceName(@Nullable String servletContextName, @Nullable ClassLoader servletContextClassLoader, @Nullable String contextPath)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3365a0e47948355de849535f70120a23115ecacf",
        "previous_commit": "d61db968c151b1acab77f40a26848bb8a366970a",
        "date": 1654096259,
        "releases": {
            "previous": "3365a0e47948355de849535f70120a23115ecacf",
            "next": "3365a0e47948355de849535f70120a23115ecacf"
        },
        "commit_message": "Replace/extend resource dest. with service target.{name.type} (#2578)\n\n* add Service context\r\n\r\n* simpler and less generic design\r\n\r\n* fix resource dest tests\r\n\r\n* use new API in jdbc plugin\r\n\r\n* add custom assertions for service target\r\n\r\n* add service target+tests\r\n\r\n* migrate to new API + tests with new API/assert\r\n\r\n* simplify & cleanup WIP\r\n\r\n* fix small json serialization\r\n\r\n* migrate compressed spans\r\n\r\n* migrate dropped spans stats\r\n\r\n* remove Destination.Service\r\n\r\n* add assert for http exit spans\r\n\r\n* update json test\r\n\r\n* add assertions on destination + update API tests\r\n\r\n* add few tests+only use resource as fallback\r\n\r\n* fix service name json serialization\r\n\r\n* fix http host for OTel bridge\r\n\r\n* align otel gherkin spec\r\n\r\n* simplify otel mapping for service target\r\n\r\n* slightly enhance ServiceTarget API + grpc\r\n\r\n* small javadoc update\r\n\r\n* add entry point to API + user override\r\n\r\n* fix javadoc\r\n\r\n* fix merge issues + cleanup\r\n\r\n* simplify OTel spec mapping for corner case\r\n\r\n* document new API\r\n\r\n* fix mongo db name\r\n\r\n* fix json serialization\r\n\r\n* fix few other corner cases\r\n\r\n* slightly better deprecated API compat.\r\n\r\n* post-review changes\r\n\r\n* use stringbuilder copy in dropped stats\r\n\r\n* fix missing copyright notice\r\n\r\n* fix NPE in tests\r\n\r\n* deprecate old API + remove it from docs\r\n\r\n* fix doc links\r\n\r\n* keep check on legacy resource for consistency\r\n\r\n* improve test assertions\r\n\r\n* test expected resource\r\n\r\n* fix typo\r\n\r\n* update changelog\r\n\r\n* post-review perf improvement\r\n\r\n* fix minor post-review\r\n\r\n* enhance and split test for clarity\r\n\r\n* improve dropped spans tests\r\n\r\n* remove todo",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3365a0e47948355de849535f70120a23115ecacf": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Destination.java": [
                    "public void co.elastic.apm.agent.impl.context.Destination.resetState()",
                    "public boolean co.elastic.apm.agent.impl.context.Destination.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/SpanContext.java": [
                    "public void co.elastic.apm.agent.impl.context.SpanContext.resetState()",
                    "public boolean co.elastic.apm.agent.impl.context.SpanContext.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/DroppedSpanStats.java": [
                    "public boolean co.elastic.apm.agent.impl.transaction.DroppedSpanStats.equals(Object o)",
                    "public void co.elastic.apm.agent.impl.transaction.DroppedSpanStats.captureDroppedSpan(Span span)",
                    "public int co.elastic.apm.agent.impl.transaction.DroppedSpanStats.hashCode()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "private boolean co.elastic.apm.agent.impl.transaction.Span.tryToCompressComposite(Span sibling)",
                    "private boolean co.elastic.apm.agent.impl.transaction.Span.tryToCompressRegular(Span sibling)",
                    "public void co.elastic.apm.agent.impl.transaction.Span.beforeEnd(long epochMicros)",
                    "private boolean co.elastic.apm.agent.impl.transaction.Span.isSameKind(Span other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeDroppedSpanStats(final DroppedSpanStats droppedSpanStats)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context, TraceContext traceContext)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeLabels(Labels labels, final String serviceName, final String serviceVersion, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-cassandra/apm-cassandra-core-plugin/src/main/java/co/elastic/apm/agent/cassandra/CassandraHelper.java": [
                    "public Span co.elastic.apm.agent.cassandra.CassandraHelper.startCassandraSpan(@Nullable String query, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/helper/DubboTraceHelper.java": [
                    "public static Span co.elastic.apm.agent.dubbo.helper.DubboTraceHelper.createConsumerSpan(ElasticApmTracer tracer, Class<?> apiClass, String methodName, InetSocketAddress remoteAddress)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public Span co.elastic.apm.agent.grpc.GrpcHelper.onClientCallCreationEntry(@Nullable AbstractSpan<?> parent, @Nullable MethodDescriptor<?, ?> method, @Nullable String authority)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/HttpClientHelper.java": [
                    "public static void co.elastic.apm.agent.httpclient.HttpClientHelper.setDestinationServiceDetails(Span span, @Nullable String scheme, @Nullable CharSequence host, int port)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelper.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHelper.java": [
                    "public Span co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHelper.onSendStart(ProducerRecord<?, ?> record)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelSpan.java": [
                    "private void co.elastic.apm.agent.opentelemetry.sdk.OTelSpan.onSpanEnd(co.elastic.apm.agent.impl.transaction.Span s)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-plugin/src/main/java/co/elastic/apm/agent/rabbitmq/ChannelInstrumentation.java": [
                    "public static void co.elastic.apm.agent.rabbitmq.ChannelInstrumentation.captureDestination(String exchange, InetAddress brokerAddress, int port, Span span)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-redis-common/src/main/java/co/elastic/apm/agent/redis/RedisSpanUtils.java": [
                    "public static Span co.elastic.apm.agent.redis.RedisSpanUtils.createRedisSpan(String command)"
                ]
            },
            "d61db968c151b1acab77f40a26848bb8a366970a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Destination.java": [
                    "public void co.elastic.apm.agent.impl.context.Destination.resetState()",
                    "public boolean co.elastic.apm.agent.impl.context.Destination.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/SpanContext.java": [
                    "public void co.elastic.apm.agent.impl.context.SpanContext.resetState()",
                    "public boolean co.elastic.apm.agent.impl.context.SpanContext.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/DroppedSpanStats.java": [
                    "public boolean co.elastic.apm.agent.impl.transaction.DroppedSpanStats.equals(Object o)",
                    "public void co.elastic.apm.agent.impl.transaction.DroppedSpanStats.captureDroppedSpan(Span span)",
                    "public int co.elastic.apm.agent.impl.transaction.DroppedSpanStats.hashCode()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "private boolean co.elastic.apm.agent.impl.transaction.Span.tryToCompressComposite(Span sibling)",
                    "private boolean co.elastic.apm.agent.impl.transaction.Span.tryToCompressRegular(Span sibling)",
                    "public void co.elastic.apm.agent.impl.transaction.Span.beforeEnd(long epochMicros)",
                    "private boolean co.elastic.apm.agent.impl.transaction.Span.isSameKind(Span other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeDroppedSpanStats(final DroppedSpanStats droppedSpanStats)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context, TraceContext traceContext)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeLabels(Labels labels, final String serviceName, final String serviceVersion, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-cassandra/apm-cassandra-core-plugin/src/main/java/co/elastic/apm/agent/cassandra/CassandraHelper.java": [
                    "public Span co.elastic.apm.agent.cassandra.CassandraHelper.startCassandraSpan(@Nullable String query, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/helper/DubboTraceHelper.java": [
                    "public static Span co.elastic.apm.agent.dubbo.helper.DubboTraceHelper.createConsumerSpan(ElasticApmTracer tracer, Class<?> apiClass, String methodName, InetSocketAddress remoteAddress)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public Span co.elastic.apm.agent.grpc.GrpcHelper.onClientCallCreationEntry(@Nullable AbstractSpan<?> parent, @Nullable MethodDescriptor<?, ?> method, @Nullable String authority)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/HttpClientHelper.java": [
                    "public static void co.elastic.apm.agent.httpclient.HttpClientHelper.setDestinationServiceDetails(Span span, @Nullable String scheme, @Nullable CharSequence host, int port)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelper.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHelper.java": [
                    "public Span co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHelper.onSendStart(ProducerRecord<?, ?> record)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelSpan.java": [
                    "private void co.elastic.apm.agent.opentelemetry.sdk.OTelSpan.onSpanEnd(co.elastic.apm.agent.impl.transaction.Span s)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-plugin/src/main/java/co/elastic/apm/agent/rabbitmq/ChannelInstrumentation.java": [
                    "public static void co.elastic.apm.agent.rabbitmq.ChannelInstrumentation.captureDestination(String exchange, InetAddress brokerAddress, int port, Span span)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-redis-common/src/main/java/co/elastic/apm/agent/redis/RedisSpanUtils.java": [
                    "public static Span co.elastic.apm.agent.redis.RedisSpanUtils.createRedisSpan(String command)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b09988060dd60cc4956d02b317d73f13fd36b147",
        "previous_commit": "e266b9816d7d94574ec1a7fa524ef1184d9309da",
        "date": 1612867178,
        "releases": {
            "previous": "b09988060dd60cc4956d02b317d73f13fd36b147",
            "next": "b09988060dd60cc4956d02b317d73f13fd36b147"
        },
        "commit_message": "Implement outcome for transactions & spans (#1613)\n\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b09988060dd60cc4956d02b317d73f13fd36b147": {
                "apm-agent-api/src/main/java/co/elastic/apm/api/NoopSpan.java": [
                    "public Span startSpan()",
                    "public Span createSpan()",
                    "public Span setStartTimestamp(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.beforeEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.beforeEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ],
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/ApacheHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.ApacheHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable CloseableHttpResponse response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/LegacyApacheHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.LegacyApacheHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable HttpResponse response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/helper/FutureCallbackWrapper.java": [
                    "private void co.elastic.apm.agent.httpclient.helper.FutureCallbackWrapper<T>.finishSpan(@Nullable Exception e)"
                ],
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/helper/AsyncCallbackCreatorImpl.java": [
                    "public void co.elastic.apm.agent.dubbo.helper.AsyncCallbackCreatorImpl.accept(Result result, Throwable t)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ChannelInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.grpc.ChannelInstrumentation.getTypeMatcherPreFilter()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ClientCallImplInstrumentation.java": [
                    "public static void co.elastic.apm.agent.grpc.ClientCallImplInstrumentation.onExit(@Advice.This ClientCall.Listener<?> listener, @Advice.Thrown @Nullable Throwable thrown, @Advice.Enter @Nullable Object span)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.clientCallStartExit(ClientCall.Listener<?> listener, @Nullable Throwable thrown)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallListenerInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.getMethodMatcher()",
                    "public static void co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.onExit(@Advice.Thrown @Nullable Throwable thrown, @Advice.This ServerCall.Listener<?> listener, @Advice.Enter @Nullable Object transaction)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttp3ClientAsyncInstrumentation.java": [
                    "public void co.elastic.apm.agent.okhttp.OkHttp3ClientAsyncInstrumentation.onFailure(Call call, IOException e)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttp3ClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.okhttp.OkHttp3ClientInstrumentation.onAfterExecute(@Advice.Return @Nullable okhttp3.Response response, @Advice.Thrown @Nullable Throwable t, @Advice.Enter @Nonnull Object[] enter)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttpClientAsyncInstrumentation.java": [
                    "public void co.elastic.apm.agent.okhttp.OkHttpClientAsyncInstrumentation.onFailure(Request req, IOException e)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.okhttp.OkHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable com.squareup.okhttp.Response response, @Advice.Thrown @Nullable Throwable t, @Advice.Enter @Nonnull Object[] enter)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.agent.opentracing.impl.ApmSpanInstrumentation.handleSpecialTransactionTag(Transaction transaction, String key, Object value)",
                    "private static boolean co.elastic.apm.agent.opentracing.impl.ApmSpanInstrumentation.handleSpecialSpanTag(Span span, String key, Object value)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessHelper.java": [
                    "void co.elastic.apm.agent.process.ProcessHelper.doEndProcess(Process process, boolean checkTerminatedProcess)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.doOnAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, boolean overrideStatusCodeOnThrowable, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)"
                ],
                "apm-agent-plugins/apm-spring-resttemplate/apm-spring-resttemplate-plugin/src/main/java/co/elastic/apm/agent/resttemplate/SpringRestTemplateAdvice.java": [
                    "public static void co.elastic.apm.agent.resttemplate.SpringRestTemplateAdvice.afterExecute(@Advice.Return @Nullable ClientHttpResponse clientHttpResponse, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ]
            },
            "e266b9816d7d94574ec1a7fa524ef1184d9309da": {
                "apm-agent-api/src/main/java/co/elastic/apm/api/NoopSpan.java": [
                    "public Span startSpan()",
                    "public Span createSpan()",
                    "public Span setStartTimestamp(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.beforeEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.beforeEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ],
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/ApacheHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.ApacheHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable CloseableHttpResponse response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/LegacyApacheHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.LegacyApacheHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable HttpResponse response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/helper/FutureCallbackWrapper.java": [
                    "private void co.elastic.apm.agent.httpclient.helper.FutureCallbackWrapper<T>.finishSpan(@Nullable Exception e)"
                ],
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/helper/AsyncCallbackCreatorImpl.java": [
                    "public void co.elastic.apm.agent.dubbo.helper.AsyncCallbackCreatorImpl.accept(Result result, Throwable t)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ChannelInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.grpc.ChannelInstrumentation.getTypeMatcherPreFilter()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ClientCallImplInstrumentation.java": [
                    "public static void co.elastic.apm.agent.grpc.ClientCallImplInstrumentation.onExit(@Advice.This ClientCall.Listener<?> listener, @Advice.Thrown Throwable thrown, @Advice.Enter @Nullable Object span)",
                    "public static void co.elastic.apm.agent.grpc.ClientCallImplInstrumentation.onExit(@Advice.This ClientCall.Listener<?> listener, @Advice.Thrown @Nullable Throwable thrown, @Advice.Enter @Nullable Object span)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.clientCallStartExit(ClientCall.Listener<?> listener, @Nullable Throwable thrown)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallListenerInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.getMethodMatcher()",
                    "public static void co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.onExit(@Advice.Thrown @Nullable Throwable thrown, @Advice.This ServerCall.Listener<?> listener, @Advice.Enter @Nullable Object transaction)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttp3ClientAsyncInstrumentation.java": [
                    "public void co.elastic.apm.agent.okhttp.OkHttp3ClientAsyncInstrumentation.onFailure(Call call, IOException e)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttp3ClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.okhttp.OkHttp3ClientInstrumentation.onAfterExecute(@Advice.Return @Nullable okhttp3.Response response, @Advice.Thrown @Nullable Throwable t, @Advice.Enter @Nonnull Object[] enter)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttpClientAsyncInstrumentation.java": [
                    "public void co.elastic.apm.agent.okhttp.OkHttpClientAsyncInstrumentation.onFailure(Request req, IOException e)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.okhttp.OkHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable com.squareup.okhttp.Response response, @Advice.Thrown @Nullable Throwable t, @Advice.Enter @Nonnull Object[] enter)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.agent.opentracing.impl.ApmSpanInstrumentation.handleSpecialTransactionTag(Transaction transaction, String key, Object value)",
                    "private static boolean co.elastic.apm.agent.opentracing.impl.ApmSpanInstrumentation.handleSpecialSpanTag(Span span, String key, Object value)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessHelper.java": [
                    "void co.elastic.apm.agent.process.ProcessHelper.doEndProcess(Process process, boolean checkTerminatedProcess)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.doOnAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, boolean overrideStatusCodeOnThrowable, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)"
                ],
                "apm-agent-plugins/apm-spring-resttemplate/apm-spring-resttemplate-plugin/src/main/java/co/elastic/apm/agent/resttemplate/SpringRestTemplateAdvice.java": [
                    "public static void co.elastic.apm.agent.resttemplate.SpringRestTemplateAdvice.afterExecute(@Advice.Return @Nullable ClientHttpResponse clientHttpResponse, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "349007704a068ab7ca69b4763b7d49bda9410d7c",
        "previous_commit": "0d9ce57515680c8cbbdbac5c48a25351409a2497",
        "date": 1557158205,
        "releases": {
            "previous": "349007704a068ab7ca69b4763b7d49bda9410d7c",
            "next": "349007704a068ab7ca69b4763b7d49bda9410d7c"
        },
        "commit_message": "Recycle via reference counting (#587)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "349007704a068ab7ca69b4763b7d49bda9410d7c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.activate(TraceContextHolder<?> holder)",
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.noopTransaction()",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endTransaction(Transaction transaction)",
                    "public <T> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startTransaction(TraceContext.ChildContextCreator<T> childContextCreator, @Nullable T parent, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(TraceContextHolder<?> holder)",
                    "public <T> Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/async/SpanInScopeBaseWrapper.java": [
                    "protected void co.elastic.apm.agent.impl.async.SpanInScopeBaseWrapper.afterDelegation(final AbstractSpan<?> localSpan, boolean activated)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/async/SpanInScopeCallableWrapper.java": [
                    "public SpanInScopeCallableWrapper<V> co.elastic.apm.agent.impl.async.SpanInScopeCallableWrapper<V>.wrap(Callable<V> delegate, AbstractSpan<?> span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/async/SpanInScopeRunnableWrapper.java": [
                    "public SpanInScopeRunnableWrapper co.elastic.apm.agent.impl.async.SpanInScopeRunnableWrapper.wrap(Runnable delegate, AbstractSpan<?> span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public String co.elastic.apm.agent.impl.transaction.Span.toString()",
                    "public void co.elastic.apm.agent.impl.transaction.Span.resetState()",
                    "public <T> Span co.elastic.apm.agent.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros, boolean dropped)",
                    "public void co.elastic.apm.agent.impl.transaction.Span.doEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.agent.impl.transaction.Transaction.startNoop()",
                    "public String co.elastic.apm.agent.impl.transaction.Transaction.toString()",
                    "public <T> Transaction co.elastic.apm.agent.impl.transaction.Transaction.start(TraceContext.ChildContextCreator<T> childContextCreator, @Nullable T parent, long epochMicros, Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(Transaction transaction)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.writeEvent(ReportingEvent event)"
                ]
            },
            "0d9ce57515680c8cbbdbac5c48a25351409a2497": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.activate(TraceContextHolder<?> holder)",
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.noopTransaction()",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endTransaction(Transaction transaction)",
                    "public <T> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startTransaction(TraceContext.ChildContextCreator<T> childContextCreator, @Nullable T parent, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(TraceContextHolder<?> holder)",
                    "public <T> Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/async/SpanInScopeBaseWrapper.java": [
                    "protected void co.elastic.apm.agent.impl.async.SpanInScopeBaseWrapper.afterDelegation(final AbstractSpan<?> localSpan, boolean activated)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/async/SpanInScopeCallableWrapper.java": [
                    "public SpanInScopeCallableWrapper<V> co.elastic.apm.agent.impl.async.SpanInScopeCallableWrapper<V>.wrap(Callable<V> delegate, AbstractSpan<?> span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/async/SpanInScopeRunnableWrapper.java": [
                    "public SpanInScopeRunnableWrapper co.elastic.apm.agent.impl.async.SpanInScopeRunnableWrapper.wrap(Runnable delegate, AbstractSpan<?> span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public String co.elastic.apm.agent.impl.transaction.Span.toString()",
                    "public void co.elastic.apm.agent.impl.transaction.Span.resetState()",
                    "public <T> Span co.elastic.apm.agent.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros, boolean dropped)",
                    "public void co.elastic.apm.agent.impl.transaction.Span.doEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.agent.impl.transaction.Transaction.startNoop()",
                    "public String co.elastic.apm.agent.impl.transaction.Transaction.toString()",
                    "public <T> Transaction co.elastic.apm.agent.impl.transaction.Transaction.start(TraceContext.ChildContextCreator<T> childContextCreator, @Nullable T parent, long epochMicros, Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(Transaction transaction)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.writeEvent(ReportingEvent event)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "50bb1f1632da89c5d4f029e7d7b48a8d4d45c5ef",
        "previous_commit": "7a8426fe8b8ab29c42eb57c2a5bd9a6f73ad2a68",
        "date": 1669208693,
        "releases": {
            "previous": "50bb1f1632da89c5d4f029e7d7b48a8d4d45c5ef",
            "next": "50bb1f1632da89c5d4f029e7d7b48a8d4d45c5ef"
        },
        "commit_message": "Added reporter health metrics (#2864)\n\n\r\nCo-authored-by: jackshirazi <jacks@fasterj.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "50bb1f1632da89c5d4f029e7d7b48a8d4d45c5ef": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java": [
                    "public void co.elastic.apm.agent.metrics.MetricRegistry.flipPhaseAndReport(@Nullable MetricsReporter metricsReporter)",
                    "public void co.elastic.apm.agent.metrics.MetricRegistry.incrementCounter(String name, Labels labels)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricSet.java": [
                    "public boolean co.elastic.apm.agent.metrics.MetricSet.hasContent()",
                    "public void co.elastic.apm.agent.metrics.MetricSet.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected void co.elastic.apm.agent.report.AbstractIntakeApiHandler.endRequest()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(Transaction transaction)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(JsonWriter jsonWriter)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(ErrorCapture error)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleConnectionError(ReportingEvent event, Exception e)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleIntakeEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.dispatchEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.writeEvent(ReportingEvent event)",
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.init(ApmServerReporter reporter)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.agent.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, ApmServerClient apmServerClient, Future<MetaData> metaData, ReporterMonitor monitor)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReportingEvent.java": [
                    "public ReportingEventType co.elastic.apm.agent.report.ReportingEvent.getType()",
                    "public void co.elastic.apm.agent.report.ReportingEvent.setJsonWriter(@Nullable JsonWriter jsonWriter)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "private static boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serialize(MetricSet metricSet, long epochMicros, String serviceName, String serviceVersion, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            },
            "7a8426fe8b8ab29c42eb57c2a5bd9a6f73ad2a68": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java": [
                    "public void co.elastic.apm.agent.metrics.MetricRegistry.flipPhaseAndReport(@Nullable MetricsReporter metricsReporter)",
                    "public void co.elastic.apm.agent.metrics.MetricRegistry.incrementCounter(String name, Labels labels)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricSet.java": [
                    "public boolean co.elastic.apm.agent.metrics.MetricSet.hasContent()",
                    "public void co.elastic.apm.agent.metrics.MetricSet.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "public void co.elastic.apm.agent.report.AbstractIntakeApiHandler.endRequest()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(Transaction transaction)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(JsonWriter jsonWriter)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(ErrorCapture error)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleConnectionError(ReportingEvent event, Exception e)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleIntakeEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.dispatchEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.writeEvent(ReportingEvent event)",
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.init(ApmServerReporter reporter)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.agent.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, ApmServerClient apmServerClient, Future<MetaData> metaData)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReportingEvent.java": [
                    "public ReportingEventType co.elastic.apm.agent.report.ReportingEvent.getType()",
                    "public void co.elastic.apm.agent.report.ReportingEvent.setJsonWriter(@Nullable JsonWriter jsonWriter)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "private static boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serialize(MetricSet metricSet, long epochMicros, String serviceName, String serviceVersion, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "30f5f3d1ca7deaadd8e156bea032b4da03e2e2c5",
        "previous_commit": "4c248af090d35cc97b8bc8b36744f15ae5236b91",
        "date": 1694005951,
        "releases": {
            "previous": "30f5f3d1ca7deaadd8e156bea032b4da03e2e2c5",
            "next": "30f5f3d1ca7deaadd8e156bea032b4da03e2e2c5"
        },
        "commit_message": "Replace binary propagation with UTF8 encoded text propagation (#3300)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "30f5f3d1ca7deaadd8e156bea032b4da03e2e2c5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Set<String> co.elastic.apm.agent.impl.ElasticApmTracer.getTraceHeaderNames()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Id.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Id.writeAsHex(JsonWriter jw)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(String traceParentHeader)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.accept(@Nullable String tracestateHeaderValue, TraceContext state)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeHexArray(String fieldName, @Nullable LongList longList)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIterableWrapper.java": [
                    "public Iterator<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.ConsumerRecordsIterableWrapper.iterator()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord<?, ?> co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsListWrapper.java": [
                    "public List<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.ConsumerRecordsListWrapper.subList(int fromIndex, int toIndex)",
                    "public Iterator<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.ConsumerRecordsListWrapper.iterator()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHeadersHelper.java": [
                    "public void co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.setOutgoingTraceContextHeaders(ElasticContext<?> toPropagate, ProducerRecord<?, ?> producerRecord)",
                    "public Iterator<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.wrapConsumerRecordIterator(Iterator<ConsumerRecord<?, ?>> consumerRecordIterator)",
                    "public Iterable<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.wrapConsumerRecordIterable(Iterable<ConsumerRecord<?, ?>> consumerRecordIterable)",
                    "public List<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.wrapConsumerRecordList(List<ConsumerRecord<?, ?>> consumerRecordList)",
                    "public void co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.removeTraceContextHeader(ProducerRecord<?, ?> producerRecord)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaRecordHeaderAccessor.java": [
                    "public void co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.setHeader(String headerName, byte[] headerValue, ProducerRecord record)",
                    "public void co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.remove(String headerName, ProducerRecord carrier)",
                    "public <S> void co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.forEach(String headerName, ConsumerRecord carrier, S state, HeaderConsumer<byte[], S> consumer)",
                    "public byte[] co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.getFirstHeader(String headerName, ConsumerRecord record)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ExternalSpanContextInstrumentation.java": [
                    "public static TraceContext co.elastic.apm.agent.opentracingimpl.ExternalSpanContextInstrumentation.parseTextMap(Iterable<Map.Entry<String, String>> textMap)"
                ]
            },
            "4c248af090d35cc97b8bc8b36744f15ae5236b91": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Set<String> co.elastic.apm.agent.impl.ElasticApmTracer.getTraceHeaderNames()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Id.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Id.writeAsHex(JsonWriter jw)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(String traceParentHeader)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.accept(@Nullable String tracestateHeaderValue, TraceContext state)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeHexArray(String fieldName, @Nullable LongList longList)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIterableWrapper.java": [
                    "public Iterator<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.ConsumerRecordsIterableWrapper.iterator()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord<?, ?> co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsListWrapper.java": [
                    "public List<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.ConsumerRecordsListWrapper.subList(int fromIndex, int toIndex)",
                    "public Iterator<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.ConsumerRecordsListWrapper.iterator()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHeadersHelper.java": [
                    "public void co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.setOutgoingTraceContextHeaders(ElasticContext<?> toPropagate, ProducerRecord<?, ?> producerRecord)",
                    "public Iterator<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.wrapConsumerRecordIterator(Iterator<ConsumerRecord<?, ?>> consumerRecordIterator)",
                    "public Iterable<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.wrapConsumerRecordIterable(Iterable<ConsumerRecord<?, ?>> consumerRecordIterable)",
                    "public List<ConsumerRecord<?, ?>> co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.wrapConsumerRecordList(List<ConsumerRecord<?, ?>> consumerRecordList)",
                    "public void co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHeadersHelper.removeTraceContextHeader(ProducerRecord<?, ?> producerRecord)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaRecordHeaderAccessor.java": [
                    "public void co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.setHeader(String headerName, byte[] headerValue, ProducerRecord record)",
                    "public void co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.remove(String headerName, ProducerRecord carrier)",
                    "public <S> void co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.forEach(String headerName, ConsumerRecord carrier, S state, HeaderConsumer<byte[], S> consumer)",
                    "public byte[] co.elastic.apm.agent.kafka.helper.KafkaRecordHeaderAccessor.getFirstHeader(String headerName, ConsumerRecord record)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ExternalSpanContextInstrumentation.java": [
                    "public static TraceContext co.elastic.apm.agent.opentracingimpl.ExternalSpanContextInstrumentation.parseTextMap(Iterable<Map.Entry<String, String>> textMap)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b9e6d92e62b7e734826d076bc5aa527b2cdaec8a",
        "previous_commit": "5e6287a3fc3a8d606162159d6dfa9defe85f2f34",
        "date": 1611675874,
        "releases": {
            "previous": "b9e6d92e62b7e734826d076bc5aa527b2cdaec8a",
            "next": "b9e6d92e62b7e734826d076bc5aa527b2cdaec8a"
        },
        "commit_message": "Cloud metadata (#1599)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b9e6d92e62b7e734826d076bc5aa527b2cdaec8a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "public String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.withConnection(HttpURLConnection connection)",
                    "String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.fetchConfig(final ConfigurationRegistry configurationRegistry)",
                    "private String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.tryFetchConfig(ConfigurationRegistry configurationRegistry, HttpURLConnection connection)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)",
                    "public void co.elastic.apm.agent.report.AbstractIntakeApiHandler.endRequest()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequestToUrl(URL url)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.startRequest(String endpoint)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "private ReportingEventHandler co.elastic.apm.agent.report.ReporterFactory.getReportingEventHandler(ConfigurationRegistry configurationRegistry, ReporterConfiguration reporterConfiguration, Future<MetaData> metaData, ApmServerClient apmServerClient)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeGlobalLabels(ArrayList<String> globalLabelKeys, ArrayList<String> globalLabelValues, final StringBuilder replaceBuilder, JsonWriter jw)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeField(final String fieldName, final long value)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeField(final String fieldName, final List<String> values, final JsonWriter jw)",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.flush()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public static ThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadDaemonPool(final String threadPurpose, int queueCapacity)",
                    "public String co.elastic.apm.agent.util.ExecutorUtils.toString()",
                    "public Thread co.elastic.apm.agent.util.ExecutorUtils.newThread(Runnable r)",
                    "public static ScheduledThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadSchedulingDaemonPool(final String threadPurpose)"
                ],
                "apm-agent-plugins/apm-log-shipper-plugin/src/main/java/co/elastic/apm/agent/log/shipper/FileTailer.java": [
                    "private int co.elastic.apm.agent.log.shipper.FileTailer.pollAll()"
                ],
                "apm-agent-plugins/apm-log-shipper-plugin/src/main/java/co/elastic/apm/agent/log/shipper/LogShipperFactory.java": [
                    "public void co.elastic.apm.agent.log.shipper.LogShipperFactory.start(ElasticApmTracer tracer)"
                ]
            },
            "5e6287a3fc3a8d606162159d6dfa9defe85f2f34": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "public String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.withConnection(HttpURLConnection connection)",
                    "String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.fetchConfig(final ConfigurationRegistry configurationRegistry)",
                    "private String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.tryFetchConfig(ConfigurationRegistry configurationRegistry, HttpURLConnection connection)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)",
                    "public void co.elastic.apm.agent.report.AbstractIntakeApiHandler.endRequest()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequestToUrl(URL url)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.startRequest(String endpoint)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "private ReportingEventHandler co.elastic.apm.agent.report.ReporterFactory.getReportingEventHandler(ConfigurationRegistry configurationRegistry, ReporterConfiguration reporterConfiguration, MetaData metaData, ApmServerClient apmServerClient)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeField(final String fieldName, final List<String> values)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeGlobalLabels(ArrayList<String> globalLabelKeys, ArrayList<String> globalLabelValues)",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.flush()",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeField(final String fieldName, final long value)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public static ThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadDaemonPool(final String threadPurpose, int queueCapacity)",
                    "public String co.elastic.apm.agent.util.ExecutorUtils.toString()",
                    "public Thread co.elastic.apm.agent.util.ExecutorUtils.newThread(Runnable r)",
                    "public static ScheduledThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadSchedulingDaemonPool(final String threadPurpose)"
                ],
                "apm-agent-plugins/apm-log-shipper-plugin/src/main/java/co/elastic/apm/agent/log/shipper/FileTailer.java": [
                    "private int co.elastic.apm.agent.log.shipper.FileTailer.pollAll()"
                ],
                "apm-agent-plugins/apm-log-shipper-plugin/src/main/java/co/elastic/apm/agent/log/shipper/LogShipperFactory.java": [
                    "public void co.elastic.apm.agent.log.shipper.LogShipperFactory.start(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "73b62624cfa4e095b1a6241ac11bac046dc096f1",
        "previous_commit": "5be152128c5b78444b425fa0959d08d6b24d105b",
        "date": 1674730012,
        "releases": {
            "previous": "73b62624cfa4e095b1a6241ac11bac046dc096f1",
            "next": "73b62624cfa4e095b1a6241ac11bac046dc096f1"
        },
        "commit_message": "Add bootstrap check for disabling agent when required (#2951)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "73b62624cfa4e095b1a6241ac11bac046dc096f1": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static Map<String, String> co.elastic.apm.attach.ElasticApmAttacher.loadPropertiesFromClasspath(String propertiesLocation)",
                    "private static void co.elastic.apm.attach.ElasticApmAttacher.attachWithFallback(File agentJarFile, String pid, String agentArgs)",
                    "static File co.elastic.apm.attach.ElasticApmAttacher.createTempProperties(Map<String, String> configuration, @Nullable File folder)"
                ],
                "apm-agent-common/src/main/java/co/elastic/apm/agent/common/JvmRuntimeInfo.java": [
                    "private int co.elastic.apm.agent.common.JvmRuntimeInfo.getUpdateVersion(String version)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/source/ConfigSources.java": [
                    "static Properties co.elastic.apm.agent.configuration.source.ConfigSources.getPropertiesFromFilesystem(String location)",
                    "private static Properties co.elastic.apm.agent.configuration.source.ConfigSources.getPropertiesFromClasspath(String classpathLocation, ClassLoader classLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/source/SystemPropertyConfigurationSource.java": [
                    "public String co.elastic.apm.agent.configuration.source.SystemPropertyConfigurationSource.getValue(String key)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "static String co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.getActualLogFile(@Nullable String agentHome, String logFile)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public static void co.elastic.apm.agent.logging.LoggingConfiguration.init(List<ConfigurationSource> sources, String ephemeralId)"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/AgentMain.java": [
                    "private synchronized static void co.elastic.apm.agent.premain.AgentMain.detach()",
                    "private static void co.elastic.apm.agent.premain.AgentMain.delayAndInitAgentAsync(final String agentArguments, final Instrumentation instrumentation, final boolean premain, final long delayAgentInitMs)",
                    "private static void co.elastic.apm.agent.premain.AgentMain.securityManagerCheck()",
                    "private synchronized static void co.elastic.apm.agent.premain.AgentMain.loadAndInitializeAgent(String agentArguments, Instrumentation instrumentation, boolean premain)",
                    "public synchronized static void co.elastic.apm.agent.premain.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)",
                    "public void co.elastic.apm.agent.premain.AgentMain.run()"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/BootstrapChecks.java": [
                    "boolean co.elastic.apm.agent.premain.BootstrapChecks.isPassing()",
                    "static BootstrapChecks co.elastic.apm.agent.premain.BootstrapChecks.defaults()"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/JvmToolBootstrapCheck.java": [
                    "public static void co.elastic.apm.agent.premain.JvmToolBootstrapCheck.checkJdkTool(String jvmCmd, BootstrapCheckResult result)"
                ]
            },
            "5be152128c5b78444b425fa0959d08d6b24d105b": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static Map<String, String> co.elastic.apm.attach.ElasticApmAttacher.loadPropertiesFromClasspath(String propertiesLocation)",
                    "private static void co.elastic.apm.attach.ElasticApmAttacher.attachWithFallback(File agentJarFile, String pid, String agentArgs)",
                    "static File co.elastic.apm.attach.ElasticApmAttacher.createTempProperties(Map<String, String> configuration, @Nullable File folder)"
                ],
                "apm-agent-common/src/main/java/co/elastic/apm/agent/common/JvmRuntimeInfo.java": [
                    "private int co.elastic.apm.agent.common.JvmRuntimeInfo.getUpdateVersion(String version)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/source/ConfigSources.java": [
                    "static Properties co.elastic.apm.agent.configuration.source.ConfigSources.getPropertiesFromFilesystem(String location)",
                    "private static Properties co.elastic.apm.agent.configuration.source.ConfigSources.getPropertiesFromClasspath(String classpathLocation, ClassLoader classLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/source/SystemPropertyConfigurationSource.java": [
                    "public String co.elastic.apm.agent.configuration.source.SystemPropertyConfigurationSource.getValue(String key)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "static String co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.getActualLogFile(@Nullable String agentHome, String logFile)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public static void co.elastic.apm.agent.logging.LoggingConfiguration.init(List<ConfigurationSource> sources, String ephemeralId)"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/AgentMain.java": [
                    "private synchronized static void co.elastic.apm.agent.premain.AgentMain.detach()",
                    "private static void co.elastic.apm.agent.premain.AgentMain.delayAndInitAgentAsync(final String agentArguments, final Instrumentation instrumentation, final boolean premain, final long delayAgentInitMs)",
                    "private static void co.elastic.apm.agent.premain.AgentMain.securityManagerCheck()",
                    "private synchronized static void co.elastic.apm.agent.premain.AgentMain.loadAndInitializeAgent(String agentArguments, Instrumentation instrumentation, boolean premain)",
                    "public synchronized static void co.elastic.apm.agent.premain.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)",
                    "public void co.elastic.apm.agent.premain.AgentMain.run()"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/BootstrapChecks.java": [
                    "boolean co.elastic.apm.agent.premain.BootstrapChecks.isPassing()",
                    "static BootstrapChecks co.elastic.apm.agent.premain.BootstrapChecks.defaults()"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/JvmToolBootstrapCheck.java": [
                    "public static void co.elastic.apm.agent.premain.JvmToolBootstrapCheck.checkJdkTool(String jvmCmd, BootstrapCheckResult result)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3deb2095d1c99a66198c56d19e1b3b096f43a3b7",
        "previous_commit": "8ae955b53ec742974ad7f2ca70b7f9e55707d727",
        "date": 1531992976,
        "releases": {
            "previous": "3deb2095d1c99a66198c56d19e1b3b096f43a3b7",
            "next": "3deb2095d1c99a66198c56d19e1b3b096f43a3b7"
        },
        "commit_message": "Introduce Scopes\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3deb2095d1c99a66198c56d19e1b3b096f43a3b7": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction(@Nullable String traceContextHeader)",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction, @Nullable Span parentSpan, long nanoTime)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.currentSpan()",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.currentTransaction()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/AbstractSpan.java": [],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span parentSpan, long nanoTime, boolean dropped)",
                    "public void co.elastic.apm.impl.transaction.Span.end()",
                    "public void co.elastic.apm.impl.transaction.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(ElasticApmTracer tracer, @Nullable String traceParentHeader, long startTimestampNanos, Sampler sampler)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.startNoop(ElasticApmTracer tracer)",
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public void co.elastic.apm.impl.transaction.Transaction.end()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public static Span co.elastic.apm.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public Transaction co.elastic.apm.servlet.ServletTransactionHelper.onBefore(String servletPath, String pathInfo, String requestURI, @Nullable String userAgentHeader, @Nullable String traceContextHeader)",
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Exception exception, boolean committed, int status, String method, Map<String, String[]> parameterMap)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScope.java": [
                    "public void co.elastic.apm.opentracing.ApmScope.close()"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScopeManager.java": [
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.active()",
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.activate(@Nonnull Span span, boolean finishSpanOnClose)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpanBuilder.java": [
                    "private ApmSpan co.elastic.apm.opentracing.ApmSpanBuilder.startApmSpan()",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.asChildOf(Span parent)"
                ]
            },
            "8ae955b53ec742974ad7f2ca70b7f9e55707d727": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction(@Nullable String traceContextHeader)",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction, @Nullable Span parentSpan, long nanoTime)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.currentSpan()",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.currentTransaction()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/AbstractSpan.java": [
                    "public void co.elastic.apm.impl.transaction.AbstractSpan.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span parentSpan, long nanoTime, boolean dropped)",
                    "public void co.elastic.apm.impl.transaction.Span.end()",
                    "public void co.elastic.apm.impl.transaction.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(ElasticApmTracer tracer, @Nullable String traceParentHeader, long startTimestampNanos, Sampler sampler)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.startNoop(ElasticApmTracer tracer)",
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public void co.elastic.apm.impl.transaction.Transaction.end()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public static Span co.elastic.apm.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public Transaction co.elastic.apm.servlet.ServletTransactionHelper.onBefore(String servletPath, String pathInfo, String requestURI, @Nullable String userAgentHeader, @Nullable String traceContextHeader)",
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Exception exception, boolean committed, int status, String method, Map<String, String[]> parameterMap)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScope.java": [
                    "public void co.elastic.apm.opentracing.ApmScope.close()"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScopeManager.java": [
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.active()",
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.activate(Span span, boolean finishSpanOnClose)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpanBuilder.java": [
                    "private ApmSpan co.elastic.apm.opentracing.ApmSpanBuilder.startApmSpan()",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.asChildOf(Span parent)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "02fb0ec2b433ff8aa5e31a5e49670524687fca40",
        "previous_commit": "86bfb3b1c5429349d359cde5c5262334b5e39fc7",
        "date": 1532694715,
        "releases": {
            "previous": "02fb0ec2b433ff8aa5e31a5e49670524687fca40",
            "next": "02fb0ec2b433ff8aa5e31a5e49670524687fca40"
        },
        "commit_message": "Implement intake v2 API (#140)\n\n* V2 is not active by default but can be activated via configuration\r\n* Adds three internal (undocumented) configuration options:\r\n  enable_intake_v2, api_request_time, api_request_size\r\n* Adds ReporterProfiler which measures\r\n  * send and dropped events/s\r\n  * received bytes/s and payloads/s",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "02fb0ec2b433ff8aa5e31a5e49670524687fca40": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.end(long nanoTime)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerReporter.java": [
                    "public Void co.elastic.apm.report.ApmServerReporter.get()",
                    "public Future<Void> co.elastic.apm.report.ApmServerReporter.flush()",
                    "public boolean co.elastic.apm.report.ApmServerReporter.isCancelled()",
                    "public long co.elastic.apm.report.ApmServerReporter.getDropped()",
                    "public boolean co.elastic.apm.report.ApmServerReporter.cancel(boolean mayInterruptIfRunning)",
                    "public boolean co.elastic.apm.report.ApmServerReporter.isDone()",
                    "public Void co.elastic.apm.report.ApmServerReporter.get(long timeout, TimeUnit unit)",
                    "public void co.elastic.apm.report.ApmServerReporter.close()",
                    "public long co.elastic.apm.report.ApmServerReporter.getReported()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "private void co.elastic.apm.report.ReporterFactory.disableCertificateValidation(OkHttpClient.Builder builder)",
                    "public Reporter co.elastic.apm.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeService(final Service service)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSystem(final SystemInfo system)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransactionPayload(final TransactionPayload payload)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeErrorPayload(ErrorPayload payload)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeProcess(final ProcessInfo process)"
                ]
            },
            "86bfb3b1c5429349d359cde5c5262334b5e39fc7": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.end(long nanoTime)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerReporter.java": [
                    "public Void co.elastic.apm.report.ApmServerReporter.get()",
                    "public Future<Void> co.elastic.apm.report.ApmServerReporter.flush()",
                    "public boolean co.elastic.apm.report.ApmServerReporter.isCancelled()",
                    "public long co.elastic.apm.report.ApmServerReporter.getDropped()",
                    "public boolean co.elastic.apm.report.ApmServerReporter.cancel(boolean mayInterruptIfRunning)",
                    "public boolean co.elastic.apm.report.ApmServerReporter.isDone()",
                    "public Void co.elastic.apm.report.ApmServerReporter.get(long timeout, TimeUnit unit)",
                    "public void co.elastic.apm.report.ApmServerReporter.close()",
                    "public long co.elastic.apm.report.ApmServerReporter.getReported()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "private void co.elastic.apm.report.ReporterFactory.disableCertificateValidation(OkHttpClient.Builder builder)",
                    "public Reporter co.elastic.apm.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeService(final Service service)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSystem(final SystemInfo system)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransactionPayload(final TransactionPayload payload)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeErrorPayload(ErrorPayload payload)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeProcess(final ProcessInfo process)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "48d2a231e604414ccb4385792a8c5e364567dcd9",
        "previous_commit": "12e78a34a3274ae291fd1c6d1bc1a62fe8fab710",
        "date": 1688988674,
        "releases": {
            "previous": "48d2a231e604414ccb4385792a8c5e364567dcd9",
            "next": "48d2a231e604414ccb4385792a8c5e364567dcd9"
        },
        "commit_message": "Move plugin-related utilities and API to SDK/tracer (#3166)\n\n\r\n\r\n---------\r\n\r\nCo-authored-by: Sylvain Juge <763082+SylvainJuge@users.noreply.github.com>\r\nCo-authored-by: Jonas Kunz <jonas.kunz@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "48d2a231e604414ccb4385792a8c5e364567dcd9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bbwarmup/WarmupInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.bbwarmup.WarmupInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static synchronized Future<?> co.elastic.apm.agent.bci.ElasticApmAgent.reInitInstrumentation()"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/state/GlobalVariables.java": [
                    "public static <T> T co.elastic.apm.agent.sdk.state.GlobalVariables.get(Class<?> adviceClass, String key, T defaultValue)"
                ],
                "apm-agent-plugins/apm-ecs-logging-plugin/src/main/java/co/elastic/apm/agent/ecs_logging/EcsLoggingInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.ecs_logging.EcsLoggingInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "protected static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(String signature, @Nullable String pathAnnotationValue, @Nullable String frameworkVersion)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/correlation/Log4j2LogCorrelationInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.log4j2.correlation.Log4j2LogCorrelationInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/error/Log4j2LoggerErrorCapturingInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.log4j2.error.Log4j2LoggerErrorCapturingInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/reformatting/Log4j2EcsReformattingInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.log4j2.reformatting.Log4j2EcsReformattingInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/AbstractOpenTelemetryInstrumentation.java": [
                    "public final ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.opentelemetry.AbstractOpenTelemetryInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracingimpl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable AbstractSpan<?> parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ClassLoader applicationClassLoader)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ExternalSpanContextInstrumentation.java": [
                    "public static TraceContext co.elastic.apm.agent.opentracingimpl.ExternalSpanContextInstrumentation.parseTextMap(Iterable<Map.Entry<String, String>> textMap)"
                ],
                "apm-agent-plugins/apm-spring-resttemplate/apm-spring-resttemplate-plugin/src/main/java/co/elastic/apm/agent/resttemplate/SpringRestTemplateAdvice.java": [
                    "public static Object co.elastic.apm.agent.resttemplate.SpringRestTemplateAdvice.beforeExecute(@Advice.This ClientHttpRequest request)"
                ],
                "apm-agent-tracer/src/main/java/co/elastic/apm/agent/tracer/metadata/PotentiallyMultiValuedMap.java": [
                    "public boolean co.elastic.apm.agent.tracer.metadata.PotentiallyMultiValuedMap.containsIgnoreCase(String key)",
                    "public void co.elastic.apm.agent.tracer.metadata.PotentiallyMultiValuedMap.add(String key, String value)",
                    "public boolean co.elastic.apm.agent.tracer.metadata.PotentiallyMultiValuedMap.isEmpty()",
                    "public Object co.elastic.apm.agent.tracer.metadata.PotentiallyMultiValuedMap.get(String key)",
                    "public String co.elastic.apm.agent.tracer.metadata.PotentiallyMultiValuedMap.getFirst(String key)"
                ]
            },
            "12e78a34a3274ae291fd1c6d1bc1a62fe8fab710": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bbwarmup/WarmupInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.bbwarmup.WarmupInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static synchronized Future<?> co.elastic.apm.agent.bci.ElasticApmAgent.reInitInstrumentation()"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/state/GlobalVariables.java": [
                    "public static <T> T co.elastic.apm.agent.sdk.state.GlobalVariables.get(Class<?> adviceClass, String key, T defaultValue)"
                ],
                "apm-agent-plugins/apm-ecs-logging-plugin/src/main/java/co/elastic/apm/agent/ecs_logging/EcsLoggingInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.ecs_logging.EcsLoggingInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "protected static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(String signature, @Nullable String pathAnnotationValue, @Nullable String frameworkVersion)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/correlation/Log4j2LogCorrelationInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.log4j2.correlation.Log4j2LogCorrelationInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/error/Log4j2LoggerErrorCapturingInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.log4j2.error.Log4j2LoggerErrorCapturingInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/reformatting/Log4j2EcsReformattingInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.log4j2.reformatting.Log4j2EcsReformattingInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/AbstractOpenTelemetryInstrumentation.java": [
                    "public final ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.opentelemetry.AbstractOpenTelemetryInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracingimpl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable AbstractSpan<?> parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ClassLoader applicationClassLoader)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ExternalSpanContextInstrumentation.java": [
                    "public static TraceContext co.elastic.apm.agent.opentracingimpl.ExternalSpanContextInstrumentation.parseTextMap(Iterable<Map.Entry<String, String>> textMap)"
                ],
                "apm-agent-plugins/apm-spring-resttemplate/apm-spring-resttemplate-plugin/src/main/java/co/elastic/apm/agent/resttemplate/SpringRestTemplateAdvice.java": [
                    "public static Object co.elastic.apm.agent.resttemplate.SpringRestTemplateAdvice.beforeExecute(@Advice.This ClientHttpRequest request)"
                ],
                "apm-agent-tracer/src/main/java/co/elastic/apm/agent/tracer/metadata/PotentiallyMultiValuedMap.java": []
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9bdb3aa346fc97181c9600a9b3b6110963c0b39e",
        "previous_commit": "d75d9e79ea961803c22223f978b5a8e759dd0a4a",
        "date": 1690366724,
        "releases": {
            "previous": "9bdb3aa346fc97181c9600a9b3b6110963c0b39e",
            "next": "9bdb3aa346fc97181c9600a9b3b6110963c0b39e"
        },
        "commit_message": "Implemented in-process baggage propagation (#3248)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9bdb3aa346fc97181c9600a9b3b6110963c0b39e": {
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "public static <T> Callable<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Callable<T> callable, Tracer tracer)",
                    "public static ElasticContext<?> co.elastic.apm.agent.concurrent.JavaConcurrent.restoreContext(Object o, Tracer tracer)",
                    "public static Runnable co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Runnable runnable, Tracer tracer)",
                    "public static <T> ForkJoinTask<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable ForkJoinTask<T> task, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/RunnableCallableForkJoinTaskInstrumentation.java": [
                    "public static void co.elastic.apm.agent.concurrent.RunnableCallableForkJoinTaskInstrumentation.onExit(@Advice.Thrown Throwable thrown, @Nullable @Advice.Enter Object context)"
                ],
                "apm-agent-plugins/apm-reactor-plugin/src/main/java/co/elastic/apm/agent/reactor/TracedSubscriber.java": [
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onComplete()",
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onNext(T next)",
                    "public CoreSubscriber<? super X> co.elastic.apm.agent.reactor.TracedSubscriber<T>.apply(Publisher publisher, CoreSubscriber<? super X> subscriber)",
                    "private static <X> Function<? super Publisher<X>, ? extends Publisher<X>> co.elastic.apm.agent.reactor.TracedSubscriber<T>.wrapOperators(final Tracer tracer)",
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onError(Throwable t)",
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onSubscribe(Subscription s)"
                ],
                "apm-agent-plugins/apm-scala-concurrent-plugin/src/main/java/co/elastic/apm/agent/scalaconcurrent/FutureInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.scalaconcurrent.FutureInstrumentation.onEnter(@Advice.This Object thiz)",
                    "public static void co.elastic.apm.agent.scalaconcurrent.FutureInstrumentation.onExit(@Advice.This Object thiz)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebClientHelper.java": [
                    "private void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.finalizeSpan(HttpContext<?> httpContext, int statusCode, @Nullable Throwable thrown, @Nullable AbstractSpan<?> parent)",
                    "public void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.followRedirect(HttpContext<?> httpContext, HttpClientRequest httpRequest)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/GenericHandlerWrapper.java": [
                    "public void co.elastic.apm.agent.vertx.GenericHandlerWrapper<T>.handle(T event)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx4-plugin/src/main/java/co/elastic/apm/agent/vertx/v4/webclient/HttpContextInstrumentation.java": [
                    "public static void co.elastic.apm.agent.vertx.v4.webclient.HttpContextInstrumentation.prepareRequest(@Advice.This HttpContext<?> httpContext)"
                ]
            },
            "d75d9e79ea961803c22223f978b5a8e759dd0a4a": {
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "public static <T> Callable<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Callable<T> callable, Tracer tracer)",
                    "public static Runnable co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Runnable runnable, Tracer tracer)",
                    "public static AbstractSpan<?> co.elastic.apm.agent.concurrent.JavaConcurrent.restoreContext(Object o, Tracer tracer)",
                    "public static <T> ForkJoinTask<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable ForkJoinTask<T> task, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/RunnableCallableForkJoinTaskInstrumentation.java": [
                    "public static void co.elastic.apm.agent.concurrent.RunnableCallableForkJoinTaskInstrumentation.onExit(@Advice.Thrown Throwable thrown, @Nullable @Advice.Enter Object context)"
                ],
                "apm-agent-plugins/apm-reactor-plugin/src/main/java/co/elastic/apm/agent/reactor/TracedSubscriber.java": [
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onComplete()",
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onNext(T next)",
                    "public CoreSubscriber<? super X> co.elastic.apm.agent.reactor.TracedSubscriber<T>.apply(Publisher publisher, CoreSubscriber<? super X> subscriber)",
                    "private static <X> Function<? super Publisher<X>, ? extends Publisher<X>> co.elastic.apm.agent.reactor.TracedSubscriber<T>.wrapOperators(final Tracer tracer)",
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onError(Throwable t)",
                    "public void co.elastic.apm.agent.reactor.TracedSubscriber<T>.onSubscribe(Subscription s)"
                ],
                "apm-agent-plugins/apm-scala-concurrent-plugin/src/main/java/co/elastic/apm/agent/scalaconcurrent/FutureInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.scalaconcurrent.FutureInstrumentation.onEnter(@Advice.This Object thiz)",
                    "public static void co.elastic.apm.agent.scalaconcurrent.FutureInstrumentation.onExit(@Advice.This Object thiz)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebClientHelper.java": [
                    "private void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.finalizeSpan(HttpContext<?> httpContext, int statusCode, @Nullable Throwable thrown, @Nullable AbstractSpan<?> parent)",
                    "public void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.followRedirect(HttpContext<?> httpContext, HttpClientRequest httpRequest)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/GenericHandlerWrapper.java": [
                    "public void co.elastic.apm.agent.vertx.GenericHandlerWrapper<T>.handle(T event)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx4-plugin/src/main/java/co/elastic/apm/agent/vertx/v4/webclient/HttpContextInstrumentation.java": [
                    "public static void co.elastic.apm.agent.vertx.v4.webclient.HttpContextInstrumentation.prepareRequest(@Advice.This HttpContext<?> httpContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "058b2679b8fdfa2482fc2738090ca597fa6710a1",
        "previous_commit": "ae4c1f88f2ef844f3ed68b6bc0d8ae714f9ac437",
        "date": 1682333358,
        "releases": {
            "previous": "058b2679b8fdfa2482fc2738090ca597fa6710a1",
            "next": "058b2679b8fdfa2482fc2738090ca597fa6710a1"
        },
        "commit_message": "Refactor: Made DslJsonSerializer a singleton (#3116)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "058b2679b8fdfa2482fc2738090ca597fa6710a1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "public String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.withConnection(HttpURLConnection connection)",
                    "String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.fetchConfig(final ConfigurationRegistry configurationRegistry)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.appendMetadataToStream()",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.appendMetaDataNdJsonToStream()",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeFileMetaData(File file)",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.fullFlush()",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransactionNdJson(Transaction transaction)",
                    "public int co.elastic.apm.agent.report.serialize.DslJsonSerializer.getBufferSize()",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeLogNdJson(String stringLog)",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeLogNdJson(byte[] bytesLog)",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeErrorNdJson(ErrorCapture error)",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeBytes(byte[] bytes, int len)",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanNdJson(Span span)",
                    "public JsonWriter co.elastic.apm.agent.report.serialize.DslJsonSerializer.getJsonWriter()",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.flushToOutputStream()",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.blockUntilReady()"
                ]
            },
            "ae4c1f88f2ef844f3ed68b6bc0d8ae714f9ac437": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "public String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.withConnection(HttpURLConnection connection)",
                    "String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.fetchConfig(final ConfigurationRegistry configurationRegistry)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": []
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a75b7c391c4e37801d59cf459bec8b7ad25d090b",
        "previous_commit": "e4bcc0f834cb67c615616a640d75bc533f2127d9",
        "date": 1539846211,
        "releases": {
            "previous": "a75b7c391c4e37801d59cf459bec8b7ad25d090b",
            "next": "a75b7c391c4e37801d59cf459bec8b7ad25d090b"
        },
        "commit_message": "Drop support for intake v1 (#249)\n\n\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a75b7c391c4e37801d59cf459bec8b7ad25d090b": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochTimestampMillis, @Nullable Throwable e, @Nullable AbstractSpan<?> active)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.recycle(Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/TransactionPayload.java": [
                    "public int co.elastic.apm.impl.payload.TransactionPayload.getPayloadSize()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(Transaction transaction, @Nullable Span parentSpan, long epochMicros, boolean dropped)",
                    "public String co.elastic.apm.impl.transaction.Span.toString()",
                    "public void co.elastic.apm.impl.transaction.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public String co.elastic.apm.impl.transaction.Transaction.toString()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(@Nullable String traceParentHeader, long epochMicros, Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.report.ApmServerReporter.report(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.writeTimestamp(final long epochMicros)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/helper/JdbcHelperImpl.java": [
                    "private String co.elastic.apm.jdbc.helper.JdbcHelperImpl.getDbVendor(String url)"
                ]
            },
            "e4bcc0f834cb67c615616a640d75bc533f2127d9": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochTimestampMillis, @Nullable Throwable e, @Nullable AbstractSpan<?> active)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.recycle(Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/TransactionPayload.java": [
                    "public int co.elastic.apm.impl.payload.TransactionPayload.getPayloadSize()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(Transaction transaction, @Nullable Span parentSpan, long epochMicros, boolean dropped)",
                    "public String co.elastic.apm.impl.transaction.Span.toString()",
                    "public void co.elastic.apm.impl.transaction.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public String co.elastic.apm.impl.transaction.Transaction.toString()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(@Nullable String traceParentHeader, long epochMicros, Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.report.ApmServerReporter.report(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.writeTimestamp(final long epochMicros)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/helper/JdbcHelperImpl.java": [
                    "private String co.elastic.apm.jdbc.helper.JdbcHelperImpl.getDbVendor(String url)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "15cd941f15abac76348d39b27337e4dfa7082413",
        "previous_commit": "3f96484dd10c335313c084bd0a4e8cdd0379fb15",
        "date": 1624263831,
        "releases": {
            "previous": "15cd941f15abac76348d39b27337e4dfa7082413",
            "next": "15cd941f15abac76348d39b27337e4dfa7082413"
        },
        "commit_message": "Minor refactors + enable_experimental_instrumentations config (#1863)\n\n* add minor changes\r\n\r\n* disable logonce logger + doc update\r\n\r\n* fix changelog + config doc\r\n\r\n* reuse logOnce for servlet instrumentation\r\n\r\n* not-trivial refactor anymore\r\n\r\n* fix doc reference\r\n\r\n* fixing doc again\r\n\r\n* lazyly compute url.full if needed + few other changes\r\n\r\n* fix tests that assumed url was a string\r\n\r\n* fix http span outcome on errors\r\n\r\n* few minor changes to make it on par with bridge PR\r\n\r\n* Update apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Http.java\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* Update apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Url.java\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* fix typo\r\n\r\n* fix doc\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "15cd941f15abac76348d39b27337e4dfa7082413": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.initAgentBuilder(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(@Nullable ProtectionDomain protectionDomain)",
                    "public static ElementMatcher.Junction<ProtectionDomain> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.implementationVersionLte(final String version)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/CoreConfiguration.java": [
                    "public Collection<String> co.elastic.apm.agent.configuration.CoreConfiguration.getDisabledInstrumentations()",
                    "public List<ConfigurationOption<?>> co.elastic.apm.agent.configuration.CoreConfiguration.getInstrumentationOptions()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Http.java": [
                    "public boolean co.elastic.apm.agent.impl.context.Http.hasContent()",
                    "public Http co.elastic.apm.agent.impl.context.Http.withUrl(@Nullable String url)",
                    "public void co.elastic.apm.agent.impl.context.Http.copyFrom(Http other)",
                    "public void co.elastic.apm.agent.impl.context.Http.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Url.java": [
                    "public StringBuilder co.elastic.apm.agent.impl.context.Url.getFull()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.agent.opentracingimpl.ApmSpanInstrumentation.handleSpecialTransactionTag(Transaction transaction, String key, Object value)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequestContext(Transaction transaction, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr, @Nullable String contentTypeHeader)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletVersionInstrumentation.java": [
                    "private static void co.elastic.apm.agent.servlet.ServletVersionInstrumentation.logServletVersion(@Nullable ServletConfig servletConfig)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/TransactionAwareSubscriber.java": [
                    "private static void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.fillRequest(Transaction transaction, ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractHttpTransactionHelper.java": [
                    "protected void co.elastic.apm.agent.vertx.AbstractHttpTransactionHelper.fillRequest(Request request, String protocol, String method, boolean secure, @Nullable String remoteAddr)",
                    "protected void co.elastic.apm.agent.vertx.AbstractHttpTransactionHelper.fillUrlRelatedFields(Request request, @Nullable String scheme, @Nullable String serverName, int serverPort, String requestURI, @Nullable String queryString)"
                ]
            },
            "3f96484dd10c335313c084bd0a4e8cdd0379fb15": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.initAgentBuilder(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(@Nullable ProtectionDomain protectionDomain)",
                    "public static ElementMatcher.Junction<ProtectionDomain> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.implementationVersionLte(final String version)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/CoreConfiguration.java": [
                    "public Collection<String> co.elastic.apm.agent.configuration.CoreConfiguration.getDisabledInstrumentations()",
                    "public List<ConfigurationOption<?>> co.elastic.apm.agent.configuration.CoreConfiguration.getInstrumentationOptions()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Http.java": [
                    "public boolean co.elastic.apm.agent.impl.context.Http.hasContent()",
                    "public Http co.elastic.apm.agent.impl.context.Http.withUrl(@Nullable String url)",
                    "public void co.elastic.apm.agent.impl.context.Http.copyFrom(Http other)",
                    "public void co.elastic.apm.agent.impl.context.Http.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Url.java": [
                    "public StringBuilder co.elastic.apm.agent.impl.context.Url.getFull()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.agent.opentracingimpl.ApmSpanInstrumentation.handleSpecialTransactionTag(Transaction transaction, String key, Object value)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequestContext(Transaction transaction, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr, @Nullable String contentTypeHeader)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletVersionInstrumentation.java": [
                    "private static void co.elastic.apm.agent.servlet.ServletVersionInstrumentation.logServletVersion(@Nullable ServletConfig servletConfig)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/TransactionAwareSubscriber.java": [
                    "private static void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.fillRequest(Transaction transaction, ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractHttpTransactionHelper.java": [
                    "protected void co.elastic.apm.agent.vertx.AbstractHttpTransactionHelper.fillRequest(Request request, String protocol, String method, boolean secure, @Nullable String remoteAddr)",
                    "protected void co.elastic.apm.agent.vertx.AbstractHttpTransactionHelper.fillUrlRelatedFields(Request request, @Nullable String scheme, @Nullable String serverName, int serverPort, String requestURI, @Nullable String queryString)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "023d63229cdfdea9879b9e395309e15503555697",
        "previous_commit": "b2ddae2efb84cf252094786e5746f22b53260666",
        "date": 1596104982,
        "releases": {
            "previous": "023d63229cdfdea9879b9e395309e15503555697",
            "next": "023d63229cdfdea9879b9e395309e15503555697"
        },
        "commit_message": "Allow empty server_urls (#1295)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "023d63229cdfdea9879b9e395309e15503555697": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)",
                    "public void co.elastic.apm.agent.report.AbstractIntakeApiHandler.endRequest()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "URL co.elastic.apm.agent.report.ApmServerClient.getCurrentUrl()",
                    "HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequest(String relativePath)",
                    "URL co.elastic.apm.agent.report.ApmServerClient.appendPathToCurrentUrl(String apmServerPath)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.call()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.startRequest(String endpoint)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.writeEvent(ReportingEvent event)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterConfiguration.java": [
                    "public List<URL> co.elastic.apm.agent.report.ReporterConfiguration.getServerUrls()",
                    "public ConfigurationOption<List<URL>> co.elastic.apm.agent.report.ReporterConfiguration.getServerUrlsOption()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMetrics(MetricRegistry metricRegistry)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "public static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serialize(Map<? extends Labels, MetricSet> metricSets, StringBuilder replaceBuilder, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeTimer(String key, Timer timer, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeCounter(String key, AtomicLong value, JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-log-shipper-plugin/src/main/java/co/elastic/apm/agent/log/shipper/ApmServerLogShipper.java": [
                    "public boolean co.elastic.apm.agent.log.shipper.ApmServerLogShipper.onLineAvailable(TailableFile tailableFile, byte[] line, int offset, int length, boolean eol)"
                ]
            },
            "b2ddae2efb84cf252094786e5746f22b53260666": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)",
                    "public void co.elastic.apm.agent.report.AbstractIntakeApiHandler.endRequest()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "URL co.elastic.apm.agent.report.ApmServerClient.getCurrentUrl()",
                    "HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequest(String relativePath)",
                    "URL co.elastic.apm.agent.report.ApmServerClient.appendPathToCurrentUrl(String apmServerPath)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.call()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.startRequest(String endpoint)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.writeEvent(ReportingEvent event)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterConfiguration.java": [
                    "public List<URL> co.elastic.apm.agent.report.ReporterConfiguration.getServerUrls()",
                    "public ConfigurationOption<List<URL>> co.elastic.apm.agent.report.ReporterConfiguration.getServerUrlsOption()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMetrics(MetricRegistry metricRegistry)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "public static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serialize(Map<? extends Labels, MetricSet> metricSets, StringBuilder replaceBuilder, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeTimer(String key, Timer timer, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeCounter(String key, AtomicLong value, JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-log-shipper-plugin/src/main/java/co/elastic/apm/agent/log/shipper/ApmServerLogShipper.java": [
                    "public boolean co.elastic.apm.agent.log.shipper.ApmServerLogShipper.onLineAvailable(TailableFile tailableFile, byte[] line, int offset, int length, boolean eol)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1b19484ed5a32f3561273ac7ae8eb14ec4a2924b",
        "previous_commit": "57ca793c129f418855184aa053439ab9fd14359f",
        "date": 1580302821,
        "releases": {
            "previous": "1b19484ed5a32f3561273ac7ae8eb14ec4a2924b",
            "next": "1b19484ed5a32f3561273ac7ae8eb14ec4a2924b"
        },
        "commit_message": "Implement Binary TraceParent (#1009)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1b19484ed5a32f3561273ac7ae8eb14ec4a2924b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public static ChildContextCreator<String> co.elastic.apm.agent.impl.transaction.TraceContext.fromTraceparentHeader()",
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(String traceParentHeader)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public String co.elastic.apm.agent.impl.transaction.TraceContext.toString()",
                    "private void co.elastic.apm.agent.impl.transaction.TraceContext.onMutation()",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()",
                    "String co.elastic.apm.agent.impl.transaction.TraceContext.getIncomingTraceParentHeader()",
                    "private void co.elastic.apm.agent.impl.transaction.TraceContext.fillTraceParentHeader(StringBuilder sb, Id spanId)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/HexUtils.java": [
                    "public static void co.elastic.apm.agent.util.HexUtils.writeBytesAsHex(byte[] bytes, StringBuilder sb)"
                ],
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.HttpAsyncRequestProducerWrapper.generateRequest()"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/BaseKafkaHeadersInstrumentation.java": [
                    "private synchronized static void co.elastic.apm.agent.kafka.BaseKafkaHeadersInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "static String co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.getTraceContextHeader(@Nullable Iterable<Map.Entry<String, String>> baggage)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ExternalSpanContextInstrumentation.java": [
                    "public static TraceContext co.elastic.apm.agent.opentracing.impl.ExternalSpanContextInstrumentation.parseTextMap(Iterable<Map.Entry<String, String>> textMap)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/SpanContextInstrumentation.java": [
                    "public static Iterable<Map.Entry<String, String>> co.elastic.apm.agent.opentracing.impl.SpanContextInstrumentation.doGetBaggage(TraceContext traceContext)"
                ]
            },
            "57ca793c129f418855184aa053439ab9fd14359f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public String co.elastic.apm.agent.impl.transaction.TraceContext.getIncomingTraceParentHeader()",
                    "public static ChildContextCreator<String> co.elastic.apm.agent.impl.transaction.TraceContext.fromTraceparentHeader()",
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(String traceParentHeader)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public String co.elastic.apm.agent.impl.transaction.TraceContext.toString()",
                    "private void co.elastic.apm.agent.impl.transaction.TraceContext.onMutation()",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()",
                    "private void co.elastic.apm.agent.impl.transaction.TraceContext.fillTraceParentHeader(StringBuilder sb, Id spanId)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/HexUtils.java": [
                    "public static void co.elastic.apm.agent.util.HexUtils.writeBytesAsHex(byte[] bytes, StringBuilder sb)"
                ],
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.HttpAsyncRequestProducerWrapper.generateRequest()"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/BaseKafkaHeadersInstrumentation.java": [
                    "private synchronized static void co.elastic.apm.agent.kafka.BaseKafkaHeadersInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "static String co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.getTraceContextHeader(@Nullable Iterable<Map.Entry<String, String>> baggage)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ExternalSpanContextInstrumentation.java": [
                    "public static TraceContext co.elastic.apm.agent.opentracing.impl.ExternalSpanContextInstrumentation.parseTextMap(Iterable<Map.Entry<String, String>> textMap)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/SpanContextInstrumentation.java": [
                    "public static Iterable<Map.Entry<String, String>> co.elastic.apm.agent.opentracing.impl.SpanContextInstrumentation.doGetBaggage(TraceContext traceContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b44fc14763ac1bed1c4510e9522cb87e6d214d32",
        "previous_commit": "6d48460895845a86413680a561aca9f8aed991bb",
        "date": 1634598879,
        "releases": {
            "previous": "b44fc14763ac1bed1c4510e9522cb87e6d214d32",
            "next": "b44fc14763ac1bed1c4510e9522cb87e6d214d32"
        },
        "commit_message": "Feature support jakartaee9 (#1912)\n\n* splitting servlet plugin\r\n\r\n* local\r\n\r\n* implement jakarta async instrumentation\r\n\r\n* local\r\n\r\n* differntiate ServletApiADvice\r\n\r\n* added apm servlet jakarta test\r\n\r\n* minor fixes, local\r\n\r\n* minor fixces, added logging\r\n\r\n* minor fixes\r\n\r\n* minor fixes\r\n\r\n* added headers\r\n\r\n* added tomcat versions\r\n\r\n* change dependency. Added jakartaee simple webapp(copy). ADded JakarataeeTomcatIT\r\n\r\n* added AbstractTomcatIT, AbstractServletApiTestApp\r\n\r\n* added jakartaeeJettyIT\r\n\r\n* added more jakarta ee tomcat image versions\r\n\r\n* added openj9 images\r\n\r\n* added openj9 tomcat images\r\n\r\n* up parent version\r\n\r\n* updated version\r\n\r\n* change generic type def to uppercase\r\n\r\n* generate headers\r\n\r\n* added AdviceClass to static classes of ServletVersionInstrumentation implementations\r\n\r\n* restricted to LTS version in JakartaeeJettyIT, JakartaeeTomcatIT\r\n\r\n* left lts releases, added adoptopenjdk openj9 andn hotspot\r\n\r\n* Eliminate ServletTransactionCreationHelper merge conflict\r\n\r\n* revert merge conflict change\r\n\r\n* fix merge errors\r\n\r\n* fix NPE of failing test\r\n\r\n* fix failing tests\r\n\r\n* continue fixing test errors\r\n\r\n* some more test failure fixes\r\n\r\n* fix the integration test failure\r\n\r\n* remove JDK11-openJ9 from testing (to be fixed)\r\n\r\n* Replace @AssignTo with Byte Buddy's @Advice.AssignReturned\r\n\r\n* remove JDK11-openJ9 from testing (to be fixed)\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>\r\nCo-authored-by: jackshirazi <jacks@fasterj.com>\r\nCo-authored-by: jackshirazi <jack.shirazi@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b44fc14763ac1bed1c4510e9522cb87e6d214d32": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AbstractServletInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.servlet.AbstractServletInstrumentation.getClassLoaderMatcher()",
                    "public Collection<String> co.elastic.apm.agent.servlet.AbstractServletInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.servlet.AsyncInstrumentation.getInstrumentationGroupNames()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.AsyncInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/FilterChainInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.FilterChainInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.FilterChainInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/FilterInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.FilterInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.FilterInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/RequestStreamRecordingInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.getTypeMatcher()",
                    "public Collection<String> co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.servlet.ServletInstrumentation.getInstrumentationGroupNames()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.ServletInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.ServletInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletVersionInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.ServletVersionInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.ServletVersionInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ServletTransactionCreationHelper.java": []
            },
            "6d48460895845a86413680a561aca9f8aed991bb": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AbstractServletInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.servlet.AbstractServletInstrumentation.getClassLoaderMatcher()",
                    "public Collection<String> co.elastic.apm.agent.servlet.AbstractServletInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.servlet.AsyncInstrumentation.getInstrumentationGroupNames()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.AsyncInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/FilterChainInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.FilterChainInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.FilterChainInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/FilterInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.FilterInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.FilterInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/RequestStreamRecordingInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.getTypeMatcher()",
                    "public Collection<String> co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.servlet.ServletInstrumentation.getInstrumentationGroupNames()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.ServletInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.ServletInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletVersionInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.ServletVersionInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.ServletVersionInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ServletTransactionCreationHelper.java": [
                    "boolean co.elastic.apm.agent.servlet.helper.ServletTransactionCreationHelper.isExcluded(HttpServletRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "28e6f4524129e2abc485c375c7cb87c0f06b603f",
        "previous_commit": "a0fd551843e01813284df2fd03f491893da567d9",
        "date": 1589279134,
        "releases": {
            "previous": "28e6f4524129e2abc485c375c7cb87c0f06b603f",
            "next": "28e6f4524129e2abc485c375c7cb87c0f06b603f"
        },
        "commit_message": "Fix parent/child issues with inferred spans (#1117)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "28e6f4524129e2abc485c375c7cb87c0f06b603f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Id.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Id.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ByteUtils.java": [
                    "public static void co.elastic.apm.agent.util.ByteUtils.putLong(byte[] buffer, int offset, long l)",
                    "public static long co.elastic.apm.agent.util.ByteUtils.getLong(byte[] buffer, int offset)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/HexUtils.java": [
                    "public static void co.elastic.apm.agent.util.HexUtils.writeBytesAsHex(byte[] bytes, JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "protected Span co.elastic.apm.agent.profiler.CallTree.asSpan(Root root, TraceContext parentContext)",
                    "public void co.elastic.apm.agent.profiler.CallTree.end(ObjectPool<CallTree> pool, long minDurationNs)",
                    "private CallTree co.elastic.apm.agent.profiler.CallTree.addChild(StackFrame frame, List<StackFrame> stackFrames, int index, @Nullable TraceContext traceContext, long activationTimestamp, long nanoTime, ObjectPool<CallTree> callTreePool, long minDurationNs, Root root)",
                    "public void co.elastic.apm.agent.profiler.CallTree.onActivation(byte[] active, long timestamp)",
                    "public void co.elastic.apm.agent.profiler.CallTree.set(@Nullable CallTree parent, StackFrame frame, long nanoTime)",
                    "public void co.elastic.apm.agent.profiler.CallTree.resetState()",
                    "public void co.elastic.apm.agent.profiler.CallTree.addStackTrace(ElasticApmTracer tracer, List<StackFrame> stackTrace, long nanoTime, ObjectPool<CallTree> callTreePool, long minDurationNs)",
                    "protected void co.elastic.apm.agent.profiler.CallTree.handleDeactivation(TraceContext deactivatedSpan, long activationTimestamp, long deactivationTimestamp)",
                    "public void co.elastic.apm.agent.profiler.CallTree.onDeactivation(byte[] deactivated, byte[] active, long timestamp)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processActivationEventsUpTo(long timestamp, ActivationEvent event, long eof)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processTraces()"
                ]
            },
            "a0fd551843e01813284df2fd03f491893da567d9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Id.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Id.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ByteUtils.java": [
                    "public static void co.elastic.apm.agent.util.ByteUtils.putLong(byte[] buffer, int offset, long l)",
                    "public static long co.elastic.apm.agent.util.ByteUtils.getLong(byte[] buffer, int offset)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/HexUtils.java": [
                    "public static void co.elastic.apm.agent.util.HexUtils.writeBytesAsHex(byte[] bytes, JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "protected Span co.elastic.apm.agent.profiler.CallTree.asSpan(Root root, TraceContext parentContext)",
                    "public void co.elastic.apm.agent.profiler.CallTree.onActivation(byte[] active, long timestamp)",
                    "public void co.elastic.apm.agent.profiler.CallTree.set(@Nullable CallTree parent, StackFrame frame, long nanoTime)",
                    "private void co.elastic.apm.agent.profiler.CallTree.addChild(StackFrame frame, List<StackFrame> stackFrames, int index, @Nullable TraceContext traceContext, long activationTimestamp, long nanoTime, ObjectPool<CallTree> callTreePool, long minDurationNs)",
                    "public void co.elastic.apm.agent.profiler.CallTree.resetState()",
                    "public void co.elastic.apm.agent.profiler.CallTree.addStackTrace(ElasticApmTracer tracer, List<StackFrame> stackTrace, long nanoTime, ObjectPool<CallTree> callTreePool, long minDurationNs)",
                    "void co.elastic.apm.agent.profiler.CallTree.end(ObjectPool<CallTree> pool, long minDurationNs)",
                    "protected void co.elastic.apm.agent.profiler.CallTree.handleDeactivation(TraceContext deactivatedSpan, long activationTimestamp, long deactivationTimestamp)",
                    "public void co.elastic.apm.agent.profiler.CallTree.onDeactivation(byte[] deactivated, byte[] active, long timestamp)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processActivationEventsUpTo(long timestamp, ActivationEvent event, long eof)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processTraces()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "cb870b072523f83c56669ba8f4cabc3b48f79c44",
        "previous_commit": "06e2309d40bf551dff75748115b44ea0806e307d",
        "date": 1647510671,
        "releases": {
            "previous": "cb870b072523f83c56669ba8f4cabc3b48f79c44",
            "next": "cb870b072523f83c56669ba8f4cabc3b48f79c44"
        },
        "commit_message": "OSGi classloading workaround + refactor servlet contants (#2418)\n\n* draft printf debugging\r\n\r\n* use proper logging instead\r\n\r\n* fix log4j classloader name lookup\r\n\r\n* Update apm-agent-core/src/test/java/co/elastic/apm/agent/logging/LoggingConfigurationTest.java\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>\r\n\r\n* refactor servlet constants + add osgi work-around\r\n\r\n* prevent SecurityException with Apache sling\r\n\r\n* update changelog\r\n\r\n* remove useless ref to parent CL\r\n\r\n* add *Matcher suffix for extra clarity\r\n\r\n* simplify + add CL toString()\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "cb870b072523f83c56669ba8f4cabc3b48f79c44": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AbstractServletInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.servlet.AbstractServletInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.servlet.AsyncInstrumentation.getInstrumentationGroupNames()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.AsyncInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/FilterChainInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.FilterChainInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.FilterChainInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/FilterInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.FilterInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.FilterInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/RequestStreamRecordingInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.getTypeMatcher()",
                    "public Collection<String> co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.ServletInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.ServletInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletServiceNameHelper.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.servlet.ServletServiceNameHelper.determineServiceName(ServletContextAdapter<ServletContext> adapter, @Nullable ServletContext servletContext, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletVersionInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.ServletVersionInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.ServletVersionInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/adapter/JavaxServletApiAdapter.java": [
                    "public ClassLoader co.elastic.apm.agent.servlet.adapter.JavaxServletApiAdapter.getClassLoader(@Nullable ServletContext servletContext)"
                ]
            },
            "06e2309d40bf551dff75748115b44ea0806e307d": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AbstractServletInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.servlet.AbstractServletInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.servlet.AsyncInstrumentation.getInstrumentationGroupNames()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.AsyncInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/FilterChainInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.FilterChainInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.FilterChainInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/FilterInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.FilterInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.FilterInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/RequestStreamRecordingInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.getTypeMatcher()",
                    "public Collection<String> co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.ServletInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.ServletInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletServiceNameHelper.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.servlet.ServletServiceNameHelper.determineServiceName(ServletContextAdapter<ServletContext> adapter, @Nullable ServletContext servletContext, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletVersionInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.ServletVersionInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.ServletVersionInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/adapter/JavaxServletApiAdapter.java": [
                    "public ClassLoader co.elastic.apm.agent.servlet.adapter.JavaxServletApiAdapter.getClassLoader(@Nullable ServletContext servletContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "72573b6667fc871f707216eb1d8ffcd52d081f25",
        "previous_commit": "d66ee5f6826c0dbde2c208c06cd3e318d85d61a8",
        "date": 1638363220,
        "releases": {
            "previous": "72573b6667fc871f707216eb1d8ffcd52d081f25",
            "next": "72573b6667fc871f707216eb1d8ffcd52d081f25"
        },
        "commit_message": "Lambda instrumentation (#1951)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "72573b6667fc871f707216eb1d8ffcd52d081f25": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServiceNameUtil.java": [
                    "public static String co.elastic.apm.agent.configuration.ServiceNameUtil.getDefaultServiceName()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/TransactionContext.java": [
                    "public void co.elastic.apm.agent.impl.context.TransactionContext.copyFrom(TransactionContext other)",
                    "public void co.elastic.apm.agent.impl.context.TransactionContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/CloudMetadataProvider.java": [
                    "static CloudProviderInfo co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.deserializeAzureMetadata(@Nullable String rawMetadata)",
                    "static CloudProviderInfo co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.deserializeAwsMetadata(@Nullable String rawMetadata)",
                    "static CloudProviderInfo co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.deserializeGcpMetadata(@Nullable String rawMetadata)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/CloudProviderInfo.java": [
                    "public String co.elastic.apm.agent.impl.metadata.CloudProviderInfo.toString()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/MetaData.java": [
                    "public CloudProviderInfo co.elastic.apm.agent.impl.metadata.MetaData.call()",
                    "public SystemInfo co.elastic.apm.agent.impl.metadata.MetaData.call()",
                    "public MetaData co.elastic.apm.agent.impl.metadata.MetaData.call()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeContext(@Nullable final Transaction transaction, final TransactionContext context, TraceContext traceContext)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeCloudProvider(final CloudProviderInfo cloudProviderInfo, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeService(final Service service, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ]
            },
            "d66ee5f6826c0dbde2c208c06cd3e318d85d61a8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServiceNameUtil.java": [
                    "public static String co.elastic.apm.agent.configuration.ServiceNameUtil.getDefaultServiceName()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/TransactionContext.java": [
                    "public void co.elastic.apm.agent.impl.context.TransactionContext.copyFrom(TransactionContext other)",
                    "public void co.elastic.apm.agent.impl.context.TransactionContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/CloudMetadataProvider.java": [
                    "static CloudProviderInfo co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.deserializeAzureMetadata(@Nullable String rawMetadata)",
                    "static CloudProviderInfo co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.deserializeAwsMetadata(@Nullable String rawMetadata)",
                    "static CloudProviderInfo co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.deserializeGcpMetadata(@Nullable String rawMetadata)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/CloudProviderInfo.java": [
                    "public String co.elastic.apm.agent.impl.metadata.CloudProviderInfo.toString()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/MetaData.java": [
                    "public CloudProviderInfo co.elastic.apm.agent.impl.metadata.MetaData.call()",
                    "public SystemInfo co.elastic.apm.agent.impl.metadata.MetaData.call()",
                    "public MetaData co.elastic.apm.agent.impl.metadata.MetaData.call()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeContext(@Nullable final Transaction transaction, final TransactionContext context, TraceContext traceContext)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeCloudProvider(final CloudProviderInfo cloudProviderInfo, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeService(final Service service, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b0dbda275335adf618d1e4c8fc94a53ce19f6764",
        "previous_commit": "5168a495ee36e796c9b2e3bfd6e2710426ad95be",
        "date": 1593697375,
        "releases": {
            "previous": "b0dbda275335adf618d1e4c8fc94a53ce19f6764",
            "next": "b0dbda275335adf618d1e4c8fc94a53ce19f6764"
        },
        "commit_message": "Indy plugins (#1230)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b0dbda275335adf618d1e4c8fc94a53ce19f6764": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.bci.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()",
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmTracer tracer, final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/HelperClassManager.java": [
                    "private static byte[] co.elastic.apm.agent.bci.HelperClassManager<T>.getAgentClassBytes(String className)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "private static String co.elastic.apm.agent.configuration.StartupInfo.getJvmAndOsVersionString()"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/ExecutorInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "public static <T> ForkJoinTask<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable ForkJoinTask<T> task, @Nullable ElasticApmTracer tracer)",
                    "public static <T> Callable<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Callable<T> callable, @Nullable ElasticApmTracer tracer)",
                    "public static Runnable co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Runnable runnable, @Nullable ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object span, @Advice.Thrown Throwable t, @Advice.Return Object returnValue)",
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object span, @Advice.Thrown @Nullable Throwable t, @Advice.Return long returnValue /* bytebuddy converts int to long for us here ! */)",
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.This Statement statement, @Advice.Enter @Nullable Object span, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.servlet.AsyncInstrumentation.onExitStartAsync(@Advice.Return AsyncContext asyncContext)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletVersionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.servlet.ServletVersionInstrumentation.onEnter(@Advice.This Servlet servlet)"
                ]
            },
            "5168a495ee36e796c9b2e3bfd6e2710426ad95be": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.bci.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()",
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmTracer tracer, final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/HelperClassManager.java": [
                    "private static byte[] co.elastic.apm.agent.bci.HelperClassManager<T>.getAgentClassBytes(String className)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "private static String co.elastic.apm.agent.configuration.StartupInfo.getJvmAndOsVersionString()"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/ExecutorInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "public static <T> ForkJoinTask<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable ForkJoinTask<T> task, @Nullable ElasticApmTracer tracer)",
                    "public static <T> Callable<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Callable<T> callable, @Nullable ElasticApmTracer tracer)",
                    "public static Runnable co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Runnable runnable, @Nullable ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Span span, @Advice.Thrown Throwable t, @Advice.Return Object returnValue)",
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Span span, @Advice.Thrown @Nullable Throwable t, @Advice.Return long returnValue /* bytebuddy converts int to long for us here ! */)",
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.This Statement statement, @Advice.Enter @Nullable Span span, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "private static void co.elastic.apm.agent.servlet.AsyncInstrumentation.onExitStartAsync(@Advice.Return AsyncContext asyncContext)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletVersionInstrumentation.java": [
                    "private static void co.elastic.apm.agent.servlet.ServletVersionInstrumentation.onEnter(@Advice.This Servlet servlet)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "664e4ff4ef9e61b090bad2e3c8e05cb36452b9cd",
        "previous_commit": "a5ce52b76fb2c4202785950a3646fd796e7f75bd",
        "date": 1647353555,
        "releases": {
            "previous": "664e4ff4ef9e61b090bad2e3c8e05cb36452b9cd",
            "next": "664e4ff4ef9e61b090bad2e3c8e05cb36452b9cd"
        },
        "commit_message": "Implemented AWS lambda spec changes (#2424)\n\n* Implemented AWS lambda spec changes\r\n\r\n* fix lambda meta data test with env variables\r\n\r\n* Fixed metadata test for lambda\r\n\r\n* Fixed handling of improper payload\r\n\r\n* minor fix for transaction naming on ApiGatewayv2\r\n\r\n* Added capturing of faas.name and faas.version\r\n\r\n* Minor changes\r\n\r\n* Simplify lambda service name and veresion test\r\n\r\n* Remove nonnull annotation\r\n\r\n* Best-effort transaction naming and extracting common logic\r\n\r\n* Implementing flush request\r\n\r\n* Fixing ARN parsing bug\r\n\r\nCo-authored-by: Alexander Wert <AlexanderWert@users.noreply.github.com>\r\n\r\n* Updating docs\r\n\r\n* Logging enabled instrumentations after the first Lambda invocation\r\n\r\n* Adding to CHANGELOG\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "664e4ff4ef9e61b090bad2e3c8e05cb36452b9cd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServiceInfo.java": [
                    "public static ServiceInfo co.elastic.apm.agent.configuration.ServiceInfo.autoDetect(Properties properties)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/ServiceFactory.java": [
                    "private void co.elastic.apm.agent.impl.metadata.ServiceFactory.augmentServiceForAWSLambda(Service service)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Faas.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Faas.copyFrom(Faas other)",
                    "public boolean co.elastic.apm.agent.impl.transaction.Faas.hasContent()",
                    "public void co.elastic.apm.agent.impl.transaction.Faas.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public boolean co.elastic.apm.agent.report.ApmServerReporter.flush()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.dispatchEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeFaas(final Faas faas)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV1TransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.doStartTransaction(APIGatewayProxyRequestEvent apiGatewayEvent, Context lambdaContext)",
                    "public void co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.captureOutputForTransaction(Transaction transaction, APIGatewayProxyResponseEvent responseEvent)",
                    "protected String co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.getHttpMethod(APIGatewayProxyRequestEvent event)",
                    "protected void co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.setTransactionTriggerData(Transaction transaction, APIGatewayProxyRequestEvent apiGatewayRequest)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV2TransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.doStartTransaction(APIGatewayV2HTTPEvent apiGatewayEvent, Context lambdaContext)",
                    "protected String co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.getHttpMethod(APIGatewayV2HTTPEvent event)",
                    "protected void co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.setTransactionTriggerData(Transaction transaction, APIGatewayV2HTTPEvent apiGatewayRequest)"
                ]
            },
            "a5ce52b76fb2c4202785950a3646fd796e7f75bd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServiceInfo.java": [
                    "public static ServiceInfo co.elastic.apm.agent.configuration.ServiceInfo.autoDetect(Properties properties)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/ServiceFactory.java": [
                    "private void co.elastic.apm.agent.impl.metadata.ServiceFactory.augmentServiceForAWSLambda(Service service)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Faas.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Faas.copyFrom(Faas other)",
                    "public boolean co.elastic.apm.agent.impl.transaction.Faas.hasContent()",
                    "public void co.elastic.apm.agent.impl.transaction.Faas.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public boolean co.elastic.apm.agent.report.ApmServerReporter.flush()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.dispatchEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeFaas(final Faas faas)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV1TransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.doStartTransaction(APIGatewayProxyRequestEvent apiGatewayEvent, Context lambdaContext)",
                    "public void co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.captureOutputForTransaction(Transaction transaction, APIGatewayProxyResponseEvent responseEvent)",
                    "protected String co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.getHttpMethod(APIGatewayProxyRequestEvent event)",
                    "protected void co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.setTransactionTriggerData(Transaction transaction, APIGatewayProxyRequestEvent apiGatewayRequest)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV2TransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.doStartTransaction(APIGatewayV2HTTPEvent apiGatewayEvent, Context lambdaContext)",
                    "protected String co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.getHttpMethod(APIGatewayV2HTTPEvent event)",
                    "protected void co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.setTransactionTriggerData(Transaction transaction, APIGatewayV2HTTPEvent apiGatewayRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e0bb8efef1f8225a5d61e5f7673826e673796cda",
        "previous_commit": "9ca4ee42831b11c302447f1dd43f1036691c5784",
        "date": 1527014108,
        "releases": {
            "previous": "e0bb8efef1f8225a5d61e5f7673826e673796cda",
            "next": "e0bb8efef1f8225a5d61e5f7673826e673796cda"
        },
        "commit_message": "Add OpenTracing bridge implementation with BCI (#86)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e0bb8efef1f8225a5d61e5f7673826e673796cda": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmInstrumentation.java": [
                    "public void co.elastic.apm.bci.ElasticApmInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScope.java": [
                    "public void co.elastic.apm.opentracing.ApmScope.close()"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScopeManager.java": [
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.active()",
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.activate(Span span, boolean finishSpanOnClose)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpan.java": [
                    "public String co.elastic.apm.opentracing.ApmSpan.getBaggageItem(String key)",
                    "public ApmSpan co.elastic.apm.opentracing.ApmSpan.setOperationName(String operationName)",
                    "public void co.elastic.apm.opentracing.ApmSpan.finish(long finishMicros)",
                    "private void co.elastic.apm.opentracing.ApmSpan.handleTag(String key, @Nullable Object value)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpanBuilder.java": [
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.withTag(String key, Number value)",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.asChildOf(SpanContext parent)",
                    "private ApmSpan co.elastic.apm.opentracing.ApmSpanBuilder.startApmSpan()",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.asChildOf(Span parent)",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.addReference(String referenceType, SpanContext referencedContext)",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.withStartTimestamp(long microseconds)"
                ]
            },
            "9ca4ee42831b11c302447f1dd43f1036691c5784": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmInstrumentation.java": [
                    "public void co.elastic.apm.bci.ElasticApmInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScope.java": [
                    "public void co.elastic.apm.opentracing.ApmScope.close()"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScopeManager.java": [
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.active()",
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.activate(Span span, boolean finishSpanOnClose)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpan.java": [
                    "public String co.elastic.apm.opentracing.ApmSpan.getBaggageItem(String key)",
                    "public ApmSpan co.elastic.apm.opentracing.ApmSpan.setOperationName(String operationName)",
                    "public void co.elastic.apm.opentracing.ApmSpan.finish(long finishMicros)",
                    "private void co.elastic.apm.opentracing.ApmSpan.handleTag(String key, @Nullable Object value)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpanBuilder.java": [
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.withTag(String key, Number value)",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.asChildOf(SpanContext parent)",
                    "private ApmSpan co.elastic.apm.opentracing.ApmSpanBuilder.startApmSpan()",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.asChildOf(Span parent)",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.addReference(String referenceType, SpanContext referencedContext)",
                    "public ApmSpanBuilder co.elastic.apm.opentracing.ApmSpanBuilder.withStartTimestamp(long microseconds)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "96c5ec6c54f5e1deb82a2e4e200d21e1db6560f7",
        "previous_commit": "58ae2285e64a824f2997d80d6880cb937e4771ba",
        "date": 1636355472,
        "releases": {
            "previous": "96c5ec6c54f5e1deb82a2e4e200d21e1db6560f7",
            "next": "96c5ec6c54f5e1deb82a2e4e200d21e1db6560f7"
        },
        "commit_message": "Improve flush (#2228)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "96c5ec6c54f5e1deb82a2e4e200d21e1db6560f7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)",
                    "protected void co.elastic.apm.agent.report.AbstractIntakeApiHandler.onConnectionError(@Nullable Integer responseCode, long droppedEvents, long reportedEvents)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(JsonWriter jsonWriter)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(Transaction transaction)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(ErrorCapture error)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.close()",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(Span span)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.translateTo(ReportingEvent event, long sequence)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "protected HttpURLConnection co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.startRequest(String endpoint)",
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.run()",
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.close()",
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.init(ApmServerReporter reporter)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReportingEvent.java": [
                    "public void co.elastic.apm.agent.report.ReportingEvent.resetState()",
                    "public void co.elastic.apm.agent.report.ReportingEvent.end()"
                ]
            },
            "58ae2285e64a824f2997d80d6880cb937e4771ba": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)",
                    "protected void co.elastic.apm.agent.report.AbstractIntakeApiHandler.onConnectionError(@Nullable Integer responseCode, long droppedEvents, long reportedEvents)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(JsonWriter jsonWriter)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(Transaction transaction)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(ErrorCapture error)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.close()",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.report(Span span)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.translateTo(ReportingEvent event, long sequence)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "protected HttpURLConnection co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.startRequest(String endpoint)",
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.run()",
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.close()",
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.init(ApmServerReporter reporter)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReportingEvent.java": [
                    "public void co.elastic.apm.agent.report.ReportingEvent.resetState()",
                    "public void co.elastic.apm.agent.report.ReportingEvent.end()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "707982892b4f5511abdcea0c0f7214942ad09204",
        "previous_commit": "e58f865400f068b32fc2721e4c24b791d1f01bca",
        "date": 1525114910,
        "releases": {
            "previous": "707982892b4f5511abdcea0c0f7214942ad09204",
            "next": "707982892b4f5511abdcea0c0f7214942ad09204"
        },
        "commit_message": "Fix noop handling for Transactions and Spans (#75)\n\n- Adds Transaction.noop flag\r\n- noop Transactions don't get reported\r\n- noop Transactions are not a singleton, as this leads or threading issues\r\n- startSpan returns null if current transaction is null or noop\r\n- public api never returns null span but returns noop span\r\n\r\nfixes #71",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "707982892b4f5511abdcea0c0f7214942ad09204": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.noopTransaction()",
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span, boolean releaseActiveSpan)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.endTransaction(Transaction transaction, boolean releaseActiveTransaction)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startManualTransaction(Sampler sampler, long nanoTime)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startManualSpan(@Nullable Transaction transaction, @Nullable Span parentSpan, long nanoTime)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(ElasticApmTracer tracer, long startTimestampNanos, Sampler sampler)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/ApmJdbcEventListener.java": [
                    "public void co.elastic.apm.jdbc.ApmJdbcEventListener.onAfterAnyExecute(StatementInformation statementInformation, long timeElapsedNanos, SQLException e)",
                    "public void co.elastic.apm.jdbc.ApmJdbcEventListener.onBeforeAnyExecute(StatementInformation statementInformation)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScope.java": [
                    "public void co.elastic.apm.opentracing.ApmScope.close()"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScopeManager.java": [
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.activate(Span span, boolean finishSpanOnClose)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpan.java": [
                    "public ApmSpan co.elastic.apm.opentracing.ApmSpan.setOperationName(String operationName)",
                    "private void co.elastic.apm.opentracing.ApmSpan.handleTag(String key, @Nullable Object value)"
                ]
            },
            "e58f865400f068b32fc2721e4c24b791d1f01bca": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.noopTransaction()",
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span, boolean releaseActiveSpan)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.endTransaction(Transaction transaction, boolean releaseActiveTransaction)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startManualTransaction(Sampler sampler, long nanoTime)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startManualSpan(@Nullable Transaction transaction, @Nullable Span parentSpan, long nanoTime)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(ElasticApmTracer tracer, long startTimestampNanos, Sampler sampler)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/ApmJdbcEventListener.java": [
                    "public void co.elastic.apm.jdbc.ApmJdbcEventListener.onAfterAnyExecute(StatementInformation statementInformation, long timeElapsedNanos, SQLException e)",
                    "public void co.elastic.apm.jdbc.ApmJdbcEventListener.onBeforeAnyExecute(StatementInformation statementInformation)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScope.java": [
                    "public void co.elastic.apm.opentracing.ApmScope.close()"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScopeManager.java": [
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.activate(Span span, boolean finishSpanOnClose)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpan.java": [
                    "public ApmSpan co.elastic.apm.opentracing.ApmSpan.setOperationName(String operationName)",
                    "private void co.elastic.apm.opentracing.ApmSpan.handleTag(String key, @Nullable Object value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "96b7d60e4edcb39242ab5d7922111d52fd9c1023",
        "previous_commit": "bbba17aa822beb08a279394c8daa6ae15ea08df0",
        "date": 1583241949,
        "releases": {
            "previous": "96b7d60e4edcb39242ab5d7922111d52fd9c1023",
            "next": "96b7d60e4edcb39242ab5d7922111d52fd9c1023"
        },
        "commit_message": "Adding pause/resume functionality to reduce agent overhead on stress (#1040)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "96b7d60e4edcb39242ab5d7922111d52fd9c1023": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/context/LifecycleListener.java": [],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.stop()",
                    "public <C> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startChildTransaction(@Nullable C headerCarrier, BinaryHeaderGetter<C> binaryHeadersGetter, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public <C> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startChildTransaction(@Nullable C headerCarrier, TextHeaderGetter<C> textHeadersGetter, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()",
                    "private LifecycleListener co.elastic.apm.agent.impl.ElasticApmTracerBuilder.scheduleReloadAtRate(final ConfigurationRegistry configurationRegistry, final int rate, TimeUnit seconds)",
                    "private ConfigurationRegistry co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry(List<ConfigurationSource> configSources)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.run()",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.scheduleMetricReporting(final MetricRegistry metricRegistry, long intervalMs, final ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.agent.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, ApmServerClient apmServerClient, MetaData metaData)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/mdc/MdcActivationListener.java": [
                    "public void co.elastic.apm.agent.mdc.MdcActivationListener.beforeActivate(TraceContextHolder<?> context)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.run()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ServletTransactionCreationHelperImpl.java": [
                    "public Transaction co.elastic.apm.agent.servlet.helper.ServletTransactionCreationHelperImpl.createAndActivateTransaction(HttpServletRequest request)"
                ]
            },
            "bbba17aa822beb08a279394c8daa6ae15ea08df0": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/context/LifecycleListener.java": [
                    "public void co.elastic.apm.agent.context.ClosableAdapter.stop()",
                    "public void co.elastic.apm.agent.context.ClosableAdapter.start(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public <C> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startChildTransaction(@Nullable C headerCarrier, BinaryHeaderGetter<C> binaryHeadersGetter, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.stop()",
                    "public <C> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startChildTransaction(@Nullable C headerCarrier, TextHeaderGetter<C> textHeadersGetter, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()",
                    "private LifecycleListener co.elastic.apm.agent.impl.ElasticApmTracerBuilder.scheduleReloadAtRate(final ConfigurationRegistry configurationRegistry, final int rate, TimeUnit seconds)",
                    "private ConfigurationRegistry co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry(List<ConfigurationSource> configSources)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.run()",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.scheduleMetricReporting(final MetricRegistry metricRegistry, long intervalMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.agent.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, ApmServerClient apmServerClient, MetaData metaData)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/mdc/MdcActivationListener.java": [
                    "public void co.elastic.apm.agent.mdc.MdcActivationListener.beforeActivate(TraceContextHolder<?> context)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.run()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ServletTransactionCreationHelperImpl.java": [
                    "public Transaction co.elastic.apm.agent.servlet.helper.ServletTransactionCreationHelperImpl.createAndActivateTransaction(HttpServletRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5fad53be2ea6a6a09b3328c925f6eeba23949381",
        "previous_commit": "835ec877dab65ec87f9586ce9917de5f2b0a19c2",
        "date": 1673626578,
        "releases": {
            "previous": "5fad53be2ea6a6a09b3328c925f6eeba23949381",
            "next": "5fad53be2ea6a6a09b3328c925f6eeba23949381"
        },
        "commit_message": "Send logs via intake API (#2694)\n\n\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5fad53be2ea6a6a09b3328c925f6eeba23949381": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initialize(@Nullable final String agentArguments, final Instrumentation instrumentation, final File agentJarFile, final boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "Configuration co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.getConfiguration()",
                    "private AppenderRefComponentBuilder co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.createFileAppender(ConfigurationBuilder<BuiltConfiguration> builder, String logFile, LayoutComponentBuilder layout)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public static void co.elastic.apm.agent.logging.LoggingConfiguration.init(List<ConfigurationSource> sources, String ephemeralId)",
                    "private static void co.elastic.apm.agent.logging.LoggingConfiguration.setLogLevel(@Nullable LogLevel level)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/AgentReporterMetrics.java": [
                    "static Labels co.elastic.apm.agent.metrics.builtin.AgentReporterMetrics.getLabelFor(ReportingEvent.ReportingEventType type)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public boolean co.elastic.apm.agent.report.ApmServerClient.supportsLogsEndpoint()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.translateTo(ReportingEvent event, long sequence, JsonWriter jsonWriter)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.writeEvent(ReportingEvent event)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.dispatchEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReportingEvent.java": [
                    "public void co.elastic.apm.agent.report.ReportingEvent.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistryReporter.java": [
                    "public void co.elastic.apm.agent.report.serialize.MetricRegistryReporter.report(Map<? extends Labels, MetricSet> metricSets)"
                ],
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMetricsReporter.java": [
                    "void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.run(final long now)"
                ]
            },
            "835ec877dab65ec87f9586ce9917de5f2b0a19c2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initialize(@Nullable final String agentArguments, final Instrumentation instrumentation, final File agentJarFile, final boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "Configuration co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.getConfiguration()",
                    "private AppenderComponentBuilder co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.createFileAppender(ConfigurationBuilder<BuiltConfiguration> builder, String logFile, LayoutComponentBuilder layout)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public static void co.elastic.apm.agent.logging.LoggingConfiguration.init(List<ConfigurationSource> sources, String ephemeralId)",
                    "private static void co.elastic.apm.agent.logging.LoggingConfiguration.setLogLevel(@Nullable LogLevel level)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/AgentReporterMetrics.java": [
                    "private Labels co.elastic.apm.agent.metrics.builtin.AgentReporterMetrics.getLabelFor(ReportingEvent.ReportingEventType type)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public boolean co.elastic.apm.agent.report.ApmServerClient.supportsLogsEndpoint()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.translateTo(ReportingEvent event, long sequence, JsonWriter jsonWriter)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.writeEvent(ReportingEvent event)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.dispatchEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReportingEvent.java": [
                    "public void co.elastic.apm.agent.report.ReportingEvent.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistryReporter.java": [
                    "public void co.elastic.apm.agent.report.serialize.MetricRegistryReporter.report(Map<? extends Labels, MetricSet> metricSets)"
                ],
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMetricsReporter.java": [
                    "void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.run(final long now)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9379f5f0646f332446a3d2441ec96391426c4086",
        "previous_commit": "700b9e66f62d6dd643a2ccb4c39335771b1bdab5",
        "date": 1553188402,
        "releases": {
            "previous": "9379f5f0646f332446a3d2441ec96391426c4086",
            "next": "9379f5f0646f332446a3d2441ec96391426c4086"
        },
        "commit_message": "Use display-name or context path as the default service name (#514)\n\nEnables to have multiple service names per JVM,\r\none per class loader.\r\n\r\ncloses #136",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9379f5f0646f332446a3d2441ec96391426c4086": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable TraceContextHolder<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeHttpContext(final Http http)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeDbContext(final Db db)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "private static AbstractSpan<?> co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.createTransaction(Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ElasticApmTracer tracer, ClassLoader classLoader)",
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable TraceContext parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.servlet.ServletInstrumentation.getTypeMatcherPreFilter()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.ServletInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public Transaction co.elastic.apm.agent.servlet.ServletTransactionHelper.onBefore(ClassLoader classLoader, String servletPath, @Nullable String pathInfo, @Nullable String userAgentHeader, @Nullable String traceContextHeader)"
                ]
            },
            "700b9e66f62d6dd643a2ccb4c39335771b1bdab5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable TraceContextHolder<?> parent)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeHttpContext(final Http http)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeDbContext(final Db db)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable TraceContext parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage)",
                    "private static AbstractSpan<?> co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.createTransaction(Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.servlet.ServletInstrumentation.getTypeMatcherPreFilter()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.ServletInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public Transaction co.elastic.apm.agent.servlet.ServletTransactionHelper.onBefore(String servletPath, @Nullable String pathInfo, @Nullable String userAgentHeader, @Nullable String traceContextHeader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7e3b21aff82b5ed75331757eec2d7ab5026a4c42",
        "previous_commit": "940e717ad9662d5009f6e6b6bd14f66c5bd896f0",
        "date": 1520458306,
        "releases": {
            "previous": "7e3b21aff82b5ed75331757eec2d7ab5026a4c42",
            "next": "7e3b21aff82b5ed75331757eec2d7ab5026a4c42"
        },
        "commit_message": "Add error capturing to ApmFilter\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7e3b21aff82b5ed75331757eec2d7ab5026a4c42": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(Exception e)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Error.java": [
                    "public String co.elastic.apm.impl.Error.toString()",
                    "public void co.elastic.apm.impl.Error.resetState()",
                    "public int co.elastic.apm.impl.Error.hashCode()",
                    "public boolean co.elastic.apm.impl.Error.equals(Object other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/Request.java": [
                    "public String co.elastic.apm.impl.context.Request.toString()",
                    "public boolean co.elastic.apm.impl.context.Request.equals(Object other)",
                    "public int co.elastic.apm.impl.context.Request.hashCode()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ExceptionInfo.java": [
                    "public void co.elastic.apm.impl.error.ExceptionInfo.resetState()",
                    "public boolean co.elastic.apm.impl.error.ExceptionInfo.equals(Object other)",
                    "public String co.elastic.apm.impl.error.ExceptionInfo.toString()",
                    "public int co.elastic.apm.impl.error.ExceptionInfo.hashCode()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)",
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)"
                ]
            },
            "940e717ad9662d5009f6e6b6bd14f66c5bd896f0": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.recordException(Exception e)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Error.java": [
                    "public String co.elastic.apm.impl.Error.toString()",
                    "public void co.elastic.apm.impl.Error.resetState()",
                    "public int co.elastic.apm.impl.Error.hashCode()",
                    "public boolean co.elastic.apm.impl.Error.equals(Object other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/Request.java": [
                    "public String co.elastic.apm.impl.context.Request.toString()",
                    "public boolean co.elastic.apm.impl.context.Request.equals(Object other)",
                    "public int co.elastic.apm.impl.context.Request.hashCode()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ExceptionInfo.java": [
                    "public void co.elastic.apm.impl.error.ExceptionInfo.resetState()",
                    "public boolean co.elastic.apm.impl.error.ExceptionInfo.equals(Object other)",
                    "public String co.elastic.apm.impl.error.ExceptionInfo.toString()",
                    "public int co.elastic.apm.impl.error.ExceptionInfo.hashCode()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)",
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1e26d7dac9e3b9f0640ed7d58b59f333c593b58b",
        "previous_commit": "2fcf4b6bc3d7f5e99048f41297718670ef738717",
        "date": 1597073869,
        "releases": {
            "previous": "1e26d7dac9e3b9f0640ed7d58b59f333c593b58b",
            "next": "1e26d7dac9e3b9f0640ed7d58b59f333c593b58b"
        },
        "commit_message": "Add micrometer support (#1303)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1e26d7dac9e3b9f0640ed7d58b59f333c593b58b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)",
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation, boolean premain)",
                    "public static synchronized Future<?> co.elastic.apm.agent.bci.ElasticApmAgent.reInitInstrumentation()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "public void co.elastic.apm.agent.configuration.ApmServerConfigurationSource.start(final ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.startWithDelay(final long delayInitMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private LifecycleListener co.elastic.apm.agent.impl.ElasticApmTracerBuilder.scheduleReloadAtRate(final ConfigurationRegistry configurationRegistry, final int rate, TimeUnit seconds)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public Future<Version> co.elastic.apm.agent.report.ApmServerHealthChecker.checkHealthAndGetMinVersion()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.close()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.writeEvent(ReportingEvent event)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReportingEvent.java": [
                    "public void co.elastic.apm.agent.report.ReportingEvent.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "protected void co.elastic.apm.agent.util.ExecutorUtils.afterExecute(Runnable r, Throwable t)"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/weakmap/WeakMapSupplier.java": [
                    "public static void co.elastic.apm.agent.sdk.weakmap.WeakMapSupplier.expungeStaleEntries()"
                ]
            },
            "2fcf4b6bc3d7f5e99048f41297718670ef738717": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)",
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation, boolean premain)",
                    "public static synchronized Future<?> co.elastic.apm.agent.bci.ElasticApmAgent.reInitInstrumentation()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "public void co.elastic.apm.agent.configuration.ApmServerConfigurationSource.start(final ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.startWithDelay(final long delayInitMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private LifecycleListener co.elastic.apm.agent.impl.ElasticApmTracerBuilder.scheduleReloadAtRate(final ConfigurationRegistry configurationRegistry, final int rate, TimeUnit seconds)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public Future<Version> co.elastic.apm.agent.report.ApmServerHealthChecker.checkHealthAndGetMinVersion()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.close()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.writeEvent(ReportingEvent event)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReportingEvent.java": [
                    "public void co.elastic.apm.agent.report.ReportingEvent.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "protected void co.elastic.apm.agent.util.ExecutorUtils.afterExecute(Runnable r, Throwable t)"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/weakmap/WeakMapSupplier.java": [
                    "public static void co.elastic.apm.agent.sdk.weakmap.WeakMapSupplier.expungeStaleEntries()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9528d35842985671e90f20e9699ad27cc21a8f30",
        "previous_commit": "763f6f33b68299c241e0c4091133ca2660f9d758",
        "date": 1581690280,
        "releases": {
            "previous": "9528d35842985671e90f20e9699ad27cc21a8f30",
            "next": "9528d35842985671e90f20e9699ad27cc21a8f30"
        },
        "commit_message": "Add support for W3C Trace Context headers (#1024)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9528d35842985671e90f20e9699ad27cc21a8f30": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(@Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public <T> Transaction co.elastic.apm.agent.impl.transaction.Transaction.start(TraceContext.ChildContextCreator<T> childContextCreator, @Nullable T parent, long epochMicros, Sampler sampler, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/BaseJmsInstrumentation.java": [
                    "private synchronized static void co.elastic.apm.agent.jms.BaseJmsInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/BaseKafkaHeadersInstrumentation.java": [
                    "private synchronized static void co.elastic.apm.agent.kafka.BaseKafkaHeadersInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ElasticHeaderImpl.java": [
                    "public byte[] co.elastic.apm.agent.kafka.helper.ElasticHeaderImpl.value()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "private static AbstractSpan<?> co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.createTransaction(Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ElasticApmTracer tracer, ClassLoader classLoader)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ExternalSpanContextInstrumentation.java": [
                    "public static TraceContext co.elastic.apm.agent.opentracing.impl.ExternalSpanContextInstrumentation.parseTextMap(Iterable<Map.Entry<String, String>> textMap)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/SpanContextInstrumentation.java": [
                    "public static Iterable<Map.Entry<String, String>> co.elastic.apm.agent.opentracing.impl.SpanContextInstrumentation.doGetBaggage(TraceContext traceContext)"
                ]
            },
            "763f6f33b68299c241e0c4091133ca2660f9d758": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <T> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(@Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public <T> Transaction co.elastic.apm.agent.impl.transaction.Transaction.start(TraceContext.ChildContextCreator<T> childContextCreator, @Nullable T parent, long epochMicros, Sampler sampler, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/BaseJmsInstrumentation.java": [
                    "private synchronized static void co.elastic.apm.agent.jms.BaseJmsInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/BaseKafkaHeadersInstrumentation.java": [
                    "private synchronized static void co.elastic.apm.agent.kafka.BaseKafkaHeadersInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ElasticHeaderImpl.java": [
                    "public byte[] co.elastic.apm.agent.kafka.helper.ElasticHeaderImpl.value()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "private static AbstractSpan<?> co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.createTransaction(Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ElasticApmTracer tracer, ClassLoader classLoader)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ExternalSpanContextInstrumentation.java": [
                    "public static TraceContext co.elastic.apm.agent.opentracing.impl.ExternalSpanContextInstrumentation.parseTextMap(Iterable<Map.Entry<String, String>> textMap)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/SpanContextInstrumentation.java": [
                    "public static Iterable<Map.Entry<String, String>> co.elastic.apm.agent.opentracing.impl.SpanContextInstrumentation.doGetBaggage(TraceContext traceContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ddcbbbea5a40952c17e7c7d85a3aa4c00ca94787",
        "previous_commit": "5bb06afae1b43758e9699a77fadcfd8c6d85e681",
        "date": 1532417163,
        "releases": {
            "previous": "ddcbbbea5a40952c17e7c7d85a3aa4c00ca94787",
            "next": "ddcbbbea5a40952c17e7c7d85a3aa4c00ca94787"
        },
        "commit_message": "Add agent to bootstrap classloader search\n\nThis is required for the OSGi boot delegation of Apache Felix\n\n* Adds support for Payara/Glassfish\n* Adds JDBC tests to integration tests\n* Adjusts JDBC instrumentation to make it work with the Advices being\n  loaded by the bootstrap classloader\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ddcbbbea5a40952c17e7c7d85a3aa4c00ca94787": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "public static String co.elastic.apm.bci.ElasticApmAgent.getAgentHome()",
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)",
                    "public boolean co.elastic.apm.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/bci/HelperClassManager.java": [
                    "public void co.elastic.apm.bci.HelperClassManager.registerHelperClasses(Class<?> helperInterface, String implementation, String... additionalHelpers)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/configuration/source/PropertyFileConfigurationSource.java": [
                    "private static Properties co.elastic.apm.configuration.source.PropertyFileConfigurationSource.getProperties(String location)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/util/VersionUtils.java": [
                    "public static String co.elastic.apm.util.VersionUtils.getVersionFromPomProperties(Class clazz, String groupId, String artifactId)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/ConnectionInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.jdbc.ConnectionInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.jdbc.ConnectionInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.jdbc.PreparedStatementInstrumentation.getTypeMatcher()",
                    "public static Span co.elastic.apm.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/StatementInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.jdbc.StatementInstrumentation.getTypeMatcher()",
                    "public void co.elastic.apm.jdbc.StatementInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/helper/StartAsyncAdviceHelperImpl.java": [
                    "public void co.elastic.apm.servlet.helper.StartAsyncAdviceHelperImpl.onExitStartAsync(AsyncContext asyncContext)"
                ]
            },
            "5bb06afae1b43758e9699a77fadcfd8c6d85e681": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "public static String co.elastic.apm.bci.ElasticApmAgent.getAgentHome()",
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)",
                    "public boolean co.elastic.apm.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/bci/HelperClassManager.java": [
                    "public void co.elastic.apm.bci.HelperClassManager.registerHelperClasses(Class<?> helperInterface, String implementation, String... additionalHelpers)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/configuration/source/PropertyFileConfigurationSource.java": [
                    "private static Properties co.elastic.apm.configuration.source.PropertyFileConfigurationSource.getProperties(String location)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/util/VersionUtils.java": [
                    "public static String co.elastic.apm.util.VersionUtils.getVersionFromPomProperties(Class clazz, String groupId, String artifactId)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/ConnectionInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.jdbc.ConnectionInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.jdbc.ConnectionInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.jdbc.PreparedStatementInstrumentation.getTypeMatcher()",
                    "public static Span co.elastic.apm.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/StatementInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.jdbc.StatementInstrumentation.getTypeMatcher()",
                    "public void co.elastic.apm.jdbc.StatementInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/helper/StartAsyncAdviceHelperImpl.java": [
                    "public void co.elastic.apm.servlet.helper.StartAsyncAdviceHelperImpl.onExitStartAsync(AsyncContext asyncContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8e0d8069eb5823fc8ff8e27812e37fce33cb2941",
        "previous_commit": "39e0327fe6986a5fc5209904b1acda76891dae2d",
        "date": 1548950171,
        "releases": {
            "previous": "8e0d8069eb5823fc8ff8e27812e37fce33cb2941",
            "next": "8e0d8069eb5823fc8ff8e27812e37fce33cb2941"
        },
        "commit_message": "add span.subtype and span.action (#454)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8e0d8069eb5823fc8ff8e27812e37fce33cb2941": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.resetState()",
                    "public void co.elastic.apm.agent.impl.transaction.Span.doEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()",
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.doEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private static CharSequence co.elastic.apm.agent.report.serialize.DslJsonSerializer.replaceAll(String s, String[] stringsToReplace, String replacement, StringBuilder replaceBuilder)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/http/client/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(TraceContextHolder<?> parent, String method, @Nullable String uri, String hostName)",
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(TraceContextHolder<?> parent, String method, @Nullable URI uri, String hostName)",
                    "private static boolean co.elastic.apm.agent.http.client.HttpClientHelper.isAlreadyMonitored(TraceContextHolder<?> parent)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.createJdbcSpan(@Nullable String sql, Connection connection, @Nullable TraceContextHolder<?> parent)",
                    "private ConnectionMetaData co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.getConnectionMetaData(Connection connection)",
                    "private boolean co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.isAlreadyMonitored(@Nullable TraceContextHolder<?> parent)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.agent.opentracing.impl.ApmSpanInstrumentation.handleSpecialSpanTag(Span span, String key, Object value)"
                ]
            },
            "39e0327fe6986a5fc5209904b1acda76891dae2d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.resetState()",
                    "public void co.elastic.apm.agent.impl.transaction.Span.doEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()",
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.doEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private static CharSequence co.elastic.apm.agent.report.serialize.DslJsonSerializer.replaceAll(String s, String[] stringsToReplace, String replacement, StringBuilder replaceBuilder)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/http/client/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(TraceContextHolder<?> parent, String method, @Nullable URI uri, String hostName, String spanType)",
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(TraceContextHolder<?> parent, String method, @Nullable String uri, String hostName, String spanType)",
                    "private static boolean co.elastic.apm.agent.http.client.HttpClientHelper.isAlreadyMonitored(TraceContextHolder<?> parent)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.createJdbcSpan(@Nullable String sql, Connection connection, @Nullable TraceContextHolder<?> parent)",
                    "private ConnectionMetaData co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.getConnectionMetaData(Connection connection)",
                    "private boolean co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.isAlreadyMonitored(@Nullable TraceContextHolder<?> parent)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.agent.opentracing.impl.ApmSpanInstrumentation.handleSpecialSpanTag(Span span, String key, Object value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "fab4f04c4a19e53849858e3591689f5145067869",
        "previous_commit": "f4f1b4af3ccafce199bece084c641d5475f1e168",
        "date": 1661246092,
        "releases": {
            "previous": "fab4f04c4a19e53849858e3591689f5145067869",
            "next": "fab4f04c4a19e53849858e3591689f5145067869"
        },
        "commit_message": "Added SQS Instrumentation (#2637)\n\n* Added SQS Instrumentation\r\n\r\nfixed destination service resource\r\n\r\nadded message processing spans,  refactored test classes\r\n\r\nExtended destination serialization test to cover multiple content combinations\r\n\r\nRemoved lazy instantiation of helper objects\r\n\r\n* Added span links to SQS instrumentation\r\n\r\n* Make generic type explicit for setting span links on SQS instrumentation\r\n\r\n* Removed Nullable annotation on singleton instances.\r\nReplaced boxed Long with primitive type on getMessageAge.\r\n\r\n* Update CHANGELOG.asciidoc and supported-technologies.asciidoc",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "fab4f04c4a19e53849858e3591689f5145067869": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Destination.java": [
                    "public void co.elastic.apm.agent.impl.context.Destination.resetState()",
                    "public boolean co.elastic.apm.agent.impl.context.Destination.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeDestination(Destination destination, @Nullable CharSequence resource)"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-1-plugin/src/main/java/co/elastic/apm/agent/awssdk/v1/helper/DynamoDbHelper.java": [
                    "public static DynamoDbHelper co.elastic.apm.agent.awssdk.v1.helper.DynamoDbHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-1-plugin/src/main/java/co/elastic/apm/agent/awssdk/v1/helper/S3Helper.java": [
                    "public static S3Helper co.elastic.apm.agent.awssdk.v1.helper.S3Helper.getInstance()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-1-plugin/src/main/java/co/elastic/apm/agent/awssdk/v1/helper/SdkV1DataSource.java": [
                    "public static SdkV1DataSource co.elastic.apm.agent.awssdk.v1.helper.SdkV1DataSource.getInstance()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/BaseAsyncClientHandlerInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.awssdk.v2.BaseAsyncClientHandlerInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/BaseSyncClientHandlerInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.awssdk.v2.BaseSyncClientHandlerInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/ResponseHandlerWrapper.java": [
                    "public void co.elastic.apm.agent.awssdk.v2.ResponseHandlerWrapper<T>.onError(Throwable throwable)",
                    "public CompletableFuture<Response<T>> co.elastic.apm.agent.awssdk.v2.ResponseHandlerWrapper<T>.prepare()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/helper/DynamoDbHelper.java": [
                    "public static DynamoDbHelper co.elastic.apm.agent.awssdk.v2.helper.DynamoDbHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/helper/S3Helper.java": [
                    "public static S3Helper co.elastic.apm.agent.awssdk.v2.helper.S3Helper.getInstance()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/helper/SdkV2DataSource.java": [
                    "public static SdkV2DataSource co.elastic.apm.agent.awssdk.v2.helper.SdkV2DataSource.getInstance()"
                ]
            },
            "f4f1b4af3ccafce199bece084c641d5475f1e168": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Destination.java": [
                    "public void co.elastic.apm.agent.impl.context.Destination.resetState()",
                    "public boolean co.elastic.apm.agent.impl.context.Destination.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeDestination(Destination destination, @Nullable CharSequence resource)"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-1-plugin/src/main/java/co/elastic/apm/agent/awssdk/v1/helper/DynamoDbHelper.java": [
                    "public static DynamoDbHelper co.elastic.apm.agent.awssdk.v1.helper.DynamoDbHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-1-plugin/src/main/java/co/elastic/apm/agent/awssdk/v1/helper/S3Helper.java": [
                    "public static S3Helper co.elastic.apm.agent.awssdk.v1.helper.S3Helper.getInstance()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-1-plugin/src/main/java/co/elastic/apm/agent/awssdk/v1/helper/SdkV1DataSource.java": [
                    "public static SdkV1DataSource co.elastic.apm.agent.awssdk.v1.helper.SdkV1DataSource.getInstance()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/BaseAsyncClientHandlerInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.awssdk.v2.BaseAsyncClientHandlerInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/BaseSyncClientHandlerInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.awssdk.v2.BaseSyncClientHandlerInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/ResponseHandlerWrapper.java": [
                    "public void co.elastic.apm.agent.awssdk.v2.ResponseHandlerWrapper<T>.onError(Throwable throwable)",
                    "public CompletableFuture<Response<T>> co.elastic.apm.agent.awssdk.v2.ResponseHandlerWrapper<T>.prepare()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/helper/DynamoDbHelper.java": [
                    "public static DynamoDbHelper co.elastic.apm.agent.awssdk.v2.helper.DynamoDbHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/helper/S3Helper.java": [
                    "public static S3Helper co.elastic.apm.agent.awssdk.v2.helper.S3Helper.getInstance()"
                ],
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/helper/SdkV2DataSource.java": [
                    "public static SdkV2DataSource co.elastic.apm.agent.awssdk.v2.helper.SdkV2DataSource.getInstance()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c8e7936b1a6a897aef609b820d20e254cd1440cc",
        "previous_commit": "664e4ff4ef9e61b090bad2e3c8e05cb36452b9cd",
        "date": 1647362785,
        "releases": {
            "previous": "c8e7936b1a6a897aef609b820d20e254cd1440cc",
            "next": "c8e7936b1a6a897aef609b820d20e254cd1440cc"
        },
        "commit_message": "Reimplementing log correlation (#2428)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c8e7936b1a6a897aef609b820d20e254cd1440cc": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public <C> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startChildTransaction(@Nullable C headerCarrier, BinaryHeaderGetter<C> binaryHeadersGetter, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public <C> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startChildTransaction(@Nullable C headerCarrier, TextHeaderGetter<C> textHeadersGetter, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/error/ErrorCapture.java": [
                    "public ErrorCapture co.elastic.apm.agent.impl.error.ErrorCapture.deactivate()",
                    "public ErrorCapture co.elastic.apm.agent.impl.error.ErrorCapture.activate()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public <T, A> Transaction co.elastic.apm.agent.impl.transaction.Transaction.start(TraceContext.ChildContextCreatorTwoArg<T, A> childContextCreator, @Nullable T parent, A arg, long epochMicros, Sampler sampler)",
                    "public <T> Transaction co.elastic.apm.agent.impl.transaction.Transaction.start(TraceContext.ChildContextCreator<T> childContextCreator, @Nullable T parent, long epochMicros, Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public String co.elastic.apm.agent.logging.LoggingConfiguration.getLogEcsFormattingDestinationDir()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ClassLoaderUtils.java": [
                    "public static boolean co.elastic.apm.agent.util.ClassLoaderUtils.isAgentClassLoader(@Nullable ClassLoader classLoader)"
                ]
            },
            "664e4ff4ef9e61b090bad2e3c8e05cb36452b9cd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public <C> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startChildTransaction(@Nullable C headerCarrier, BinaryHeaderGetter<C> binaryHeadersGetter, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public <C> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startChildTransaction(@Nullable C headerCarrier, TextHeaderGetter<C> textHeadersGetter, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/error/ErrorCapture.java": [
                    "public ErrorCapture co.elastic.apm.agent.impl.error.ErrorCapture.deactivate()",
                    "public ErrorCapture co.elastic.apm.agent.impl.error.ErrorCapture.activate()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public <T, A> Transaction co.elastic.apm.agent.impl.transaction.Transaction.start(TraceContext.ChildContextCreatorTwoArg<T, A> childContextCreator, @Nullable T parent, A arg, long epochMicros, Sampler sampler, @Nullable ClassLoader initiatingClassLoader)",
                    "public <T> Transaction co.elastic.apm.agent.impl.transaction.Transaction.start(TraceContext.ChildContextCreator<T> childContextCreator, @Nullable T parent, long epochMicros, Sampler sampler, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public String co.elastic.apm.agent.logging.LoggingConfiguration.getLogEcsFormattingDestinationDir()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ClassLoaderUtils.java": [
                    "public static boolean co.elastic.apm.agent.util.ClassLoaderUtils.isAgentClassLoader(@Nullable ClassLoader classLoader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c5fede1f741004c2feed99bcca730da7f94f3a0c",
        "previous_commit": "cad152440094c8deaf7f513cdada28447039a3ad",
        "date": 1632121762,
        "releases": {
            "previous": "c5fede1f741004c2feed99bcca730da7f94f3a0c",
            "next": "c5fede1f741004c2feed99bcca730da7f94f3a0c"
        },
        "commit_message": "Isolated agent classloader (#2109)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c5fede1f741004c2feed99bcca730da7f94f3a0c": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static File co.elastic.apm.attach.ElasticApmAttacher.getAgentJarFile()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "public static ClassLoader co.elastic.apm.agent.bci.ElasticApmAgent.getAgentClassLoader()",
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "private static Class<?> co.elastic.apm.agent.bci.IndyBootstrap.initIndyBootstrap(final Logger logger)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyPluginClassLoaderFactory.java": [
                    "public synchronized static ClassLoader co.elastic.apm.agent.bci.IndyPluginClassLoaderFactory.getOrCreatePluginClassLoader(@Nullable ClassLoader targetClassLoader, List<String> classesToInject, ClassLoader agentClassLoader, ClassFileLocator classFileLocator, ElementMatcher<? super TypeDescription> exclusionMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PackageScanner.java": [
                    "public FileVisitResult co.elastic.apm.agent.util.PackageScanner.visitFile(Path file, BasicFileAttributes attrs)",
                    "private static List<String> co.elastic.apm.agent.util.PackageScanner.listClassNames(final String basePackage, final Path basePath)",
                    "public static List<String> co.elastic.apm.agent.util.PackageScanner.getClassNames(final String basePackage, ClassLoader classLoader)"
                ],
                "apm-agent-plugins/apm-log-shader-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/Log4j2EcsReformattingInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.log4j2.Log4j2EcsReformattingInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java": [
                    "private static void co.elastic.apm.agent.profiler.asyncprofiler.AsyncProfiler.loadNativeLibrary(String libraryDirectory)"
                ]
            },
            "cad152440094c8deaf7f513cdada28447039a3ad": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static File co.elastic.apm.attach.ElasticApmAttacher.getAgentJarFile()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "public static ClassLoader co.elastic.apm.agent.bci.ElasticApmAgent.getAgentClassLoader()",
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "private static Class<?> co.elastic.apm.agent.bci.IndyBootstrap.initIndyBootstrap(final Logger logger)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyPluginClassLoaderFactory.java": [
                    "public synchronized static ClassLoader co.elastic.apm.agent.bci.IndyPluginClassLoaderFactory.getOrCreatePluginClassLoader(@Nullable ClassLoader targetClassLoader, List<String> classesToInject, ClassLoader agentClassLoader, ClassFileLocator classFileLocator, ElementMatcher<? super TypeDescription> exclusionMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PackageScanner.java": [
                    "public FileVisitResult co.elastic.apm.agent.util.PackageScanner.visitFile(Path file, BasicFileAttributes attrs)",
                    "private static List<String> co.elastic.apm.agent.util.PackageScanner.listClassNames(final String basePackage, final Path basePath)",
                    "public static List<String> co.elastic.apm.agent.util.PackageScanner.getClassNames(final String basePackage, ClassLoader classLoader)"
                ],
                "apm-agent-plugins/apm-log-shader-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/Log4j2EcsReformattingInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.log4j2.Log4j2EcsReformattingInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java": [
                    "private static void co.elastic.apm.agent.profiler.asyncprofiler.AsyncProfiler.loadNativeLibrary(String libraryDirectory)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d3837306ede300d13928053571e9b2b54eca1cb5",
        "previous_commit": "8e44cb51b862572d08ff6c0e44e5fbb5529fd159",
        "date": 1563542213,
        "releases": {
            "previous": "d3837306ede300d13928053571e9b2b54eca1cb5",
            "next": "d3837306ede300d13928053571e9b2b54eca1cb5"
        },
        "commit_message": "Timing breakdown (#588)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d3837306ede300d13928053571e9b2b54eca1cb5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public <T> Span co.elastic.apm.agent.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/JvmGcMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.JvmGcMetrics.bindTo(final MetricRegistry registry)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/JvmMemoryMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.JvmMemoryMetrics.bindTo(final MetricRegistry registry)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/SystemMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.SystemMetrics.bindTo(MetricRegistry metricRegistry)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/ThreadMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.ThreadMetrics.bindTo(final MetricRegistry registry)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMetrics(MetricRegistry metricRegistry)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeLastField(final String fieldName, @Nullable final String value)",
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeField(final String fieldName, @Nullable final String value)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeMetricSet(MetricSet metricSet, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            },
            "8e44cb51b862572d08ff6c0e44e5fbb5529fd159": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public <T> Span co.elastic.apm.agent.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/JvmGcMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.JvmGcMetrics.bindTo(final MetricRegistry registry)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/JvmMemoryMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.JvmMemoryMetrics.bindTo(final MetricRegistry registry)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/SystemMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.SystemMetrics.bindTo(MetricRegistry metricRegistry)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/ThreadMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.ThreadMetrics.bindTo(final MetricRegistry registry)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMetrics(MetricRegistry metricRegistry)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeLastField(final String fieldName, @Nullable final String value)",
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeField(final String fieldName, @Nullable final String value)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeMetricSet(MetricSet metricSet, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "59d358cf15dd0ab82f7f2a181ea77e540325eb85",
        "previous_commit": "18f38c2090760bdbecd25581705e14b557fabd00",
        "date": 1579681695,
        "releases": {
            "previous": "59d358cf15dd0ab82f7f2a181ea77e540325eb85",
            "next": "59d358cf15dd0ab82f7f2a181ea77e540325eb85"
        },
        "commit_message": "Add Kafka support (#981)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "59d358cf15dd0ab82f7f2a181ea77e540325eb85": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/BodyProcessor.java": [
                    "private void co.elastic.apm.agent.impl.context.BodyProcessor.redactBodyIfNecessary(TransactionContext context, CoreConfiguration.EventType eventType)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Message.java": [
                    "public void co.elastic.apm.agent.impl.context.Message.redactBody()",
                    "public void co.elastic.apm.agent.impl.context.Message.copyFrom(Message other)",
                    "public void co.elastic.apm.agent.impl.context.Message.resetState()",
                    "public boolean co.elastic.apm.agent.impl.context.Message.hasContent()",
                    "public Message co.elastic.apm.agent.impl.context.Message.withBody(@Nullable String body)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "private void co.elastic.apm.agent.impl.transaction.TraceContext.fillTraceParentHeader(StringBuilder sb, Id spanId)",
                    "public StringBuilder co.elastic.apm.agent.impl.transaction.TraceContext.getOutgoingTraceParentHeader()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMessageContext(final Message message)",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.setOutputStream(final OutputStream os)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMessageHeaders(Message message)"
                ]
            },
            "18f38c2090760bdbecd25581705e14b557fabd00": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/BodyProcessor.java": [
                    "private void co.elastic.apm.agent.impl.context.BodyProcessor.redactBodyIfNecessary(TransactionContext context, CoreConfiguration.EventType eventType)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Message.java": [
                    "public void co.elastic.apm.agent.impl.context.Message.redactBody()",
                    "public void co.elastic.apm.agent.impl.context.Message.copyFrom(Message other)",
                    "public void co.elastic.apm.agent.impl.context.Message.resetState()",
                    "public boolean co.elastic.apm.agent.impl.context.Message.hasContent()",
                    "public Message co.elastic.apm.agent.impl.context.Message.withBody(@Nullable String body)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "private void co.elastic.apm.agent.impl.transaction.TraceContext.fillTraceParentHeader(StringBuilder sb, Id spanId)",
                    "public StringBuilder co.elastic.apm.agent.impl.transaction.TraceContext.getOutgoingTraceParentHeader()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMessageContext(final Message message)",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.setOutputStream(final OutputStream os)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMessageHeaders(Message message)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a9de7631f8a8de4731538a3b86e550ebdc0bed19",
        "previous_commit": "2e64fbf3c88f5a48e433313c1df8d1e8667cfc72",
        "date": 1538651620,
        "releases": {
            "previous": "a9de7631f8a8de4731538a3b86e550ebdc0bed19",
            "next": "a9de7631f8a8de4731538a3b86e550ebdc0bed19"
        },
        "commit_message": "Configure Byte Buddy to use a type pool cache (#229)\n\n- speeds up type matching\r\n- Adds Print matcher duration on shut down\r\n- Introduces config options:\r\n  - enable_type_pool_cache\r\n  - enable_type_matching_name_pre_filtering\r\n- Wraps type pool caches in SoftReferences to avoid OOMEs\r\n- Clear cache after it has not been accessed for a while\r\n- Excludes some irrelevant wildfly modules to speed up matching\r\n- Evict caches after they are inactive ",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a9de7631f8a8de4731538a3b86e550ebdc0bed19": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)",
                    "public boolean co.elastic.apm.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)",
                    "public boolean co.elastic.apm.bci.ElasticApmAgent.matches(MethodDescription target)"
                ],
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/httpclient/ApacheHttpClientInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.httpclient.ApacheHttpClientInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/ConnectionInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.jdbc.ConnectionInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.jdbc.PreparedStatementInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/StatementInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.jdbc.StatementInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/AsyncInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.servlet.AsyncInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/FilterChainInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.servlet.FilterChainInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.servlet.ServletInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-spring-resttemplate-plugin/src/main/java/co/elastic/apm/resttemplate/SpringRestTemplateInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.resttemplate.SpringRestTemplateInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/spring/webmvc/SpringTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.spring.webmvc.SpringTransactionNameInstrumentation.getTypeMatcher()"
                ]
            },
            "2e64fbf3c88f5a48e433313c1df8d1e8667cfc72": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)",
                    "public boolean co.elastic.apm.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)",
                    "public boolean co.elastic.apm.bci.ElasticApmAgent.matches(MethodDescription target)"
                ],
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/httpclient/ApacheHttpClientInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.httpclient.ApacheHttpClientInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/ConnectionInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.jdbc.ConnectionInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.jdbc.PreparedStatementInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/StatementInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.jdbc.StatementInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/AsyncInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.servlet.AsyncInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/FilterChainInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.servlet.FilterChainInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.servlet.ServletInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-spring-resttemplate-plugin/src/main/java/co/elastic/apm/resttemplate/SpringRestTemplateInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.resttemplate.SpringRestTemplateInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/spring/webmvc/SpringTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.spring.webmvc.SpringTransactionNameInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a3ba319da425c2eed7c58ac4249f2b0daba7df0f",
        "previous_commit": "b5f8d8ebfd970a4adec279c278dee74d65616a51",
        "date": 1526140223,
        "releases": {
            "previous": "a3ba319da425c2eed7c58ac4249f2b0daba7df0f",
            "next": "a3ba319da425c2eed7c58ac4249f2b0daba7df0f"
        },
        "commit_message": "Instrument Servlet and FilterChain invocations (#80)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a3ba319da425c2eed7c58ac4249f2b0daba7df0f": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.bci.ElasticApmAgent.agentmain(String agentArguments, Instrumentation instrumentation)",
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.getAgentBuilder(ByteBuddy byteBuddy)",
                    "public static void co.elastic.apm.bci.ElasticApmAgent.premain(String agentArguments, Instrumentation instrumentation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/Request.java": [
                    "public void co.elastic.apm.impl.context.Request.redactBody()",
                    "public Request co.elastic.apm.impl.context.Request.addFormUrlEncodedParameters(String key, String[] values)",
                    "public void co.elastic.apm.impl.context.Request.copyFrom(Request other)",
                    "public void co.elastic.apm.impl.context.Request.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/Response.java": [
                    "public void co.elastic.apm.impl.context.Response.resetState()",
                    "public void co.elastic.apm.impl.context.Response.copyFrom(Response other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)"
                ],
                "apm-agent-plugins/apm-web-plugin/src/main/java/co/elastic/apm/web/SanitizingWebProcessor.java": [
                    "private void co.elastic.apm.web.SanitizingWebProcessor.sanitizeRequest(Request request)"
                ]
            },
            "b5f8d8ebfd970a4adec279c278dee74d65616a51": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.bci.ElasticApmAgent.agentmain(String agentArguments, Instrumentation instrumentation)",
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.getAgentBuilder(ByteBuddy byteBuddy)",
                    "public static void co.elastic.apm.bci.ElasticApmAgent.premain(String agentArguments, Instrumentation instrumentation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/Request.java": [
                    "public void co.elastic.apm.impl.context.Request.redactBody()",
                    "public Request co.elastic.apm.impl.context.Request.addFormUrlEncodedParameters(String key, String[] values)",
                    "public void co.elastic.apm.impl.context.Request.copyFrom(Request other)",
                    "public void co.elastic.apm.impl.context.Request.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/Response.java": [
                    "public void co.elastic.apm.impl.context.Response.resetState()",
                    "public void co.elastic.apm.impl.context.Response.copyFrom(Response other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)"
                ],
                "apm-agent-plugins/apm-web-plugin/src/main/java/co/elastic/apm/web/SanitizingWebProcessor.java": [
                    "private void co.elastic.apm.web.SanitizingWebProcessor.sanitizeRequest(Request request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f2eff5e22da4e637e96d25485306cd0c536823d3",
        "previous_commit": "2f6d251dcbf2cf79f69865cd461d3cf047739b3e",
        "date": 1578578719,
        "releases": {
            "previous": "f2eff5e22da4e637e96d25485306cd0c536823d3",
            "next": "f2eff5e22da4e637e96d25485306cd0c536823d3"
        },
        "commit_message": "Adding Destination fields (#976)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f2eff5e22da4e637e96d25485306cd0c536823d3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/SpanContext.java": [
                    "public void co.elastic.apm.agent.impl.context.SpanContext.resetState()",
                    "public boolean co.elastic.apm.agent.impl.context.SpanContext.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context, TraceContext traceContext)"
                ],
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.HttpAsyncRequestProducerWrapper.generateRequest()"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.es.restclient.ElasticsearchRestClientInstrumentationHelperImpl.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)",
                    "public void co.elastic.apm.agent.es.restclient.ElasticsearchRestClientInstrumentationHelperImpl.finishClientSpan(@Nullable Response response, Span span, @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-common/src/main/java/co/elastic/apm/agent/hibernate/search/HibernateSearchHelper.java": [
                    "public static Span co.elastic.apm.agent.hibernate.search.HibernateSearchHelper.createAndActivateSpan(final ElasticApmTracer tracer, final String methodName, final String query)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "private ConnectionMetaData co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.getConnectionMetaData(Connection connection)",
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.createJdbcSpan(@Nullable String sql, Connection connection, @Nullable TraceContextHolder<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-jedis-plugin/src/main/java/co/elastic/apm/agent/redis/jedis/JedisInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.redis.jedis.JedisInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-redis-common/src/main/java/co/elastic/apm/agent/redis/RedisSpanUtils.java": [
                    "public static Span co.elastic.apm.agent.redis.RedisSpanUtils.createRedisSpan(String command)"
                ]
            },
            "2f6d251dcbf2cf79f69865cd461d3cf047739b3e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/SpanContext.java": [
                    "public void co.elastic.apm.agent.impl.context.SpanContext.resetState()",
                    "public boolean co.elastic.apm.agent.impl.context.SpanContext.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context, TraceContext traceContext)"
                ],
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.HttpAsyncRequestProducerWrapper.generateRequest()"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.es.restclient.ElasticsearchRestClientInstrumentationHelperImpl.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)",
                    "public void co.elastic.apm.agent.es.restclient.ElasticsearchRestClientInstrumentationHelperImpl.finishClientSpan(@Nullable Response response, Span span, @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-hibernate-search-plugin/apm-hibernate-search-plugin-common/src/main/java/co/elastic/apm/agent/hibernate/search/HibernateSearchHelper.java": [
                    "public static Span co.elastic.apm.agent.hibernate.search.HibernateSearchHelper.createAndActivateSpan(final ElasticApmTracer tracer, final String methodName, final String query)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "private ConnectionMetaData co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.getConnectionMetaData(Connection connection)",
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.createJdbcSpan(@Nullable String sql, Connection connection, @Nullable TraceContextHolder<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-jedis-plugin/src/main/java/co/elastic/apm/agent/redis/jedis/JedisInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.redis.jedis.JedisInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-redis-plugin/apm-redis-common/src/main/java/co/elastic/apm/agent/redis/RedisSpanUtils.java": [
                    "public static Span co.elastic.apm.agent.redis.RedisSpanUtils.createRedisSpan(String command)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7355ce0c6dfeba5bfb47f959f3973646dc6b8c84",
        "previous_commit": "ca3b77eba18887dbadf27530a9b5c528e5894f14",
        "date": 1630497104,
        "releases": {
            "previous": "7355ce0c6dfeba5bfb47f959f3973646dc6b8c84",
            "next": "7355ce0c6dfeba5bfb47f959f3973646dc6b8c84"
        },
        "commit_message": "Migrate Kafka to indy plugin (#2095)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7355ce0c6dfeba5bfb47f959f3973646dc6b8c84": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/postprocessor/AssignToPostProcessorFactory.java": [
                    "private Advice.PostProcessor co.elastic.apm.agent.bci.bytebuddy.postprocessor.AssignToPostProcessorFactory.createAssignToArgumentPostProcessor(final MethodDescription.InDefinedShape adviceMethod, final boolean exit, final AssignTo.Argument assignToArgument)",
                    "private Advice.PostProcessor co.elastic.apm.agent.bci.bytebuddy.postprocessor.AssignToPostProcessorFactory.createAssignToReturnPostProcessor(final MethodDescription.InDefinedShape adviceMethod, final boolean exit, final AssignTo.Return assignToReturn)",
                    "private Advice.PostProcessor co.elastic.apm.agent.bci.bytebuddy.postprocessor.AssignToPostProcessorFactory.createAssignToFieldPostProcessor(final MethodDescription.InDefinedShape adviceMethod, final boolean exit, final AssignTo.Field assignToField)",
                    "public Advice.PostProcessor co.elastic.apm.agent.bci.bytebuddy.postprocessor.AssignToPostProcessorFactory.make(final MethodDescription.InDefinedShape adviceMethod, final boolean exit)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaProducerInstrumentation.java": [
                    "public String co.elastic.apm.agent.kafka.KafkaProducerInstrumentation.getAdviceClassName()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHelper.java": [
                    "public void co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHelper.onSendEnd(Span span, ProducerRecord<?, ?> producerRecord, KafkaProducer<?, ?> kafkaProducer, @Nullable Throwable throwable)",
                    "public CallbackWrapper co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHelper.createInstance()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsIteratorInstrumentation.java": [
                    "public String co.elastic.apm.agent.kafka.ConsumerRecordsIteratorInstrumentation.getAdviceClassName()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsRecordListInstrumentation.java": [
                    "public String co.elastic.apm.agent.kafka.ConsumerRecordsRecordListInstrumentation.getAdviceClassName()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsRecordsInstrumentation.java": [
                    "public String co.elastic.apm.agent.kafka.ConsumerRecordsRecordsInstrumentation.getAdviceClassName()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaProducerHeadersInstrumentation.java": [
                    "public String co.elastic.apm.agent.kafka.KafkaProducerHeadersInstrumentation.getAdviceClassName()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord<?, ?> co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ]
            },
            "ca3b77eba18887dbadf27530a9b5c528e5894f14": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/postprocessor/AssignToPostProcessorFactory.java": [
                    "private Advice.PostProcessor co.elastic.apm.agent.bci.bytebuddy.postprocessor.AssignToPostProcessorFactory.createAssignToArgumentPostProcessor(final MethodDescription.InDefinedShape adviceMethod, final boolean exit, final AssignTo.Argument assignToArgument)",
                    "private Advice.PostProcessor co.elastic.apm.agent.bci.bytebuddy.postprocessor.AssignToPostProcessorFactory.createAssignToReturnPostProcessor(final MethodDescription.InDefinedShape adviceMethod, final boolean exit, final AssignTo.Return assignToReturn)",
                    "private Advice.PostProcessor co.elastic.apm.agent.bci.bytebuddy.postprocessor.AssignToPostProcessorFactory.createAssignToFieldPostProcessor(final MethodDescription.InDefinedShape adviceMethod, final boolean exit, final AssignTo.Field assignToField)",
                    "public Advice.PostProcessor co.elastic.apm.agent.bci.bytebuddy.postprocessor.AssignToPostProcessorFactory.make(final MethodDescription.InDefinedShape adviceMethod, final boolean exit)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaProducerInstrumentation.java": [
                    "public String co.elastic.apm.agent.kafka.KafkaProducerInstrumentation.getAdviceClassName()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/KafkaInstrumentationHelper.java": [
                    "public CallbackWrapper co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHelperImpl.createInstance()",
                    "public void co.elastic.apm.agent.kafka.helper.KafkaInstrumentationHelperImpl.onSendEnd(Span span, ProducerRecord producerRecord, KafkaProducer kafkaProducer, @Nullable Throwable throwable)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsIteratorInstrumentation.java": [
                    "public String co.elastic.apm.agent.kafka.ConsumerRecordsIteratorInstrumentation.getAdviceClassName()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsRecordListInstrumentation.java": [
                    "public String co.elastic.apm.agent.kafka.ConsumerRecordsRecordListInstrumentation.getAdviceClassName()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsRecordsInstrumentation.java": [
                    "public String co.elastic.apm.agent.kafka.ConsumerRecordsRecordsInstrumentation.getAdviceClassName()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaProducerHeadersInstrumentation.java": [
                    "public String co.elastic.apm.agent.kafka.KafkaProducerHeadersInstrumentation.getAdviceClassName()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2e64fbf3c88f5a48e433313c1df8d1e8667cfc72",
        "previous_commit": "836d29c8ce75a8685d314d94e9c47c23d847a510",
        "date": 1538647225,
        "releases": {
            "previous": "2e64fbf3c88f5a48e433313c1df8d1e8667cfc72",
            "next": "2e64fbf3c88f5a48e433313c1df8d1e8667cfc72"
        },
        "commit_message": "Use microsecond epoch timestamps (#232)\n\n- Prepares for https://github.com/elastic/apm-server/issues/1340\r\n- Includes guards against clock drift\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2e64fbf3c88f5a48e433313c1df8d1e8667cfc72": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private Span co.elastic.apm.impl.ElasticApmTracer.startSpan(@Nullable Transaction transaction, @Nullable Span parentSpan, long epochMicros)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction(@Nullable String traceContextHeader)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction(@Nullable String traceContextHeader, Sampler sampler, long epochMicros)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan(AbstractSpan<?> parent, long epochMicros)",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction, @Nullable Span parentSpan, long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.end()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.end()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DateSerializer.java": [
                    "void co.elastic.apm.report.serialize.DateSerializer.serializeEpochTimestampAsIsoDateTime(JsonWriter jw, long epochMillis)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.opentracing.impl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable Object parent, @Nullable AbstractSpan<?> apmParent, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage)",
                    "private static AbstractSpan<?> co.elastic.apm.opentracing.impl.ApmSpanBuilderInstrumentation.createTransaction(Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ElasticApmTracer tracer)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpan.java": [
                    "public void co.elastic.apm.opentracing.ApmSpan.finish()"
                ]
            },
            "836d29c8ce75a8685d314d94e9c47c23d847a510": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction(@Nullable String traceContextHeader)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan(AbstractSpan<?> parent, long startTimeNanos)",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction, @Nullable Span parentSpan, long nanoTime)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction(@Nullable String traceContextHeader, Sampler sampler, long nanoTime)",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.startSpan(@Nullable Transaction transaction, @Nullable Span parentSpan, long startTimeNanos)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.end()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.end()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DateSerializer.java": [
                    "void co.elastic.apm.report.serialize.DateSerializer.serializeEpochTimestampAsIsoDateTime(JsonWriter jw, long epochTimestamp)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.opentracing.impl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable Object parent, @Nullable AbstractSpan<?> apmParent, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage)",
                    "private static AbstractSpan<?> co.elastic.apm.opentracing.impl.ApmSpanBuilderInstrumentation.createTransaction(Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ElasticApmTracer tracer)"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpan.java": [
                    "public void co.elastic.apm.opentracing.ApmSpan.finish()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "bbba17aa822beb08a279394c8daa6ae15ea08df0",
        "previous_commit": "2e9e3126f19500ee06df6b4d6342669395322a9a",
        "date": 1583227077,
        "releases": {
            "previous": "bbba17aa822beb08a279394c8daa6ae15ea08df0",
            "next": "bbba17aa822beb08a279394c8daa6ae15ea08df0"
        },
        "commit_message": "Add more loggers for diagnosing issues with inferred spans (#1061)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "bbba17aa822beb08a279394c8daa6ae15ea08df0": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "private <E> boolean co.elastic.apm.agent.report.ApmServerReporter.tryAddEventToRingBuffer(E event, EventTranslatorOneArg<ReportingEvent, E> eventTranslator)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.close()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.close()"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "int co.elastic.apm.agent.profiler.CallTree.spanify(CallTree.Root root, TraceContext parentContext)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.stopProfiling(SamplingProfiler samplingProfiler)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.handle(SamplingProfiler samplingProfiler)",
                    "void co.elastic.apm.agent.profiler.SamplingProfiler.setProfilingSessionOngoing(boolean profilingSessionOngoing)",
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.handleDeactivationEvent(SamplingProfiler samplingProfiler)",
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.handleActivationEvent(SamplingProfiler samplingProfiler)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processActivationEventsUpTo(long timestamp, ActivationEvent event, long eof)",
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.startProfiling(SamplingProfiler samplingProfiler)"
                ]
            },
            "2e9e3126f19500ee06df6b4d6342669395322a9a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "private <E> boolean co.elastic.apm.agent.report.ApmServerReporter.tryAddEventToRingBuffer(E event, EventTranslatorOneArg<ReportingEvent, E> eventTranslator)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.close()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.close()"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "void co.elastic.apm.agent.profiler.CallTree.spanify(CallTree.Root root, TraceContext parentContext)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.stopProfiling(SamplingProfiler samplingProfiler)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.handle(SamplingProfiler samplingProfiler)",
                    "void co.elastic.apm.agent.profiler.SamplingProfiler.setProfilingSessionOngoing(boolean profilingSessionOngoing)",
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.handleDeactivationEvent(SamplingProfiler samplingProfiler)",
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.handleActivationEvent(SamplingProfiler samplingProfiler)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processActivationEventsUpTo(long timestamp, ActivationEvent event, long eof)",
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.startProfiling(SamplingProfiler samplingProfiler)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a88764775664d39f68d24567781793f2a5d04e3e",
        "previous_commit": "c3b0241684251bd24b945a8e33966488f4a42ba6",
        "date": 1635069600,
        "releases": {
            "previous": "a88764775664d39f68d24567781793f2a5d04e3e",
            "next": "a88764775664d39f68d24567781793f2a5d04e3e"
        },
        "commit_message": "Hostname discovery fix (#2205)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a88764775664d39f68d24567781793f2a5d04e3e": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "private boolean co.elastic.apm.attach.AgentAttacher.attachAsUser(UserRegistry.User user, Map<String, String> agentArgs, String pid)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/GetAgentProperties.java": [
                    "static Properties co.elastic.apm.attach.GetAgentProperties.getAgentAndSystemPropertiesSwitchUser(String pid, UserRegistry.User user)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/JvmDiscoverer.java": [
                    "public boolean co.elastic.apm.attach.ForHotSpotVm.isAvailable()",
                    "public boolean co.elastic.apm.attach.Compound.isAvailable()",
                    "public boolean co.elastic.apm.attach.UsingPs.isAvailable()"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/UserRegistry.java": [
                    "public ProcessExecutionUtil.CommandOutput co.elastic.apm.attach.UserRegistry.executeAs(List<String> cmd)",
                    "private String co.elastic.apm.attach.UserRegistry.findTempDir(User user)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.blockUntilReady()",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMetadata(MetaData metaData, JsonWriter metadataJW, boolean supportsConfiguredAndDetectedHostname)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessExitInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.process.ProcessExitInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessHelper.java": [
                    "void co.elastic.apm.agent.process.ProcessHelper.doEndProcess(Process process, boolean checkTerminatedProcess)"
                ]
            },
            "c3b0241684251bd24b945a8e33966488f4a42ba6": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "private boolean co.elastic.apm.attach.AgentAttacher.attachAsUser(UserRegistry.User user, Map<String, String> agentArgs, String pid)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/GetAgentProperties.java": [
                    "static Properties co.elastic.apm.attach.GetAgentProperties.getAgentAndSystemPropertiesSwitchUser(String pid, UserRegistry.User user)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/JvmDiscoverer.java": [
                    "public boolean co.elastic.apm.attach.ForHotSpotVm.isAvailable()",
                    "public boolean co.elastic.apm.attach.Compound.isAvailable()",
                    "public boolean co.elastic.apm.attach.UsingPs.isAvailable()"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/UserRegistry.java": [
                    "private String co.elastic.apm.attach.UserRegistry.findTempDir(User user)",
                    "public CommandOutput co.elastic.apm.attach.UserRegistry.executeAs(List<String> cmd)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.blockUntilReady()",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMetadata(MetaData metaData, JsonWriter metadataJW)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessExitInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.process.ProcessExitInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessHelper.java": [
                    "void co.elastic.apm.agent.process.ProcessHelper.doEndProcess(Process process, boolean checkTerminatedProcess)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "36ff1f18db1c89ec9c2bb185035fa162ce6de9f9",
        "previous_commit": "036418bd583ac2649229a861fc3e8f5a624d64de",
        "date": 1622187133,
        "releases": {
            "previous": "36ff1f18db1c89ec9c2bb185035fa162ce6de9f9",
            "next": "36ff1f18db1c89ec9c2bb185035fa162ce6de9f9"
        },
        "commit_message": "add Spring Webflux server support (#1305)\n\n\r\n\r\nCo-authored-by: marcin-bukowiecki <m.bukowiecki0407@gmail.com>\r\nCo-authored-by: Pavel <pavel@multiloginapp.com>\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>\r\nCo-authored-by: apmmachine <58790750+apmmachine@users.noreply.github.com>\r\nCo-authored-by: Ivan Fernandez Calvo <kuisathaverat@users.noreply.github.com>\r\nCo-authored-by: Victor Martinez <victormartinezrubio@gmail.com>\r\nCo-authored-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "36ff1f18db1c89ec9c2bb185035fa162ce6de9f9": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/UserRegistry.java": [
                    "public ProcessBuilder co.elastic.apm.attach.UserRegistry.runAs(List<String> cmd)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdvice(Class<?> adviceClass)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/postprocessor/AssignToPostProcessorFactory.java": [
                    "private Advice.PostProcessor co.elastic.apm.agent.bci.bytebuddy.postprocessor.AssignToPostProcessorFactory.createAssignToReturnPostProcessor(final MethodDescription.InDefinedShape adviceMethod, final boolean exit, final AssignTo.Return assignToReturn)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java": [
                    "public Request co.elastic.apm.agent.impl.context.Request.withHttpVersion(@Nullable String httpVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Url.java": [
                    "public Url co.elastic.apm.agent.impl.context.Url.withPort(int port)",
                    "public boolean co.elastic.apm.agent.impl.context.Url.hasContent()",
                    "public void co.elastic.apm.agent.impl.context.Url.resetState()",
                    "public void co.elastic.apm.agent.impl.context.Url.copyFrom(Url other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeUrl(final Url url)"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/weakmap/WeakMapSupplier.java": [
                    "public static <K, V> WeakConcurrentMap<K, V> co.elastic.apm.agent.sdk.weakmap.WeakMapSupplier.createMap()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequestContext(Transaction transaction, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr, @Nullable String contentTypeHeader)"
                ]
            },
            "036418bd583ac2649229a861fc3e8f5a624d64de": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/UserRegistry.java": [
                    "public ProcessBuilder co.elastic.apm.attach.UserRegistry.runAs(List<String> cmd)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdvice(Class<?> adviceClass)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/postprocessor/AssignToPostProcessorFactory.java": [
                    "private Advice.PostProcessor co.elastic.apm.agent.bci.bytebuddy.postprocessor.AssignToPostProcessorFactory.createAssignToReturnPostProcessor(final MethodDescription.InDefinedShape adviceMethod, final boolean exit, final AssignTo.Return assignToReturn)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java": [
                    "public Request co.elastic.apm.agent.impl.context.Request.withHttpVersion(@Nullable String httpVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Url.java": [
                    "public Url co.elastic.apm.agent.impl.context.Url.withPort(int port)",
                    "public boolean co.elastic.apm.agent.impl.context.Url.hasContent()",
                    "public void co.elastic.apm.agent.impl.context.Url.resetState()",
                    "public void co.elastic.apm.agent.impl.context.Url.copyFrom(Url other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeUrl(final Url url)"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/weakmap/WeakMapSupplier.java": [
                    "public static <K, V> WeakConcurrentMap<K, V> co.elastic.apm.agent.sdk.weakmap.WeakMapSupplier.createMap()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequestContext(Transaction transaction, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr, @Nullable String contentTypeHeader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8ae955b53ec742974ad7f2ca70b7f9e55707d727",
        "previous_commit": "2037e9360f0615841ef9483500b354e27bb43b25",
        "date": 1531992976,
        "releases": {
            "previous": "8ae955b53ec742974ad7f2ca70b7f9e55707d727",
            "next": "8ae955b53ec742974ad7f2ca70b7f9e55707d727"
        },
        "commit_message": "Async transactions",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8ae955b53ec742974ad7f2ca70b7f9e55707d727": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.createInstance()",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction, @Nullable Span parentSpan, long nanoTime)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.activate(Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span parentSpan, long nanoTime, boolean dropped)",
                    "public void co.elastic.apm.impl.transaction.Span.end()",
                    "public void co.elastic.apm.impl.transaction.Span.end(long nanoTime, boolean releaseActiveSpan)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(ElasticApmTracer tracer, @Nullable String traceParentHeader, long startTimestampNanos, Sampler sampler)",
                    "public void co.elastic.apm.impl.transaction.Transaction.end()",
                    "public Span co.elastic.apm.impl.transaction.Transaction.createSpan()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.startNoop(ElasticApmTracer tracer)",
                    "private boolean co.elastic.apm.impl.transaction.Transaction.isTransactionSpanLimitReached()"
                ]
            },
            "2037e9360f0615841ef9483500b354e27bb43b25": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.createInstance()",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction, @Nullable Span parentSpan, long nanoTime)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.activate(Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span parentSpan, long nanoTime, boolean dropped)",
                    "public void co.elastic.apm.impl.transaction.Span.end()",
                    "public void co.elastic.apm.impl.transaction.Span.end(long nanoTime, boolean releaseActiveSpan)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(ElasticApmTracer tracer, @Nullable String traceParentHeader, long startTimestampNanos, Sampler sampler)",
                    "public void co.elastic.apm.impl.transaction.Transaction.end()",
                    "public Span co.elastic.apm.impl.transaction.Transaction.createSpan()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.startNoop(ElasticApmTracer tracer)",
                    "private boolean co.elastic.apm.impl.transaction.Transaction.isTransactionSpanLimitReached()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "69656a0a6185c659a0235f96c43bf7b30979a28e",
        "previous_commit": "4d32c876719069fb01c0dbd24317dc458179cd42",
        "date": 1524636739,
        "releases": {
            "previous": "69656a0a6185c659a0235f96c43bf7b30979a28e",
            "next": "69656a0a6185c659a0235f96c43bf7b30979a28e"
        },
        "commit_message": "OpenTracing bridge (#70)\n\nImplement OpenTracing bridge",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "69656a0a6185c659a0235f96c43bf7b30979a28e": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epchTimestampMillis, Exception e)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(Exception e)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracerBuilder.java": [
                    "private ConfigurationRegistry co.elastic.apm.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span parentSpan, long nanoTime, boolean dropped)",
                    "public void co.elastic.apm.impl.transaction.Span.end()",
                    "public void co.elastic.apm.impl.transaction.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.end()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)"
                ]
            },
            "4d32c876719069fb01c0dbd24317dc458179cd42": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(Exception e)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracerBuilder.java": [
                    "private ConfigurationRegistry co.elastic.apm.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span span, long nanoTime, boolean dropped)",
                    "public void co.elastic.apm.impl.transaction.Span.end()",
                    "public void co.elastic.apm.impl.transaction.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.end()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "48f01f8cdbeb443436b4eeec7686c05d3c889243",
        "previous_commit": "954651153f76eca4dc5c516cc05169b7e305ecf9",
        "date": 1594980272,
        "releases": {
            "previous": "48f01f8cdbeb443436b4eeec7686c05d3c889243",
            "next": "48f01f8cdbeb443436b4eeec7686c05d3c889243"
        },
        "commit_message": "First step towards enabling external plugins (#1271)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "48f01f8cdbeb443436b4eeec7686c05d3c889243": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)",
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "public static ClassLoader co.elastic.apm.agent.bci.ElasticApmAgent.getAgentClassLoader()",
                    "private static Iterable<ElasticApmInstrumentation> co.elastic.apm.agent.bci.ElasticApmAgent.loadInstrumentations(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/HelperClassManager.java": [
                    "private static <T> T co.elastic.apm.agent.bci.HelperClassManager<T>.createHelper(@Nullable ClassLoader targetClassLoader, ElasticApmTracer tracer, String implementation, String... additionalHelpers)",
                    "static Class co.elastic.apm.agent.bci.HelperClassManager<T>.injectClass(@Nullable ClassLoader targetClassLoader, @Nullable ProtectionDomain pd, String className, boolean isBootstrapClass)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PackageScanner.java": [
                    "public static List<String> co.elastic.apm.agent.util.PackageScanner.getClassNames(final String basePackage, ClassLoader classLoader)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "private static void co.elastic.apm.agent.concurrent.JavaConcurrent.captureContext(Object task, AbstractSpan<?> active)"
                ]
            },
            "954651153f76eca4dc5c516cc05169b7e305ecf9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)",
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "public static ClassLoader co.elastic.apm.agent.bci.ElasticApmAgent.getAgentClassLoader()",
                    "private static Iterable<ElasticApmInstrumentation> co.elastic.apm.agent.bci.ElasticApmAgent.loadInstrumentations(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/HelperClassManager.java": [
                    "private static <T> T co.elastic.apm.agent.bci.HelperClassManager<T>.createHelper(@Nullable ClassLoader targetClassLoader, ElasticApmTracer tracer, String implementation, String... additionalHelpers)",
                    "static Class co.elastic.apm.agent.bci.HelperClassManager<T>.injectClass(@Nullable ClassLoader targetClassLoader, @Nullable ProtectionDomain pd, String className, boolean isBootstrapClass)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PackageScanner.java": [
                    "public static List<String> co.elastic.apm.agent.util.PackageScanner.getClassNames(final String basePackage)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "private static void co.elastic.apm.agent.concurrent.JavaConcurrent.captureContext(Object task, AbstractSpan<?> active)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5a9bfac1e2698b06bb985b0358270022690788eb",
        "previous_commit": "a08c026e731e44f2336835891bf21fd5cc5f8181",
        "date": 1524635513,
        "releases": {
            "previous": "5a9bfac1e2698b06bb985b0358270022690788eb",
            "next": "5a9bfac1e2698b06bb985b0358270022690788eb"
        },
        "commit_message": "Remove Jackson from production code\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5a9bfac1e2698b06bb985b0358270022690788eb": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeUrl(final Url url)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeRequest(final Request request)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeUser(final User user)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeResponse(final Response response)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSocket(final Socket socket)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanCount(final SpanCount spanCount)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.writeField(final String fieldName, final PotentiallyMultiValuedMap<String, String> map)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            },
            "a08c026e731e44f2336835891bf21fd5cc5f8181": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeUrl(final Url url)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeRequest(final Request request)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeUser(final User user)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeResponse(final Response response)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSocket(final Socket socket)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanCount(final SpanCount spanCount)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.writeField(final String fieldName, final PotentiallyMultiValuedMap<String, String> map)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1ee103236f653eceb897a9e4e603841895ec85bd",
        "previous_commit": "6d49e9f6022e076d2e5e46bf5fbc606e69542846",
        "date": 1629754803,
        "releases": {
            "previous": "1ee103236f653eceb897a9e4e603841895ec85bd",
            "next": "1ee103236f653eceb897a9e4e603841895ec85bd"
        },
        "commit_message": "implement to enable JvmDiscoverer tests on Windows (#2065)\n\n* implement to enable JvmDiscoverer tests on Windows\r\n\r\n* fix 1.7 incompatibility; improve comments; and make Eyal's suggested improved flow\r\n\r\n* remove runAs* methods; add reading stderr&stdout output to task listing; reduce IO read buffer to 4k (from 64k); eliminate NPE; get exception cause correct in edge case\r\n\r\n* handle IO edge case; fix 1.7 incompatibility",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1ee103236f653eceb897a9e4e603841895ec85bd": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "private boolean co.elastic.apm.attach.AgentAttacher.attachAsUser(UserRegistry.User user, Map<String, String> agentArgs, String pid)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/GetAgentProperties.java": [
                    "static Properties co.elastic.apm.attach.GetAgentProperties.getAgentAndSystemPropertiesSwitchUser(String pid, UserRegistry.User user)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/JvmDiscoverer.java": [
                    "public Collection<JvmInfo> co.elastic.apm.attach.UsingPs.discoverJvms()",
                    "public Collection<JvmInfo> co.elastic.apm.attach.ForHotSpotVm.discoverJvms()",
                    "public Collection<JvmInfo> co.elastic.apm.attach.Compound.discoverJvms()",
                    "public boolean co.elastic.apm.attach.ForHotSpotVm.isAvailable()",
                    "public boolean co.elastic.apm.attach.Compound.isAvailable()",
                    "public boolean co.elastic.apm.attach.UsingPs.isAvailable()"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/UserRegistry.java": [
                    "private static boolean co.elastic.apm.attach.UserRegistry.canSwitchToUser(String user)",
                    "private String co.elastic.apm.attach.UserRegistry.findTempDir(User user)",
                    "private static User co.elastic.apm.attach.UserRegistry.of(String username)"
                ]
            },
            "6d49e9f6022e076d2e5e46bf5fbc606e69542846": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "private boolean co.elastic.apm.attach.AgentAttacher.attachAsUser(UserRegistry.User user, Map<String, String> agentArgs, String pid)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/GetAgentProperties.java": [
                    "static Properties co.elastic.apm.attach.GetAgentProperties.getAgentAndSystemPropertiesSwitchUser(String pid, UserRegistry.User user)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/JvmDiscoverer.java": [
                    "public Collection<JvmInfo> co.elastic.apm.attach.UsingPs.discoverJvms()",
                    "public Collection<JvmInfo> co.elastic.apm.attach.ForHotSpotVm.discoverJvms()",
                    "public Collection<JvmInfo> co.elastic.apm.attach.Compound.discoverJvms()",
                    "public boolean co.elastic.apm.attach.ForHotSpotVm.isAvailable()",
                    "public boolean co.elastic.apm.attach.Compound.isAvailable()",
                    "public boolean co.elastic.apm.attach.UsingPs.isAvailable()"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/UserRegistry.java": [
                    "private static boolean co.elastic.apm.attach.UserRegistry.canSwitchToUser(String user)",
                    "private String co.elastic.apm.attach.UserRegistry.findTempDir(User user)",
                    "private static User co.elastic.apm.attach.UserRegistry.of(String username)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e306c60534394cc25dedfc0caf5fbff028eea74a",
        "previous_commit": "80148905e8054647d48b5ab8fe744b13a7989625",
        "date": 1723549124,
        "releases": {
            "previous": "e306c60534394cc25dedfc0caf5fbff028eea74a",
            "next": "e306c60534394cc25dedfc0caf5fbff028eea74a"
        },
        "commit_message": "Capture request body for HttpUrlConnection (#3724)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e306c60534394cc25dedfc0caf5fbff028eea74a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/SpanImpl.java": [
                    "public void co.elastic.apm.agent.impl.transaction.SpanImpl.resetState()",
                    "public void co.elastic.apm.agent.impl.transaction.SpanImpl.beforeEnd(long epochMicros)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/RequestBodyRecordingInputStream.java": [
                    "public void co.elastic.apm.agent.httpclient.RequestBodyRecordingInputStream.close()",
                    "public int co.elastic.apm.agent.httpclient.RequestBodyRecordingInputStream.read()",
                    "public int co.elastic.apm.agent.httpclient.RequestBodyRecordingInputStream.read(byte[] b, int off, int len)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/RequestBodyRecordingOutputStream.java": [
                    "public void co.elastic.apm.agent.httpclient.RequestBodyRecordingOutputStream.close()",
                    "public void co.elastic.apm.agent.httpclient.RequestBodyRecordingOutputStream.releaseSpan()",
                    "public void co.elastic.apm.agent.httpclient.RequestBodyRecordingOutputStream.write(byte[] b)",
                    "public void co.elastic.apm.agent.httpclient.RequestBodyRecordingOutputStream.write(byte[] b, int off, int len)",
                    "public void co.elastic.apm.agent.httpclient.RequestBodyRecordingOutputStream.write(int b)"
                ]
            },
            "80148905e8054647d48b5ab8fe744b13a7989625": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/SpanImpl.java": [
                    "public void co.elastic.apm.agent.impl.transaction.SpanImpl.resetState()",
                    "public void co.elastic.apm.agent.impl.transaction.SpanImpl.beforeEnd(long epochMicros)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/RequestBodyRecordingInputStream.java": [
                    "public void co.elastic.apm.agent.httpclient.RequestBodyRecordingInputStream.close()",
                    "public int co.elastic.apm.agent.httpclient.RequestBodyRecordingInputStream.read()",
                    "public int co.elastic.apm.agent.httpclient.RequestBodyRecordingInputStream.read(byte[] b, int off, int len)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/RequestBodyRecordingOutputStream.java": [
                    "public void co.elastic.apm.agent.httpclient.RequestBodyRecordingOutputStream.close()",
                    "public void co.elastic.apm.agent.httpclient.RequestBodyRecordingOutputStream.releaseSpan()",
                    "public void co.elastic.apm.agent.httpclient.RequestBodyRecordingOutputStream.write(byte[] b)",
                    "public void co.elastic.apm.agent.httpclient.RequestBodyRecordingOutputStream.write(byte[] b, int off, int len)",
                    "public void co.elastic.apm.agent.httpclient.RequestBodyRecordingOutputStream.write(int b)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f7ad1e14374f40974f8d35b12903cdd3ae959aef",
        "previous_commit": "1ebf63cff72ef524468112ded8ef5b4160f65796",
        "date": 1679379101,
        "releases": {
            "previous": "f7ad1e14374f40974f8d35b12903cdd3ae959aef",
            "next": "f7ad1e14374f40974f8d35b12903cdd3ae959aef"
        },
        "commit_message": "Implementing `long_field_max_length` according to spec (#3027)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f7ad1e14374f40974f8d35b12903cdd3ae959aef": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Db.java": [
                    "public CharBuffer co.elastic.apm.agent.impl.context.Db.createInstance()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java": [
                    "public CharBuffer co.elastic.apm.agent.impl.context.Request.createInstance()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeLongStringBuilderValue(StringBuilder value, JsonWriter jw)",
                    "public static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeStringValue(CharSequence value, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeLongStringValue(CharSequence value, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeStringBuilderValue(StringBuilder value, JsonWriter jw)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/BinaryHeaderMap.java": [
                    "void co.elastic.apm.agent.util.BinaryHeaderMap.setValue(@Nullable CharBuffer valueBuffer)",
                    "private void co.elastic.apm.agent.util.BinaryHeaderMap.enlargeBuffer()"
                ]
            },
            "1ebf63cff72ef524468112ded8ef5b4160f65796": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Db.java": [
                    "public CharBuffer co.elastic.apm.agent.impl.context.Db.createInstance()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java": [
                    "public CharBuffer co.elastic.apm.agent.impl.context.Request.createInstance()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeLongStringBuilderValue(StringBuilder value, JsonWriter jw)",
                    "public static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeStringValue(CharSequence value, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeLongStringValue(CharSequence value, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeStringBuilderValue(StringBuilder value, JsonWriter jw)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/BinaryHeaderMap.java": [
                    "void co.elastic.apm.agent.util.BinaryHeaderMap.setValue(@Nullable CharBuffer valueBuffer)",
                    "private void co.elastic.apm.agent.util.BinaryHeaderMap.enlargeBuffer()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ae57423b8dba1b8661344a3c2f43efa85e9fc658",
        "previous_commit": "1109642fc896e83e840f21ce1beb276685709a7f",
        "date": 1551692870,
        "releases": {
            "previous": "ae57423b8dba1b8661344a3c2f43efa85e9fc658",
            "next": "ae57423b8dba1b8661344a3c2f43efa85e9fc658"
        },
        "commit_message": "Add support for Number and boolean tags (#497)\n\nRenames tags to labels\r\n\r\ncloses #494",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ae57423b8dba1b8661344a3c2f43efa85e9fc658": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/AbstractContext.java": [
                    "public boolean co.elastic.apm.agent.impl.context.AbstractContext.hasContent()",
                    "public void co.elastic.apm.agent.impl.context.AbstractContext.copyFrom(AbstractContext other)",
                    "public void co.elastic.apm.agent.impl.context.AbstractContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/TransactionContext.java": [
                    "public void co.elastic.apm.agent.impl.context.TransactionContext.copyFrom(TransactionContext other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Id.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Id.copyFrom(Id other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeContext(final TransactionContext context)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeMetricSet(MetricSet metricSet, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static void co.elastic.apm.agent.opentracing.impl.ApmSpanInstrumentation.handleTransactionTag(Transaction transaction, String key, Object value)",
                    "private static void co.elastic.apm.agent.opentracing.impl.ApmSpanInstrumentation.handleSpanTag(Span span, String key, Object value)"
                ]
            },
            "1109642fc896e83e840f21ce1beb276685709a7f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/AbstractContext.java": [
                    "public boolean co.elastic.apm.agent.impl.context.AbstractContext.hasContent()",
                    "public void co.elastic.apm.agent.impl.context.AbstractContext.copyFrom(AbstractContext other)",
                    "public void co.elastic.apm.agent.impl.context.AbstractContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/TransactionContext.java": [
                    "public void co.elastic.apm.agent.impl.context.TransactionContext.copyFrom(TransactionContext other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Id.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Id.copyFrom(Id other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeContext(final TransactionContext context)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeMetricSet(MetricSet metricSet, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static void co.elastic.apm.agent.opentracing.impl.ApmSpanInstrumentation.handleTransactionTag(Transaction transaction, String key, Object value)",
                    "private static void co.elastic.apm.agent.opentracing.impl.ApmSpanInstrumentation.handleSpanTag(Span span, String key, Object value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "491da9dd92f172b907589465e6c833ec08adeba7",
        "previous_commit": "30813154b8633de72ad41cb7fbe524e3663f998d",
        "date": 1574179031,
        "releases": {
            "previous": "491da9dd92f172b907589465e6c833ec08adeba7",
            "next": "491da9dd92f172b907589465e6c833ec08adeba7"
        },
        "commit_message": "JMS - some more enhancements (#911)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "491da9dd92f172b907589465e6c833ec08adeba7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Message.java": [
                    "public boolean co.elastic.apm.agent.impl.context.Message.hasContent()",
                    "public void co.elastic.apm.agent.impl.context.Message.resetState()",
                    "public void co.elastic.apm.agent.impl.context.Message.copyFrom(Message other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java": [
                    "public void co.elastic.apm.agent.impl.context.Request.redactBody()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMessageContext(final Message message)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public boolean co.elastic.apm.agent.servlet.ServletTransactionHelper.captureParameters(String method, @Nullable String contentTypeHeader)",
                    "public boolean co.elastic.apm.agent.servlet.ServletTransactionHelper.isCaptureHeaders()",
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.startCaptureBody(Transaction transaction, String method, @Nullable String contentTypeHeader)",
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequestParameters(Transaction transaction, String method, @Nullable Map<String, String[]> parameterMap, @Nullable String contentTypeHeader)"
                ]
            },
            "30813154b8633de72ad41cb7fbe524e3663f998d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Message.java": [
                    "public boolean co.elastic.apm.agent.impl.context.Message.hasContent()",
                    "public void co.elastic.apm.agent.impl.context.Message.resetState()",
                    "public void co.elastic.apm.agent.impl.context.Message.copyFrom(Message other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java": [
                    "public void co.elastic.apm.agent.impl.context.Request.redactBody()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMessageContext(final Message message)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public boolean co.elastic.apm.agent.servlet.ServletTransactionHelper.captureParameters(String method, @Nullable String contentTypeHeader)",
                    "public boolean co.elastic.apm.agent.servlet.ServletTransactionHelper.isCaptureHeaders()",
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.startCaptureBody(Transaction transaction, String method, @Nullable String contentTypeHeader)",
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequestParameters(Transaction transaction, String method, @Nullable Map<String, String[]> parameterMap, @Nullable String contentTypeHeader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6af35b810731736dd8cf5ba5d86ad8314c5e8b4e",
        "previous_commit": "0dbb0f07794094158ffa0593fedd206b51e91992",
        "date": 1534182223,
        "releases": {
            "previous": "6af35b810731736dd8cf5ba5d86ad8314c5e8b4e",
            "next": "6af35b810731736dd8cf5ba5d86ad8314c5e8b4e"
        },
        "commit_message": "Don't call Throwable#getStackTrace in application threads (#162)\n\nGetting the stacktrace is considerably slower than creating a throwable.\r\nSo doing that off the critical path in the reporter thread makes sense.\r\nThis also gets rid of the intermediate Stacktrace object altogether.\r\nInsead, directly serialize the StackTraceElements into the OutputStream.\r\n\r\nSee http://mail.openjdk.java.net/pipermail/core-libs-dev/2017-October/049560.html\r\nfor more background.",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6af35b810731736dd8cf5ba5d86ad8314c5e8b4e": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochTimestampMillis, @Nullable Throwable e, @Nullable AbstractSpan<?> active)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.recycle(Span span)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.stop()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/Log.java": [
                    "public void co.elastic.apm.impl.error.Log.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "private ReportingEventHandler co.elastic.apm.report.ReporterFactory.getReportingEventHandler(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion, ReporterConfiguration reporterConfiguration, OkHttpClient httpClient)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            },
            "0dbb0f07794094158ffa0593fedd206b51e91992": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochTimestampMillis, @Nullable Throwable e, @Nullable AbstractSpan<?> active)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.recycle(Span span)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.stop()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/Log.java": [
                    "public void co.elastic.apm.impl.error.Log.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "private ReportingEventHandler co.elastic.apm.report.ReporterFactory.getReportingEventHandler(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion, ReporterConfiguration reporterConfiguration, OkHttpClient httpClient)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "25eb0dd6c72ea07d7491894d90ef506dda3b98a9",
        "previous_commit": "65047edbd322580a6deb52531302a1ba9c5c4874",
        "date": 1521357971,
        "releases": {
            "previous": "25eb0dd6c72ea07d7491894d90ef506dda3b98a9",
            "next": "25eb0dd6c72ea07d7491894d90ef506dda3b98a9"
        },
        "commit_message": "Add ability to disable tracer dynamically\n\nThe tracer will turn into a noop then\nElasticApmTracer.instance is now not nullable\nRemove unnecessary synchronization in #register methods\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "25eb0dd6c72ea07d7491894d90ef506dda3b98a9": {
                "apm-agent-api/src/main/java/co/elastic/apm/api/ElasticApm.java": [
                    "void co.elastic.apm.api.ElasticApm.unregister()",
                    "void co.elastic.apm.api.ElasticApm.register(Tracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span)",
                    "public static ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.get()",
                    "public void co.elastic.apm.impl.ElasticApmTracer.recycle(Transaction transaction)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()",
                    "public void co.elastic.apm.impl.ElasticApmTracer.endTransaction(Transaction transaction)",
                    "ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.register()",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span span, long nanoTime, boolean dropped)"
                ]
            },
            "65047edbd322580a6deb52531302a1ba9c5c4874": {
                "apm-agent-api/src/main/java/co/elastic/apm/api/ElasticApm.java": [
                    "void co.elastic.apm.api.ElasticApm.unregister()",
                    "void co.elastic.apm.api.ElasticApm.register(Tracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span)",
                    "public static ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.get()",
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.register()",
                    "public void co.elastic.apm.impl.ElasticApmTracer.recycle(Transaction transaction)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()",
                    "public void co.elastic.apm.impl.ElasticApmTracer.endTransaction(Transaction transaction)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span span, long nanoTime, boolean dropped)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f2ac5f684ab43e7cc91a62bf606d748d7aa3ce52",
        "previous_commit": "d8c0354e13f1ccd1bb928baf3d3f626ba03edc55",
        "date": 1592405155,
        "releases": {
            "previous": "f2ac5f684ab43e7cc91a62bf606d748d7aa3ce52",
            "next": "f2ac5f684ab43e7cc91a62bf606d748d7aa3ce52"
        },
        "commit_message": "Instrument Runnables/Callables instead of wrapping them (#1206)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f2ac5f684ab43e7cc91a62bf606d748d7aa3ce52": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(NamedElement target)",
                    "public static ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.classLoaderCanLoadClass(final String className)",
                    "public String co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.toString()"
                ],
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/helper/AsyncCallbackCreatorImpl.java": [
                    "public void co.elastic.apm.agent.dubbo.helper.AsyncCallbackCreatorImpl.accept(Result result, Throwable t)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/ExecutorInstrumentation.java": [
                    "public static boolean co.elastic.apm.agent.concurrent.ExecutorInstrumentation.isExcluded(@Advice.This Executor executor)",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getTypeMatcher()",
                    "public Collection<String> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getInstrumentationGroupNames()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getMethodMatcher()"
                ]
            },
            "d8c0354e13f1ccd1bb928baf3d3f626ba03edc55": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(NamedElement target)",
                    "public static ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.classLoaderCanLoadClass(final String className)",
                    "public String co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.toString()"
                ],
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/helper/AsyncCallbackCreatorImpl.java": [
                    "public void co.elastic.apm.agent.dubbo.helper.AsyncCallbackCreatorImpl.accept(Result result, Throwable t)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/ExecutorInstrumentation.java": [
                    "public static boolean co.elastic.apm.agent.concurrent.ExecutorInstrumentation.isExcluded(@Advice.This Executor executor)",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getTypeMatcher()",
                    "public Collection<String> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getInstrumentationGroupNames()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "464b9c134c9d74e2a482367e9c1e8a1a8e2ba97e",
        "previous_commit": "d8ae52b96a21ece930624938882f5d447fcaf94d",
        "date": 1710250361,
        "releases": {
            "previous": "464b9c134c9d74e2a482367e9c1e8a1a8e2ba97e",
            "next": "464b9c134c9d74e2a482367e9c1e8a1a8e2ba97e"
        },
        "commit_message": "Add API for instrumenting FAAS and adjust the AWS plugin (#3516)\n\n\r\n\r\n---------\r\n\r\nCo-authored-by: Sylvain Juge <763082+SylvainJuge@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "464b9c134c9d74e2a482367e9c1e8a1a8e2ba97e": {
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/RequestHandlerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.awslambda.RequestHandlerInstrumentation.handlerExit(@Nullable @Advice.Enter Object transactionObj, @Nullable @Advice.Thrown Throwable thrown, @Nullable @Advice.Return Object output)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/RequestStreamHandlerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.awslambda.RequestStreamHandlerInstrumentation.handlerExit(@Nullable @Advice.Enter Object transactionObj, @Nullable @Advice.Thrown Throwable thrown)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV1TransactionHelper.java": [
                    "protected Transaction<?> co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.doStartTransaction(APIGatewayProxyRequestEvent apiGatewayEvent, Context lambdaContext)",
                    "public static APIGatewayProxyV1TransactionHelper co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV2TransactionHelper.java": [
                    "protected Transaction<?> co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.doStartTransaction(APIGatewayV2HTTPEvent apiGatewayEvent, Context lambdaContext)",
                    "public static APIGatewayProxyV2TransactionHelper co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/PlainTransactionHelper.java": [
                    "public static PlainTransactionHelper co.elastic.apm.agent.awslambda.helper.PlainTransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/S3TransactionHelper.java": [
                    "public static S3TransactionHelper co.elastic.apm.agent.awslambda.helper.S3TransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/SNSTransactionHelper.java": [
                    "public static SNSTransactionHelper co.elastic.apm.agent.awslambda.helper.SNSTransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/SQSTransactionHelper.java": [
                    "public static SQSTransactionHelper co.elastic.apm.agent.awslambda.helper.SQSTransactionHelper.getInstance()"
                ]
            },
            "d8ae52b96a21ece930624938882f5d447fcaf94d": {
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/RequestHandlerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.awslambda.RequestHandlerInstrumentation.handlerExit(@Nullable @Advice.Enter Object transactionObj, @Nullable @Advice.Thrown Throwable thrown, @Nullable @Advice.Return Object output)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/RequestStreamHandlerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.awslambda.RequestStreamHandlerInstrumentation.handlerExit(@Nullable @Advice.Enter Object transactionObj, @Nullable @Advice.Thrown Throwable thrown)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV1TransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.doStartTransaction(APIGatewayProxyRequestEvent apiGatewayEvent, Context lambdaContext)",
                    "public static APIGatewayProxyV1TransactionHelper co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV2TransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.doStartTransaction(APIGatewayV2HTTPEvent apiGatewayEvent, Context lambdaContext)",
                    "public static APIGatewayProxyV2TransactionHelper co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/PlainTransactionHelper.java": [
                    "public static PlainTransactionHelper co.elastic.apm.agent.awslambda.helper.PlainTransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/S3TransactionHelper.java": [
                    "public static S3TransactionHelper co.elastic.apm.agent.awslambda.helper.S3TransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/SNSTransactionHelper.java": [
                    "public static SNSTransactionHelper co.elastic.apm.agent.awslambda.helper.SNSTransactionHelper.getInstance()"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/SQSTransactionHelper.java": [
                    "public static SQSTransactionHelper co.elastic.apm.agent.awslambda.helper.SQSTransactionHelper.getInstance()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f265d6063cfca7a1a28d72f5e5b22b3d2d00d6a4",
        "previous_commit": "9379f5f0646f332446a3d2441ec96391426c4086",
        "date": 1553242079,
        "releases": {
            "previous": "f265d6063cfca7a1a28d72f5e5b22b3d2d00d6a4",
            "next": "f265d6063cfca7a1a28d72f5e5b22b3d2d00d6a4"
        },
        "commit_message": "Capture text-based request bodies (#498)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f265d6063cfca7a1a28d72f5e5b22b3d2d00d6a4": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java": [
                    "public void co.elastic.apm.agent.impl.context.Request.redactBody()",
                    "public void co.elastic.apm.agent.impl.context.Request.resetState()",
                    "public CharBuffer co.elastic.apm.agent.impl.context.Request.getBodyBuffer()",
                    "public Object co.elastic.apm.agent.impl.context.Request.getBody()",
                    "public void co.elastic.apm.agent.impl.context.Request.copyFrom(Request other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.doEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeRequest(final Request request)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequestContext(Transaction transaction, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr, @Nullable String contentTypeHeader)",
                    "public boolean co.elastic.apm.agent.servlet.ServletTransactionHelper.captureParameters(String method, @Nullable String contentTypeHeader)",
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequestParameters(Transaction transaction, String method, @Nullable Map<String, String[]> parameterMap, @Nullable String contentTypeHeader)"
                ]
            },
            "9379f5f0646f332446a3d2441ec96391426c4086": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java": [
                    "public void co.elastic.apm.agent.impl.context.Request.redactBody()",
                    "public void co.elastic.apm.agent.impl.context.Request.resetState()",
                    "public CharBuffer co.elastic.apm.agent.impl.context.Request.getBodyBuffer()",
                    "public Object co.elastic.apm.agent.impl.context.Request.getBody()",
                    "public void co.elastic.apm.agent.impl.context.Request.copyFrom(Request other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.doEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeRequest(final Request request)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequestContext(Transaction transaction, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr)",
                    "public boolean co.elastic.apm.agent.servlet.ServletTransactionHelper.captureParameters(String method, @Nullable String contentTypeHeader)",
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequestParameters(Transaction transaction, String method, @Nullable Map<String, String[]> parameterMap, @Nullable String contentTypeHeader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "01a5c8cebbf5b06f91e1ebbc614bab6c9d710f11",
        "previous_commit": "42d312bacdff4f272c3e6fc42e032347307bba96",
        "date": 1591795500,
        "releases": {
            "previous": "01a5c8cebbf5b06f91e1ebbc614bab6c9d710f11",
            "next": "01a5c8cebbf5b06f91e1ebbc614bab6c9d710f11"
        },
        "commit_message": "Set framework name and version (#1194)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "01a5c8cebbf5b06f91e1ebbc614bab6c9d710f11": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeService(final Service service)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/helper/GrpcHelperImpl.java": [
                    "public Transaction co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.startTransaction(ElasticApmTracer tracer, ClassLoader cl, ServerCall<?, ?> serverCall, Metadata headers)"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature, @JaxRsPath @Nullable String pathAnnotationValue)"
                ],
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Transaction co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsTransaction(Message parentMessage, Class<?> instrumentedClass)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "private static AbstractSpan<?> co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.createTransaction(Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ElasticApmTracer tracer, ClassLoader classLoader)"
                ]
            },
            "42d312bacdff4f272c3e6fc42e032347307bba96": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeService(final Service service)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/helper/GrpcHelperImpl.java": [
                    "public Transaction co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.startTransaction(ElasticApmTracer tracer, ClassLoader cl, ServerCall<?, ?> serverCall, Metadata headers)"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature, @JaxRsPath @Nullable String pathAnnotationValue)"
                ],
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Transaction co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsTransaction(Message parentMessage, Class<?> instrumentedClass)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/helper/ConsumerRecordsIteratorWrapper.java": [
                    "public ConsumerRecord co.elastic.apm.agent.kafka.helper.ConsumerRecordsIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "private static AbstractSpan<?> co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.createTransaction(Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ElasticApmTracer tracer, ClassLoader classLoader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c0d561735997b528e7f0bd964e27c66562f86a05",
        "previous_commit": "67515c23566ce4885914321e4271adcfa64c7f96",
        "date": 1572353507,
        "releases": {
            "previous": "c0d561735997b528e7f0bd964e27c66562f86a05",
            "next": "c0d561735997b528e7f0bd964e27c66562f86a05"
        },
        "commit_message": "Fix JMX metric tracking and support MBeans added at runtime (#900)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c0d561735997b528e7f0bd964e27c66562f86a05": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "void co.elastic.apm.agent.jmx.JmxMetricTracker.unregister(MetricRegistry metricRegistry)",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.stop()",
                    "public double co.elastic.apm.agent.jmx.JmxMetricTracker.get()",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.start(ElasticApmTracer tracer)",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.onChange(ConfigurationOption<?> configurationOption, List<JmxMetric> oldValue, List<JmxMetric> newValue)",
                    "private List<JmxMetricRegistration> co.elastic.apm.agent.jmx.JmxMetricTracker.compileJmxMetricRegistrations(List<JmxMetric> jmxMetrics, MBeanServer server)",
                    "void co.elastic.apm.agent.jmx.JmxMetricTracker.register(final MBeanServer server, final MetricRegistry metricRegistry)"
                ]
            },
            "67515c23566ce4885914321e4271adcfa64c7f96": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private List<JmxMetricRegistration> co.elastic.apm.agent.jmx.JmxMetricTracker.compileJmxMetricRegistrations(List<JmxMetric> jmxMetrics)",
                    "void co.elastic.apm.agent.jmx.JmxMetricTracker.unregister(MetricRegistry metricRegistry)",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.stop()",
                    "public double co.elastic.apm.agent.jmx.JmxMetricTracker.get()",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.start(ElasticApmTracer tracer)",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.onChange(ConfigurationOption<?> configurationOption, List<JmxMetric> oldValue, List<JmxMetric> newValue)",
                    "void co.elastic.apm.agent.jmx.JmxMetricTracker.register(final MBeanServer server, final MetricRegistry metricRegistry)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9515ec757700af2dd31060cade2f226cb9957c76",
        "previous_commit": "6bdd74effdcc2551fd4d6606fa0225546615628e",
        "date": 1564407694,
        "releases": {
            "previous": "9515ec757700af2dd31060cade2f226cb9957c76",
            "next": "9515ec757700af2dd31060cade2f226cb9957c76"
        },
        "commit_message": "Introduce priorities for transaction name (#748)\n\nNow uses a transaction name according to use_path_as_transaction_name\r\nrather than ServletClass#doGet.\r\nBut if a name can be determined from a high level framework,\r\nlike Spring MVC, that takes precedence.\r\nUser-supplied names from the API always take precedence over any others.\r\n\r\nfixes #673",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9515ec757700af2dd31060cade2f226cb9957c76": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature, @JaxRsPath @Nullable String pathAnnotationValue)"
                ],
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.createJdbcSpan(@Nullable String sql, Connection connection, @Nullable TraceContextHolder<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsMessageConsumerInstrumentation.java": [
                    "public static AbstractSpan co.elastic.apm.agent.jms.JmsMessageConsumerInstrumentation.beforeReceive(@Advice.Origin Class<?> clazz)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.doOnAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)",
                    "public static void co.elastic.apm.agent.servlet.ServletTransactionHelper.setTransactionNameByServletClass(@Nullable String method, @Nullable Class<?> servletClass, Transaction transaction)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/spring/webmvc/SpringTransactionNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.spring.webmvc.SpringTransactionNameInstrumentation.setName(Transaction transaction, String className, @Nullable String methodName)"
                ]
            },
            "6bdd74effdcc2551fd4d6606fa0225546615628e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature, @JaxRsPath @Nullable String pathAnnotationValue)"
                ],
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.createJdbcSpan(@Nullable String sql, Connection connection, @Nullable TraceContextHolder<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsMessageConsumerInstrumentation.java": [
                    "public static AbstractSpan co.elastic.apm.agent.jms.JmsMessageConsumerInstrumentation.beforeReceive(@Advice.Origin Class<?> clazz)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.doOnAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)",
                    "public static void co.elastic.apm.agent.servlet.ServletTransactionHelper.setTransactionNameByServletClass(@Nullable String method, @Nullable Class<?> servletClass, StringBuilder transactionName)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/spring/webmvc/SpringTransactionNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.spring.webmvc.SpringTransactionNameInstrumentation.setName(Transaction transaction, String className, @Nullable String methodName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c852d0a2c1992332bba2a28b013c6042e3bdab7b",
        "previous_commit": "168b714a98338c47b4500c7ce0f60c77a6c6fc35",
        "date": 1633077506,
        "releases": {
            "previous": "c852d0a2c1992332bba2a28b013c6042e3bdab7b",
            "next": "c852d0a2c1992332bba2a28b013c6042e3bdab7b"
        },
        "commit_message": "Cached weak map keys (#2137)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c852d0a2c1992332bba2a28b013c6042e3bdab7b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public static ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.classLoaderCanLoadClass(final String className)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/LruTypePoolCache.java": [
                    "void co.elastic.apm.agent.bci.bytebuddy.LruTypePoolCache.evictStaleEntries(long maxAgeMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/collections/WeakMapCleaner.java": [
                    "public void co.elastic.apm.agent.collections.WeakMapCleaner.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PackageScanner.java": [
                    "public FileVisitResult co.elastic.apm.agent.util.PackageScanner.visitFile(Path file, BasicFileAttributes attrs)",
                    "private static List<String> co.elastic.apm.agent.util.PackageScanner.listClassNames(final String basePackage, final Path basePath)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.cancelCall(ClientCall<?, ?> clientCall, @Nullable Throwable cause)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx3-plugin/src/main/java/co/elastic/apm/agent/vertx/v3/web/WebHelper.java": [
                    "public Transaction co.elastic.apm.agent.vertx.v3.web.WebHelper.getTransactionForRequest(HttpServerRequest request)"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/AgentMain.java": [
                    "private synchronized static void co.elastic.apm.agent.premain.AgentMain.loadAndInitializeAgent(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/ShadedClassLoader.java": [
                    "private String co.elastic.apm.agent.premain.ShadedClassLoader.getShadedResourceName(String name)"
                ]
            },
            "168b714a98338c47b4500c7ce0f60c77a6c6fc35": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public static ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.classLoaderCanLoadClass(final String className)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/LruTypePoolCache.java": [
                    "void co.elastic.apm.agent.bci.bytebuddy.LruTypePoolCache.evictStaleEntries(long maxAgeMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/collections/WeakMapCleaner.java": [
                    "public void co.elastic.apm.agent.collections.WeakMapCleaner.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PackageScanner.java": [
                    "public FileVisitResult co.elastic.apm.agent.util.PackageScanner.visitFile(Path file, BasicFileAttributes attrs)",
                    "private static List<String> co.elastic.apm.agent.util.PackageScanner.listClassNames(final String basePackage, final Path basePath)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.cancelCall(ClientCall<?, ?> clientCall, @Nullable Throwable cause)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx3-plugin/src/main/java/co/elastic/apm/agent/vertx/v3/web/WebHelper.java": [
                    "public Transaction co.elastic.apm.agent.vertx.v3.web.WebHelper.getTransactionForRequest(HttpServerRequest request)"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/AgentMain.java": [
                    "private synchronized static void co.elastic.apm.agent.premain.AgentMain.loadAndInitializeAgent(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/ShadedClassLoader.java": [
                    "private String co.elastic.apm.agent.premain.ShadedClassLoader.getShadedResourceName(String name)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5f2af8f264142c1e5c16698d547499b78529f656",
        "previous_commit": "dbb70b411567a4ff49e80b72552956705aa2fef4",
        "date": 1520699335,
        "releases": {
            "previous": "5f2af8f264142c1e5c16698d547499b78529f656",
            "next": "5f2af8f264142c1e5c16698d547499b78529f656"
        },
        "commit_message": "Noop Transaction when not sampled\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5f2af8f264142c1e5c16698d547499b78529f656": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.addTag(String key, String value)",
                    "public void co.elastic.apm.impl.transaction.Transaction.setUser(String id, String email, String username)",
                    "public void co.elastic.apm.impl.transaction.Transaction.end()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.withTimestamp(long timestampEpoch)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.withName(String name)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.withResult(String result)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)"
                ]
            },
            "dbb70b411567a4ff49e80b72552956705aa2fef4": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.addTag(String key, String value)",
                    "public void co.elastic.apm.impl.transaction.Transaction.setUser(String id, String email, String username)",
                    "public void co.elastic.apm.impl.transaction.Transaction.end()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.withTimestamp(long timestampEpoch)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.withName(String name)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.withResult(String result)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d8b583f30c6b406ba8f81e63f0ce71af22dc2469",
        "previous_commit": "e760b934e0eabb92e5af43aa56c0d249e08942f0",
        "date": 1537441730,
        "releases": {
            "previous": "d8b583f30c6b406ba8f81e63f0ce71af22dc2469",
            "next": "d8b583f30c6b406ba8f81e63f0ce71af22dc2469"
        },
        "commit_message": "Error id adjustments for intake v2 (#217)\n\n- add transactionId to TraceContext\r\n- Error.id is required in intake v2\r\n- Error.id is 128 bits long\r\n\r\ncloses #213",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d8b583f30c6b406ba8f81e63f0ce71af22dc2469": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochTimestampMillis, @Nullable Throwable e, @Nullable AbstractSpan<?> active)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "private void co.elastic.apm.impl.transaction.TraceContext.parseTraceId(String traceParent)",
                    "public boolean co.elastic.apm.impl.transaction.TraceContext.hasContent()",
                    "public void co.elastic.apm.impl.transaction.TraceContext.asRootSpan(Sampler sampler)",
                    "private void co.elastic.apm.impl.transaction.TraceContext.parseParentId(String traceParent)",
                    "public boolean co.elastic.apm.impl.transaction.TraceContext.asChildOf(String traceParentHeader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)"
                ]
            },
            "e760b934e0eabb92e5af43aa56c0d249e08942f0": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochTimestampMillis, @Nullable Throwable e, @Nullable AbstractSpan<?> active)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "private void co.elastic.apm.impl.transaction.TraceContext.parseTraceId(String traceParent)",
                    "public boolean co.elastic.apm.impl.transaction.TraceContext.hasContent()",
                    "public void co.elastic.apm.impl.transaction.TraceContext.asRootSpan(Sampler sampler)",
                    "private void co.elastic.apm.impl.transaction.TraceContext.parseParentId(String traceParent)",
                    "public boolean co.elastic.apm.impl.transaction.TraceContext.asChildOf(String traceParentHeader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b1c30b6488babdd374e133ae7b99380f10810d16",
        "previous_commit": "5beca3b616e33fff4a65706d9567c7c599d616cb",
        "date": 1547471558,
        "releases": {
            "previous": "b1c30b6488babdd374e133ae7b99380f10810d16",
            "next": "b1c30b6488babdd374e133ae7b99380f10810d16"
        },
        "commit_message": "Introduce TraceContextHolder, unifying context propagation (#417)\n\nIntroducing `TraceContextHolder` in the internal API as a common\r\nsuperclass of both `TraceContext` and `AbstractSpan`. Given an instance\r\nof this class, you can create child spans, capture exceptions and manage\r\nactivations/scopes.\r\n\r\nThis abstraction reliefs clients from having to differ between the case\r\nwhen the current activation is a `TraceContext` vs an `AbstractSpan`.\r\n\r\nA `TraceContext` would be active when the current thread does not own\r\nthe lifecycle of the parent span. Otherwise an `AbstractSpan` would be\r\nactive.\r\n\r\nThere is rarely a case where a client would need to get the currently\r\nactive span to set the name or tags. This propagation is normally done\r\nwith `@Advice.Local` variables from enter to exit advices. Should the\r\nneed for that arise however, and the client can ensure that the current\r\nactivation is actually an `AbstractSpan`, all they need to do is to cast\r\n`tracer.getActive()` from `TraceContextHolder` to `AbstractSpan`.\r\n\r\nThe public API does not differ between `Span` and `TraceContextHolder`.\r\n`ElasticApm.currentSpan()` always returns a `Span`. In case the current\r\nactivation is a `TraceContextHolder`, methods like `Span#setTag` are\r\nsilent noops. Calling those methods on a `Span` whose lifecycle is not\r\nowned by the caller is illegal anyway. However, calling\r\n`ElasticApm.currentSpan().createSpan()` is always allowed.\r\n\r\nTaking away `ElasticApm.currentSpan()` is not an option, as a common use\r\ncase is to rename the spans created by the auto instrumentation or to\r\nadd custom tags.\r\n\r\nAlso, `ElasticApm.currentSpan().createSpan()` makes for a much nicer and\r\nmore object-oriented API than starting a span on a tracer, passing in\r\nthe parent as a start option.\r\n\r\nIn preparation of #145",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b1c30b6488babdd374e133ae7b99380f10810d16": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable TraceContextHolder<?> active)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureException(@Nullable Throwable e)",
                    "public Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(AbstractSpan<?> parent, long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext child, ElasticApmTracer tracer)",
                    "public TraceContext co.elastic.apm.agent.impl.transaction.TraceContext.copy()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/PreparedStatementInstrumentation.java": [
                    "public static Span co.elastic.apm.agent.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable TraceContext parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)"
                ]
            },
            "5beca3b616e33fff4a65706d9567c7c599d616cb": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> active)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureException(@Nullable Throwable e)",
                    "public Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(AbstractSpan<?> parent, long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext child, ElasticApmTracer tracer)",
                    "public TraceContext co.elastic.apm.agent.impl.transaction.TraceContext.copy()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/PreparedStatementInstrumentation.java": [
                    "public static Span co.elastic.apm.agent.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable TraceContext parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "60279c71a6486b948f8ed8635a84d822608021ff",
        "previous_commit": "c2629677a9393ba3412d5c75154abde87078c0fd",
        "date": 1592296519,
        "releases": {
            "previous": "60279c71a6486b948f8ed8635a84d822608021ff",
            "next": "60279c71a6486b948f8ed8635a84d822608021ff"
        },
        "commit_message": "Delay default SSLSocketFactory initialization (#1209)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "60279c71a6486b948f8ed8635a84d822608021ff": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initialize(String agentArguments, Instrumentation instrumentation, File agentJarFile, boolean premain)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription target)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "List<URL> co.elastic.apm.agent.report.ApmServerClient.getServerUrls()",
                    "public <T> List<T> co.elastic.apm.agent.report.ApmServerClient.executeForAllUrls(String path, ConnectionHandler<T> connectionHandler)",
                    "URL co.elastic.apm.agent.report.ApmServerClient.getCurrentUrl()",
                    "private List<URL> co.elastic.apm.agent.report.ApmServerClient.getPrioritizedUrlList()",
                    "public boolean co.elastic.apm.agent.report.ApmServerClient.isAtLeast(Version apmServerVersion)"
                ]
            },
            "c2629677a9393ba3412d5c75154abde87078c0fd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initialize(String agentArguments, Instrumentation instrumentation, File agentJarFile, boolean premain)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription target)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "List<URL> co.elastic.apm.agent.report.ApmServerClient.getServerUrls()",
                    "public <T> List<T> co.elastic.apm.agent.report.ApmServerClient.executeForAllUrls(String path, ConnectionHandler<T> connectionHandler)",
                    "URL co.elastic.apm.agent.report.ApmServerClient.getCurrentUrl()",
                    "private List<URL> co.elastic.apm.agent.report.ApmServerClient.getPrioritizedUrlList()",
                    "public boolean co.elastic.apm.agent.report.ApmServerClient.isAtLeast(Version apmServerVersion)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8d31b40e4101cb5c80603d42b98a45befe94faf8",
        "previous_commit": "934ae1b834abc1902d40a8f5a1957806b8f8fb89",
        "date": 1545228557,
        "releases": {
            "previous": "8d31b40e4101cb5c80603d42b98a45befe94faf8",
            "next": "8d31b40e4101cb5c80603d42b98a45befe94faf8"
        },
        "commit_message": "Add basic metrics support (#360)\n\n\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8d31b40e4101cb5c80603d42b98a45befe94faf8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.close()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.writeEvent(ReportingEvent event)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReportingEvent.java": [
                    "public void co.elastic.apm.agent.report.ReportingEvent.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static CharSequence co.elastic.apm.agent.report.serialize.DslJsonSerializer.sanitizeTagKey(String key, StringBuilder replaceBuilder)",
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTags(Map<String, String> value)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeStringBuilderValue(StringBuilder value)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeStringValue(CharSequence value)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeFieldName(final String fieldName)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeStringValue(CharSequence value, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            },
            "934ae1b834abc1902d40a8f5a1957806b8f8fb89": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.close()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.writeEvent(ReportingEvent event)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReportingEvent.java": [
                    "public void co.elastic.apm.agent.report.ReportingEvent.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTags(Map<String, String> value)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeStringBuilderValue(StringBuilder value)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeStringValue(CharSequence value)",
                    "private CharSequence co.elastic.apm.agent.report.serialize.DslJsonSerializer.sanitizeTagKey(String key)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeFieldName(final String fieldName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a837d43aa3fa189c19ae5dadaa4e0e28ae52d97a",
        "previous_commit": "04eea1bad6bcd66da866896375771c584f1de22a",
        "date": 1622645943,
        "releases": {
            "previous": "a837d43aa3fa189c19ae5dadaa4e0e28ae52d97a",
            "next": "a837d43aa3fa189c19ae5dadaa4e0e28ae52d97a"
        },
        "commit_message": "Shared JSON spec for span types/subtypes (#1812)\n\n* first draft for JSON spec\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a837d43aa3fa189c19ae5dadaa4e0e28ae52d97a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.agent.impl.transaction.Span.withAction(@Nullable String action)",
                    "public Span co.elastic.apm.agent.impl.transaction.Span.withType(@Nullable String type)",
                    "public void co.elastic.apm.agent.impl.transaction.Span.setType(@Nullable String type, @Nullable String subtype, @Nullable String action)",
                    "public Span co.elastic.apm.agent.impl.transaction.Span.withSubtype(@Nullable String subtype)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanType(Span span)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanInstrumentation.java": [
                    "public static void co.elastic.apm.agent.opentracingimpl.ApmSpanInstrumentation.doFinishInternal(AbstractSpan<?> abstractSpan, long finishMicros)",
                    "private static boolean co.elastic.apm.agent.opentracingimpl.ApmSpanInstrumentation.handleSpecialSpanTag(Span span, String key, Object value)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessHelper.java": [
                    "void co.elastic.apm.agent.process.ProcessHelper.doStartProcess(@Nonnull AbstractSpan<?> parentContext, @Nonnull Process process, @Nonnull String processName)"
                ]
            },
            "04eea1bad6bcd66da866896375771c584f1de22a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.agent.impl.transaction.Span.withAction(@Nullable String action)",
                    "public Span co.elastic.apm.agent.impl.transaction.Span.withType(@Nullable String type)",
                    "public void co.elastic.apm.agent.impl.transaction.Span.setType(@Nullable String type, @Nullable String subtype, @Nullable String action)",
                    "public Span co.elastic.apm.agent.impl.transaction.Span.withSubtype(@Nullable String subtype)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanType(Span span)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanInstrumentation.java": [
                    "public static void co.elastic.apm.agent.opentracingimpl.ApmSpanInstrumentation.doFinishInternal(AbstractSpan<?> abstractSpan, long finishMicros)",
                    "private static boolean co.elastic.apm.agent.opentracingimpl.ApmSpanInstrumentation.handleSpecialSpanTag(Span span, String key, Object value)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessHelper.java": [
                    "void co.elastic.apm.agent.process.ProcessHelper.doStartProcess(@Nonnull AbstractSpan<?> parentContext, @Nonnull Process process, @Nonnull String processName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c751adc1bda84734208699cfecd43eba99023b05",
        "previous_commit": "e9b5c779629c63d016bbcba91a71ef4f16d13f26",
        "date": 1624465213,
        "releases": {
            "previous": "c751adc1bda84734208699cfecd43eba99023b05",
            "next": "c751adc1bda84734208699cfecd43eba99023b05"
        },
        "commit_message": "Issue 1699 extend destination field (#1788)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c751adc1bda84734208699cfecd43eba99023b05": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Destination.java": [
                    "public Destination co.elastic.apm.agent.impl.context.Destination.withAddress(@Nullable CharSequence address)",
                    "private void co.elastic.apm.agent.impl.context.Destination.withAddress(CharSequence address, int start, int end)",
                    "public Service co.elastic.apm.agent.impl.context.Destination.withName(String name)",
                    "public Service co.elastic.apm.agent.impl.context.Destination.withResource(String resource)",
                    "public Destination co.elastic.apm.agent.impl.context.Destination.withPort(int port)",
                    "public Destination co.elastic.apm.agent.impl.context.Destination.withAddressPort(@Nullable String addressPort)",
                    "public void co.elastic.apm.agent.impl.context.Destination.resetState()",
                    "public boolean co.elastic.apm.agent.impl.context.Destination.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeDestination(Destination destination)"
                ]
            },
            "e9b5c779629c63d016bbcba91a71ef4f16d13f26": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Destination.java": [
                    "public Destination co.elastic.apm.agent.impl.context.Destination.withAddress(@Nullable CharSequence address)",
                    "public Service co.elastic.apm.agent.impl.context.Destination.withName(String name)",
                    "public Service co.elastic.apm.agent.impl.context.Destination.withResource(String resource)",
                    "private Destination co.elastic.apm.agent.impl.context.Destination.withAddress(CharSequence address, int start, int end)",
                    "public Destination co.elastic.apm.agent.impl.context.Destination.withPort(int port)",
                    "public Destination co.elastic.apm.agent.impl.context.Destination.withAddressPort(@Nullable String addressPort)",
                    "public void co.elastic.apm.agent.impl.context.Destination.resetState()",
                    "public boolean co.elastic.apm.agent.impl.context.Destination.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeDestination(Destination destination)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "eee7e77b1b8f51aa065a78fd0eaa8e513fc4ad6e",
        "previous_commit": "c1ad071b7e27142bf3cb99118a3a41563cc3bf34",
        "date": 1690280671,
        "releases": {
            "previous": "eee7e77b1b8f51aa065a78fd0eaa8e513fc4ad6e",
            "next": "eee7e77b1b8f51aa065a78fd0eaa8e513fc4ad6e"
        },
        "commit_message": "OpenTelemetry Bridge Baggage support (#3249)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "eee7e77b1b8f51aa065a78fd0eaa8e513fc4ad6e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public <C> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startChildTransaction(@Nullable C headerCarrier, TextHeaderGetter<C> textHeadersGetter, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(@Nullable ClassLoader initiatingClassLoader, long epochMicro)",
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(@Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/context/OTelContextStorage.java": [
                    "public Context co.elastic.apm.agent.opentelemetry.context.OTelContextStorage.current()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelBridgeContext.java": [
                    "public Baggage co.elastic.apm.agent.opentelemetry.tracing.OTelBridgeContext.getBaggage()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpanBuilder.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.tracing.OTelSpanBuilder.startSpan()",
                    "public SpanBuilder co.elastic.apm.agent.opentelemetry.tracing.OTelSpanBuilder.setNoParent()",
                    "public SpanBuilder co.elastic.apm.agent.opentelemetry.tracing.OTelSpanBuilder.setParent(Context context)"
                ]
            },
            "c1ad071b7e27142bf3cb99118a3a41563cc3bf34": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public <C> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startChildTransaction(@Nullable C headerCarrier, TextHeaderGetter<C> textHeadersGetter, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(@Nullable ClassLoader initiatingClassLoader, long epochMicro)",
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(@Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/context/OTelContextStorage.java": [
                    "public Context co.elastic.apm.agent.opentelemetry.context.OTelContextStorage.current()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelBridgeContext.java": [
                    "public Baggage co.elastic.apm.agent.opentelemetry.tracing.OTelBridgeContext.getBaggage()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpanBuilder.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.tracing.OTelSpanBuilder.startSpan()",
                    "public SpanBuilder co.elastic.apm.agent.opentelemetry.tracing.OTelSpanBuilder.setNoParent()",
                    "public SpanBuilder co.elastic.apm.agent.opentelemetry.tracing.OTelSpanBuilder.setParent(Context context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1db65984484c8d928fb1c75a39b5be81f328e7af",
        "previous_commit": "3deb2095d1c99a66198c56d19e1b3b096f43a3b7",
        "date": 1531992976,
        "releases": {
            "previous": "1db65984484c8d928fb1c75a39b5be81f328e7af",
            "next": "1db65984484c8d928fb1c75a39b5be81f328e7af"
        },
        "commit_message": "Make tracer a @Nonnull final field in AbstractSpan\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1db65984484c8d928fb1c75a39b5be81f328e7af": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction, @Nullable Span parentSpan, long nanoTime)",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createNoopSpan()",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction(@Nullable String traceContextHeader, Sampler sampler, long nanoTime)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.noopTransaction()",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.createInstance()",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.createInstance()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(Transaction transaction, @Nullable Span parentSpan, long nanoTime, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(@Nullable String traceParentHeader, long startTimestampNanos, Sampler sampler)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/JdbcHelper.java": [
                    "Span co.elastic.apm.jdbc.JdbcHelper.createJdbcSpan(@Nullable String sql, Connection connection, @Nullable AbstractSpan<?> parent)"
                ]
            },
            "3deb2095d1c99a66198c56d19e1b3b096f43a3b7": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction, @Nullable Span parentSpan, long nanoTime)",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createNoopSpan()",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction(@Nullable String traceContextHeader, Sampler sampler, long nanoTime)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.noopTransaction()",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.createInstance()",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.createInstance()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span parentSpan, long nanoTime, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(ElasticApmTracer tracer, @Nullable String traceParentHeader, long startTimestampNanos, Sampler sampler)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/JdbcHelper.java": [
                    "Span co.elastic.apm.jdbc.JdbcHelper.createJdbcSpan(@Nullable String sql, Connection connection, @Nullable AbstractSpan<?> parent)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8bb6a1e2178384a59c7cb9126e98eeddad0d23f8",
        "previous_commit": "6d991c8d01f882b35bcad9a6d731bd3c3d8619c6",
        "date": 1582138526,
        "releases": {
            "previous": "8bb6a1e2178384a59c7cb9126e98eeddad0d23f8",
            "next": "8bb6a1e2178384a59c7cb9126e98eeddad0d23f8"
        },
        "commit_message": "Inferring spans with async-profiler (#983)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8bb6a1e2178384a59c7cb9126e98eeddad0d23f8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <T> Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private LifecycleListener co.elastic.apm.agent.impl.ElasticApmTracerBuilder.scheduleReloadAtRate(final ConfigurationRegistry configurationRegistry, final int rate, TimeUnit seconds)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Id.java": [
                    "public int co.elastic.apm.agent.impl.transaction.Id.fromBytes(byte[] bytes, int offset)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.resetState()",
                    "public <T> Span co.elastic.apm.agent.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/matcher/WildcardMatcher.java": [
                    "public static int co.elastic.apm.agent.matcher.WildcardMatcher.indexOfIgnoreCase(final CharSequence haystack1, final CharSequence haystack2, final String needle, final boolean ignoreCase, final int start, final int end)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.scheduleMetricReporting(final MetricRegistry metricRegistry, long intervalMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            },
            "6d991c8d01f882b35bcad9a6d731bd3c3d8619c6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <T> Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private LifecycleListener co.elastic.apm.agent.impl.ElasticApmTracerBuilder.scheduleReloadAtRate(final ConfigurationRegistry configurationRegistry, final int rate, TimeUnit seconds)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Id.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Id.fromBytes(byte[] bytes, int offset)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.resetState()",
                    "public <T> Span co.elastic.apm.agent.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/matcher/WildcardMatcher.java": [
                    "public static int co.elastic.apm.agent.matcher.WildcardMatcher.indexOfIgnoreCase(final String haystack1, final String haystack2, final String needle, final boolean ignoreCase, final int start, final int end)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.scheduleMetricReporting(final MetricRegistry metricRegistry, long intervalMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "826fbf99bfd0c16833a4a4fe6f8d5ff9ee13681a",
        "previous_commit": "c0a9382fc7b9677822c32bc122aa817d336de5ab",
        "date": 1707478633,
        "releases": {
            "previous": "826fbf99bfd0c16833a4a4fe6f8d5ff9ee13681a",
            "next": "826fbf99bfd0c16833a4a4fe6f8d5ff9ee13681a"
        },
        "commit_message": "add option for automatic JMX retry (#3511)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "826fbf99bfd0c16833a4a4fe6f8d5ff9ee13681a": {
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.registerMBeanNotificationListener(final MBeanServer server)",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.stop()",
                    "public double co.elastic.apm.agent.jmx.JmxMetricTracker.get()",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.register(List<JmxMetric> jmxMetrics, MBeanServer server, List<JmxMetric> failedMetrics)",
                    "synchronized void co.elastic.apm.agent.jmx.JmxMetricTracker.init(final MBeanServer platformMBeanServer)",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.onChange(ConfigurationOption<?> configurationOption, List<JmxMetric> oldValue, List<JmxMetric> newValue)",
                    "void co.elastic.apm.agent.jmx.JmxMetricTracker.register(final MBeanServer server, final MetricRegistry metricRegistry)",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.run()",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.addMBean(ObjectName mBeanName, JmxMetric jmxMetric)"
                ]
            },
            "c0a9382fc7b9677822c32bc122aa817d336de5ab": {
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.registerMBeanNotificationListener(final MBeanServer server)",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.stop()",
                    "public double co.elastic.apm.agent.jmx.JmxMetricTracker.get()",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.register(List<JmxMetric> jmxMetrics, MBeanServer server)",
                    "synchronized void co.elastic.apm.agent.jmx.JmxMetricTracker.init(final MBeanServer platformMBeanServer)",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.onChange(ConfigurationOption<?> configurationOption, List<JmxMetric> oldValue, List<JmxMetric> newValue)",
                    "void co.elastic.apm.agent.jmx.JmxMetricTracker.register(final MBeanServer server, final MetricRegistry metricRegistry)",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.run()",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.addMBean(ObjectName mBeanName, JmxMetric jmxMetric)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7d7f828160f3d63e215321d92182d92e85ddd050",
        "previous_commit": "7e3b21aff82b5ed75331757eec2d7ab5026a4c42",
        "date": 1520468156,
        "releases": {
            "previous": "7d7f828160f3d63e215321d92182d92e85ddd050",
            "next": "7d7f828160f3d63e215321d92182d92e85ddd050"
        },
        "commit_message": "Report ErrorCaptures to APM server\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7d7f828160f3d63e215321d92182d92e85ddd050": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private Reporter co.elastic.apm.impl.ElasticApmTracer.createReporter(CoreConfiguration coreConfiguration, ReporterConfiguration reporterConfiguration, String frameworkName, String frameworkVersion)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(Exception e)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Transaction.java": [
                    "public void co.elastic.apm.impl.Transaction.resetState()",
                    "public void co.elastic.apm.impl.Transaction.recycle()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.report.ApmServerReporter.run()",
                    "public void co.elastic.apm.report.ApmServerReporter.close()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.ReportingEventHandler.onEvent(ApmServerReporter.ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            },
            "7e3b21aff82b5ed75331757eec2d7ab5026a4c42": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private Reporter co.elastic.apm.impl.ElasticApmTracer.createReporter(CoreConfiguration coreConfiguration, ReporterConfiguration reporterConfiguration, String frameworkName, String frameworkVersion)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(Exception e)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Transaction.java": [
                    "public void co.elastic.apm.impl.Transaction.resetState()",
                    "public void co.elastic.apm.impl.Transaction.recycle()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.report.ApmServerReporter.run()",
                    "public void co.elastic.apm.report.ApmServerReporter.close()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.ReportingEventHandler.onEvent(ApmServerReporter.ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "90277e23cd597c10c283b5e5d3f17da98475806b",
        "previous_commit": "bf4b4deff3f73e6631e3dd147b59d056a5550525",
        "date": 1714980544,
        "releases": {
            "previous": "90277e23cd597c10c283b5e5d3f17da98475806b",
            "next": "90277e23cd597c10c283b5e5d3f17da98475806b"
        },
        "commit_message": "Universal profiling integration: Add stacktrace-IDs to transactions (#3615)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "90277e23cd597c10c283b5e5d3f17da98475806b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/universalprofiling/UniversalProfilingIntegration.java": [
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.start(ElasticApmTracer tracer)",
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.correlateAndReport(Transaction endedTransaction)",
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.afterTransactionStart(Transaction startedTransaction)",
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.drop(Transaction endedTransaction)",
                    "private void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.handleMessage(ProfilerRegistrationMessage message)",
                    "private void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.handleMessage(TraceCorrelationMessage message)",
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.stop()",
                    "void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.periodicTimer()"
                ]
            },
            "bf4b4deff3f73e6631e3dd147b59d056a5550525": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/universalprofiling/UniversalProfilingIntegration.java": [
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.start(ElasticApmTracer tracer)",
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.correlateAndReport(Transaction endedTransaction)",
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.drop(Transaction endedTransaction)",
                    "private void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.handleMessage(ProfilerRegistrationMessage message)",
                    "private void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.handleMessage(TraceCorrelationMessage message)",
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.stop()",
                    "private void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.periodicTimer()",
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.afterTransactionStart(Transaction startedTransaction)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9cd614ac23af586decb4894e138281945d85561c",
        "previous_commit": "964ed2b6b66ca30917892db8743af5d8eaa31494",
        "date": 1531992976,
        "releases": {
            "previous": "9cd614ac23af586decb4894e138281945d85561c",
            "next": "9cd614ac23af586decb4894e138281945d85561c"
        },
        "commit_message": "Create spans from transaction\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9cd614ac23af586decb4894e138281945d85561c": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.createInstance()",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction, @Nullable Span parentSpan, long nanoTime)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span parentSpan, long nanoTime, boolean dropped)",
                    "public void co.elastic.apm.impl.transaction.Span.end(long nanoTime, boolean releaseActiveSpan)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/SpanCount.java": [
                    "public void co.elastic.apm.impl.transaction.SpanCount.resetState()",
                    "public int co.elastic.apm.impl.transaction.SpanCount.getTotal()",
                    "public void co.elastic.apm.impl.transaction.SpanCount.increment()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.end(long nanoTime, boolean releaseActiveTransaction)"
                ]
            },
            "964ed2b6b66ca30917892db8743af5d8eaa31494": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.createInstance()",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction, @Nullable Span parentSpan, long nanoTime)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span parentSpan, long nanoTime, boolean dropped)",
                    "public void co.elastic.apm.impl.transaction.Span.end(long nanoTime, boolean releaseActiveSpan)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/SpanCount.java": [
                    "public void co.elastic.apm.impl.transaction.SpanCount.resetState()",
                    "public int co.elastic.apm.impl.transaction.SpanCount.getTotal()",
                    "public void co.elastic.apm.impl.transaction.SpanCount.increment()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.end(long nanoTime, boolean releaseActiveTransaction)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ccb51bee813ee3641bf566a6ff3f600cb1de671e",
        "previous_commit": "c17db61e65463e8efa23ae3ea29981e797004d9f",
        "date": 1627471446,
        "releases": {
            "previous": "ccb51bee813ee3641bf566a6ff3f600cb1de671e",
            "next": "ccb51bee813ee3641bf566a6ff3f600cb1de671e"
        },
        "commit_message": "Use path when high-level framework method is unknown (#1906)\n\n\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ccb51bee813ee3641bf566a6ff3f600cb1de671e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/TransactionNameUtils.java": [
                    "public static void co.elastic.apm.agent.util.TransactionNameUtils.setTransactionNameByServletClass(@Nullable String httpMethod, @Nullable Class<?> servletClass, @Nullable StringBuilder transactionName)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "void co.elastic.apm.agent.servlet.ServletTransactionHelper.applyDefaultTransactionName(String method, String servletPath, @Nullable String pathInfo, Transaction transaction)"
                ],
                "apm-agent-plugins/apm-sparkjava-plugin/src/main/java/co/elastic/apm/agent/sparkjava/RoutesAdvice.java": [
                    "public static void co.elastic.apm.agent.sparkjava.RoutesAdvice.onExitFind(@Advice.Return RouteMatch routeMatch)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/TransactionAwareSubscriber.java": [
                    "private static void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.fillResponse(Transaction transaction, ServerWebExchange exchange)",
                    "private static void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.fillRequest(Transaction transaction, ServerWebExchange exchange)",
                    "private void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.endTransaction(@Nullable Throwable thrown, @Nullable Transaction transaction)"
                ],
                "apm-agent-plugins/apm-struts-plugin/src/main/java/co/elastic/apm/agent/struts/Struts2TransactionNameAdvice.java": [
                    "public static void co.elastic.apm.agent.struts.Struts2TransactionNameAdvice.setTransactionName(@Advice.This ActionProxy actionProxy)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractHttpTransactionHelper.java": [
                    "public void co.elastic.apm.agent.vertx.AbstractHttpTransactionHelper.applyDefaultTransactionName(String method, String pathFirstPart, @Nullable String pathSecondPart, Transaction transaction, int priorityOffset)"
                ]
            },
            "c17db61e65463e8efa23ae3ea29981e797004d9f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/TransactionNameUtils.java": [
                    "public static void co.elastic.apm.agent.util.TransactionNameUtils.setTransactionNameByServletClass(@Nullable String method, @Nullable Class<?> servletClass, @Nullable StringBuilder transactionName)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "void co.elastic.apm.agent.servlet.ServletTransactionHelper.applyDefaultTransactionName(String method, String servletPath, @Nullable String pathInfo, Transaction transaction)"
                ],
                "apm-agent-plugins/apm-sparkjava-plugin/src/main/java/co/elastic/apm/agent/sparkjava/RoutesAdvice.java": [
                    "public static void co.elastic.apm.agent.sparkjava.RoutesAdvice.onExitFind(@Advice.Return RouteMatch routeMatch)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/TransactionAwareSubscriber.java": [
                    "private static void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.fillResponse(Transaction transaction, ServerWebExchange exchange)",
                    "private static void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.fillRequest(Transaction transaction, ServerWebExchange exchange)",
                    "private void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.endTransaction(@Nullable Throwable thrown, @Nullable Transaction transaction)"
                ],
                "apm-agent-plugins/apm-struts-plugin/src/main/java/co/elastic/apm/agent/struts/Struts2TransactionNameAdvice.java": [
                    "public static void co.elastic.apm.agent.struts.Struts2TransactionNameAdvice.setTransactionName(@Advice.This ActionProxy actionProxy)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractHttpTransactionHelper.java": [
                    "public void co.elastic.apm.agent.vertx.AbstractHttpTransactionHelper.applyDefaultTransactionName(String method, String pathFirstPart, @Nullable String pathSecondPart, Transaction transaction, int priorityOffset)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "743432b9d7d1d55ba64c6b408f836c32089115e3",
        "previous_commit": "e3ec8c0dce03bb52743efe60b9e0a9c56a88b286",
        "date": 1644321996,
        "releases": {
            "previous": "743432b9d7d1d55ba64c6b408f836c32089115e3",
            "next": "743432b9d7d1d55ba64c6b408f836c32089115e3"
        },
        "commit_message": "Adds support for logging the used instrumentation groups (#2448)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "743432b9d7d1d55ba64c6b408f836c32089115e3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(MethodDescription target)",
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.initAgentBuilder(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)",
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.stop()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "Configuration co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.getConfiguration()"
                ]
            },
            "e3ec8c0dce03bb52743efe60b9e0a9c56a88b286": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(MethodDescription target)",
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.initAgentBuilder(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)",
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.stop()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "Configuration co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.getConfiguration()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "770334bb483deee968cab554836ef7d30a23886d",
        "previous_commit": "274de8b6c25bb5f38073136cbb760a5507b59185",
        "date": 1707997382,
        "releases": {
            "previous": "770334bb483deee968cab554836ef7d30a23886d",
            "next": "770334bb483deee968cab554836ef7d30a23886d"
        },
        "commit_message": "Added internal option to fully redact exceptions (#3528)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "770334bb483deee968cab554836ef7d30a23886d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, ElasticContext<?> parentContext, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> void co.elastic.apm.agent.servlet.ServletApiAdvice.onExitServlet( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest, Object servletResponse, @Nullable Object transactionOrScopeOrSpan, @Nullable Throwable t, Object thiz)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/JakartaApmAsyncListener.java": [
                    "public void co.elastic.apm.agent.servlet.helper.JakartaApmAsyncListener.onTimeout(AsyncEvent event)",
                    "public void co.elastic.apm.agent.servlet.helper.JakartaApmAsyncListener.onError(AsyncEvent event)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/JavaxApmAsyncListener.java": [
                    "public void co.elastic.apm.agent.servlet.helper.JavaxApmAsyncListener.onError(AsyncEvent event)",
                    "public void co.elastic.apm.agent.servlet.helper.JavaxApmAsyncListener.onTimeout(AsyncEvent event)"
                ],
                "apm-agent-plugins/apm-spring-webmvc/apm-spring-webmvc-spring5/src/main/java/co/elastic/apm/agent/springwebmvc/AbstractSpringExceptionHandlerInstrumentation.java": [
                    "public static <HttpServletRequest> void co.elastic.apm.agent.springwebmvc.AbstractSpringExceptionHandlerInstrumentation.captureRequestError(ServletRequestAdapter<HttpServletRequest, ?> adapter, @Nullable HttpServletRequest request, @Nullable Exception e)"
                ]
            },
            "274de8b6c25bb5f38073136cbb760a5507b59185": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, ElasticContext<?> parentContext, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> void co.elastic.apm.agent.servlet.ServletApiAdvice.onExitServlet( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest, Object servletResponse, @Nullable Object transactionOrScopeOrSpan, @Nullable Throwable t, Object thiz)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/JakartaApmAsyncListener.java": [
                    "public void co.elastic.apm.agent.servlet.helper.JakartaApmAsyncListener.onTimeout(AsyncEvent event)",
                    "public void co.elastic.apm.agent.servlet.helper.JakartaApmAsyncListener.onError(AsyncEvent event)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/JavaxApmAsyncListener.java": [
                    "public void co.elastic.apm.agent.servlet.helper.JavaxApmAsyncListener.onError(AsyncEvent event)",
                    "public void co.elastic.apm.agent.servlet.helper.JavaxApmAsyncListener.onTimeout(AsyncEvent event)"
                ],
                "apm-agent-plugins/apm-spring-webmvc/apm-spring-webmvc-spring5/src/main/java/co/elastic/apm/agent/springwebmvc/AbstractSpringExceptionHandlerInstrumentation.java": [
                    "public static <HttpServletRequest> void co.elastic.apm.agent.springwebmvc.AbstractSpringExceptionHandlerInstrumentation.captureRequestError(ServletRequestAdapter<HttpServletRequest, ?> adapter, @Nullable HttpServletRequest request, @Nullable Exception e)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "68caaeda57f8b7be016f48e4e9be4792d4146cff",
        "previous_commit": "fe8060f06db994abca066c4be40e49619d2f804b",
        "date": 1548670146,
        "releases": {
            "previous": "68caaeda57f8b7be016f48e4e9be4792d4146cff",
            "next": "68caaeda57f8b7be016f48e4e9be4792d4146cff"
        },
        "commit_message": "Add infrastructure to capture the request body of HTTP requests (#451)\n\n- Add Transaction.context.request.bodyBuffer (CharBuffer)\r\n- Add ability to decode byte[]/byte into a CharBuffer\r\n- Adjust serialization to take the body buffer into account\r\n- Recycling of Transaction.context.request.bodyBuffer\r\n- -> reading is garbage free",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "68caaeda57f8b7be016f48e4e9be4792d4146cff": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java": [
                    "public void co.elastic.apm.agent.impl.context.Request.redactBody()",
                    "public void co.elastic.apm.agent.impl.context.Request.resetState()",
                    "public boolean co.elastic.apm.agent.impl.context.Request.hasContent()",
                    "public Object co.elastic.apm.agent.impl.context.Request.getBody()",
                    "public void co.elastic.apm.agent.impl.context.Request.copyFrom(Request other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Url.java": [
                    "public void co.elastic.apm.agent.impl.context.Url.copyFrom(Url other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeRequest(final Request request)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/IOUtils.java": [
                    "protected ByteBuffer co.elastic.apm.agent.util.IOUtils.initialValue()"
                ]
            },
            "fe8060f06db994abca066c4be40e49619d2f804b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java": [
                    "public void co.elastic.apm.agent.impl.context.Request.redactBody()",
                    "public void co.elastic.apm.agent.impl.context.Request.resetState()",
                    "public boolean co.elastic.apm.agent.impl.context.Request.hasContent()",
                    "public Object co.elastic.apm.agent.impl.context.Request.getBody()",
                    "public void co.elastic.apm.agent.impl.context.Request.copyFrom(Request other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Url.java": [
                    "public void co.elastic.apm.agent.impl.context.Url.copyFrom(Url other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeRequest(final Request request)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/IOUtils.java": [
                    "protected ByteBuffer co.elastic.apm.agent.util.IOUtils.initialValue()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d838bb49dcb27dfed1bee5de127bcc026768d3dd",
        "previous_commit": "808e002e289d9d94470eef9cce08fb9aff97a16b",
        "date": 1564058474,
        "releases": {
            "previous": "d838bb49dcb27dfed1bee5de127bcc026768d3dd",
            "next": "d838bb49dcb27dfed1bee5de127bcc026768d3dd"
        },
        "commit_message": "Drop non-string labels if connected to older APM Server (#746)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d838bb49dcb27dfed1bee5de127bcc026768d3dd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public void co.elastic.apm.agent.report.ApmServerClient.onChange(ConfigurationOption<?> configurationOption, List<URL> oldValue, List<URL> newValue)",
                    "private static List<URL> co.elastic.apm.agent.report.ApmServerClient.shuffleUrls(List<URL> serverUrls)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "private ReportingEventHandler co.elastic.apm.agent.report.ReporterFactory.getReportingEventHandler(ConfigurationRegistry configurationRegistry, ReporterConfiguration reporterConfiguration, MetaData metaData, ApmServerClient apmServerClient)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serialize(Labels labels, StringBuilder replaceBuilder, JsonWriter jw)",
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeLabels(AbstractContext context)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeContext(final TransactionContext context, TraceContext traceContext)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStringKeyScalarValueMap(Iterator<? extends Map.Entry<String, ? /* String|Number|Boolean */>> it, StringBuilder replaceBuilder, JsonWriter jw, boolean extendedStringLimit, boolean supportsNonStringValues)"
                ]
            },
            "808e002e289d9d94470eef9cce08fb9aff97a16b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public void co.elastic.apm.agent.report.ApmServerClient.onChange(ConfigurationOption<?> configurationOption, List<URL> oldValue, List<URL> newValue)",
                    "private static List<URL> co.elastic.apm.agent.report.ApmServerClient.shuffleUrls(List<URL> serverUrls)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "private ReportingEventHandler co.elastic.apm.agent.report.ReporterFactory.getReportingEventHandler(ConfigurationRegistry configurationRegistry, ReporterConfiguration reporterConfiguration, MetaData metaData, ApmServerClient apmServerClient)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serialize(Labels labels, StringBuilder replaceBuilder, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStringKeyScalarValueMap(Iterator<? extends Map.Entry<String, ? /* String|Number|Boolean */>> it, StringBuilder replaceBuilder, JsonWriter jw, boolean extendedStringLimit)",
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeLabels(AbstractContext context)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeContext(final TransactionContext context, TraceContext traceContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1039db0c84f47493f2ce2b755909e4c4212c27fc",
        "previous_commit": "56cc3b856609ce48aaf10003e22588b2c1da7875",
        "date": 1610015018,
        "releases": {
            "previous": "1039db0c84f47493f2ce2b755909e4c4212c27fc",
            "next": "1039db0c84f47493f2ce2b755909e4c4212c27fc"
        },
        "commit_message": "CallTree recycling (#1592)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1039db0c84f47493f2ce2b755909e4c4212c27fc": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "public void co.elastic.apm.agent.profiler.CallTree.resetState()",
                    "public final void co.elastic.apm.agent.profiler.CallTree.recycle(ObjectPool<CallTree> pool)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.resetActivationEventBuffer()",
                    "void co.elastic.apm.agent.profiler.SamplingProfiler.clear()",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.clearProfiledThreads()",
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.stopProfiling(SamplingProfiler samplingProfiler)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.run()",
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.startProfiling(SamplingProfiler samplingProfiler)"
                ]
            },
            "56cc3b856609ce48aaf10003e22588b2c1da7875": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "public void co.elastic.apm.agent.profiler.CallTree.recycle(ObjectPool<CallTree> pool)",
                    "public void co.elastic.apm.agent.profiler.CallTree.resetState()"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.resetActivationEventBuffer()",
                    "void co.elastic.apm.agent.profiler.SamplingProfiler.clear()",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.clearProfiledThreads()",
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.stopProfiling(SamplingProfiler samplingProfiler)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.run()",
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.startProfiling(SamplingProfiler samplingProfiler)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f615e69241c9106b5a93b83d65974d8a7e5f0d85",
        "previous_commit": "f105513a7652c180db1dd13cd4727c919a261455",
        "date": 1633536561,
        "releases": {
            "previous": "f615e69241c9106b5a93b83d65974d8a7e5f0d85",
            "next": "f615e69241c9106b5a93b83d65974d8a7e5f0d85"
        },
        "commit_message": "Fix ECS log reformatting (#2167)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f615e69241c9106b5a93b83d65974d8a7e5f0d85": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()",
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdviceReturnAndParameterTypes(MethodDescription.InDefinedShape advice, String adviceClass)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "private static List<String> co.elastic.apm.agent.bci.IndyBootstrap.getClassNamesFromBundledPlugin(String adviceClassName, ClassLoader adviceClassLoader)",
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/classloading/IndyPluginClassLoader.java": [
                    "private static ClassLoader co.elastic.apm.agent.bci.classloading.IndyPluginClassLoader.getParent(@Nullable ClassLoader targetClassLoader, ClassLoader agentClassLoader)"
                ],
                "apm-agent-plugins/apm-log-shader-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/Log4j2EcsReformattingInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.log4j2.Log4j2EcsReformattingInstrumentation.getClassLoaderMatcher()"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/ShadedClassLoader.java": [
                    "private Class<?> co.elastic.apm.agent.premain.ShadedClassLoader.defineClass(String name, byte[] classBytes)"
                ]
            },
            "f105513a7652c180db1dd13cd4727c919a261455": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()",
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdviceReturnAndParameterTypes(MethodDescription.InDefinedShape advice, String adviceClass)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "private static List<String> co.elastic.apm.agent.bci.IndyBootstrap.getClassNamesFromBundledPlugin(String adviceClassName, ClassLoader adviceClassLoader)",
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/classloading/IndyPluginClassLoader.java": [
                    "private static ClassLoader co.elastic.apm.agent.bci.classloading.IndyPluginClassLoader.getParent(@Nullable ClassLoader targetClassLoader, ClassLoader agentClassLoader)"
                ],
                "apm-agent-plugins/apm-log-shader-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/Log4j2EcsReformattingInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.log4j2.Log4j2EcsReformattingInstrumentation.getClassLoaderMatcher()"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/ShadedClassLoader.java": [
                    "private Class<?> co.elastic.apm.agent.premain.ShadedClassLoader.defineClass(String name, byte[] classBytes)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "65047edbd322580a6deb52531302a1ba9c5c4874",
        "previous_commit": "b869f096d01bcef69bd63c9af2d2600c259a07ac",
        "date": 1521352180,
        "releases": {
            "previous": "65047edbd322580a6deb52531302a1ba9c5c4874",
            "next": "65047edbd322580a6deb52531302a1ba9c5c4874"
        },
        "commit_message": "Add @Nullable annotations where appropriate\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "65047edbd322580a6deb52531302a1ba9c5c4874": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public static ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.get()",
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(Exception e)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/Log.java": [
                    "public void co.elastic.apm.impl.error.Log.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/TransactionReference.java": [
                    "public void co.elastic.apm.impl.error.TransactionReference.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/ServiceFactory.java": [
                    "private String co.elastic.apm.impl.payload.ServiceFactory.getAgentVersion()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.end(long nanoTime)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.end()"
                ]
            },
            "b869f096d01bcef69bd63c9af2d2600c259a07ac": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public static ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.get()",
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(Exception e)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/Log.java": [
                    "public void co.elastic.apm.impl.error.Log.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/TransactionReference.java": [
                    "public void co.elastic.apm.impl.error.TransactionReference.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/ServiceFactory.java": [
                    "private String co.elastic.apm.impl.payload.ServiceFactory.getAgentVersion()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.end(long nanoTime)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.end()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e13e8755e085d09a99f0ad8707753656d36ebd32",
        "previous_commit": "c401e5f56033dc2902f350332c9209468264dca1",
        "date": 1629707906,
        "releases": {
            "previous": "e13e8755e085d09a99f0ad8707753656d36ebd32",
            "next": "e13e8755e085d09a99f0ad8707753656d36ebd32"
        },
        "commit_message": "Fix Webflux server response status capture (#1948)\n\n* add tests + remove handler wrapping\r\n\r\n* update changelog\r\n\r\n* ensure proper GC execution count, not +1\r\n\r\n* try to handle proper cancellation\r\n\r\n* try to explain it with comments\r\n\r\n* use webflux context for active transaction\r\n\r\nThis allows to avoid having an active transaction between two instrumented methods executions.\r\nWhich ensures that we don't leak any active transaction.\r\n\r\n* remove decrement as not needed anymore\r\n\r\n* handle cancellation without callback",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e13e8755e085d09a99f0ad8707753656d36ebd32": {
                "apm-agent-plugins/apm-reactor-plugin/src/main/java/co/elastic/apm/agent/reactor/TracedSubscriber.java": [
                    "private static <X> Function<? super Publisher<X>, ? extends Publisher<X>> co.elastic.apm.agent.reactor.TracedSubscriber<T>.wrapOperators(final Tracer tracer)",
                    "public CoreSubscriber<? super X> co.elastic.apm.agent.reactor.TracedSubscriber<T>.apply(Publisher publisher, CoreSubscriber<? super X> subscriber)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/TransactionAwareSubscriber.java": [
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onError(Throwable t)",
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onSubscribe(Subscription s)",
                    "private void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.doExit(boolean discard, String method, @Nullable Transaction transaction)",
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onNext(T next)",
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onComplete()"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "public CoreSubscriber<? super T> co.elastic.apm.agent.springwebflux.WebfluxHelper.apply(Publisher publisher, CoreSubscriber<? super T> subscriber)"
                ]
            },
            "c401e5f56033dc2902f350332c9209468264dca1": {
                "apm-agent-plugins/apm-reactor-plugin/src/main/java/co/elastic/apm/agent/reactor/TracedSubscriber.java": [
                    "private static <X> Function<? super Publisher<X>, ? extends Publisher<X>> co.elastic.apm.agent.reactor.TracedSubscriber<T>.wrapOperators(final Tracer tracer)",
                    "public CoreSubscriber<? super X> co.elastic.apm.agent.reactor.TracedSubscriber<T>.apply(Publisher publisher, CoreSubscriber<? super X> subscriber)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/TransactionAwareSubscriber.java": [
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onError(Throwable t)",
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onSubscribe(Subscription s)",
                    "private void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.doExit(boolean discard, String method, @Nullable Transaction transaction)",
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onNext(T next)",
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onComplete()"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "public CoreSubscriber<? super T> co.elastic.apm.agent.springwebflux.WebfluxHelper.apply(Publisher publisher, CoreSubscriber<? super T> subscriber)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ffd15c75971676cbf1c4987ae969acc986ca31c2",
        "previous_commit": "992270e00df683cc83175b71303c0e5e11f8498a",
        "date": 1521705814,
        "releases": {
            "previous": "ffd15c75971676cbf1c4987ae969acc986ca31c2",
            "next": "ffd15c75971676cbf1c4987ae969acc986ca31c2"
        },
        "commit_message": "Implement capture_body config option\n\nIntroduce Processor which processes events before they are reported\nThe processor is used to redact the request body based on the config\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ffd15c75971676cbf1c4987ae969acc986ca31c2": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/Request.java": [
                    "public Object co.elastic.apm.impl.context.Request.getBody()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerReporter.java": [
                    "public Future<Void> co.elastic.apm.report.ApmServerReporter.flush()",
                    "public void co.elastic.apm.report.ApmServerReporter.translateTo(ReportingEvent event, long sequence)",
                    "public void co.elastic.apm.report.ApmServerReporter.translateTo(ReportingEvent event, long sequence, ErrorCapture error)",
                    "public void co.elastic.apm.report.ApmServerReporter.translateTo(ReportingEvent event, long sequence, Transaction t)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)",
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)"
                ]
            },
            "992270e00df683cc83175b71303c0e5e11f8498a": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/Request.java": [
                    "public Object co.elastic.apm.impl.context.Request.getBody()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerReporter.java": [
                    "public Future<Void> co.elastic.apm.report.ApmServerReporter.flush()",
                    "public void co.elastic.apm.report.ApmServerReporter.translateTo(ReportingEvent event, long sequence)",
                    "public void co.elastic.apm.report.ApmServerReporter.translateTo(ReportingEvent event, long sequence, ErrorCapture error)",
                    "public void co.elastic.apm.report.ApmServerReporter.translateTo(ReportingEvent event, long sequence, Transaction t)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)",
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a0e0abdcbf73b3a1dcc949a92780c9983e55e8ff",
        "previous_commit": "ef369a16d12f570616f69c4f843054abde55c39b",
        "date": 1586178964,
        "releases": {
            "previous": "a0e0abdcbf73b3a1dcc949a92780c9983e55e8ff",
            "next": "a0e0abdcbf73b3a1dcc949a92780c9983e55e8ff"
        },
        "commit_message": "Fix flaky gRPC server instrumentation (#1122)\n\nfix flaky gRPC server instrumentation (was relying on transactions to stay on same thread)",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a0e0abdcbf73b3a1dcc949a92780c9983e55e8ff": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallListenerInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/helper/GrpcHelperImpl.java": [
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.startSpan(ClientCall<?, ?> clientCall, ClientCall.Listener<?> responseListener, Metadata headers)",
                    "private Span co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.getSpanFromListener(ClientCall.Listener<?> responseListener)",
                    "public Transaction co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.startTransaction(ElasticApmTracer tracer, ClassLoader cl, ServerCall<?, ?> serverCall, Metadata headers)",
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.registerSpanAndDeactivate(@Nullable Span span, ClientCall<?, ?> clientCall)",
                    "public Span co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.createExitSpanAndActivate(@Nullable Transaction transaction, @Nullable MethodDescriptor<?, ?> method)",
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.enrichSpanContext(ClientCall<?, ?> clientCall, @Nullable String authority)",
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.endSpan(ClientCall.Listener<?> responseListener, @Nullable Throwable thrown)"
                ]
            },
            "ef369a16d12f570616f69c4f843054abde55c39b": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallListenerInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/helper/GrpcHelperImpl.java": [
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.startSpan(ClientCall<?, ?> clientCall, ClientCall.Listener<?> responseListener, Metadata headers)",
                    "private Span co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.getSpanFromListener(ClientCall.Listener<?> responseListener)",
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.startTransaction(ElasticApmTracer tracer, ClassLoader cl, ServerCall<?, ?> serverCall, Metadata headers)",
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.registerSpanAndDeactivate(@Nullable Span span, ClientCall<?, ?> clientCall)",
                    "public Span co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.createExitSpanAndActivate(@Nullable Transaction transaction, @Nullable MethodDescriptor<?, ?> method)",
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.enrichSpanContext(ClientCall<?, ?> clientCall, @Nullable String authority)",
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.endSpan(ClientCall.Listener<?> responseListener, @Nullable Throwable thrown)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2259495d153766fe36aa2833a0455394b2fadbb8",
        "previous_commit": "b157471603bf2cad54552d9e164d295bd8d06b35",
        "date": 1602066736,
        "releases": {
            "previous": "2259495d153766fe36aa2833a0455394b2fadbb8",
            "next": "2259495d153766fe36aa2833a0455394b2fadbb8"
        },
        "commit_message": "sampling weight & tracestate propagation (#1384)\n\nadd sample_rate to spans & transactions, tracestate and rate rounding\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2259495d153766fe36aa2833a0455394b2fadbb8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.accept(@Nullable String tracestateHeaderValue, TraceContext state)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asRootSpan(Sampler sampler)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "<C> void co.elastic.apm.agent.impl.transaction.TraceContext.propagateTraceContext(C carrier, TextHeaderSetter<C> headerSetter)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ]
            },
            "b157471603bf2cad54552d9e164d295bd8d06b35": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.accept(@Nullable String tracestateHeaderValue, TraceContext state)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asRootSpan(Sampler sampler)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "<C> void co.elastic.apm.agent.impl.transaction.TraceContext.propagateTraceContext(C carrier, TextHeaderSetter<C> headerSetter)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0238613c320965a9fb1e2e50ddf18fd590190f5d",
        "previous_commit": "03b566ea5dff02f9bad1b61b5ddc4518e2604aad",
        "date": 1546878647,
        "releases": {
            "previous": "0238613c320965a9fb1e2e50ddf18fd590190f5d",
            "next": "0238613c320965a9fb1e2e50ddf18fd590190f5d"
        },
        "commit_message": "Error handling of Servlet Async API (#399)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0238613c320965a9fb1e2e50ddf18fd590190f5d": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "public void co.elastic.apm.agent.servlet.AsyncInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ApmAsyncListener.java": [
                    "public void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.onTimeout(AsyncEvent event)",
                    "private void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.endTransaction(AsyncEvent event)",
                    "public void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.onError(AsyncEvent event)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/AsyncContextAdviceHelperImpl.java": [
                    "public void co.elastic.apm.agent.servlet.helper.AsyncContextAdviceHelperImpl.onExitStartAsync(AsyncContext asyncContext)"
                ],
                "integration-tests/simple-webapp/src/main/java/co/elastic/webapp/AsyncStartTestServlet.java": [
                    "public void co.elastic.webapp.AsyncStartTestServlet.run()",
                    "protected void co.elastic.webapp.AsyncStartTestServlet.doGet(final HttpServletRequest req, final HttpServletResponse resp)"
                ]
            },
            "03b566ea5dff02f9bad1b61b5ddc4518e2604aad": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "public void co.elastic.apm.agent.servlet.AsyncInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ApmAsyncListener.java": [
                    "public void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.onTimeout(AsyncEvent event)",
                    "private void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.endTransaction(AsyncEvent event)",
                    "public void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.onError(AsyncEvent event)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/AsyncContextAdviceHelperImpl.java": [
                    "public void co.elastic.apm.agent.servlet.helper.AsyncContextAdviceHelperImpl.onExitStartAsync(AsyncContext asyncContext)"
                ],
                "integration-tests/simple-webapp/src/main/java/co/elastic/webapp/AsyncStartTestServlet.java": [
                    "public void co.elastic.webapp.AsyncStartTestServlet.run()",
                    "protected void co.elastic.webapp.AsyncStartTestServlet.doGet(final HttpServletRequest req, final HttpServletResponse resp)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a275d5781b9febdd18129c9814bfd3753214c7e2",
        "previous_commit": "230bb27381f1c1e781df26c8bc31661737295b8e",
        "date": 1569399835,
        "releases": {
            "previous": "a275d5781b9febdd18129c9814bfd3753214c7e2",
            "next": "a275d5781b9febdd18129c9814bfd3753214c7e2"
        },
        "commit_message": "Issue 819 disconnect apm server client (#823)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a275d5781b9febdd18129c9814bfd3753214c7e2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "private String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.tryFetchConfig(ConfigurationRegistry configurationRegistry, HttpURLConnection connection)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public <V> V co.elastic.apm.agent.report.ApmServerClient.execute(String path, ConnectionHandler<V> connectionHandler)",
                    "public <T> List<T> co.elastic.apm.agent.report.ApmServerClient.executeForAllUrls(String path, ConnectionHandler<T> connectionHandler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.withConnection(HttpURLConnection connection)",
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.call()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onFlushError(Integer responseCode, InputStream inputStream, @Nullable IOException e)",
                    "void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.flush()"
                ]
            },
            "230bb27381f1c1e781df26c8bc31661737295b8e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "private String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.tryFetchConfig(ConfigurationRegistry configurationRegistry, HttpURLConnection connection)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public <V> V co.elastic.apm.agent.report.ApmServerClient.execute(String path, ConnectionHandler<V> connectionHandler)",
                    "public <T> List<T> co.elastic.apm.agent.report.ApmServerClient.executeForAllUrls(String path, ConnectionHandler<T> connectionHandler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.withConnection(HttpURLConnection connection)",
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.call()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onFlushError(Integer responseCode, InputStream inputStream, @Nullable IOException e)",
                    "void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.flush()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "51d4fb2a84d73ea7154f975fc84f5cb3bbbe0a13",
        "previous_commit": "696b939b1962f9338d6bc020e45721ac6ddc3b88",
        "date": 1519036501,
        "releases": {
            "previous": "51d4fb2a84d73ea7154f975fc84f5cb3bbbe0a13",
            "next": "51d4fb2a84d73ea7154f975fc84f5cb3bbbe0a13"
        },
        "commit_message": "CBOR benchmarking\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "51d4fb2a84d73ea7154f975fc84f5cb3bbbe0a13": {
                "apm-agent-core/src/main/java/co/elastic/apm/intake/ServiceFactory.java": [
                    "public Service co.elastic.apm.intake.ServiceFactory.createService(String frameworkName, String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/intake/Url.java": [
                    "public boolean co.elastic.apm.intake.Url.equals(Object other)",
                    "public int co.elastic.apm.intake.Url.hashCode()",
                    "public void co.elastic.apm.intake.Url.resetState()",
                    "public String co.elastic.apm.intake.Url.toString()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/intake/transactions/Transaction.java": [
                    "public void co.elastic.apm.intake.transactions.Transaction.recycle()",
                    "public void co.elastic.apm.intake.transactions.Transaction.resetState()"
                ]
            },
            "696b939b1962f9338d6bc020e45721ac6ddc3b88": {
                "apm-agent-core/src/main/java/co/elastic/apm/intake/ServiceFactory.java": [
                    "public Service co.elastic.apm.intake.ServiceFactory.createService(String frameworkName, String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/intake/Url.java": [
                    "public boolean co.elastic.apm.intake.Url.equals(Object other)",
                    "public int co.elastic.apm.intake.Url.hashCode()",
                    "public void co.elastic.apm.intake.Url.resetState()",
                    "public String co.elastic.apm.intake.Url.toString()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/intake/transactions/Transaction.java": [
                    "public void co.elastic.apm.intake.transactions.Transaction.recycle()",
                    "public void co.elastic.apm.intake.transactions.Transaction.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6bcc51bdfe772080fc98405c8d403682539de60a",
        "previous_commit": "d48a217e762b3896bf03d658052e5cb87a9a1ff1",
        "date": 1623141715,
        "releases": {
            "previous": "6bcc51bdfe772080fc98405c8d403682539de60a",
            "next": "6bcc51bdfe772080fc98405c8d403682539de60a"
        },
        "commit_message": "Support for inheriting public api annotations (#1773) (#1805)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6bcc51bdfe772080fc98405c8d403682539de60a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/AnnotationValueOffsetMappingFactory.java": [
                    "private Object co.elastic.apm.agent.bci.bytebuddy.AnnotationValueOffsetMappingFactory.getAnnotationValue(MethodDescription instrumentedMethod, AnnotationValueExtractor annotationValueExtractor)"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureSpanInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.pluginapi.CaptureSpanInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.pluginapi.CaptureSpanInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureTransactionInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.pluginapi.CaptureTransactionInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.pluginapi.CaptureTransactionInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/TracedInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.pluginapi.TracedInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.pluginapi.TracedInstrumentation.getMethodMatcher()"
                ]
            },
            "d48a217e762b3896bf03d658052e5cb87a9a1ff1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/AnnotationValueOffsetMappingFactory.java": [
                    "private Object co.elastic.apm.agent.bci.bytebuddy.AnnotationValueOffsetMappingFactory.getAnnotationValue(MethodDescription instrumentedMethod, AnnotationValueExtractor annotationValueExtractor)"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureSpanInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.pluginapi.CaptureSpanInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.pluginapi.CaptureSpanInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureTransactionInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.pluginapi.CaptureTransactionInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.pluginapi.CaptureTransactionInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/TracedInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.pluginapi.TracedInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.pluginapi.TracedInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0a9981c5756a79a2866348b39b3b49232cee5057",
        "previous_commit": "837fe7fa93bfc40ac74139650ebb516dc47d59f7",
        "date": 1530256593,
        "releases": {
            "previous": "0a9981c5756a79a2866348b39b3b49232cee5057",
            "next": "0a9981c5756a79a2866348b39b3b49232cee5057"
        },
        "commit_message": "Add logging configuration options (#110)\n\n* Configure log level via config option\r\n* Add ability to log to a file\r\n* Load properties from $AGENT_HOME/elasticapm.properties",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0a9981c5756a79a2866348b39b3b49232cee5057": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.bci.ElasticApmAgent.agentmain(String agentArguments, Instrumentation instrumentation)",
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)",
                    "public static void co.elastic.apm.bci.ElasticApmAgent.premain(String agentArguments, Instrumentation instrumentation)",
                    "public static void co.elastic.apm.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracerBuilder.build()",
                    "private List<ConfigurationSource> co.elastic.apm.impl.ElasticApmTracerBuilder.getConfigSources()",
                    "private ConfigurationRegistry co.elastic.apm.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry(List<ConfigurationSource> configSources)"
                ]
            },
            "837fe7fa93bfc40ac74139650ebb516dc47d59f7": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.bci.ElasticApmAgent.agentmain(String agentArguments, Instrumentation instrumentation)",
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)",
                    "public static void co.elastic.apm.bci.ElasticApmAgent.premain(String agentArguments, Instrumentation instrumentation)",
                    "public static void co.elastic.apm.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracerBuilder.build()",
                    "private List<ConfigurationSource> co.elastic.apm.impl.ElasticApmTracerBuilder.getConfigSources()",
                    "private ConfigurationRegistry co.elastic.apm.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "44f3b70d018377e322f0bb66390442ce48140e31",
        "previous_commit": "b5b070eec222e0ece7c92431bdd84195626afbe8",
        "date": 1609963019,
        "releases": {
            "previous": "44f3b70d018377e322f0bb66390442ce48140e31",
            "next": "44f3b70d018377e322f0bb66390442ce48140e31"
        },
        "commit_message": "Null check return advices (#1601)\n\n* @Nullable return value on api-plugin\r\n\r\n* @Nullable return value on dubbo-plugin\r\n\r\n* @Nullable return value on grpc-plugin\r\n\r\n* @Nullable return value on jdbc-plugin\r\n\r\n* @Nullable return value on httpclient-plugin\r\n\r\n* @Nullable return value on {kafka,jms}-plugin\r\n\r\n* @Nullable return value on process-plugin + fix NPE\r\n\r\n* @Nullable return value on servlet-plugin + fix NPE\r\n\r\n* @Nullable rv & thrown live-template exit advice\r\n\r\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "44f3b70d018377e322f0bb66390442ce48140e31": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t, @Advice.Return @Nullable Object returnValue)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientAsyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.HttpClientAsyncInstrumentation.onAfterExecute(@Advice.Return @Nullable CompletableFuture<HttpResponse<?>> completableFuture, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpRequestHeadersInstrumentation.java": [
                    "public static HttpHeaders co.elastic.apm.agent.httpclient.HttpRequestHeadersInstrumentation.onAfterExecute(@Advice.Return @Nullable final HttpHeaders httpHeaders)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsIteratorInstrumentation.java": [
                    "public static Iterator<ConsumerRecord> co.elastic.apm.agent.kafka.ConsumerRecordsIteratorInstrumentation.wrapIterator(@Advice.Return @Nullable final Iterator<ConsumerRecord> iterator)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsRecordListInstrumentation.java": [
                    "public static List<ConsumerRecord> co.elastic.apm.agent.kafka.ConsumerRecordsRecordListInstrumentation.wrapRecordList(@Advice.Return @Nullable final List<ConsumerRecord> list)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsRecordsInstrumentation.java": [
                    "public static Iterable<ConsumerRecord> co.elastic.apm.agent.kafka.ConsumerRecordsRecordsInstrumentation.wrapIterablfe(@Advice.Return @Nullable final Iterable<ConsumerRecord> iterable)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessStartInstrumentation.java": [
                    "public static void co.elastic.apm.agent.process.ProcessStartInstrumentation.onExit(@Advice.This ProcessBuilder processBuilder, @Advice.Return @Nullable Process process, @Advice.Thrown @Nullable Throwable t)"
                ]
            },
            "b5b070eec222e0ece7c92431bdd84195626afbe8": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object span, @Advice.Thrown Throwable t, @Advice.Return Object returnValue)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientAsyncInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.HttpClientAsyncInstrumentation.onAfterExecute(@Advice.Return @Nullable CompletableFuture<HttpResponse<?>> completableFuture, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpRequestHeadersInstrumentation.java": [
                    "public static HttpHeaders co.elastic.apm.agent.httpclient.HttpRequestHeadersInstrumentation.onAfterExecute(@Advice.Return @Nonnull final HttpHeaders httpHeaders)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsIteratorInstrumentation.java": [
                    "public static Iterator<ConsumerRecord> co.elastic.apm.agent.kafka.ConsumerRecordsIteratorInstrumentation.wrapIterator(@Nullable @Advice.Return final Iterator<ConsumerRecord> iterator)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsRecordListInstrumentation.java": [
                    "public static List<ConsumerRecord> co.elastic.apm.agent.kafka.ConsumerRecordsRecordListInstrumentation.wrapRecordList(@Nullable @Advice.Return final List<ConsumerRecord> list)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-headers-plugin/src/main/java/co/elastic/apm/agent/kafka/ConsumerRecordsRecordsInstrumentation.java": [
                    "public static Iterable<ConsumerRecord> co.elastic.apm.agent.kafka.ConsumerRecordsRecordsInstrumentation.wrapIterable(@Nullable @Advice.Return final Iterable<ConsumerRecord> iterable)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessStartInstrumentation.java": [
                    "public static void co.elastic.apm.agent.process.ProcessStartInstrumentation.onExit(@Advice.This ProcessBuilder processBuilder, @Advice.Return Process process, @Advice.Thrown @Nullable Throwable t)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6ea644050e2e4dece55bc382eaf43543aa8df504",
        "previous_commit": "6a3baa7440671ef55b7a8794dbe36e2fd28f57e9",
        "date": 1525684568,
        "releases": {
            "previous": "6ea644050e2e4dece55bc382eaf43543aa8df504",
            "next": "6ea644050e2e4dece55bc382eaf43543aa8df504"
        },
        "commit_message": "Zero garbage serialization of ISO timestamps (#77)\n\n\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6ea644050e2e4dece55bc382eaf43543aa8df504": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.resetState()",
                    "public ErrorCapture co.elastic.apm.impl.error.ErrorCapture.withTimestamp(long epochMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(ElasticApmTracer tracer, long startTimestampNanos, Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeException(ExceptionInfo exception)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)"
                ]
            },
            "6a3baa7440671ef55b7a8794dbe36e2fd28f57e9": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.resetState()",
                    "public ErrorCapture co.elastic.apm.impl.error.ErrorCapture.withTimestamp(long epochMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(ElasticApmTracer tracer, long startTimestampNanos, Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeException(ExceptionInfo exception)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "dc6551a7284323d1da867f8ac3a3b8ddebbf5089",
        "previous_commit": "e0a124a63387d2af7bfc89e5f3a0fccc2bf94e45",
        "date": 1645522386,
        "releases": {
            "previous": "dc6551a7284323d1da867f8ac3a3b8ddebbf5089",
            "next": "dc6551a7284323d1da867f8ac3a3b8ddebbf5089"
        },
        "commit_message": "Only time type/method matching if the debug logging is enabled (#2471)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "dc6551a7284323d1da867f8ac3a3b8ddebbf5089": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(MethodDescription target)",
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)",
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/InstrumentationStats.java": [
                    "void co.elastic.apm.agent.bci.InstrumentationStats.reset()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/InstrumentationStatsLifecycleListener.java": [
                    "public void co.elastic.apm.agent.bci.InstrumentationStatsLifecycleListener.stop()"
                ]
            },
            "e0a124a63387d2af7bfc89e5f3a0fccc2bf94e45": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(MethodDescription target)",
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)",
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/InstrumentationStats.java": [
                    "void co.elastic.apm.agent.bci.InstrumentationStats.reset()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/InstrumentationStatsLifecycleListener.java": [
                    "public void co.elastic.apm.agent.bci.InstrumentationStatsLifecycleListener.stop()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5dce1606f5a328d113216659716ff5cce1c63485",
        "previous_commit": "39e6a418df8a5899de909bdf2a66b3434e1be5f3",
        "date": 1554977490,
        "releases": {
            "previous": "5dce1606f5a328d113216659716ff5cce1c63485",
            "next": "5dce1606f5a328d113216659716ff5cce1c63485"
        },
        "commit_message": "Allow constructor arguments in service implementations (#562)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5dce1606f5a328d113216659716ff5cce1c63485": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static Iterable<ElasticApmInstrumentation> co.elastic.apm.agent.bci.ElasticApmAgent.loadInstrumentations(ElasticApmTracer tracer)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/processor/ProcessorEventHandler.java": [
                    "public static ProcessorEventHandler co.elastic.apm.agent.report.processor.ProcessorEventHandler.loadProcessors(ConfigurationRegistry configurationRegistry)"
                ],
                "apm-agent-plugins/apm-slf4j-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java": [
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.beforeActivate(TraceContextHolder<?> context)",
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.afterDeactivate()"
                ],
                "apm-agent-plugins/apm-web-plugin/src/main/java/co/elastic/apm/agent/web/BodyProcessor.java": [
                    "private void co.elastic.apm.agent.web.BodyProcessor.redactBodyIfNecessary(TransactionContext context, WebConfiguration.EventType eventType)"
                ]
            },
            "39e6a418df8a5899de909bdf2a66b3434e1be5f3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static Iterable<ElasticApmInstrumentation> co.elastic.apm.agent.bci.ElasticApmAgent.loadInstrumentations(ElasticApmTracer tracer)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/processor/ProcessorEventHandler.java": [
                    "public static ProcessorEventHandler co.elastic.apm.agent.report.processor.ProcessorEventHandler.loadProcessors(ConfigurationRegistry configurationRegistry)"
                ],
                "apm-agent-plugins/apm-slf4j-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java": [
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.beforeActivate(TraceContextHolder<?> context)",
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.afterDeactivate()"
                ],
                "apm-agent-plugins/apm-web-plugin/src/main/java/co/elastic/apm/agent/web/BodyProcessor.java": [
                    "private void co.elastic.apm.agent.web.BodyProcessor.redactBodyIfNecessary(TransactionContext context, WebConfiguration.EventType eventType)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "cf3d0fcf83f180d5466ac4b32fa117b0e826f763",
        "previous_commit": "54fee67e2a99cbba8af882e5c0e5900939b3a7dc",
        "date": 1721290390,
        "releases": {
            "previous": "cf3d0fcf83f180d5466ac4b32fa117b0e826f763",
            "next": "cf3d0fcf83f180d5466ac4b32fa117b0e826f763"
        },
        "commit_message": "Capture request body for Apache HttpClient 4.x (#3692)\n\n\r\nCo-authored-by: jackshirazi <jacks@fasterj.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "cf3d0fcf83f180d5466ac4b32fa117b0e826f763": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/HttpImpl.java": [
                    "public void co.elastic.apm.agent.impl.context.HttpImpl.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeOTel(SpanImpl span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeOTel(TransactionImpl transaction)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeOtel(AbstractSpanImpl<?> span, List<IdImpl> profilingStackTraceIds, @Nullable CharSequence httpRequestBody)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient-common/src/main/java/co/elastic/apm/agent/httpclient/common/AbstractApacheHttpClientAsyncAdvice.java": [
                    "public static <PRODUCER, WRAPPER extends PRODUCER, CALLBACK, CALLBACK_WRAPPER extends CALLBACK, CONTEXT> Object[] co.elastic.apm.agent.httpclient.common.AbstractApacheHttpClientAsyncAdvice.startSpan( Tracer tracer, ApacheHttpClientAsyncHelper<PRODUCER, WRAPPER, CALLBACK, CALLBACK_WRAPPER, CONTEXT> asyncHelper, PRODUCER asyncRequestProducer, CONTEXT context, CALLBACK futureCallback)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/helper/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.v4.helper.HttpAsyncRequestProducerWrapper.generateRequest()"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/HttpClientHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.httpclient.HttpClientHelper.startHttpClientSpan(TraceState<?> activeContext, String method, @Nullable String uri, @Nullable String scheme, @Nullable CharSequence hostName, int port)"
                ]
            },
            "54fee67e2a99cbba8af882e5c0e5900939b3a7dc": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/HttpImpl.java": [
                    "public void co.elastic.apm.agent.impl.context.HttpImpl.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeOTel(SpanImpl span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeOTel(TransactionImpl transaction)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeOtel(AbstractSpanImpl<?> span, List<IdImpl> profilingStackTraceIds)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient-common/src/main/java/co/elastic/apm/agent/httpclient/common/AbstractApacheHttpClientAsyncAdvice.java": [
                    "public static <PRODUCER, WRAPPER extends PRODUCER, CALLBACK, CALLBACK_WRAPPER extends CALLBACK, CONTEXT> Object[] co.elastic.apm.agent.httpclient.common.AbstractApacheHttpClientAsyncAdvice.startSpan( Tracer tracer, ApacheHttpClientAsyncHelper<PRODUCER, WRAPPER, CALLBACK, CALLBACK_WRAPPER, CONTEXT> asyncHelper, PRODUCER asyncRequestProducer, CONTEXT context, CALLBACK futureCallback)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/helper/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.v4.helper.HttpAsyncRequestProducerWrapper.generateRequest()"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/HttpClientHelper.java": [
                    "public static Span<?> co.elastic.apm.agent.httpclient.HttpClientHelper.startHttpClientSpan(TraceState<?> activeContext, String method, @Nullable String uri, @Nullable String scheme, @Nullable CharSequence hostName, int port)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e78d187659ea77899c6f928de93f52ec0028ced6",
        "previous_commit": "77358dda7a20ca9937ecafb7770195ec46959188",
        "date": 1537432652,
        "releases": {
            "previous": "e78d187659ea77899c6f928de93f52ec0028ced6",
            "next": "e78d187659ea77899c6f928de93f52ec0028ced6"
        },
        "commit_message": "Proper handling of invalid traceparent header (#216)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e78d187659ea77899c6f928de93f52ec0028ced6": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/SpanId.java": [
                    "public void co.elastic.apm.impl.transaction.SpanId.setToRandomValue(Random random)",
                    "public void co.elastic.apm.impl.transaction.SpanId.setLong(long l)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceId.java": [
                    "public void co.elastic.apm.impl.transaction.TraceId.setValue(long mostSignificantBits, long leastSignificantBits)",
                    "public void co.elastic.apm.impl.transaction.TraceId.setToRandomValue(Random random)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(@Nullable String traceParentHeader, long startTimestampNanos, Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/util/HexUtils.java": [
                    "public static byte co.elastic.apm.util.HexUtils.getNextByte(String hexEncodedString, int offset)",
                    "public static void co.elastic.apm.util.HexUtils.nextBytes(String hexEncodedString, int offset, byte[] bytes)"
                ]
            },
            "77358dda7a20ca9937ecafb7770195ec46959188": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/SpanId.java": [
                    "public void co.elastic.apm.impl.transaction.SpanId.setToRandomValue(Random random)",
                    "public void co.elastic.apm.impl.transaction.SpanId.setLong(long l)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceId.java": [
                    "public void co.elastic.apm.impl.transaction.TraceId.setValue(long mostSignificantBits, long leastSignificantBits)",
                    "public void co.elastic.apm.impl.transaction.TraceId.setToRandomValue(Random random)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(@Nullable String traceParentHeader, long startTimestampNanos, Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/util/HexUtils.java": [
                    "public static byte co.elastic.apm.util.HexUtils.getNextByte(String hexEncodedString, int offset)",
                    "public static void co.elastic.apm.util.HexUtils.nextBytes(String hexEncodedString, int offset, byte[] bytes)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a0cee27b4b5eb3e82c1e70c491336d20d04f71be",
        "previous_commit": "fd0641a3f9cf0050627134f56dccc4e2b9bb11ed",
        "date": 1689766342,
        "releases": {
            "previous": "a0cee27b4b5eb3e82c1e70c491336d20d04f71be",
            "next": "a0cee27b4b5eb3e82c1e70c491336d20d04f71be"
        },
        "commit_message": "W3C Baggage propagation and tracer APIs (#3236)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a0cee27b4b5eb3e82c1e70c491336d20d04f71be": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public <C> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startChildTransaction(@Nullable C headerCarrier, BinaryHeaderGetter<C> binaryHeadersGetter, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public <C> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startChildTransaction(@Nullable C headerCarrier, TextHeaderGetter<C> textHeadersGetter, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public <T> Span co.elastic.apm.agent.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, Baggage parentBaggage, long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public Span co.elastic.apm.agent.impl.transaction.TraceContext.createSpan(long epochMicros)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpanBuilder.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.tracing.OTelSpanBuilder.startSpan()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracingimpl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable AbstractSpan<?> parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ClassLoader applicationClassLoader)"
                ]
            },
            "fd0641a3f9cf0050627134f56dccc4e2b9bb11ed": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public <C> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startChildTransaction(@Nullable C headerCarrier, BinaryHeaderGetter<C> binaryHeadersGetter, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)",
                    "public <C> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startChildTransaction(@Nullable C headerCarrier, TextHeaderGetter<C> textHeadersGetter, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public <T> Span co.elastic.apm.agent.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public Span co.elastic.apm.agent.impl.transaction.TraceContext.createSpan(long epochMicros)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpanBuilder.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.tracing.OTelSpanBuilder.startSpan()"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracingimpl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracingimpl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable AbstractSpan<?> parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ClassLoader applicationClassLoader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "189c941c2abad8a40ff9bae91441f9318892053d",
        "previous_commit": "abba3ebeaf1b239e09827ab23bed774792015f20",
        "date": 1578481034,
        "releases": {
            "previous": "189c941c2abad8a40ff9bae91441f9318892053d",
            "next": "189c941c2abad8a40ff9bae91441f9318892053d"
        },
        "commit_message": "Set classname instead of filename when connected to APM Server 7.6 (#984)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "189c941c2abad8a40ff9bae91441f9318892053d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(@Nullable ProtectionDomain protectionDomain)",
                    "private static Version co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.readImplementationVersionFromManifest(@Nullable ProtectionDomain protectionDomain)",
                    "public static ElementMatcher.Junction<ProtectionDomain> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.implementationVersionLte(final String version)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public boolean co.elastic.apm.agent.report.ApmServerClient.supportsNonStringLabels()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.withConnection(HttpURLConnection connection)",
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.call()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStackTraceElement(StackTraceElement stacktrace)"
                ]
            },
            "abba3ebeaf1b239e09827ab23bed774792015f20": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(@Nullable ProtectionDomain protectionDomain)",
                    "private static Version co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.readImplementationVersionFromManifest(@Nullable ProtectionDomain protectionDomain)",
                    "public static ElementMatcher.Junction<ProtectionDomain> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.implementationVersionLte(final String version)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public boolean co.elastic.apm.agent.report.ApmServerClient.supportsNonStringLabels()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.withConnection(HttpURLConnection connection)",
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.call()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStackTraceElement(StackTraceElement stacktrace)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "281fe932cc3ffb3617f963674d609df69b832267",
        "previous_commit": "32639e63f94fb70d08871eb864b09c9a9e2808d7",
        "date": 1565772821,
        "releases": {
            "previous": "281fe932cc3ffb3617f963674d609df69b832267",
            "next": "281fe932cc3ffb3617f963674d609df69b832267"
        },
        "commit_message": "Attachment without tools.jar (#791)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "281fe932cc3ffb3617f963674d609df69b832267": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/CachedAttachmentProvider.java": [
                    "public Accessor co.elastic.apm.attach.CachedAttachmentProvider.attempt()"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(Map<String, String> configuration)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "private String co.elastic.apm.attach.RemoteAttacher.getArgsProviderOutput(JvmInfo jvmInfo)",
                    "public static void co.elastic.apm.attach.RemoteAttacher.main(String[] args)",
                    "void co.elastic.apm.attach.RemoteAttacher.printHelp(PrintStream out)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/AnnotationValueOffsetMappingFactory.java": [
                    "public Target co.elastic.apm.agent.bci.bytebuddy.AnnotationValueOffsetMappingFactory.resolve(TypeDescription instrumentedType, MethodDescription instrumentedMethod, Assigner assigner, Advice.ArgumentHandler argumentHandler, Sort sort)",
                    "public Advice.OffsetMapping co.elastic.apm.agent.bci.bytebuddy.AnnotationValueOffsetMappingFactory.make(final ParameterDescription.InDefinedShape target, final AnnotationDescription.Loadable<AnnotationValueExtractor> annotation, final AdviceType adviceType)"
                ]
            },
            "32639e63f94fb70d08871eb864b09c9a9e2808d7": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/CachedAttachmentProvider.java": [
                    "public Accessor co.elastic.apm.attach.CachedAttachmentProvider.attempt()"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(Map<String, String> configuration)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "private String co.elastic.apm.attach.RemoteAttacher.getArgsProviderOutput(JvmInfo jvmInfo)",
                    "public static void co.elastic.apm.attach.RemoteAttacher.main(String[] args)",
                    "void co.elastic.apm.attach.RemoteAttacher.printHelp(PrintStream out)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/AnnotationValueOffsetMappingFactory.java": [
                    "public Target co.elastic.apm.agent.bci.bytebuddy.AnnotationValueOffsetMappingFactory.resolve(TypeDescription instrumentedType, MethodDescription instrumentedMethod, Assigner assigner, Advice.ArgumentHandler argumentHandler, Sort sort)",
                    "public Advice.OffsetMapping co.elastic.apm.agent.bci.bytebuddy.AnnotationValueOffsetMappingFactory.make(final ParameterDescription.InDefinedShape target, final AnnotationDescription.Loadable<AnnotationValueExtractor> annotation, final AdviceType adviceType)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d5a86e393d7553ea4620f46c6e3a0c410209caad",
        "previous_commit": "5936f9a9e42573ddacd5aa70016fdb02965631fb",
        "date": 1550583601,
        "releases": {
            "previous": "d5a86e393d7553ea4620f46c6e3a0c410209caad",
            "next": "d5a86e393d7553ea4620f46c6e3a0c410209caad"
        },
        "commit_message": "Adding HelperClassManager for any class loader (#492)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d5a86e393d7553ea4620f46c6e3a0c410209caad": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/HelperClassManager.java": [
                    "public T co.elastic.apm.agent.bci.HelperClassManager<T>.getForClassLoaderOfClass(Class<?> classOfTargetClassLoader)",
                    "private static Map<String, byte[]> co.elastic.apm.agent.bci.HelperClassManager<T>.getTypeDefinitions(List<String> helperClassNames)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/PreparedStatementInstrumentation.java": [
                    "public void co.elastic.apm.agent.jdbc.PreparedStatementInstrumentation.init(ElasticApmTracer tracer)",
                    "public static Span co.elastic.apm.agent.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public void co.elastic.apm.agent.jdbc.StatementInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "private static void co.elastic.apm.agent.servlet.AsyncInstrumentation.onExitStartAsync(@Advice.Return AsyncContext asyncContext)",
                    "public void co.elastic.apm.agent.servlet.AsyncInstrumentation.init(ElasticApmTracer tracer)"
                ]
            },
            "5936f9a9e42573ddacd5aa70016fdb02965631fb": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/HelperClassManager.java": [
                    "private static Map<String, byte[]> co.elastic.apm.agent.bci.ForSingleClassLoader<T>.getTypeDefinitions(List<String> helperClassNames)",
                    "public T co.elastic.apm.agent.bci.ForSingleClassLoader<T>.getForClassLoaderOfClass(Class<?> classOfTargetClassLoader)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/PreparedStatementInstrumentation.java": [
                    "public void co.elastic.apm.agent.jdbc.PreparedStatementInstrumentation.init(ElasticApmTracer tracer)",
                    "public static Span co.elastic.apm.agent.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public void co.elastic.apm.agent.jdbc.StatementInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "private static void co.elastic.apm.agent.servlet.AsyncInstrumentation.onExitStartAsync(@Advice.Return AsyncContext asyncContext)",
                    "public void co.elastic.apm.agent.servlet.AsyncInstrumentation.init(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a4f6c1ce8951f53b5b6306ab43b9de4f13cf5ca8",
        "previous_commit": "5526dff1533dc406fd1f476def8f29a790d15ea0",
        "date": 1564388512,
        "releases": {
            "previous": "a4f6c1ce8951f53b5b6306ab43b9de4f13cf5ca8",
            "next": "a4f6c1ce8951f53b5b6306ab43b9de4f13cf5ca8"
        },
        "commit_message": "Make log correlation GA (#742)\n\n- Load the MDC with the application class loader, as opposed to the\r\n  Thread's context classloader (fixes #720)\r\n- Remove span.id MDC entry\r\n  This causes the most allocations as in contrast to transaction.id and\r\n  trace.id, the String manifestation can't be reused.\r\n  Other agents also don't add the span.id so it makes sense to align on that\r\n- Docs improvements\r\n- Mention slf4j in supported technologies page",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a4f6c1ce8951f53b5b6306ab43b9de4f13cf5ca8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <T> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startTransaction(TraceContext.ChildContextCreator<T> childContextCreator, @Nullable T parent, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public <T> Transaction co.elastic.apm.agent.impl.transaction.Transaction.start(TraceContext.ChildContextCreator<T> childContextCreator, @Nullable T parent, long epochMicros, Sampler sampler, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable TraceContext parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage, ClassLoader applicationClassLoader)"
                ],
                "apm-agent-plugins/apm-slf4j-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java": [
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.beforeActivate(TraceContextHolder<?> context)"
                ]
            },
            "5526dff1533dc406fd1f476def8f29a790d15ea0": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <T> Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startTransaction(TraceContext.ChildContextCreator<T> childContextCreator, @Nullable T parent, Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public <T> Transaction co.elastic.apm.agent.impl.transaction.Transaction.start(TraceContext.ChildContextCreator<T> childContextCreator, @Nullable T parent, long epochMicros, Sampler sampler)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanBuilderInstrumentation.java": [
                    "public static AbstractSpan<?> co.elastic.apm.agent.opentracing.impl.ApmSpanBuilderInstrumentation.doCreateTransactionOrSpan(@Nullable TraceContext parentContext, Map<String, Object> tags, String operationName, long microseconds, @Nullable Iterable<Map.Entry<String, String>> baggage)"
                ],
                "apm-agent-plugins/apm-slf4j-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java": [
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.beforeActivate(TraceContextHolder<?> context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "803e0fed24257f5325d7831dff39c02354b009f3",
        "previous_commit": "a040f5ad380a5bd401f26ccebdf71b61a2630970",
        "date": 1623158257,
        "releases": {
            "previous": "803e0fed24257f5325d7831dff39c02354b009f3",
            "next": "803e0fed24257f5325d7831dff39c02354b009f3"
        },
        "commit_message": "Use Connection#getCatalog to set context.db.instance in jdbc instrumentation (#1820)\n\n* Use Connection#getCatalog to set context.db.instance in teh jdbc instrumentation\r\n\r\n* Added #1820 to the changelog\r\n\r\n* add fallback for db instance\r\n\r\n* fall back to using Connection#getCatalog\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "803e0fed24257f5325d7831dff39c02354b009f3": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/ConnectionMetaData.java": [
                    "ConnectionMetaData co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.parse(String connectionUrl, String instance, String user)",
                    "public static ConnectionMetaData co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.create(String connectionUrl, @Nullable String instance, String user)",
                    "static ConnectionMetaData co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.defaultParse(String connectionUrl, String dbVendor, int defaultPort, @Nullable String instance, String user)",
                    "public String co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.toString()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)",
                    "private Connection co.elastic.apm.agent.jdbc.helper.JdbcHelper.safeGetConnection(Statement statement)",
                    "private ConnectionMetaData co.elastic.apm.agent.jdbc.helper.JdbcHelper.getConnectionMetaData(@Nullable Connection connection)"
                ]
            },
            "a040f5ad380a5bd401f26ccebdf71b61a2630970": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/ConnectionMetaData.java": [
                    "ConnectionMetaData co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.parse(String connectionUrl, String user)",
                    "public String co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.toString()",
                    "static ConnectionMetaData co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.defaultParse(String connectionUrl, String dbVendor, int defaultPort, String user)",
                    "public static ConnectionMetaData co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.create(String connectionUrl, String user)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "private ConnectionMetaData co.elastic.apm.agent.jdbc.helper.JdbcHelper.getConnectionMetaData(Connection connection)",
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)",
                    "private Connection co.elastic.apm.agent.jdbc.helper.JdbcHelper.safeGetConnection(Statement statement)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6e634bf3738d914c8c2ec1a1e322cf16bed89ca0",
        "previous_commit": "3d284af3db0c68d5124f26d1dfac5826058202a8",
        "date": 1654687651,
        "releases": {
            "previous": "6e634bf3738d914c8c2ec1a1e322cf16bed89ca0",
            "next": "6e634bf3738d914c8c2ec1a1e322cf16bed89ca0"
        },
        "commit_message": "Maven version parse xml rather than html (#2665)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6e634bf3738d914c8c2ec1a1e322cf16bed89ca0": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentDownloader.java": [
                    "static String co.elastic.apm.attach.AgentDownloader.findLatestVersion()"
                ],
                "apm-agent-common/src/main/java/co/elastic/apm/agent/util/Version.java": [
                    "public static Version co.elastic.apm.agent.util.Version.of(String version)",
                    "public int co.elastic.apm.agent.util.Version.compareTo(Version another)",
                    "public String co.elastic.apm.agent.util.Version.toString()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(@Nullable ProtectionDomain protectionDomain)",
                    "private static ElementMatcher.Junction<ProtectionDomain> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.implementationVersion(final String version, final Matcher matcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.call()"
                ]
            },
            "3d284af3db0c68d5124f26d1dfac5826058202a8": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentDownloader.java": [
                    "static String co.elastic.apm.attach.AgentDownloader.findLatestVersion()"
                ],
                "apm-agent-common/src/main/java/co/elastic/apm/agent/util/Version.java": [
                    "public static Version co.elastic.apm.agent.util.Version.of(String version)",
                    "public int co.elastic.apm.agent.util.Version.compareTo(Version another)",
                    "public String co.elastic.apm.agent.util.Version.toString()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(@Nullable ProtectionDomain protectionDomain)",
                    "private static ElementMatcher.Junction<ProtectionDomain> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.implementationVersion(final String version, final Matcher matcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.call()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "71213cde6e28b51a5847f96ff5778f22b4a16a8c",
        "previous_commit": "6cc294dada3225eb9d6651ecdc911612c5c576fb",
        "date": 1615887488,
        "releases": {
            "previous": "71213cde6e28b51a5847f96ff5778f22b4a16a8c",
            "next": "71213cde6e28b51a5847f96ff5778f22b4a16a8c"
        },
        "commit_message": "De-dot Micrometer metric names (#1700)\n\nThis is a breaking change. However, it seems to be a necessary one:\r\nThe consequences could be quite severe\r\n(mapping conflicts may only be fixable by deleting the index).\r\nAlso, the micrometer integration is still in beta so breaking changes\r\nare probably ok.\r\n\r\nThe alternatives, such as flattened fields have downsides, such as\r\nlack of Kibana support and worse performance.\r\nThe Elasticsearch team is not considering flattened fields the\r\nendgame and are investigating other alternatives.\r\n\r\nWith that, I don't see the need for a config option to opt-out of the\r\nde-doting yet.",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "71213cde6e28b51a5847f96ff5778f22b4a16a8c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeGlobalLabels(ArrayList<String> globalLabelKeys, ArrayList<String> globalLabelValues, final StringBuilder replaceBuilder, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStringKeyScalarValueMap(Iterator<? extends Map.Entry<String, ? /* String|Number|Boolean */>> it, final StringBuilder replaceBuilder, final JsonWriter jw, boolean extendedStringLimit, boolean supportsNonStringValues)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serialize(Labels labels, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "private static boolean co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeDistributionSummary(JsonWriter jw, Meter.Id id, long count, double totalAmount, boolean hasValue, StringBuilder replaceBuilder, boolean dedotMetricName)",
                    "private static boolean co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeTimer(JsonWriter jw, Meter.Id id, long count, double totalTime, boolean hasValue, StringBuilder replaceBuilder, boolean dedotMetricName)",
                    "private static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeTags(List<Tag> tags, StringBuilder replaceBuilder, JsonWriter jw)",
                    "void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            },
            "6cc294dada3225eb9d6651ecdc911612c5c576fb": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeGlobalLabels(ArrayList<String> globalLabelKeys, ArrayList<String> globalLabelValues, final StringBuilder replaceBuilder, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStringKeyScalarValueMap(Iterator<? extends Map.Entry<String, ? /* String|Number|Boolean */>> it, final StringBuilder replaceBuilder, final JsonWriter jw, boolean extendedStringLimit, boolean supportsNonStringValues)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serialize(Labels labels, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "private static boolean co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeTimer(JsonWriter jw, Meter.Id id, long count, double totalTime, boolean hasValue)",
                    "private static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeTags(List<Tag> tags, StringBuilder replaceBuilder, JsonWriter jw)",
                    "private static boolean co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeDistributionSummary(JsonWriter jw, Meter.Id id, long count, double totalAmount, boolean hasValue)",
                    "static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d9370ea5957639b110fbaa11d63bc382938f419e",
        "previous_commit": "df966494bef8c93f618c89b2b6cb1eeb029196bd",
        "date": 1663059595,
        "releases": {
            "previous": "d9370ea5957639b110fbaa11d63bc382938f419e",
            "next": "d9370ea5957639b110fbaa11d63bc382938f419e"
        },
        "commit_message": "Fix OTel bridge behavior with multiple classloaders + improved activation (#2735)\n\n* degug add classloader info\n\n* test more versions + stricter tests\n\n* minor refactor\n\n* add external plugin test with otel\n\n* minor cleanup\n\n* properly size wrapper\n\n* move wrapping to thread-local active stack\n\n* cleanup\n\n* improve javadoc + tune sizing\n\n* finalize testing & bugfix\n\n* update changelog\n\n* fix misleading comment\n\n* remove duplication\n\n* clarify javadoc\n\n* post-review changes",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d9370ea5957639b110fbaa11d63bc382938f419e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public ElasticContext<?> co.elastic.apm.agent.impl.ElasticApmTracer.currentContext()",
                    "public Scope co.elastic.apm.agent.impl.ElasticApmTracer.activateInScope(final ElasticContext<?> context)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(ElasticContext<?> context)",
                    "public AbstractSpan<?> co.elastic.apm.agent.impl.ElasticApmTracer.getActive()",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.activate(ElasticContext<?> context)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/context/OTelContextStorage.java": [
                    "public Context co.elastic.apm.agent.opentelemetry.context.OTelContextStorage.current()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelBridgeContext.java": [
                    "public static OTelBridgeContext co.elastic.apm.agent.opentelemetry.sdk.OTelBridgeContext.wrapElasticActiveSpan(ElasticApmTracer tracer, AbstractSpan<?> span)"
                ]
            },
            "df966494bef8c93f618c89b2b6cb1eeb029196bd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public ElasticContext<?> co.elastic.apm.agent.impl.ElasticApmTracer.currentContext()",
                    "public Scope co.elastic.apm.agent.impl.ElasticApmTracer.activateInScope(final ElasticContext<?> context)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(ElasticContext<?> context)",
                    "public AbstractSpan<?> co.elastic.apm.agent.impl.ElasticApmTracer.getActive()",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.activate(ElasticContext<?> context)"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/context/OTelContextStorage.java": [
                    "public Context co.elastic.apm.agent.opentelemetry.context.OTelContextStorage.current()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelBridgeContext.java": [
                    "public static OTelBridgeContext co.elastic.apm.agent.opentelemetry.sdk.OTelBridgeContext.wrapElasticActiveSpan(ElasticApmTracer tracer, AbstractSpan<?> span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0f48841b95e046d4a4fff324db1fa7b53412aa80",
        "previous_commit": "b336370f70cc7b3262eca5a18963cfceb2de522c",
        "date": 1685027696,
        "releases": {
            "previous": "0f48841b95e046d4a4fff324db1fa7b53412aa80",
            "next": "0f48841b95e046d4a4fff324db1fa7b53412aa80"
        },
        "commit_message": "Enhance JMX metrics (#3147)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0f48841b95e046d4a4fff324db1fa7b53412aa80": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/JvmMemoryMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.JvmMemoryMetrics.bindTo(final MetricRegistry registry)",
                    "public double co.elastic.apm.agent.metrics.builtin.JvmMemoryMetrics.get()"
                ],
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetric.java": [
                    "public String co.elastic.apm.agent.jmx.JmxMetric.getMetricName()"
                ],
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.onMBeanAdded(ObjectName mBeanName)",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.registerMBeanNotificationListener(final MBeanServer server)",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.start(ElasticApmTracer tracer)",
                    "private static void co.elastic.apm.agent.jmx.JmxMetricTracker.addJmxMetricRegistration(final JmxMetric jmxMetric, List<JmxMetricRegistration> registrations, MBeanServer server)"
                ]
            },
            "b336370f70cc7b3262eca5a18963cfceb2de522c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/JvmMemoryMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.JvmMemoryMetrics.bindTo(final MetricRegistry registry)",
                    "public double co.elastic.apm.agent.metrics.builtin.JvmMemoryMetrics.get()"
                ],
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetric.java": [
                    "public String co.elastic.apm.agent.jmx.JmxMetric.getMetricName()"
                ],
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.onMBeanAdded(ObjectName mBeanName)",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.registerMBeanNotificationListener(final MBeanServer server)",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.start(ElasticApmTracer tracer)",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.addJmxMetricRegistration(final JmxMetric jmxMetric, List<JmxMetricRegistration> registrations, MBeanServer server)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6da304319315cfe4041a8ec5b50cc6f976965eab",
        "previous_commit": "1b9a8276bd992f9e69eabb7f38998fa6ea1e8127",
        "date": 1667376101,
        "releases": {
            "previous": "6da304319315cfe4041a8ec5b50cc6f976965eab",
            "next": "6da304319315cfe4041a8ec5b50cc6f976965eab"
        },
        "commit_message": "Opt in for very old bytecode instrumentation (#2866)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6da304319315cfe4041a8ec5b50cc6f976965eab": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "public DynamicType.Builder<?> co.elastic.apm.agent.bci.ElasticApmAgent.transform(DynamicType.Builder<?> builder, TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ErrorLoggingListener.java": [
                    "public void co.elastic.apm.agent.bci.bytebuddy.ErrorLoggingListener.onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/PatchBytecodeVersionTo51Transformer.java": [
                    "public ClassVisitor co.elastic.apm.agent.bci.bytebuddy.PatchBytecodeVersionTo51Transformer.wrap(TypeDescription typeDescription, ClassVisitor classVisitor, Implementation.Context context, TypePool typePool, FieldList<FieldDescription.InDefinedShape> fieldList, MethodList<?> methodList, int writerFlags, int readerFlags)",
                    "public void co.elastic.apm.agent.bci.bytebuddy.PatchBytecodeVersionTo51Transformer.visit(int version, int access, String name, String signature, String superName, String[] interfaces)",
                    "public DynamicType.Builder<?> co.elastic.apm.agent.bci.bytebuddy.PatchBytecodeVersionTo51Transformer.transform(DynamicType.Builder<?> builder, TypeDescription typeDescription, ClassLoader classLoader, JavaModule javaModule, ProtectionDomain protectionDomain)"
                ]
            },
            "1b9a8276bd992f9e69eabb7f38998fa6ea1e8127": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "public DynamicType.Builder<?> co.elastic.apm.agent.bci.ElasticApmAgent.transform(DynamicType.Builder<?> builder, TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ErrorLoggingListener.java": [
                    "public void co.elastic.apm.agent.bci.bytebuddy.ErrorLoggingListener.onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/PatchBytecodeVersionTo51Transformer.java": [
                    "public ClassVisitor co.elastic.apm.agent.bci.bytebuddy.PatchBytecodeVersionTo51Transformer.wrap(TypeDescription typeDescription, ClassVisitor classVisitor, Implementation.Context context, TypePool typePool, FieldList<FieldDescription.InDefinedShape> fieldList, MethodList<?> methodList, int writerFlags, int readerFlags)",
                    "public void co.elastic.apm.agent.bci.bytebuddy.PatchBytecodeVersionTo51Transformer.visit(int version, int access, String name, String signature, String superName, String[] interfaces)",
                    "public DynamicType.Builder<?> co.elastic.apm.agent.bci.bytebuddy.PatchBytecodeVersionTo51Transformer.transform(DynamicType.Builder<?> builder, TypeDescription typeDescription, ClassLoader classLoader, JavaModule javaModule, ProtectionDomain protectionDomain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b09e71180b1c92117eec0d5f52e08fa4f8180679",
        "previous_commit": "dfc996db709b34ac24ad481540e181fe081ad1a3",
        "date": 1583776886,
        "releases": {
            "previous": "b09e71180b1c92117eec0d5f52e08fa4f8180679",
            "next": "b09e71180b1c92117eec0d5f52e08fa4f8180679"
        },
        "commit_message": "Make instrumentation options dynamic (#986)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b09e71180b1c92117eec0d5f52e08fa4f8180679": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public static void co.elastic.apm.agent.bci.AgentMain.agentmain(String agentArguments, Instrumentation instrumentation)",
                    "public synchronized static void co.elastic.apm.agent.bci.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.AgentMain.premain(String agentArguments, Instrumentation instrumentation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()",
                    "public void co.elastic.apm.agent.bci.ElasticApmAgent.run()"
                ]
            },
            "dfc996db709b34ac24ad481540e181fe081ad1a3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.bci.AgentMain.init(String agentArguments, Instrumentation instrumentation)",
                    "public static void co.elastic.apm.agent.bci.AgentMain.agentmain(String agentArguments, Instrumentation instrumentation)",
                    "public static void co.elastic.apm.agent.bci.AgentMain.premain(String agentArguments, Instrumentation instrumentation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()",
                    "public void co.elastic.apm.agent.bci.ElasticApmAgent.run()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1917c24341ff856195c7ac93c7a99add42e0c4b5",
        "previous_commit": "f561d579d6ba7db0562a048bdbfdc9ab900b37f9",
        "date": 1579254401,
        "releases": {
            "previous": "1917c24341ff856195c7ac93c7a99add42e0c4b5",
            "next": "1917c24341ff856195c7ac93c7a99add42e0c4b5"
        },
        "commit_message": "Enforce consistent naming for agent threads (#995)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1917c24341ff856195c7ac93c7a99add42e0c4b5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/context/LifecycleListener.java": [
                    "public void co.elastic.apm.agent.context.ClosableAdapter.stop()",
                    "public void co.elastic.apm.agent.context.ClosableAdapter.start(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()",
                    "private ConfigurationRegistry co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry(List<ConfigurationSource> configSources)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public Thread co.elastic.apm.agent.report.ApmServerReporter.newThread(Runnable r)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DataStructures.java": [
                    "public static <K, V> WeakConcurrentMap<K, V> co.elastic.apm.agent.util.DataStructures.createWeakConcurrentMapWithCleanerThread()"
                ]
            },
            "f561d579d6ba7db0562a048bdbfdc9ab900b37f9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/context/LifecycleListener.java": [],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()",
                    "private ConfigurationRegistry co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry(List<ConfigurationSource> configSources)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public Thread co.elastic.apm.agent.report.ApmServerReporter.newThread(Runnable r)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DataStructures.java": [
                    "public static <K, V> WeakConcurrentMap<K, V> co.elastic.apm.agent.util.DataStructures.createWeakConcurrentMapWithCleanerThread()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "72895b0b18a17fcb7a833c0a8d65261e2ced0db7",
        "previous_commit": "849b1f55429ef6189307483f1d1ff47e19b535b0",
        "date": 1629628161,
        "releases": {
            "previous": "72895b0b18a17fcb7a833c0a8d65261e2ced0db7",
            "next": "72895b0b18a17fcb7a833c0a8d65261e2ced0db7"
        },
        "commit_message": "gRPC instrumentation fix and refactoring (#2067)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "72895b0b18a17fcb7a833c0a8d65261e2ced0db7": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ChannelInstrumentation.java": [
                    "public static void co.elastic.apm.agent.grpc.ChannelInstrumentation.onExit(@Advice.Return @Nullable ClientCall<?, ?> clientCall, @Advice.Enter @Nullable Object span)",
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.grpc.ChannelInstrumentation.getTypeMatcherPreFilter()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ClientCallImplInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.grpc.ClientCallImplInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public Span co.elastic.apm.agent.grpc.GrpcHelper.enterClientListenerMethod(ClientCall.Listener<?> listener)",
                    "public Span co.elastic.apm.agent.grpc.GrpcHelper.clientCallStartEnter(ClientCall<?, ?> clientCall, ClientCall.Listener<?> listener, Metadata headers)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.grpc.ServerCallInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallListenerInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.getTypeMatcher()"
                ]
            },
            "849b1f55429ef6189307483f1d1ff47e19b535b0": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ChannelInstrumentation.java": [
                    "public static void co.elastic.apm.agent.grpc.ChannelInstrumentation.onExit(@Advice.Return @Nullable ClientCall<?, ?> clientCall, @Advice.Enter @Nullable Object span)",
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.grpc.ChannelInstrumentation.getTypeMatcherPreFilter()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ClientCallImplInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.grpc.ClientCallImplInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public Span co.elastic.apm.agent.grpc.GrpcHelper.enterClientListenerMethod(ClientCall.Listener<?> listener)",
                    "public Span co.elastic.apm.agent.grpc.GrpcHelper.clientCallStartEnter(ClientCall<?, ?> clientCall, ClientCall.Listener<?> listener, Metadata headers)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.grpc.ServerCallInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallListenerInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8aaaf6a87be4dd5c172004f309e0f8ddd1f8474a",
        "previous_commit": "b36f20aad336f5aa6e63312730c3e3c444fc40bd",
        "date": 1563365870,
        "releases": {
            "previous": "8aaaf6a87be4dd5c172004f309e0f8ddd1f8474a",
            "next": "8aaaf6a87be4dd5c172004f309e0f8ddd1f8474a"
        },
        "commit_message": "Remote config (#640)\n\ncloses #636",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8aaaf6a87be4dd5c172004f309e0f8ddd1f8474a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.stop()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()",
                    "public ElasticApmTracerBuilder co.elastic.apm.agent.impl.ElasticApmTracerBuilder.lifecycleListeners(List<LifecycleListener> lifecycleListeners)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public void co.elastic.apm.agent.report.ApmServerHealthChecker.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.startRequest()",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onConnectionError(@Nullable Integer responseCode, long droppedEvents, long reportedEvents)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMetaDataNdJson(MetaData metaData)"
                ]
            },
            "b36f20aad336f5aa6e63312730c3e3c444fc40bd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.stop()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()",
                    "public ElasticApmTracerBuilder co.elastic.apm.agent.impl.ElasticApmTracerBuilder.lifecycleListeners(List<LifecycleListener> lifecycleListeners)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public void co.elastic.apm.agent.report.ApmServerHealthChecker.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.startRequest()",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onConnectionError(@Nullable Integer responseCode, long droppedEvents, long reportedEvents)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMetaDataNdJson(MetaData metaData)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a76cb226f4b6ff2a3400afea283d008e1b4b2200",
        "previous_commit": "c5fede1f741004c2feed99bcca730da7f94f3a0c",
        "date": 1632122539,
        "releases": {
            "previous": "a76cb226f4b6ff2a3400afea283d008e1b4b2200",
            "next": "a76cb226f4b6ff2a3400afea283d008e1b4b2200"
        },
        "commit_message": "deleted encrypted from Socket. (#2136)\n\n* deleted encrypted from Socket.\n\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a76cb226f4b6ff2a3400afea283d008e1b4b2200": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Socket.java": [
                    "public void co.elastic.apm.agent.impl.context.Socket.copyFrom(Socket other)",
                    "public void co.elastic.apm.agent.impl.context.Socket.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSocket(final Socket socket)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequestContext(Transaction transaction, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr, @Nullable String contentTypeHeader)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "private static void co.elastic.apm.agent.springwebflux.WebfluxHelper.fillRequest(Transaction transaction, ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractHttpTransactionHelper.java": [
                    "protected void co.elastic.apm.agent.vertx.AbstractHttpTransactionHelper.fillRequest(Request request, String protocol, String method, @Nullable String scheme, @Nullable String serverName, int serverPort, String requestURI, @Nullable String queryString, @Nullable String remoteAddr)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebHelper.java": [
                    "protected void co.elastic.apm.agent.vertx.AbstractVertxWebHelper.enrichRequest(HttpServerRequest httpServerRequest, Transaction transaction)"
                ]
            },
            "c5fede1f741004c2feed99bcca730da7f94f3a0c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Socket.java": [
                    "public void co.elastic.apm.agent.impl.context.Socket.copyFrom(Socket other)",
                    "public void co.elastic.apm.agent.impl.context.Socket.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSocket(final Socket socket)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequestContext(Transaction transaction, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr, @Nullable String contentTypeHeader)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "private static void co.elastic.apm.agent.springwebflux.WebfluxHelper.fillRequest(Transaction transaction, ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractHttpTransactionHelper.java": [
                    "protected void co.elastic.apm.agent.vertx.AbstractHttpTransactionHelper.fillRequest(Request request, String protocol, String method, boolean secure, @Nullable String scheme, @Nullable String serverName, int serverPort, String requestURI, @Nullable String queryString, @Nullable String remoteAddr)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebHelper.java": [
                    "protected void co.elastic.apm.agent.vertx.AbstractVertxWebHelper.enrichRequest(HttpServerRequest httpServerRequest, Transaction transaction)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c2629677a9393ba3412d5c75154abde87078c0fd",
        "previous_commit": "85f3eddba55167f617e528df0666f03cd675a4d1",
        "date": 1592235035,
        "releases": {
            "previous": "c2629677a9393ba3412d5c75154abde87078c0fd",
            "next": "c2629677a9393ba3412d5c75154abde87078c0fd"
        },
        "commit_message": "gRPC memory leak fix + bench test app (#1196)\n\n* gRPC memory leak & improve whole plugin",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c2629677a9393ba3412d5c75154abde87078c0fd": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ClientCallImplInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.grpc.ClientCallImplInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallHandlerInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.grpc.ServerCallHandlerInstrumentation.getTypeMatcherPreFilter()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallListenerInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.getTypeMatcherPreFilter()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/helper/GrpcHelperImpl.java": [
                    "public Transaction co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.enterServerListenerMethod(ServerCall.Listener<?> listener)",
                    "public Transaction co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.startTransaction(ElasticApmTracer tracer, ClassLoader cl, ServerCall<?, ?> serverCall, Metadata headers)",
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.exitServerListenerMethod(@Nullable Throwable thrown, ServerCall.Listener<?> listener, @Nullable Transaction transaction, boolean isLastMethod)"
                ]
            },
            "85f3eddba55167f617e528df0666f03cd675a4d1": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ClientCallImplInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.grpc.ClientCallImplInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallHandlerInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.grpc.ServerCallHandlerInstrumentation.getTypeMatcherPreFilter()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallListenerInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.getTypeMatcherPreFilter()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/helper/GrpcHelperImpl.java": [
                    "public Transaction co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.enterServerListenerMethod(ServerCall.Listener<?> listener)",
                    "public Transaction co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.startTransaction(ElasticApmTracer tracer, ClassLoader cl, ServerCall<?, ?> serverCall, Metadata headers)",
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.exitServerListenerMethod(@Nullable Throwable thrown, ServerCall.Listener<?> listener, @Nullable Transaction transaction, boolean isLastMethod)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "43b0e11917a4f6eddb38b02bfe7a5917985058d9",
        "previous_commit": "aaec4905e0f96f0c9d1ba0393633ab8ff633c73c",
        "date": 1635260975,
        "releases": {
            "previous": "43b0e11917a4f6eddb38b02bfe7a5917985058d9",
            "next": "43b0e11917a4f6eddb38b02bfe7a5917985058d9"
        },
        "commit_message": "Track metrics for each service individually (#2204) (#2208)\n\n* Track metrics for each service individually (#2204)\r\n\r\n* Added #2208 to the changelog\r\n\r\n* Incorporated revice by @felixbarny\r\n\r\n* Breakdown metrics per service need APM Server 8.0+\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* Use prime numbers as suggested by @jackshirazi\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "43b0e11917a4f6eddb38b02bfe7a5917985058d9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.trackMetrics()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/Labels.java": [
                    "public void co.elastic.apm.agent.metrics.Mutable.resetState()",
                    "public boolean co.elastic.apm.agent.metrics.AbstractBase.equals(Object o)",
                    "public boolean co.elastic.apm.agent.metrics.AbstractBase.isEmpty()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context, TraceContext traceContext)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeLabels(Labels labels, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ]
            },
            "aaec4905e0f96f0c9d1ba0393633ab8ff633c73c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.trackMetrics()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/Labels.java": [
                    "public void co.elastic.apm.agent.metrics.Mutable.resetState()",
                    "public boolean co.elastic.apm.agent.metrics.AbstractBase.equals(Object o)",
                    "public boolean co.elastic.apm.agent.metrics.AbstractBase.isEmpty()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context, TraceContext traceContext)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeLabels(Labels labels, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a0d70c4773eb0f59939419e4cc42e4f0f3ca47d9",
        "previous_commit": "ce642b2ca41f97d9b43160b90fd2e2516d885aa1",
        "date": 1686321042,
        "releases": {
            "previous": "a0d70c4773eb0f59939419e4cc42e4f0f3ca47d9",
            "next": "a0d70c4773eb0f59939419e4cc42e4f0f3ca47d9"
        },
        "commit_message": "Capture 'sync' attribute on async spans (#3164)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a0d70c4773eb0f59939419e4cc42e4f0f3ca47d9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ],
                "apm-agent-plugins/apm-cassandra/apm-cassandra3-plugin/src/main/java/co/elastic/apm/agent/cassandra3/Cassandra3Instrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.cassandra3.Cassandra3Instrumentation.getMethodMatcher()",
                    "public static void co.elastic.apm.agent.cassandra3.Cassandra3Instrumentation.onExit(@Advice.Thrown @Nullable Throwable thrown, @Advice.Return ResultSetFuture result, @Advice.Enter @Nullable Object spanObj)"
                ],
                "apm-agent-plugins/apm-cassandra/apm-cassandra4-plugin/src/main/java/co/elastic/apm/agent/cassandra4/Cassandra4Instrumentation.java": [
                    "public static void co.elastic.apm.agent.cassandra4.Cassandra4Instrumentation.onExit(@Advice.Thrown @Nullable Throwable thrown, @Advice.Return Object result, @Nullable @Advice.Enter Object spanObj)"
                ],
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/advice/ApacheMonitorFilterAdvice.java": [
                    "public void co.elastic.apm.agent.dubbo.advice.ApacheMonitorFilterAdvice.accept(@Nullable Result result, @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientAsyncAdvice.java": [
                    "public static void co.elastic.apm.agent.httpclient.HttpClientAsyncAdvice.onAfterExecute(@Advice.Return @Nullable CompletableFuture<HttpResponse<?>> completableFuture, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ]
            },
            "ce642b2ca41f97d9b43160b90fd2e2516d885aa1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ],
                "apm-agent-plugins/apm-cassandra/apm-cassandra3-plugin/src/main/java/co/elastic/apm/agent/cassandra3/Cassandra3Instrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.cassandra3.Cassandra3Instrumentation.getMethodMatcher()",
                    "public static void co.elastic.apm.agent.cassandra3.Cassandra3Instrumentation.onExit(@Advice.Thrown @Nullable Throwable thrown, @Advice.Return ResultSetFuture result, @Nullable @Advice.Enter Object spanObj)"
                ],
                "apm-agent-plugins/apm-cassandra/apm-cassandra4-plugin/src/main/java/co/elastic/apm/agent/cassandra4/Cassandra4Instrumentation.java": [
                    "public static void co.elastic.apm.agent.cassandra4.Cassandra4Instrumentation.onExit(@Advice.Thrown @Nullable Throwable thrown, @Advice.Return Object result, @Nullable @Advice.Enter Object spanObj)"
                ],
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/advice/ApacheMonitorFilterAdvice.java": [
                    "public void co.elastic.apm.agent.dubbo.advice.ApacheMonitorFilterAdvice.accept(@Nullable Result result, @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientAsyncAdvice.java": [
                    "public static void co.elastic.apm.agent.httpclient.HttpClientAsyncAdvice.onAfterExecute(@Advice.Return @Nullable CompletableFuture<HttpResponse<?>> completableFuture, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b2ac746be4d90fe9a7191c9d46f2fb0c364b3799",
        "previous_commit": "a8b8cdb1a9df0074196f1df01b9cf7b5a71a5fdd",
        "date": 1584551148,
        "releases": {
            "previous": "b2ac746be4d90fe9a7191c9d46f2fb0c364b3799",
            "next": "b2ac746be4d90fe9a7191c9d46f2fb0c364b3799"
        },
        "commit_message": "Add gRPC client/server instrumentation plugin (#1019)\n\nadd gRPC plugin for client/server support (unary calls only for now).",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b2ac746be4d90fe9a7191c9d46f2fb0c364b3799": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static ElasticApmInstrumentation co.elastic.apm.agent.bci.ElasticApmAgent.instantiate(Class<? extends ElasticApmInstrumentation> instrumentation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/MatcherTimer.java": [
                    "private static String co.elastic.apm.agent.bci.bytebuddy.MatcherTimer.getSimpleClassName(String className)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Destination.java": [
                    "public Destination co.elastic.apm.agent.impl.context.Destination.withAddress(@Nullable CharSequence address)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "private Span co.elastic.apm.agent.impl.transaction.Span.start(long epochMicros, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.onTransactionStart(boolean startedAsChild, long epochMicros, Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DependencyInjectingServiceLoader.java": [
                    "private T co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.instantiate(String implementation)"
                ]
            },
            "a8b8cdb1a9df0074196f1df01b9cf7b5a71a5fdd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static ElasticApmInstrumentation co.elastic.apm.agent.bci.ElasticApmAgent.instantiate(Class<? extends ElasticApmInstrumentation> instrumentation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/MatcherTimer.java": [
                    "private String co.elastic.apm.agent.bci.bytebuddy.MatcherTimer.getSimpleClassName(String className)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Destination.java": [
                    "public Destination co.elastic.apm.agent.impl.context.Destination.withAddress(@Nullable CharSequence address)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "private Span co.elastic.apm.agent.impl.transaction.Span.start(long epochMicros, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.onTransactionStart(boolean startedAsChild, long epochMicros, Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DependencyInjectingServiceLoader.java": [
                    "private T co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.instantiate(String implementation)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "37e66e0465fb9220483e8fcde75d14a166f8be4f",
        "previous_commit": "d36e7dc1f72b40e3fde241a9384d8be549c2e015",
        "date": 1654522453,
        "releases": {
            "previous": "37e66e0465fb9220483e8fcde75d14a166f8be4f",
            "next": "37e66e0465fb9220483e8fcde75d14a166f8be4f"
        },
        "commit_message": "Add span links to messaging system tracing (#2610)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "37e66e0465fb9220483e8fcde75d14a166f8be4f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTraceContext(TraceContext traceContext, boolean serializeTransactionId)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/MessageBatchIteratorWrapper.java": [
                    "public Message co.elastic.apm.agent.rabbitmq.MessageBatchIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/SpringAmqpTransactionHelper.java": [
                    "public Transaction co.elastic.apm.agent.rabbitmq.SpringAmqpTransactionHelper.createTransaction(Message message, String transactionNamePrefix)"
                ]
            },
            "d36e7dc1f72b40e3fde241a9384d8be549c2e015": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTraceContext(TraceContext traceContext, boolean serializeTransactionId)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/MessageBatchIteratorWrapper.java": [
                    "public Message co.elastic.apm.agent.rabbitmq.MessageBatchIteratorWrapper.next()"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/SpringAmqpTransactionHelper.java": [
                    "public Transaction co.elastic.apm.agent.rabbitmq.SpringAmqpTransactionHelper.createTransaction(@Nonnull Message message, @Nullable MessageProperties messageProperties, @Nonnull String transactionNamePrefix)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "864e4e2cbdd0177c6fcbd7eca38a2f0ba8167463",
        "previous_commit": "641c50183ad14750e7d0412313fb91a7e20e4313",
        "date": 1642520517,
        "releases": {
            "previous": "864e4e2cbdd0177c6fcbd7eca38a2f0ba8167463",
            "next": "864e4e2cbdd0177c6fcbd7eca38a2f0ba8167463"
        },
        "commit_message": "Logging custom facade (#2390)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "864e4e2cbdd0177c6fcbd7eca38a2f0ba8167463": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdviceReturnAndParameterTypes(MethodDescription.InDefinedShape advice, String adviceClass)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/classloading/IndyPluginClassLoader.java": [
                    "private static ClassLoader co.elastic.apm.agent.bci.classloading.IndyPluginClassLoader.getParent(@Nullable ClassLoader targetClassLoader, ClassLoader agentClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public static void co.elastic.apm.agent.logging.LoggingConfiguration.init(List<ConfigurationSource> sources, String ephemeralId)"
                ],
                "apm-agent-plugins/apm-log-shader-plugin/apm-log4j1-plugin/src/main/java/co/elastic/apm/agent/log4j1/Log4J1EcsReformattingHelper.java": [
                    "protected WriterAppender co.elastic.apm.agent.log4j1.Log4J1EcsReformattingHelper.createAndStartEcsAppender(WriterAppender originalAppender, String ecsAppenderName, Layout ecsLayout)"
                ],
                "apm-agent-plugins/apm-log-shader-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/Log4J2EcsReformattingHelper.java": [
                    "protected Appender co.elastic.apm.agent.log4j2.Log4J2EcsReformattingHelper.createAndStartEcsAppender(Appender originalAppender, String ecsAppenderName, Layout<? extends Serializable> ecsFormatter)"
                ],
                "apm-agent-plugins/apm-log-shader-plugin/apm-logback-plugin/apm-logback-plugin-impl/src/main/java/co/elastic/apm/agent/logback/LogbackEcsReformattingHelper.java": [
                    "protected OutputStreamAppender<ILoggingEvent> co.elastic.apm.agent.logback.LogbackEcsReformattingHelper.createAndStartEcsAppender(OutputStreamAppender<ILoggingEvent> originalAppender, String ecsAppenderName, Encoder<ILoggingEvent> ecsEncoder)"
                ]
            },
            "641c50183ad14750e7d0412313fb91a7e20e4313": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdviceReturnAndParameterTypes(MethodDescription.InDefinedShape advice, String adviceClass)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/classloading/IndyPluginClassLoader.java": [
                    "private static ClassLoader co.elastic.apm.agent.bci.classloading.IndyPluginClassLoader.getParent(@Nullable ClassLoader targetClassLoader, ClassLoader agentClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public static void co.elastic.apm.agent.logging.LoggingConfiguration.init(List<ConfigurationSource> sources, String ephemeralId)"
                ],
                "apm-agent-plugins/apm-log-shader-plugin/apm-log4j1-plugin/src/main/java/co/elastic/apm/agent/log4j1/Log4J1EcsReformattingHelper.java": [
                    "protected WriterAppender co.elastic.apm.agent.log4j1.Log4J1EcsReformattingHelper.createAndStartEcsAppender(WriterAppender originalAppender, String ecsAppenderName, Layout ecsLayout)"
                ],
                "apm-agent-plugins/apm-log-shader-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/Log4J2EcsReformattingHelper.java": [
                    "protected Appender co.elastic.apm.agent.log4j2.Log4J2EcsReformattingHelper.createAndStartEcsAppender(Appender originalAppender, String ecsAppenderName, Layout<? extends Serializable> ecsFormatter)"
                ],
                "apm-agent-plugins/apm-log-shader-plugin/apm-logback-plugin/apm-logback-plugin-impl/src/main/java/co/elastic/apm/agent/logback/LogbackEcsReformattingHelper.java": [
                    "protected OutputStreamAppender<ILoggingEvent> co.elastic.apm.agent.logback.LogbackEcsReformattingHelper.createAndStartEcsAppender(OutputStreamAppender<ILoggingEvent> originalAppender, String ecsAppenderName, Encoder<ILoggingEvent> ecsEncoder)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e1935ebc4da40cbc4ee4d3b51a671a78b48b3a77",
        "previous_commit": "2d6933b09e144bcf4057822a6b2f6d19d4374cbd",
        "date": 1646324609,
        "releases": {
            "previous": "e1935ebc4da40cbc4ee4d3b51a671a78b48b3a77",
            "next": "e1935ebc4da40cbc4ee4d3b51a671a78b48b3a77"
        },
        "commit_message": "Added (initial) support for compressing spans (#2477)\n\n* Added (initial) support for compressing spans\r\n\r\n* Added #2477 to the changelog\r\n\r\n* Added test case for context propagation\r\n\r\n* It is not necessary to activate the transaction\r\n\r\n* Report \"compressed spans\" as dropped\r\n\r\n* Added assertions for span counts to compression tests\r\n\r\n* Move compression configuration to new class as discussed with @jackshirazi\r\n\r\n* Clear bufferedSpan when the transaction/span is recycled\r\n\r\n* Prevent NullPointerException\r\n\r\n* Cache \"SpanConfiguration\" when the transaction starts to provide consistent span compression\r\n\r\n* Review by @jackshirazi\r\n\r\n* Review by @jackshirazi\r\n\r\n* removed the synchronized locked\r\n\r\n* Review by @jackshirazi\r\n\r\n* A sibling span might have been started before the composite span\r\n\r\n* Fix NPE in `switch(composite.getCompressionStrategy())`\r\n\r\n* Added tests for parallel span compression",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e1935ebc4da40cbc4ee4d3b51a671a78b48b3a77": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()",
                    "public void co.elastic.apm.agent.impl.transaction.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.onTransactionStart(boolean startedAsChild, long epochMicros, Sampler sampler)",
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            },
            "2d6933b09e144bcf4057822a6b2f6d19d4374cbd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()",
                    "public void co.elastic.apm.agent.impl.transaction.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.onTransactionStart(boolean startedAsChild, long epochMicros, Sampler sampler)",
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1b9a8276bd992f9e69eabb7f38998fa6ea1e8127",
        "previous_commit": "243f2cdb6efd5602c1c0fe9a12ab23c119cbc5f8",
        "date": 1666879638,
        "releases": {
            "previous": "1b9a8276bd992f9e69eabb7f38998fa6ea1e8127",
            "next": "1b9a8276bd992f9e69eabb7f38998fa6ea1e8127"
        },
        "commit_message": "Shortcut attacher discovery and fork (#2863)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1b9a8276bd992f9e69eabb7f38998fa6ea1e8127": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "private boolean co.elastic.apm.attach.AgentAttacher.attach(JvmInfo jvmInfo)",
                    "private void co.elastic.apm.attach.AgentAttacher.onJvmMatch(JvmInfo jvmInfo)",
                    "public static void co.elastic.apm.attach.AgentAttacher.main(String[] args)",
                    "static Arguments co.elastic.apm.attach.AgentAttacher.parse(String... args)",
                    "static void co.elastic.apm.attach.AgentAttacher.printHelp(PrintStream out)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/DiscoveryRules.java": [
                    "public void co.elastic.apm.attach.DiscoveryRules.includePid(String pid)"
                ]
            },
            "243f2cdb6efd5602c1c0fe9a12ab23c119cbc5f8": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "private void co.elastic.apm.attach.AgentAttacher.onJvmMatch(JvmInfo jvmInfo)",
                    "private boolean co.elastic.apm.attach.AgentAttacher.attach(JvmInfo jvmInfo, Map<String, String> agentArgs)",
                    "public static void co.elastic.apm.attach.AgentAttacher.main(String[] args)",
                    "static Arguments co.elastic.apm.attach.AgentAttacher.parse(String... args)",
                    "static void co.elastic.apm.attach.AgentAttacher.printHelp(PrintStream out)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/DiscoveryRules.java": [
                    "public void co.elastic.apm.attach.DiscoveryRules.includePid(String pid)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "197265ba240e2ffdfedb9d9779400948e99b7566",
        "previous_commit": "5ff60c3456af6d11d5695415dac165be883bbeb4",
        "date": 1519374604,
        "releases": {
            "previous": "197265ba240e2ffdfedb9d9779400948e99b7566",
            "next": "197265ba240e2ffdfedb9d9779400948e99b7566"
        },
        "commit_message": "Add stacktrace to spans\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "197265ba240e2ffdfedb9d9779400948e99b7566": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.build()",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Stacktrace.java": [
                    "public boolean co.elastic.apm.impl.Stacktrace.equals(Object other)",
                    "public int co.elastic.apm.impl.Stacktrace.hashCode()",
                    "public void co.elastic.apm.impl.Stacktrace.resetState()",
                    "public String co.elastic.apm.impl.Stacktrace.toString()"
                ]
            },
            "5ff60c3456af6d11d5695415dac165be883bbeb4": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.build()",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Stacktrace.java": [
                    "public boolean co.elastic.apm.impl.Stacktrace.equals(Object other)",
                    "public int co.elastic.apm.impl.Stacktrace.hashCode()",
                    "public void co.elastic.apm.impl.Stacktrace.resetState()",
                    "public String co.elastic.apm.impl.Stacktrace.toString()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5bb06afae1b43758e9699a77fadcfd8c6d85e681",
        "previous_commit": "5030aaf3d520dbe9af93298d55a1eb61c5ca4d3b",
        "date": 1532417163,
        "releases": {
            "previous": "5bb06afae1b43758e9699a77fadcfd8c6d85e681",
            "next": "5bb06afae1b43758e9699a77fadcfd8c6d85e681"
        },
        "commit_message": "Add ability for helper classes to access the Servlet API\n\nby loading the helper classes from a CL which is a child of the one\nwhich loads the Servlet API\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5bb06afae1b43758e9699a77fadcfd8c6d85e681": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmInstrumentation.java": [
                    "public void co.elastic.apm.bci.ElasticApmInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public void co.elastic.apm.jdbc.PreparedStatementInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/StatementInstrumentation.java": [
                    "public void co.elastic.apm.jdbc.StatementInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/AsyncInstrumentation.java": [
                    "private static void co.elastic.apm.servlet.AsyncInstrumentation.onExitStartAsync(@Advice.Return AsyncContext asyncContext)",
                    "public void co.elastic.apm.servlet.AsyncInstrumentation.init(ElasticApmTracer tracer)"
                ]
            },
            "5030aaf3d520dbe9af93298d55a1eb61c5ca4d3b": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmInstrumentation.java": [
                    "public void co.elastic.apm.bci.ElasticApmInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public void co.elastic.apm.jdbc.PreparedStatementInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/StatementInstrumentation.java": [
                    "public void co.elastic.apm.jdbc.StatementInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/AsyncInstrumentation.java": [
                    "private static void co.elastic.apm.servlet.AsyncInstrumentation.onExitStartAsync(@Advice.Return AsyncContext asyncContext)",
                    "static void co.elastic.apm.servlet.AsyncInstrumentation.init(ElasticApmTracer tracer)",
                    "public void co.elastic.apm.servlet.AsyncInstrumentation.init(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "bbad0d76e907872eed9d17d2cccea38d61c4dca1",
        "previous_commit": "f2a89b302e3f1c7a5165a930cdc703502075492e",
        "date": 1545141922,
        "releases": {
            "previous": "bbad0d76e907872eed9d17d2cccea38d61c4dca1",
            "next": "bbad0d76e907872eed9d17d2cccea38d61c4dca1"
        },
        "commit_message": "Async Servlet state management changes (#385)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "bbad0d76e907872eed9d17d2cccea38d61c4dca1": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "private static void co.elastic.apm.agent.servlet.AsyncInstrumentation.onExitStartAsync(@Advice.This HttpServletRequest request, @Advice.Return AsyncContext asyncContext)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ApmAsyncListener.java": [
                    "public void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.onTimeout(AsyncEvent event)",
                    "public void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.onComplete(AsyncEvent event)",
                    "private void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.endTransaction(AsyncEvent event)",
                    "public void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.onError(AsyncEvent event)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/StartAsyncAdviceHelperImpl.java": [
                    "public void co.elastic.apm.agent.servlet.helper.StartAsyncAdviceHelperImpl.onExitStartAsync(AsyncContext asyncContext)"
                ]
            },
            "f2a89b302e3f1c7a5165a930cdc703502075492e": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "private static void co.elastic.apm.agent.servlet.AsyncInstrumentation.onExitStartAsync(@Advice.This HttpServletRequest request, @Advice.Return AsyncContext asyncContext)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ApmAsyncListener.java": [
                    "public void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.onTimeout(AsyncEvent event)",
                    "public void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.onComplete(AsyncEvent event)",
                    "private void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.endTransaction(AsyncEvent event)",
                    "public void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.onError(AsyncEvent event)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/StartAsyncAdviceHelperImpl.java": [
                    "public void co.elastic.apm.agent.servlet.helper.StartAsyncAdviceHelperImpl.onExitStartAsync(AsyncContext asyncContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d6337ed93c93798ea4bab1426aeb798741a3b710",
        "previous_commit": "507e7ac7aa888bc0d9289116ad8684ac80f35c4a",
        "date": 1527236569,
        "releases": {
            "previous": "d6337ed93c93798ea4bab1426aeb798741a3b710",
            "next": "d6337ed93c93798ea4bab1426aeb798741a3b710"
        },
        "commit_message": "Make the public API work with the javaagent (#90)\n\nRemove AutoCloseable interface from Transaction and Span\r\n\r\nThere is no way of recording exceptions in a try-with-resources block,\r\nas the close call is evaluated before the catch block.\r\n\r\nThat's why a try-catch-finally block is a better practice.",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d6337ed93c93798ea4bab1426aeb798741a3b710": {
                "apm-agent-api/src/main/java/co/elastic/apm/api/ElasticApm.java": [
                    "public static Transaction co.elastic.apm.api.ElasticApm.startTransaction()",
                    "public static Span co.elastic.apm.api.ElasticApm.startSpan()",
                    "public static Span co.elastic.apm.api.ElasticApm.currentSpan()",
                    "public static Transaction co.elastic.apm.api.ElasticApm.currentTransaction()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochTimestampMillis, @Nullable Exception e)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.opentracing.impl.ApmSpanInstrumentation.handleSpecialTransactionTag(Transaction transaction, String key, Object value)"
                ]
            },
            "507e7ac7aa888bc0d9289116ad8684ac80f35c4a": {
                "apm-agent-api/src/main/java/co/elastic/apm/api/ElasticApm.java": [
                    "public Span co.elastic.apm.api.ElasticApm.startSpan()",
                    "public Span co.elastic.apm.api.ElasticApm.currentSpan()",
                    "public Transaction co.elastic.apm.api.ElasticApm.currentTransaction()",
                    "public Transaction co.elastic.apm.api.ElasticApm.startTransaction()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochTimestampMillis, Exception e)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.opentracing.impl.ApmSpanInstrumentation.handleSpecialTransactionTag(Transaction transaction, String key, Object value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "be518c1f81e827f195fb94a78eafe6f6d5d128f8",
        "previous_commit": "d18438bcebf56926079c56fb982d6bde73347e0d",
        "date": 1535093231,
        "releases": {
            "previous": "be518c1f81e827f195fb94a78eafe6f6d5d128f8",
            "next": "be518c1f81e827f195fb94a78eafe6f6d5d128f8"
        },
        "commit_message": "Add span.tags (#172)\n\ncloses #170",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "be518c1f81e827f195fb94a78eafe6f6d5d128f8": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.recycle()",
                    "public void co.elastic.apm.impl.transaction.Span.end(long nanoTime)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.recycle()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static void co.elastic.apm.opentracing.impl.ApmSpanInstrumentation.handleSpanTag(Span span, String key, Object value)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.fillRequestContext(Transaction transaction, @Nullable String userName, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr, StringBuffer requestURL)"
                ]
            },
            "d18438bcebf56926079c56fb982d6bde73347e0d": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.recycle()",
                    "public void co.elastic.apm.impl.transaction.Span.end(long nanoTime)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.recycle()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static void co.elastic.apm.opentracing.impl.ApmSpanInstrumentation.handleSpanTag(Span span, String key, Object value)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.fillRequestContext(Transaction transaction, @Nullable String userName, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr, StringBuffer requestURL)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "27fbdd1335444fee178531002d8f028f65e15d46",
        "previous_commit": "f9da8c2ad7df10a4e051533921bd3906fab8c998",
        "date": 1521640430,
        "releases": {
            "previous": "27fbdd1335444fee178531002d8f028f65e15d46",
            "next": "27fbdd1335444fee178531002d8f028f65e15d46"
        },
        "commit_message": "Populate URL.full (#25)\n\nUsing a StringBuilder to not cause allocations when constructing full\r\n\r\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "27fbdd1335444fee178531002d8f028f65e15d46": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/Url.java": [
                    "public int co.elastic.apm.impl.context.Url.hashCode()",
                    "public void co.elastic.apm.impl.context.Url.copyFrom(Url other)",
                    "public String co.elastic.apm.impl.context.Url.toString()",
                    "public void co.elastic.apm.impl.context.Url.resetState()",
                    "public boolean co.elastic.apm.impl.context.Url.equals(Object other)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)"
                ]
            },
            "f9da8c2ad7df10a4e051533921bd3906fab8c998": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/Url.java": [
                    "public int co.elastic.apm.impl.context.Url.hashCode()",
                    "public void co.elastic.apm.impl.context.Url.copyFrom(Url other)",
                    "public String co.elastic.apm.impl.context.Url.toString()",
                    "public void co.elastic.apm.impl.context.Url.resetState()",
                    "public boolean co.elastic.apm.impl.context.Url.equals(Object other)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4c3721427904969922d37e0e07ac2825cc5e2df4",
        "previous_commit": "803550cd9bd14c139d951e9eea0f4067ef70c299",
        "date": 1643905487,
        "releases": {
            "previous": "4c3721427904969922d37e0e07ac2825cc5e2df4",
            "next": "4c3721427904969922d37e0e07ac2825cc5e2df4"
        },
        "commit_message": "Service name auto discovery docs and polishing (#2440)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4c3721427904969922d37e0e07ac2825cc5e2df4": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServiceInfo.java": [
                    "public String co.elastic.apm.agent.configuration.ServiceInfo.toString()",
                    "public int co.elastic.apm.agent.configuration.ServiceInfo.hashCode()",
                    "private static ServiceInfo co.elastic.apm.agent.configuration.ServiceInfo.createFromSunJavaCommand(@Nullable String command)",
                    "public boolean co.elastic.apm.agent.configuration.ServiceInfo.equals(Object o)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletServiceNameHelper.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.servlet.ServletServiceNameHelper.determineServiceName(ServletContextAdapter<ServletContext> adapter, @Nullable ServletContext servletContext, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            },
            "803550cd9bd14c139d951e9eea0f4067ef70c299": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServiceInfo.java": [
                    "public String co.elastic.apm.agent.configuration.ServiceInfo.toString()",
                    "public int co.elastic.apm.agent.configuration.ServiceInfo.hashCode()",
                    "private static ServiceInfo co.elastic.apm.agent.configuration.ServiceInfo.createFromSunJavaCommand(@Nullable String command)",
                    "public boolean co.elastic.apm.agent.configuration.ServiceInfo.equals(Object o)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletServiceNameHelper.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.servlet.ServletServiceNameHelper.determineServiceName(ServletContextAdapter<ServletContext> adapter, @Nullable ServletContext servletContext, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "81494bdfc7e98bc53d12abd98184f6784ab01524",
        "previous_commit": "714536a20cd1dde079371493be894340d6283349",
        "date": 1524036909,
        "releases": {
            "previous": "81494bdfc7e98bc53d12abd98184f6784ab01524",
            "next": "81494bdfc7e98bc53d12abd98184f6784ab01524"
        },
        "commit_message": "Evaluate the overhead of the agent (#61)\n\nUsing a JMH-based meso-benchmark",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "81494bdfc7e98bc53d12abd98184f6784ab01524": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.stop()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/Url.java": [
                    "public void co.elastic.apm.impl.context.Url.resetState()",
                    "public void co.elastic.apm.impl.context.Url.copyFrom(Url other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/matcher/WildcardMatcher.java": [
                    "public boolean co.elastic.apm.matcher.WildcardMatcher.matches(String firstPart, @Nullable String secondPart)",
                    "public boolean co.elastic.apm.matcher.WildcardMatcher.matches(String s)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)"
                ]
            },
            "714536a20cd1dde079371493be894340d6283349": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.stop()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/Url.java": [
                    "public void co.elastic.apm.impl.context.Url.resetState()",
                    "public void co.elastic.apm.impl.context.Url.copyFrom(Url other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/matcher/WildcardMatcher.java": [
                    "public boolean co.elastic.apm.matcher.WildcardMatcher.matches(String firstPart, @Nullable String secondPart)",
                    "public boolean co.elastic.apm.matcher.WildcardMatcher.matches(String s)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9b030441f86f5d9c117b1aaceb2c52ed2f1af4bb",
        "previous_commit": "be2b907c37e53899a68d655fbaa67e7e66deb115",
        "date": 1617190023,
        "releases": {
            "previous": "9b030441f86f5d9c117b1aaceb2c52ed2f1af4bb",
            "next": "9b030441f86f5d9c117b1aaceb2c52ed2f1af4bb"
        },
        "commit_message": "Fix thread pool method matchers (#1717)\n\n* Fix thread pool method matchers\r\n\r\nThere's not a reported problem with those but the matchers can miss methods with covariant return types\r\n\r\n* add few other uses of covariant return types\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9b030441f86f5d9c117b1aaceb2c52ed2f1af4bb": {
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/ApacheMonitorFilterInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.dubbo.ApacheMonitorFilterInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/ExecutorInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientAsyncInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.httpclient.HttpClientAsyncInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.httpclient.HttpClientInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttp3ClientInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.okhttp.OkHttp3ClientInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/RequestStreamRecordingInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.getMethodMatcher()"
                ]
            },
            "be2b907c37e53899a68d655fbaa67e7e66deb115": {
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/ApacheMonitorFilterInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.dubbo.ApacheMonitorFilterInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/ExecutorInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientAsyncInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.httpclient.HttpClientAsyncInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.httpclient.HttpClientInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttp3ClientInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.okhttp.OkHttp3ClientInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/RequestStreamRecordingInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.RequestStreamRecordingInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "33bf365f9c2ccb3162ca22e652fd5e5ced65661c",
        "previous_commit": "e37654fbc32173036513d58f6e2c319ec99779e4",
        "date": 1709638334,
        "releases": {
            "previous": "33bf365f9c2ccb3162ca22e652fd5e5ced65661c",
            "next": "33bf365f9c2ccb3162ca22e652fd5e5ced65661c"
        },
        "commit_message": "Fixed some locations to not touch exceptions when `safe_exception` is configured (#3543)\n\n\r\n---------\r\n\r\nCo-authored-by: Jonas Kunz <jonas.kunz@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "33bf365f9c2ccb3162ca22e652fd5e5ced65661c": {
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/LegacyApacheHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.LegacyApacheHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable HttpResponse response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/helper/ApacheHttpClient4ApiAdapter.java": [
                    "public boolean co.elastic.apm.agent.httpclient.v4.helper.ApacheHttpClient4ApiAdapter.isCircularRedirectException(Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient5-plugin/src/main/java/co/elastic/apm/agent/httpclient/v5/helper/ApacheHttpClient5ApiAdapter.java": [
                    "public boolean co.elastic.apm.agent.httpclient.v5.helper.ApacheHttpClient5ApiAdapter.isCircularRedirectException(Throwable t)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public void co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.finishClientSpan(@Nullable Response response, Span<?> span, @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.exitServerListenerMethod(@Nullable Throwable thrown, ServerCall.Listener<?> listener, @Nullable Transaction<?> transaction, @Nullable Status terminateStatus)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessExitInstrumentation.java": [
                    "public static void co.elastic.apm.agent.process.ProcessExitInstrumentation.onExit(@Advice.This Process process, @Advice.Thrown Throwable thrown, @Advice.Return int exitValue)"
                ]
            },
            "e37654fbc32173036513d58f6e2c319ec99779e4": {
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/LegacyApacheHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.LegacyApacheHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable HttpResponse response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/helper/ApacheHttpClient4ApiAdapter.java": [
                    "public boolean co.elastic.apm.agent.httpclient.v4.helper.ApacheHttpClient4ApiAdapter.isCircularRedirectException(Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient5-plugin/src/main/java/co/elastic/apm/agent/httpclient/v5/helper/ApacheHttpClient5ApiAdapter.java": [
                    "public boolean co.elastic.apm.agent.httpclient.v5.helper.ApacheHttpClient5ApiAdapter.isCircularRedirectException(Throwable t)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public void co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.finishClientSpan(@Nullable Response response, Span<?> span, @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.exitServerListenerMethod(@Nullable Throwable thrown, ServerCall.Listener<?> listener, @Nullable Transaction<?> transaction, @Nullable Status terminateStatus)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessExitInstrumentation.java": [
                    "public static void co.elastic.apm.agent.process.ProcessExitInstrumentation.onExit(@Advice.This Process process, @Advice.Thrown Throwable thrown, @Advice.Return int exitValue)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "14fdb1657cbdd639c41e98b08a3c8b89974c4d34",
        "previous_commit": "86ff506c6a98471d7ffe108faa2bbbde4e611570",
        "date": 1520734644,
        "releases": {
            "previous": "14fdb1657cbdd639c41e98b08a3c8b89974c4d34",
            "next": "14fdb1657cbdd639c41e98b08a3c8b89974c4d34"
        },
        "commit_message": "Handle dropped spans\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "14fdb1657cbdd639c41e98b08a3c8b89974c4d34": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.setName(String name)",
                    "public void co.elastic.apm.impl.transaction.Span.resetState()",
                    "public void co.elastic.apm.impl.transaction.Span.setType(String type)",
                    "public Span co.elastic.apm.impl.transaction.Span.withName(String name)",
                    "public Span co.elastic.apm.impl.transaction.Span.withType(String type)"
                ]
            },
            "86ff506c6a98471d7ffe108faa2bbbde4e611570": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.setName(String name)",
                    "public void co.elastic.apm.impl.transaction.Span.resetState()",
                    "public void co.elastic.apm.impl.transaction.Span.setType(String type)",
                    "public Span co.elastic.apm.impl.transaction.Span.withName(String name)",
                    "public Span co.elastic.apm.impl.transaction.Span.withType(String type)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1c0f1c6e7d44a7e41b9f883b2ce53e22236cadfc",
        "previous_commit": "721d892447016cbbbc9f0e1e29e27da4f98ab672",
        "date": 1638260920,
        "releases": {
            "previous": "1c0f1c6e7d44a7e41b9f883b2ce53e22236cadfc",
            "next": "1c0f1c6e7d44a7e41b9f883b2ce53e22236cadfc"
        },
        "commit_message": "Improve runtime attach configuration (#2283)\n\n* code cleanup\r\n\r\n* implement new config tests\r\n\r\n* refactor & test properties config\r\n\r\n* implement & fix test cases\r\n\r\n* update changelog\r\n\r\n* simplify things a bit\r\n\r\n* minor cleanup\r\n\r\n* make animal sniffer happy\r\n\r\n* config sources: use separate factory class\r\n\r\n* make animal sniffer happy again\r\n\r\n* add missing file\r\n\r\n* try to simplify config location\r\n\r\n* rename test file\r\n\r\n* fix wording\r\n\r\n* don't try to attach twice in test app\r\n\r\n* remove useless failing test + small refactor\r\n\r\n* fix test\r\n\r\n* use more concrete type for config to avoid confusion\r\n\r\n* exclude duplicated cached-lookup-keys\r\n\r\n* improve + test for duplicated classes\r\n\r\n* use another way to exclude cached keys dep.",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1c0f1c6e7d44a7e41b9f883b2ce53e22236cadfc": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration, File agentJarFile)",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach()",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String propertiesLocation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initialize(@Nullable final String agentArguments, final Instrumentation instrumentation, final File agentJarFile, final boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/source/PropertyFileConfigurationSource.java": [
                    "public void co.elastic.apm.agent.configuration.source.PropertyFileConfigurationSource.reload()"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/AgentMain.java": [
                    "private synchronized static void co.elastic.apm.agent.premain.AgentMain.loadAndInitializeAgent(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ]
            },
            "721d892447016cbbbc9f0e1e29e27da4f98ab672": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration, File agentJarFile)",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach()",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String propertiesLocation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initialize(@Nullable final String agentArguments, final Instrumentation instrumentation, final File agentJarFile, final boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/source/PropertyFileConfigurationSource.java": [
                    "public void co.elastic.apm.agent.configuration.source.PropertyFileConfigurationSource.reload()"
                ],
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/AgentMain.java": [
                    "private synchronized static void co.elastic.apm.agent.premain.AgentMain.loadAndInitializeAgent(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d63b1cca83141ec61f00d0dfbe07d6aaf9629bba",
        "previous_commit": "750ba4bb09f0fda2885a01e2c7ddaf2678b2d73a",
        "date": 1713872494,
        "releases": {
            "previous": "d63b1cca83141ec61f00d0dfbe07d6aaf9629bba",
            "next": "d63b1cca83141ec61f00d0dfbe07d6aaf9629bba"
        },
        "commit_message": "Prevent cycles in inferred spans (#3588)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d63b1cca83141ec61f00d0dfbe07d6aaf9629bba": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.serialize(byte[] buffer)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.deserialize(byte[] buffer, @Nullable String serviceName, @Nullable String serviceVersion)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "void co.elastic.apm.agent.profiler.CallTree.giveLastChildIdTo(CallTree giveTo)",
                    "public void co.elastic.apm.agent.profiler.CallTree.onActivation(byte[] active, long timestamp)",
                    "int co.elastic.apm.agent.profiler.CallTree.spanify(CallTree.Root root, TraceContext parentContext, TraceContext nonInferredParentContext)",
                    "public int co.elastic.apm.agent.profiler.CallTree.spanify()"
                ]
            },
            "750ba4bb09f0fda2885a01e2c7ddaf2678b2d73a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.serialize(byte[] buffer)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.deserialize(byte[] buffer, @Nullable String serviceName, @Nullable String serviceVersion)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "void co.elastic.apm.agent.profiler.CallTree.giveLastChildIdTo(CallTree giveTo)",
                    "int co.elastic.apm.agent.profiler.CallTree.spanify(CallTree.Root root, TraceContext parentContext)",
                    "public void co.elastic.apm.agent.profiler.CallTree.onActivation(byte[] active, long timestamp)",
                    "public int co.elastic.apm.agent.profiler.CallTree.spanify()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9af48ddcfb0f40bf49e32285d34a175e66d8aeac",
        "previous_commit": "10d0ba32b2df450b4824d7fb8f4a9686dda7ad05",
        "date": 1594211612,
        "releases": {
            "previous": "9af48ddcfb0f40bf49e32285d34a175e66d8aeac",
            "next": "9af48ddcfb0f40bf49e32285d34a175e66d8aeac"
        },
        "commit_message": "Avoid missing jboss.as MBeans on JBoss (#1258)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9af48ddcfb0f40bf49e32285d34a175e66d8aeac": {
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.handleNotification(Notification notification, Object handback)",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.registerMBeanNotificationListener(final MBeanServer server)",
                    "private synchronized void co.elastic.apm.agent.jmx.JmxMetricTracker.tryInit()",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.run()",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.addJmxMetricRegistration(final JmxMetric jmxMetric, List<JmxMetricRegistration> registrations, MBeanServer server)",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.deferInit()"
                ]
            },
            "10d0ba32b2df450b4824d7fb8f4a9686dda7ad05": {
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.handleNotification(Notification notification, Object handback)",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.registerMBeanNotificationListener(final MBeanServer server)",
                    "private synchronized void co.elastic.apm.agent.jmx.JmxMetricTracker.tryInit()",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.run()",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.addJmxMetricRegistration(final JmxMetric jmxMetric, List<JmxMetricRegistration> registrations, MBeanServer server)",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.deferInit()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "69854ad27aa6d2bb4a1bcf20e9ac4de544ce38ae",
        "previous_commit": "38971f0ba4d0983d31309a8125abe6dfb20ea568",
        "date": 1658895174,
        "releases": {
            "previous": "69854ad27aa6d2bb4a1bcf20e9ac4de544ce38ae",
            "next": "69854ad27aa6d2bb4a1bcf20e9ac4de544ce38ae"
        },
        "commit_message": "Avoid context propagation from agent threads and Executors (#2723)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "69854ad27aa6d2bb4a1bcf20e9ac4de544ce38ae": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public static ThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadDaemonPool(final String threadPurpose, int queueCapacity)",
                    "public static void co.elastic.apm.agent.util.ExecutorUtils.shutdownAndWaitTermination(ExecutorService executor, long timeout, TimeUnit unit)",
                    "public static ThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createThreadDaemonPool(final String threadPurpose, int poolSize, int queueCapacity)",
                    "public static ScheduledThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadSchedulingDaemonPool(final String threadPurpose)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/ExecutorInstrumentation.java": [
                    "private static boolean co.elastic.apm.agent.concurrent.ExecutorInstrumentation.isExcluded(@Advice.This Executor executor)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "private static boolean co.elastic.apm.agent.concurrent.JavaConcurrent.shouldAvoidContextPropagation(@Nullable Object executable)"
                ]
            },
            "38971f0ba4d0983d31309a8125abe6dfb20ea568": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public static ThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadDaemonPool(final String threadPurpose, int queueCapacity)",
                    "public static void co.elastic.apm.agent.util.ExecutorUtils.shutdownAndWaitTermination(ExecutorService executor, long timeout, TimeUnit unit)",
                    "public static ThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createThreadDaemonPool(final String threadPurpose, int poolSize, int queueCapacity)",
                    "public static ScheduledThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadSchedulingDaemonPool(final String threadPurpose)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/ExecutorInstrumentation.java": [
                    "private static boolean co.elastic.apm.agent.concurrent.ExecutorInstrumentation.isExcluded(@Advice.This Executor executor)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "private static boolean co.elastic.apm.agent.concurrent.JavaConcurrent.shouldAvoidContextPropagation(@Nullable Object executable)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "176fd916de7a82aa7a8cc4af74d49cf9fcdc5fe8",
        "previous_commit": "480e39dacf4140772cee5ae8253d774ea3435b43",
        "date": 1624547831,
        "releases": {
            "previous": "176fd916de7a82aa7a8cc4af74d49cf9fcdc5fe8",
            "next": "176fd916de7a82aa7a8cc4af74d49cf9fcdc5fe8"
        },
        "commit_message": "Runtime attach reorder + log args (#1865)\n\n* log attacher arguments with debug level\r\n\r\n* use emulated attach last\r\n\r\n* work-around for attaching to current JVM\r\n\r\n* remove emulated attach + fork on same JVM for properties\r\n\r\n* code cleanup\r\n\r\n* fix headers formatting\r\n\r\n* post review changes + update changelog\r\n\r\n* remove test trying to attach from the same JVM",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "176fd916de7a82aa7a8cc4af74d49cf9fcdc5fe8": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "public static void co.elastic.apm.attach.AgentAttacher.main(String[] args)",
                    "static Arguments co.elastic.apm.attach.AgentAttacher.parse(String... args)",
                    "static void co.elastic.apm.attach.AgentAttacher.printHelp(PrintStream out)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/GetAgentProperties.java": [
                    "public static Properties co.elastic.apm.attach.GetAgentProperties.getAgentAndSystemProperties(String pid, UserRegistry.User user)",
                    "static Properties co.elastic.apm.attach.GetAgentProperties.getAgentAndSystemPropertiesCurrentUser(String pid)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticAttachmentProvider.java": [
                    "public synchronized static ByteBuddyAgent.AttachmentProvider co.elastic.apm.attach.ElasticAttachmentProvider.get()"
                ]
            },
            "480e39dacf4140772cee5ae8253d774ea3435b43": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "public static void co.elastic.apm.attach.AgentAttacher.main(String[] args)",
                    "static Arguments co.elastic.apm.attach.AgentAttacher.parse(String... args)",
                    "static void co.elastic.apm.attach.AgentAttacher.printHelp(PrintStream out)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/GetAgentProperties.java": [
                    "public static Properties co.elastic.apm.attach.GetAgentProperties.getAgentAndSystemProperties(String pid, UserRegistry.User user)",
                    "static Properties co.elastic.apm.attach.GetAgentProperties.getAgentAndSystemPropertiesCurrentUser(String pid)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticAttachmentProvider.java": [
                    "public synchronized static ByteBuddyAgent.AttachmentProvider co.elastic.apm.attach.ElasticAttachmentProvider.get()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "67515c23566ce4885914321e4271adcfa64c7f96",
        "previous_commit": "35e25f88ed0f75e708847b9081183940180af5bc",
        "date": 1572284614,
        "releases": {
            "previous": "67515c23566ce4885914321e4271adcfa64c7f96",
            "next": "67515c23566ce4885914321e4271adcfa64c7f96"
        },
        "commit_message": "Adding destination to Messaging transactions and spans (#906)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "67515c23566ce4885914321e4271adcfa64c7f96": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/AbstractContext.java": [
                    "public boolean co.elastic.apm.agent.impl.context.AbstractContext.hasContent()",
                    "public void co.elastic.apm.agent.impl.context.AbstractContext.copyFrom(AbstractContext other)",
                    "public void co.elastic.apm.agent.impl.context.AbstractContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context, TraceContext traceContext)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeContext(final TransactionContext context, TraceContext traceContext)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ]
            },
            "35e25f88ed0f75e708847b9081183940180af5bc": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/AbstractContext.java": [
                    "public boolean co.elastic.apm.agent.impl.context.AbstractContext.hasContent()",
                    "public void co.elastic.apm.agent.impl.context.AbstractContext.copyFrom(AbstractContext other)",
                    "public void co.elastic.apm.agent.impl.context.AbstractContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context, TraceContext traceContext)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeContext(final TransactionContext context, TraceContext traceContext)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6c4e51c8dcc47a4c8813436c35b289b6b7c6ef39",
        "previous_commit": "ddf509865c820f8ddda77e08b049c3045593f8c8",
        "date": 1628166148,
        "releases": {
            "previous": "6c4e51c8dcc47a4c8813436c35b289b6b7c6ef39",
            "next": "6c4e51c8dcc47a4c8813436c35b289b6b7c6ef39"
        },
        "commit_message": "changed File.separator* to System.getProperty(\"file.separator\") so that the runtime uses the correct character (#1961)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6c4e51c8dcc47a4c8813436c35b289b6b7c6ef39": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/UserRegistry.java": [
                    "public static String co.elastic.apm.attach.UserRegistry.getCurrentJvm()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/ProcessFactory.java": [
                    "private String getTitle()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/CGroupMetrics.java": [
                    "private CgroupFiles co.elastic.apm.agent.metrics.builtin.CGroupMetrics.createCgroup2Files(String cgroupLine, File rootCgroupFsPath)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PackageScanner.java": [
                    "public FileVisitResult co.elastic.apm.agent.util.PackageScanner.visitFile(Path file, BasicFileAttributes attrs)",
                    "private static List<String> co.elastic.apm.agent.util.PackageScanner.listClassNames(final String basePackage, final Path basePath)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessHelper.java": [
                    "private static String co.elastic.apm.agent.process.ProcessHelper.getBinaryName(String processName)"
                ]
            },
            "ddf509865c820f8ddda77e08b049c3045593f8c8": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/UserRegistry.java": [
                    "public static String co.elastic.apm.attach.UserRegistry.getCurrentJvm()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/ProcessFactory.java": [
                    "private String getTitle()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/CGroupMetrics.java": [
                    "private CgroupFiles co.elastic.apm.agent.metrics.builtin.CGroupMetrics.createCgroup2Files(String cgroupLine, File rootCgroupFsPath)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PackageScanner.java": [
                    "public FileVisitResult co.elastic.apm.agent.util.PackageScanner.visitFile(Path file, BasicFileAttributes attrs)",
                    "private static List<String> co.elastic.apm.agent.util.PackageScanner.listClassNames(final String basePackage, final Path basePath)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessHelper.java": [
                    "private static String co.elastic.apm.agent.process.ProcessHelper.getBinaryName(String processName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ddbf896e95b213bd35f651e2151ddfe04a0ce822",
        "previous_commit": "fbb5d684ee8567f405aaf2305ad04c4a02cfdf06",
        "date": 1723122408,
        "releases": {
            "previous": "ddbf896e95b213bd35f651e2151ddfe04a0ce822",
            "next": "ddbf896e95b213bd35f651e2151ddfe04a0ce822"
        },
        "commit_message": "Perform charset-aware decoding of request bodies (#3726)\n\n* Split out decoder pooling\r\n\r\n* Implemented charset aware request body decoding\r\n\r\n* Fix casting in fallback encoding\r\n\r\n* Fix java 7 compilation",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ddbf896e95b213bd35f651e2151ddfe04a0ce822": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeOTel(SpanImpl span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeOtel(AbstractSpanImpl<?> span, List<IdImpl> profilingStackTraceIds, @Nullable BodyCaptureImpl httpRequestBody)"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/internal/util/IOUtils.java": [
                    "public static CoderResult co.elastic.apm.agent.sdk.internal.util.IOUtils.decodeUtf8Byte(final byte b, final CharBuffer charBuffer)",
                    "public static CoderResult co.elastic.apm.agent.sdk.internal.util.IOUtils.decodeUtf8Bytes(final byte[] bytes, final int offset, final int length, final CharBuffer charBuffer)",
                    "public static <T> CoderResult co.elastic.apm.agent.sdk.internal.util.IOUtils.decodeUtf8BytesFromSource(ByteSourceReader<T> reader, T src, final CharBuffer dest)",
                    "public static boolean co.elastic.apm.agent.sdk.internal.util.IOUtils.readUtf8Stream(final InputStream is, final CharBuffer charBuffer)"
                ]
            },
            "fbb5d684ee8567f405aaf2305ad04c4a02cfdf06": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeOTel(SpanImpl span)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeOtel(AbstractSpanImpl<?> span, List<IdImpl> profilingStackTraceIds, @Nullable CharSequence httpRequestBody)"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/internal/util/IOUtils.java": [
                    "public static CoderResult co.elastic.apm.agent.sdk.internal.util.IOUtils.decodeUtf8Byte(final byte b, final CharBuffer charBuffer)",
                    "public static CoderResult co.elastic.apm.agent.sdk.internal.util.IOUtils.decodeUtf8Bytes(final byte[] bytes, final int offset, final int length, final CharBuffer charBuffer)",
                    "public static <T> CoderResult co.elastic.apm.agent.sdk.internal.util.IOUtils.decodeUtf8BytesFromSource(ByteSourceReader<T> reader, T src, final CharBuffer dest)",
                    "public static boolean co.elastic.apm.agent.sdk.internal.util.IOUtils.readUtf8Stream(final InputStream is, final CharBuffer charBuffer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "cc55c45630de7163d96ed7b6199584f32af0f432",
        "previous_commit": "32ee207ccafe347d3fe77a65172ef809307c29f2",
        "date": 1657030785,
        "releases": {
            "previous": "cc55c45630de7163d96ed7b6199584f32af0f432",
            "next": "cc55c45630de7163d96ed7b6199584f32af0f432"
        },
        "commit_message": "Fix flaky webflux transaction name (#2695)\n\n* fix flaky webflux transaction name + some refactor",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "cc55c45630de7163d96ed7b6199584f32af0f432": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "void co.elastic.apm.agent.servlet.ServletTransactionHelper.applyDefaultTransactionName(String method, String servletPath, @Nullable String pathInfo, Transaction transaction)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/TransactionAwareSubscriber.java": [
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onError(Throwable t)",
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onComplete()",
                    "private void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.cancelTransaction()"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "public static void co.elastic.apm.agent.springwebflux.WebfluxHelper.endTransaction(@Nullable Throwable thrown, @Nullable Transaction transaction, ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractHttpTransactionHelper.java": [
                    "public void co.elastic.apm.agent.vertx.AbstractHttpTransactionHelper.applyDefaultTransactionName(String method, String pathFirstPart, @Nullable String pathSecondPart, Transaction transaction, int priorityOffset)"
                ]
            },
            "32ee207ccafe347d3fe77a65172ef809307c29f2": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "void co.elastic.apm.agent.servlet.ServletTransactionHelper.applyDefaultTransactionName(String method, String servletPath, @Nullable String pathInfo, Transaction transaction)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/TransactionAwareSubscriber.java": [
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onError(Throwable t)",
                    "public void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.onComplete()",
                    "private void co.elastic.apm.agent.springwebflux.TransactionAwareSubscriber<T>.cancelTransaction()"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "public static void co.elastic.apm.agent.springwebflux.WebfluxHelper.endTransaction(@Nullable Throwable thrown, @Nullable Transaction transaction, ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractHttpTransactionHelper.java": [
                    "public void co.elastic.apm.agent.vertx.AbstractHttpTransactionHelper.applyDefaultTransactionName(String method, String pathFirstPart, @Nullable String pathSecondPart, Transaction transaction, int priorityOffset)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "59d97f085ac8e195a09df236234a462fea5cc825",
        "previous_commit": "cc5bd65389c4ca904180676d1803aae7c442f6ea",
        "date": 1598948857,
        "releases": {
            "previous": "59d97f085ac8e195a09df236234a462fea5cc825",
            "next": "59d97f085ac8e195a09df236234a462fea5cc825"
        },
        "commit_message": "Lazily create profiler temporary files (#1360)\n\nlazy profiler temp file init",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "59d97f085ac8e195a09df236234a462fea5cc825": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/ProfilingFactory.java": [
                    "public void co.elastic.apm.agent.profiler.ProfilingFactory.stop()"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.stop()",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.run()",
                    "EventPoller.PollState co.elastic.apm.agent.profiler.SamplingProfiler.consumeActivationEventsFromRingBufferAndWriteToFile()",
                    "void co.elastic.apm.agent.profiler.SamplingProfiler.copyFromFiles(Path activationEvents, Path traces)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processTraces()"
                ]
            },
            "cc5bd65389c4ca904180676d1803aae7c442f6ea": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/ProfilingFactory.java": [
                    "public void co.elastic.apm.agent.profiler.ProfilingFactory.stop()"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.stop()",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.run()",
                    "EventPoller.PollState co.elastic.apm.agent.profiler.SamplingProfiler.consumeActivationEventsFromRingBufferAndWriteToFile()",
                    "void co.elastic.apm.agent.profiler.SamplingProfiler.copyFromFiles(Path activationEvents, Path traces)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processTraces()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e32985ae59cd1d8e471fdba5ead8c6368d27f667",
        "previous_commit": "a438a4cfed009d137ae18d154cc6809c973077ae",
        "date": 1642603284,
        "releases": {
            "previous": "e32985ae59cd1d8e471fdba5ead8c6368d27f667",
            "next": "e32985ae59cd1d8e471fdba5ead8c6368d27f667"
        },
        "commit_message": "Fix slf4j LinkageErrors for external plugins (#2376)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e32985ae59cd1d8e471fdba5ead8c6368d27f667": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static Collection<? extends ClassLoader> co.elastic.apm.agent.bci.ElasticApmAgent.createExternalPluginClassLoaders(@Nullable String pluginsDirString)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(@Nullable ClassLoader classLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/classloading/ExternalPluginClassLoader.java": [
                    "private List<String> co.elastic.apm.agent.bci.classloading.ExternalPluginClassLoader.scanForClasses(File pluginJar)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "void co.elastic.apm.agent.impl.transaction.TraceContext.setApplicationClassLoader(@Nullable ClassLoader classLoader)"
                ],
                "integration-tests/external-plugin-test/external-plugin/src/main/java/co/elastic/apm/agent/plugin/PluginInstrumentation.java": [
                    "public static void co.elastic.apm.agent.plugin.PluginInstrumentation.onExit(@Advice.Thrown Throwable thrown, @Advice.Enter Object scopeObject)"
                ]
            },
            "a438a4cfed009d137ae18d154cc6809c973077ae": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static Collection<? extends ClassLoader> co.elastic.apm.agent.bci.ElasticApmAgent.createExternalPluginClassLoaders(@Nullable String pluginsDirString)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(@Nullable ClassLoader classLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/classloading/ExternalPluginClassLoader.java": [
                    "private List<String> co.elastic.apm.agent.bci.classloading.ExternalPluginClassLoader.scanForClasses(File pluginJar)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "void co.elastic.apm.agent.impl.transaction.TraceContext.setApplicationClassLoader(@Nullable ClassLoader classLoader)"
                ],
                "integration-tests/external-plugin-test/external-plugin/src/main/java/co/elastic/apm/agent/plugin/PluginInstrumentation.java": [
                    "public static void co.elastic.apm.agent.plugin.PluginInstrumentation.onExit(@Advice.Thrown Throwable thrown, @Advice.Enter Object scopeObject)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7803818b6d671e7cedd7d88a1590f88b3b3fc96c",
        "previous_commit": "44bdf966aa94cc9692d57b4de9f83dbf679aee0d",
        "date": 1519219539,
        "releases": {
            "previous": "7803818b6d671e7cedd7d88a1590f88b3b3fc96c",
            "next": "7803818b6d671e7cedd7d88a1590f88b3b3fc96c"
        },
        "commit_message": "Add thread local context propagation\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7803818b6d671e7cedd7d88a1590f88b3b3fc96c": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.currentTransaction()",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Span.java": [
                    "public void co.elastic.apm.impl.Span.end()",
                    "public void co.elastic.apm.impl.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Transaction.java": [
                    "public void co.elastic.apm.impl.Transaction.end()"
                ]
            },
            "44bdf966aa94cc9692d57b4de9f83dbf679aee0d": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.currentTransaction()",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Span.java": [
                    "public void co.elastic.apm.impl.Span.end()",
                    "public void co.elastic.apm.impl.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Transaction.java": [
                    "public void co.elastic.apm.impl.Transaction.end()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a73e8f21c1cff8121ea2a3389106b9b9ff4e2ab0",
        "previous_commit": "6ed9ecf711e52a92c93d7baf9613ca230168606b",
        "date": 1536649897,
        "releases": {
            "previous": "a73e8f21c1cff8121ea2a3389106b9b9ff4e2ab0",
            "next": "a73e8f21c1cff8121ea2a3389106b9b9ff4e2ab0"
        },
        "commit_message": "Support duration units in config options (#189)\n\n\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a73e8f21c1cff8121ea2a3389106b9b9ff4e2ab0": {
                "apm-agent-core/src/main/java/co/elastic/apm/configuration/StartupInfo.java": [
                    "private void co.elastic.apm.configuration.StartupInfo.logConfigWithNonDefaultValue(Logger logger, ConfigurationOption<?> option)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV1ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.IntakeV1ReportingEventHandler.init(final ApmServerReporter reporter)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private HttpURLConnection co.elastic.apm.report.IntakeV2ReportingEventHandler.startRequest()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "OkHttpClient co.elastic.apm.report.ReporterFactory.getOkHttpClient(ReporterConfiguration reporterConfiguration)"
                ]
            },
            "6ed9ecf711e52a92c93d7baf9613ca230168606b": {
                "apm-agent-core/src/main/java/co/elastic/apm/configuration/StartupInfo.java": [
                    "private void co.elastic.apm.configuration.StartupInfo.logConfigWithNonDefaultValue(Logger logger, ConfigurationOption<?> option)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV1ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.IntakeV1ReportingEventHandler.init(final ApmServerReporter reporter)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private HttpURLConnection co.elastic.apm.report.IntakeV2ReportingEventHandler.startRequest()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "OkHttpClient co.elastic.apm.report.ReporterFactory.getOkHttpClient(ReporterConfiguration reporterConfiguration)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "364a3b6ace94f44d2ed5a800727abb36854aea30",
        "previous_commit": "2abd29231c26ec59558f6ccae7f35063b3c2a72c",
        "date": 1544456343,
        "releases": {
            "previous": "364a3b6ace94f44d2ed5a800727abb36854aea30",
            "next": "364a3b6ace94f44d2ed5a800727abb36854aea30"
        },
        "commit_message": "Reduce log level for transformation errors caused by optional classes (#363)\n\nLogging these as warn has lead to confusion and was perceived as a potential bug/error in the agent repeatedly.\r\nWhen Byte Buddy introspects a class and tries to resolve a referenced class which is not on the classpath,\r\nit throws an exception.\r\nThis also changes the isPublic() matcher to be the last one so that no unnecessary\r\nlookups which can potentially fail are made.\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "364a3b6ace94f44d2ed5a800727abb36854aea30": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ErrorLoggingListener.java": [
                    "public void co.elastic.apm.agent.bci.bytebuddy.ErrorLoggingListener.onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/ConnectionInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jdbc.ConnectionInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/PreparedStatementInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jdbc.PreparedStatementInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jdbc.StatementInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.AsyncInstrumentation.getMethodMatcher()"
                ]
            },
            "2abd29231c26ec59558f6ccae7f35063b3c2a72c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ErrorLoggingListener.java": [
                    "public void co.elastic.apm.agent.bci.bytebuddy.ErrorLoggingListener.onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/ConnectionInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jdbc.ConnectionInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/PreparedStatementInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jdbc.PreparedStatementInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jdbc.StatementInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.AsyncInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "043cc50449d53854a9debc427740b420883bec20",
        "previous_commit": "f17f7b518dde2e81eeb2ca951087108a10a20d54",
        "date": 1522310495,
        "releases": {
            "previous": "043cc50449d53854a9debc427740b420883bec20",
            "next": "043cc50449d53854a9debc427740b420883bec20"
        },
        "commit_message": "Add support for Spring-MVC (#44)\n\nAdd support for Spring-MVC\r\n\r\nSets the transaction name to ControllerName#methodName",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "043cc50449d53854a9debc427740b420883bec20": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public void co.elastic.apm.impl.transaction.Transaction.setType(@Nullable String type)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.withName(@Nullable String name)",
                    "public void co.elastic.apm.impl.transaction.Transaction.setName(@Nullable String name)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)"
                ]
            },
            "f17f7b518dde2e81eeb2ca951087108a10a20d54": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public void co.elastic.apm.impl.transaction.Transaction.setType(@Nullable String type)",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.withName(@Nullable String name)",
                    "public void co.elastic.apm.impl.transaction.Transaction.setName(@Nullable String name)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0f29fac55461cd1b0386046f03edb08c007832ba",
        "previous_commit": "ee87252ea128578ea6b28e7c4b7d33e1ea3f83e0",
        "date": 1691656479,
        "releases": {
            "previous": "0f29fac55461cd1b0386046f03edb08c007832ba",
            "next": "0f29fac55461cd1b0386046f03edb08c007832ba"
        },
        "commit_message": "Removed ThreadLocal usage for tracestate serialization (#3240)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0f29fac55461cd1b0386046f03edb08c007832ba": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceState.copyFrom(TraceState other)",
                    "void co.elastic.apm.agent.impl.transaction.TraceState.appendTracestateHeaderValue(String headerValue, StringBuilder tracestateBuffer)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceState.addTextHeader(String headerValue)",
                    "public String co.elastic.apm.agent.impl.transaction.TraceState.toTextHeader()",
                    "public void co.elastic.apm.agent.impl.transaction.TraceState.set(double rate, String headerValue)"
                ]
            },
            "ee87252ea128578ea6b28e7c4b7d33e1ea3f83e0": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java": [
                    "void co.elastic.apm.agent.impl.transaction.TraceState.appendTracestateHeaderValue(String headerValue, StringBuilder tracestateBuffer, int tracestateSizeLimit)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceState.copyFrom(TraceState other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceState.addTextHeader(String headerValue)",
                    "public String co.elastic.apm.agent.impl.transaction.TraceState.toTextHeader()",
                    "public void co.elastic.apm.agent.impl.transaction.TraceState.set(double rate, String headerValue)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e4f3eaef369969bdae7a530abb058f2abc6b1a06",
        "previous_commit": "864e4e2cbdd0177c6fcbd7eca38a2f0ba8167463",
        "date": 1642525947,
        "releases": {
            "previous": "e4f3eaef369969bdae7a530abb058f2abc6b1a06",
            "next": "e4f3eaef369969bdae7a530abb058f2abc6b1a06"
        },
        "commit_message": "Adding instrumentation warmup (#2368)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e4f3eaef369969bdae7a530abb058f2abc6b1a06": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, final Logger logger, final AgentBuilder.DescriptionStrategy descriptionStrategy, final boolean premain, final boolean useTypePoolCache)"
                ],
                "integration-tests/simple-webapp/src/main/java/co/elastic/webapp/ExecutorServiceTestServlet.java": [
                    "protected void co.elastic.webapp.ExecutorServiceTestServlet.doGet(HttpServletRequest req, HttpServletResponse resp)",
                    "public void co.elastic.webapp.ExecutorServiceTestServlet.run()"
                ]
            },
            "864e4e2cbdd0177c6fcbd7eca38a2f0ba8167463": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, final Logger logger, final AgentBuilder.DescriptionStrategy descriptionStrategy, final boolean premain, final boolean useTypePoolCache)"
                ],
                "integration-tests/simple-webapp/src/main/java/co/elastic/webapp/ExecutorServiceTestServlet.java": [
                    "protected void co.elastic.webapp.ExecutorServiceTestServlet.doGet(HttpServletRequest req, HttpServletResponse resp)",
                    "public void co.elastic.webapp.ExecutorServiceTestServlet.run()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d4ad209cfabc3e99a0cf8031b09a4a6723ed1b1b",
        "previous_commit": "c547d4d5c344d82079c3ea395597da086afd5d79",
        "date": 1593076582,
        "releases": {
            "previous": "d4ad209cfabc3e99a0cf8031b09a4a6723ed1b1b",
            "next": "d4ad209cfabc3e99a0cf8031b09a4a6723ed1b1b"
        },
        "commit_message": "Add enabled config (#1245)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d4ad209cfabc3e99a0cf8031b09a4a6723ed1b1b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initialize(String agentArguments, Instrumentation instrumentation, File agentJarFile, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()",
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ]
            },
            "c547d4d5c344d82079c3ea395597da086afd5d79": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initialize(String agentArguments, Instrumentation instrumentation, File agentJarFile, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "41686c0f3d598fcf009f04a6abd2798e5bc0f98b",
        "previous_commit": "e6e91c14007a138bf8a5174c01fb2b6c5fe0d49b",
        "date": 1676390378,
        "releases": {
            "previous": "41686c0f3d598fcf009f04a6abd2798e5bc0f98b",
            "next": "41686c0f3d598fcf009f04a6abd2798e5bc0f98b"
        },
        "commit_message": "Elasticsearch rest async context propagation (#3015)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "41686c0f3d598fcf009f04a6abd2798e5bc0f98b": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public ResponseListenerWrapper co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createInstance()"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ResponseListenerWrapper.java": [
                    "public void co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.onSuccess(Response response)",
                    "public void co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.onFailure(Exception exception)",
                    "public void co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.resetState()",
                    "private void co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.finishClientSpan(@Nullable Response response, @Nullable Throwable throwable)"
                ]
            },
            "e6e91c14007a138bf8a5174c01fb2b6c5fe0d49b": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public ResponseListenerWrapper co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createInstance()"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ResponseListenerWrapper.java": [
                    "public void co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.onSuccess(Response response)",
                    "public void co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.onFailure(Exception exception)",
                    "public void co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.resetState()",
                    "private void co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.finishClientSpan(@Nullable Response response, @Nullable Throwable throwable)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0a1587ef974e14cdd7b49ae210160e76e67aa61e",
        "previous_commit": "f3ee22ab465fb641e6c8d4802bfbc71e065eda7b",
        "date": 1586442668,
        "releases": {
            "previous": "0a1587ef974e14cdd7b49ae210160e76e67aa61e",
            "next": "0a1587ef974e14cdd7b49ae210160e76e67aa61e"
        },
        "commit_message": "add workaround to disable emulated attach (#1131)\n\n* add workaround to disable emulated attach\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0a1587ef974e14cdd7b49ae210160e76e67aa61e": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, String agentArgs)",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "static Arguments co.elastic.apm.attach.RemoteAttacher.parse(String... args)",
                    "public static void co.elastic.apm.attach.RemoteAttacher.main(String[] args)",
                    "void co.elastic.apm.attach.RemoteAttacher.printHelp(PrintStream out)"
                ]
            },
            "f3ee22ab465fb641e6c8d4802bfbc71e065eda7b": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, String agentArgs)",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "static Arguments co.elastic.apm.attach.RemoteAttacher.parse(String... args)",
                    "public static void co.elastic.apm.attach.RemoteAttacher.main(String[] args)",
                    "void co.elastic.apm.attach.RemoteAttacher.printHelp(PrintStream out)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "96f5115e12f25f6e852f2194924b2f66aaaf9f6b",
        "previous_commit": "9ba48722880e16ed1846b9678e1a8498a4b99b17",
        "date": 1616576200,
        "releases": {
            "previous": "96f5115e12f25f6e852f2194924b2f66aaaf9f6b",
            "next": "96f5115e12f25f6e852f2194924b2f66aaaf9f6b"
        },
        "commit_message": "Add bootstrap checks (#1593)\n\n* Add bootstrap check for disabled bytecode verification\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "96f5115e12f25f6e852f2194924b2f66aaaf9f6b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "private static Class<?> co.elastic.apm.agent.bci.IndyBootstrap.initIndyBootstrap(final Logger logger)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private boolean co.elastic.apm.agent.impl.ElasticApmTracer.shouldDelayOnPremain()"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.httpclient.HttpClientInstrumentation.getTypeMatcherPreFilter()"
                ],
                "apm-agent-premain/src/main/java/co/elastic/apm/agent/premain/AgentMain.java": [
                    "static boolean co.elastic.apm.agent.premain.AgentMain.shouldDelayOnPremain()",
                    "public synchronized static void co.elastic.apm.agent.premain.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ]
            },
            "9ba48722880e16ed1846b9678e1a8498a4b99b17": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "private static Class<?> co.elastic.apm.agent.bci.IndyBootstrap.initIndyBootstrap(final Logger logger)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private boolean co.elastic.apm.agent.impl.ElasticApmTracer.shouldDelayOnPremain()"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.httpclient.HttpClientInstrumentation.getTypeMatcherPreFilter()"
                ],
                "apm-agent-premain/src/main/java/co/elastic/apm/agent/premain/AgentMain.java": [
                    "static boolean co.elastic.apm.agent.premain.AgentMain.shouldDelayOnPremain()",
                    "public synchronized static void co.elastic.apm.agent.premain.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3db12ba2f4c439f675e904708971f90e6c9cef1b",
        "previous_commit": "158c6f823c3035d5f47ac0e0ea9faa9b762865c5",
        "date": 1540470697,
        "releases": {
            "previous": "3db12ba2f4c439f675e904708971f90e6c9cef1b",
            "next": "3db12ba2f4c439f675e904708971f90e6c9cef1b"
        },
        "commit_message": "Elasticsearch REST client instrumentation: adding support for sync ops and IT (#228)\n\n* Adding support for sync ops and IT\r\n\r\n* Aligning with Node agent plus code review changes\r\n\r\n* Some more minor changes\r\n\r\n* Adding a small hack to use ES client code for decoding statement\r\n\r\n* Setting env variable of docker container to pass bootstarp check on CI\r\n\r\n* Adding info to context.http and reading query with UTF-8\r\n\r\n* Always add context.db.type\r\n\r\n* Adding an E2E-version of the IT\r\n\r\n* Comment out tags settings until decided where to add\r\n\r\n* Changing LOGGER to logger\r\n\r\n* Unit test - check stratement is null for non-search queries\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3db12ba2f4c439f675e904708971f90e6c9cef1b": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> active)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Http.java": [
                    "public boolean co.elastic.apm.impl.transaction.Http.hasContent()",
                    "public void co.elastic.apm.impl.transaction.Http.copyFrom(Http other)",
                    "public void co.elastic.apm.impl.transaction.Http.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)"
                ]
            },
            "158c6f823c3035d5f47ac0e0ea9faa9b762865c5": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> active)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Http.java": [
                    "public boolean co.elastic.apm.impl.transaction.Http.hasContent()",
                    "public void co.elastic.apm.impl.transaction.Http.copyFrom(Http other)",
                    "public void co.elastic.apm.impl.transaction.Http.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "72f88e9188dde6af9f70ddfe5a98bbcd478f4bdb",
        "previous_commit": "4b69ebf4da3a69ca9af2f873c13853682a077bc2",
        "date": 1649063974,
        "releases": {
            "previous": "72f88e9188dde6af9f70ddfe5a98bbcd478f4bdb",
            "next": "72f88e9188dde6af9f70ddfe5a98bbcd478f4bdb"
        },
        "commit_message": "Implement default type fallback (#2525)\n\n* implement default type fallback\r\n\r\n* moving span/transaction type to abstract span\r\n\r\n* move span end logging to tracer\r\n\r\n* make type normalization private\r\n\r\n* cleanup moving type\r\n\r\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "72f88e9188dde6af9f70ddfe5a98bbcd478f4bdb": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.resetState()",
                    "public void co.elastic.apm.agent.impl.transaction.Span.beforeEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.beforeEnd(long epochMicros)",
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ]
            },
            "4b69ebf4da3a69ca9af2f873c13853682a077bc2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.resetState()",
                    "public void co.elastic.apm.agent.impl.transaction.Span.beforeEnd(long epochMicros)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.beforeEnd(long epochMicros)",
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "259ebf52dac8ea5136e54b6aecb246b3ffe8fe2c",
        "previous_commit": "9437aa6e117aa6023038af2772bfd0d968ff4a00",
        "date": 1689001983,
        "releases": {
            "previous": "259ebf52dac8ea5136e54b6aecb246b3ffe8fe2c",
            "next": "259ebf52dac8ea5136e54b6aecb246b3ffe8fe2c"
        },
        "commit_message": "Capture FQDN for host name (#3188)\n\n* draft impl. to capture FQDN\n\n* fix test + remove domain trimming\n\n* fix test for aws lambda\n\n* remove useless code\n\n* add powershell heuristic+remove compat requirement\n\n* fix broken test\n\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "259ebf52dac8ea5136e54b6aecb246b3ffe8fe2c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/SystemInfo.java": [
                    "static String co.elastic.apm.agent.impl.metadata.SystemInfo.discoverHostnameThroughEnv(boolean isWindows)",
                    "private static String co.elastic.apm.agent.impl.metadata.SystemInfo.executeHostnameDiscoveryCommand(List<String> cmd, long timeoutMillis)",
                    "static String co.elastic.apm.agent.impl.metadata.SystemInfo.fallbackHostnameDiscovery(boolean isWindows)",
                    "static String co.elastic.apm.agent.impl.metadata.SystemInfo.discoverHostnameThroughCommand(boolean isWindows, long timeoutMillis)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.waitForMetadata()"
                ]
            },
            "9437aa6e117aa6023038af2772bfd0d968ff4a00": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/SystemInfo.java": [
                    "static String co.elastic.apm.agent.impl.metadata.SystemInfo.discoverHostnameThroughEnv(boolean isWindows)",
                    "private static String co.elastic.apm.agent.impl.metadata.SystemInfo.executeHostnameDiscoveryCommand(List<String> cmd, long timeoutMillis)",
                    "static String co.elastic.apm.agent.impl.metadata.SystemInfo.fallbackHostnameDiscovery(boolean isWindows)",
                    "static String co.elastic.apm.agent.impl.metadata.SystemInfo.discoverHostnameThroughCommand(boolean isWindows, long timeoutMillis)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.waitForMetadata()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "28fcf2dc96d72f543047ad1dcc291bfbe9539bd6",
        "previous_commit": "d8ad8fa5b2734eeb81821a66b253b130db2eefa3",
        "date": 1537177246,
        "releases": {
            "previous": "28fcf2dc96d72f543047ad1dcc291bfbe9539bd6",
            "next": "28fcf2dc96d72f543047ad1dcc291bfbe9539bd6"
        },
        "commit_message": "Enable complex wildcard patterns (#203)\n\n- match case insensitive by default\r\n- matches are now always allocation free",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "28fcf2dc96d72f543047ad1dcc291bfbe9539bd6": {
                "apm-agent-core/src/main/java/co/elastic/apm/matcher/WildcardMatcher.java": [
                    "public boolean co.elastic.apm.matcher.WildcardMatcher.matches(String s)",
                    "boolean co.elastic.apm.matcher.WildcardMatcher.matches(String firstPart, @Nullable String secondPart)",
                    "boolean co.elastic.apm.matcher.WildcardMatcher.matches(String s)",
                    "public static WildcardMatcher co.elastic.apm.matcher.WildcardMatcher.valueOf(final String wildcardString)",
                    "public boolean co.elastic.apm.matcher.WildcardMatcher.matches(String firstPart, @Nullable String secondPart)"
                ]
            },
            "d8ad8fa5b2734eeb81821a66b253b130db2eefa3": {
                "apm-agent-core/src/main/java/co/elastic/apm/matcher/WildcardMatcher.java": [
                    "public boolean co.elastic.apm.matcher.WildcardMatcher.matches(String s)",
                    "boolean co.elastic.apm.matcher.WildcardMatcher.matches(String firstPart, @Nullable String secondPart)",
                    "boolean co.elastic.apm.matcher.WildcardMatcher.matches(String s)",
                    "public static WildcardMatcher co.elastic.apm.matcher.WildcardMatcher.valueOf(final String wildcardString)",
                    "public boolean co.elastic.apm.matcher.WildcardMatcher.matches(String firstPart, @Nullable String secondPart)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "940e717ad9662d5009f6e6b6bd14f66c5bd896f0",
        "previous_commit": "32f5cf0557b7a157a4094f048f20a4761a314a82",
        "date": 1519943657,
        "releases": {
            "previous": "940e717ad9662d5009f6e6b6bd14f66c5bd896f0",
            "next": "940e717ad9662d5009f6e6b6bd14f66c5bd896f0"
        },
        "commit_message": "First draft of exception tracking\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "940e717ad9662d5009f6e6b6bd14f66c5bd896f0": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/stacktrace/StacktraceFactory.java": [
                    "public void fillStackTrace(List<Stacktrace> stacktrace, StackTraceElement[] stackTrace)",
                    "public void co.elastic.apm.impl.stacktrace.CurrentThreadStackTraceFactory.fillStackTrace(List<Stacktrace> stacktrace)",
                    "public void fillStackTrace(List<Stacktrace> stacktrace)",
                    "public void co.elastic.apm.impl.stacktrace.CurrentThreadStackTraceFactory.fillStackTrace(List<Stacktrace> stacktrace, StackTraceElement[] stackTrace)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.report.ApmServerReporter.resetState()"
                ]
            },
            "32f5cf0557b7a157a4094f048f20a4761a314a82": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/stacktrace/StacktraceFactory.java": [
                    "public void co.elastic.apm.impl.stacktrace.CurrentThreadStackTraceFactory.fillStackTrace(List<Stacktrace> stacktrace)",
                    "public void fillStackTrace(List<Stacktrace> stacktrace)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.report.ApmServerReporter.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e060ca730692db0af81d29c025a3535867c7681c",
        "previous_commit": "be3870b03e33e670edaaae35ba0f3584ff3984f2",
        "date": 1680705271,
        "releases": {
            "previous": "e060ca730692db0af81d29c025a3535867c7681c",
            "next": "e060ca730692db0af81d29c025a3535867c7681c"
        },
        "commit_message": "Send activation method for 8.7.1+ (#3095)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e060ca730692db0af81d29c025a3535867c7681c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public boolean co.elastic.apm.agent.report.ApmServerClient.supportsKeepingUnsampledTransaction()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeService(final Service service, final StringBuilder replaceBuilder, final JsonWriter jw, boolean supportsAgentActivationMethod)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMetadata(MetaData metaData, JsonWriter metadataJW, boolean supportsConfiguredAndDetectedHostname, boolean supportsAgentActivationMethod)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeAgent(final Agent agent, final StringBuilder replaceBuilder, final JsonWriter jw, boolean supportsAgentActivationMethod)",
                    "public synchronized void co.elastic.apm.agent.report.serialize.DslJsonSerializer.blockUntilReady()"
                ]
            },
            "be3870b03e33e670edaaae35ba0f3584ff3984f2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public boolean co.elastic.apm.agent.report.ApmServerClient.supportsKeepingUnsampledTransaction()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeAgent(final Agent agent, final StringBuilder replaceBuilder, final JsonWriter jw)",
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.blockUntilReady()",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMetadata(MetaData metaData, JsonWriter metadataJW, boolean supportsConfiguredAndDetectedHostname)",
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeService(final Service service, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "aa4dfd877816f0593601e5070b1bac218c48de69",
        "previous_commit": "ea2b539b7ca3d9061ab76cd7412eabe055a1cf83",
        "date": 1622043079,
        "releases": {
            "previous": "aa4dfd877816f0593601e5070b1bac218c48de69",
            "next": "aa4dfd877816f0593601e5070b1bac218c48de69"
        },
        "commit_message": "Avoid serializing metric-sets with no samples (#1826)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "aa4dfd877816f0593601e5070b1bac218c48de69": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistryReporter.java": [
                    "public void co.elastic.apm.agent.report.serialize.MetricRegistryReporter.report(Map<? extends Labels, MetricSet> metricSets)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "private static boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeTimers(Map<String, Timer> timers, boolean hasSamples, JsonWriter jw)",
                    "private static boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeGauges(Map<String, DoubleSupplier> gauges, JsonWriter jw)",
                    "private static boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeCounters(Map<String, AtomicLong> counters, boolean hasSamples, JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMetricsReporter.java": [
                    "public void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.run()"
                ]
            },
            "ea2b539b7ca3d9061ab76cd7412eabe055a1cf83": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistryReporter.java": [
                    "public void co.elastic.apm.agent.report.serialize.MetricRegistryReporter.report(Map<? extends Labels, MetricSet> metricSets)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "private static boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeTimers(Map<String, Timer> timers, boolean hasSamples, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeCounters(Map<String, AtomicLong> counters, boolean hasSamples, JsonWriter jw)",
                    "private static boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeGauges(Map<String, DoubleSupplier> gauges, JsonWriter jw)"
                ],
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMetricsReporter.java": [
                    "public void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.run()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1117166b2a7344a24d3af4b90e1dcbbc20e2e606",
        "previous_commit": "52fd6e8132496aea220c9bd9bc9f583bca19b3a5",
        "date": 1532417163,
        "releases": {
            "previous": "1117166b2a7344a24d3af4b90e1dcbbc20e2e606",
            "next": "1117166b2a7344a24d3af4b90e1dcbbc20e2e606"
        },
        "commit_message": "Refactor HelperClassManager\n\n* Make it an interface\n* Add an implementation which assumes only one classloader\n  * This is good enough for the Servlet and JDBC APIs\n  * It's less complex\n  * It makes it easier for the JIT to do inlining\n* For helper classes referring to framework or library classes,\n  we'll need to add a different implementation which also takes care\n  to not leak any classloaders when un-deploying a web application\n  * Needs to weakly/softly reference the classloaders and\n    helper class implementations\n  * As the helper classes could be collected, this approach needs to\n    re-create the classes which can cause latency\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1117166b2a7344a24d3af4b90e1dcbbc20e2e606": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmInstrumentation.java": [
                    "static void co.elastic.apm.bci.ElasticApmInstrumentation.staticInit(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public static Span co.elastic.apm.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/StatementInstrumentation.java": [
                    "public void co.elastic.apm.jdbc.StatementInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/AsyncInstrumentation.java": [
                    "private static void co.elastic.apm.servlet.AsyncInstrumentation.onExitStartAsync(@Advice.Return AsyncContext asyncContext)",
                    "public void co.elastic.apm.servlet.AsyncInstrumentation.init(ElasticApmTracer tracer)"
                ]
            },
            "52fd6e8132496aea220c9bd9bc9f583bca19b3a5": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmInstrumentation.java": [
                    "static void co.elastic.apm.bci.ElasticApmInstrumentation.staticInit(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public static Span co.elastic.apm.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/StatementInstrumentation.java": [
                    "public void co.elastic.apm.jdbc.StatementInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/AsyncInstrumentation.java": [
                    "private static void co.elastic.apm.servlet.AsyncInstrumentation.onExitStartAsync(@Advice.Return AsyncContext asyncContext)",
                    "public void co.elastic.apm.servlet.AsyncInstrumentation.init(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6e44c6f27a6b8b67b5f1bc31eb83b1e15c97ee41",
        "previous_commit": "a347511e5fd639472cfac8ff4569b4d346a6ee6d",
        "date": 1533129510,
        "releases": {
            "previous": "6e44c6f27a6b8b67b5f1bc31eb83b1e15c97ee41",
            "next": "6e44c6f27a6b8b67b5f1bc31eb83b1e15c97ee41"
        },
        "commit_message": "Fix bug in intake v2 when log level is DEBUG (#147)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6e44c6f27a6b8b67b5f1bc31eb83b1e15c97ee41": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "public void co.elastic.apm.report.serialize.DslJsonSerializer.serializeErrorNdJson(ErrorCapture error)",
                    "public void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransactionNdJson(Transaction transaction)",
                    "public void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanNdJson(Span span)",
                    "public void co.elastic.apm.report.serialize.DslJsonSerializer.setOutputStream(final OutputStream os)",
                    "public void co.elastic.apm.report.serialize.DslJsonSerializer.flush()"
                ]
            },
            "a347511e5fd639472cfac8ff4569b4d346a6ee6d": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "public void co.elastic.apm.report.serialize.DslJsonSerializer.serializeErrorNdJson(ErrorCapture error)",
                    "public void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransactionNdJson(Transaction transaction)",
                    "public void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanNdJson(Span span)",
                    "public void co.elastic.apm.report.serialize.DslJsonSerializer.setOutputStream(final OutputStream os)",
                    "public void co.elastic.apm.report.serialize.DslJsonSerializer.flush()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "01a1468d2edfbf6a13a2ad7837eb58cb847eab3f",
        "previous_commit": "1d4939441133d466957b8dc978ae74c086f511e3",
        "date": 1631519575,
        "releases": {
            "previous": "01a1468d2edfbf6a13a2ad7837eb58cb847eab3f",
            "next": "01a1468d2edfbf6a13a2ad7837eb58cb847eab3f"
        },
        "commit_message": "Replace WeakConcurrentMaps with SpanConcurrentHashMaps in gRPC plugin (#2081)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "01a1468d2edfbf6a13a2ad7837eb58cb847eab3f": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ChannelInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.grpc.ChannelInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ClientCallImplInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.grpc.ClientCallImplInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public Span co.elastic.apm.agent.grpc.GrpcHelper.enterClientListenerMethod(ClientCall.Listener<?> listener)",
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.onClientCallCreationExit(@Nullable ClientCall<?, ?> clientCall, @Nullable Span spanFromEntry)",
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.replaceClientCallRegistration(ClientCall<?, ?> placeholderClientCall, ClientCall<?, ?> realClientCall)"
                ]
            },
            "1d4939441133d466957b8dc978ae74c086f511e3": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ChannelInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.grpc.ChannelInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ClientCallImplInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.grpc.ClientCallImplInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public Span co.elastic.apm.agent.grpc.GrpcHelper.enterClientListenerMethod(ClientCall.Listener<?> listener)",
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.onClientCallCreationExit(@Nullable ClientCall<?, ?> clientCall, @Nullable Span spanFromEntry)",
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.replaceClientCallRegistration(ClientCall<?, ?> placeholderClientCall, ClientCall<?, ?> realClientCall)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d499e81b6268475471575cf620df3830a421db21",
        "previous_commit": "99b4a3c226ac4c923badd7e246fdeb4e6c6c32f4",
        "date": 1537264007,
        "releases": {
            "previous": "d499e81b6268475471575cf620df3830a421db21",
            "next": "d499e81b6268475471575cf620df3830a421db21"
        },
        "commit_message": "Add support for error.culprit (#206)\n\ncloses #192",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d499e81b6268475471575cf620df3830a421db21": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochTimestampMillis, @Nullable Throwable e, @Nullable AbstractSpan<?> active)",
                    "public ErrorCapture co.elastic.apm.impl.ElasticApmTracer.createInstance()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.recycle()",
                    "public void co.elastic.apm.impl.error.ErrorCapture.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)"
                ]
            },
            "99b4a3c226ac4c923badd7e246fdeb4e6c6c32f4": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochTimestampMillis, @Nullable Throwable e, @Nullable AbstractSpan<?> active)",
                    "public ErrorCapture co.elastic.apm.impl.ElasticApmTracer.createInstance()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.recycle()",
                    "public void co.elastic.apm.impl.error.ErrorCapture.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4f6fa704e8a7af913fe533806123e7b382c43225",
        "previous_commit": "e8464e5d3aa38802f25ad8489e607817a71e1671",
        "date": 1520557685,
        "releases": {
            "previous": "4f6fa704e8a7af913fe533806123e7b382c43225",
            "next": "4f6fa704e8a7af913fe533806123e7b382c43225"
        },
        "commit_message": "Drop errors if queue is full\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4f6fa704e8a7af913fe533806123e7b382c43225": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerReporter.java": [
                    "public Void co.elastic.apm.report.ApmServerReporter.get()",
                    "public Future<Void> co.elastic.apm.report.ApmServerReporter.flush()",
                    "public void co.elastic.apm.report.ApmServerReporter.report(ErrorCapture error)",
                    "public void co.elastic.apm.report.ApmServerReporter.report(Transaction transaction)",
                    "public Void co.elastic.apm.report.ApmServerReporter.get(long timeout, TimeUnit unit)"
                ]
            },
            "e8464e5d3aa38802f25ad8489e607817a71e1671": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerReporter.java": [
                    "public Void co.elastic.apm.report.ApmServerReporter.get()",
                    "public Future<Void> co.elastic.apm.report.ApmServerReporter.flush()",
                    "public void co.elastic.apm.report.ApmServerReporter.report(ErrorCapture error)",
                    "public void co.elastic.apm.report.ApmServerReporter.report(Transaction transaction)",
                    "public Void co.elastic.apm.report.ApmServerReporter.get(long timeout, TimeUnit unit)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4ecd8700f1830dc68e6c223555d4bb7b4a0cf24f",
        "previous_commit": "6ee1102d86a980f515aa4bac727ab5b71cef61a1",
        "date": 1659341606,
        "releases": {
            "previous": "4ecd8700f1830dc68e6c223555d4bb7b4a0cf24f",
            "next": "4ecd8700f1830dc68e6c223555d4bb7b4a0cf24f"
        },
        "commit_message": "Simplify `ExecutorUtils.isAgentExecutor()` (#2729)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4ecd8700f1830dc68e6c223555d4bb7b4a0cf24f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public static boolean co.elastic.apm.agent.util.ExecutorUtils.isAgentExecutor(Executor executor)",
                    "public static ThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadDaemonPool(final String threadPurpose, int queueCapacity)",
                    "public static void co.elastic.apm.agent.util.ExecutorUtils.shutdownAndWaitTermination(ExecutorService executor, long timeout, TimeUnit unit)",
                    "public static ThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createThreadDaemonPool(final String threadPurpose, int poolSize, int queueCapacity)",
                    "public static ScheduledThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadSchedulingDaemonPool(final String threadPurpose)"
                ]
            },
            "6ee1102d86a980f515aa4bac727ab5b71cef61a1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public static boolean co.elastic.apm.agent.util.ExecutorUtils.isAgentExecutor(Executor executor)",
                    "public static ThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadDaemonPool(final String threadPurpose, int queueCapacity)",
                    "public static void co.elastic.apm.agent.util.ExecutorUtils.shutdownAndWaitTermination(ExecutorService executor, long timeout, TimeUnit unit)",
                    "public static ThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createThreadDaemonPool(final String threadPurpose, int poolSize, int queueCapacity)",
                    "public static ScheduledThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadSchedulingDaemonPool(final String threadPurpose)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3b22aada9ac2d7bee8beb028ce9fbdd822b5b2d6",
        "previous_commit": "3c4a753619c4bb9ec0b2f98bd0a5da3eedeb1f8b",
        "date": 1710345685,
        "releases": {
            "previous": "3b22aada9ac2d7bee8beb028ce9fbdd822b5b2d6",
            "next": "3b22aada9ac2d7bee8beb028ce9fbdd822b5b2d6"
        },
        "commit_message": "added support to Elastic Load Balancer triggers (#3411)\n\n\r\n\r\n---------\r\n\r\nCo-authored-by: Sylvain Juge <763082+SylvainJuge@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3b22aada9ac2d7bee8beb028ce9fbdd822b5b2d6": {
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV1TransactionHelper.java": [
                    "protected void co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.setTransactionTriggerData(Transaction<?> transaction, APIGatewayProxyRequestEvent apiGatewayRequest)",
                    "protected Transaction<?> co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.doStartTransaction(APIGatewayProxyRequestEvent apiGatewayEvent, Context lambdaContext)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV2TransactionHelper.java": [
                    "protected Transaction<?> co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.doStartTransaction(APIGatewayV2HTTPEvent apiGatewayEvent, Context lambdaContext)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/AWSEventsHelper.java": [
                    "public static void co.elastic.apm.agent.awslambda.helper.AWSEventsHelper.finalizeTransaction(Transaction<?> transaction, Object output, @Nullable Throwable thrown)",
                    "public static Transaction<?> co.elastic.apm.agent.awslambda.helper.AWSEventsHelper.startTransaction(Object input, Context lambdaContext)"
                ]
            },
            "3c4a753619c4bb9ec0b2f98bd0a5da3eedeb1f8b": {
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV1TransactionHelper.java": [
                    "protected void co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.setTransactionTriggerData(Transaction<?> transaction, APIGatewayProxyRequestEvent apiGatewayRequest)",
                    "protected Transaction<?> co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV1TransactionHelper.doStartTransaction(APIGatewayProxyRequestEvent apiGatewayEvent, Context lambdaContext)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV2TransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.doStartTransaction(APIGatewayV2HTTPEvent apiGatewayEvent, Context lambdaContext)"
                ],
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/AWSEventsHelper.java": [
                    "public static void co.elastic.apm.agent.awslambda.helper.AWSEventsHelper.finalizeTransaction(Transaction<?> transaction, Object output, @Nullable Throwable thrown)",
                    "public static Transaction<?> co.elastic.apm.agent.awslambda.helper.AWSEventsHelper.startTransaction(Object input, Context lambdaContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "379519e288c037b158ed1850a7d10f19502d06f8",
        "previous_commit": "732177a8ce6a4d256c41ecf8e5351daae618a0e2",
        "date": 1599103228,
        "releases": {
            "previous": "379519e288c037b158ed1850a7d10f19502d06f8",
            "next": "379519e288c037b158ed1850a7d10f19502d06f8"
        },
        "commit_message": "Update docs links and add SSL debug info (#1378)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "379519e288c037b158ed1850a7d10f19502d06f8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ssl/TLSFallbackSSLSocket.java": [
                    "public void co.elastic.apm.agent.report.ssl.TLSFallbackSSLSocket.connect(SocketAddress endpoint)",
                    "public void co.elastic.apm.agent.report.ssl.TLSFallbackSSLSocket.startHandshake()",
                    "public void co.elastic.apm.agent.report.ssl.TLSFallbackSSLSocket.bind(SocketAddress bindpoint)",
                    "public void co.elastic.apm.agent.report.ssl.TLSFallbackSSLSocket.connect(SocketAddress endpoint, int timeout)"
                ]
            },
            "732177a8ce6a4d256c41ecf8e5351daae618a0e2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ssl/TLSFallbackSSLSocket.java": [
                    "public void co.elastic.apm.agent.report.ssl.TLSFallbackSSLSocket.connect(SocketAddress endpoint)",
                    "public void co.elastic.apm.agent.report.ssl.TLSFallbackSSLSocket.startHandshake()",
                    "public void co.elastic.apm.agent.report.ssl.TLSFallbackSSLSocket.bind(SocketAddress bindpoint)",
                    "public void co.elastic.apm.agent.report.ssl.TLSFallbackSSLSocket.connect(SocketAddress endpoint, int timeout)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "25b7db4cba94277fca7c7cf5d6df263b8207c8ee",
        "previous_commit": "b5a293dd082b6b40dc36a4bbd3f1d7851124c982",
        "date": 1533039907,
        "releases": {
            "previous": "25b7db4cba94277fca7c7cf5d6df263b8207c8ee",
            "next": "25b7db4cba94277fca7c7cf5d6df263b8207c8ee"
        },
        "commit_message": "Another try to fix the intake v2 tests (#143)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "25b7db4cba94277fca7c7cf5d6df263b8207c8ee": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "private HttpURLConnection co.elastic.apm.report.IntakeV2ReportingEventHandler.startRequest()",
                    "public boolean co.elastic.apm.report.IntakeV2ReportingEventHandler.cancel()",
                    "private boolean co.elastic.apm.report.IntakeV2ReportingEventHandler.shouldFlush()",
                    "public void co.elastic.apm.report.IntakeV2ReportingEventHandler.run()"
                ]
            },
            "b5a293dd082b6b40dc36a4bbd3f1d7851124c982": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "private HttpURLConnection co.elastic.apm.report.IntakeV2ReportingEventHandler.startRequest()",
                    "public boolean co.elastic.apm.report.IntakeV2ReportingEventHandler.cancel()",
                    "private boolean co.elastic.apm.report.IntakeV2ReportingEventHandler.shouldFlush()",
                    "public void co.elastic.apm.report.IntakeV2ReportingEventHandler.run()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "125702d26805fc1dcd2ba2a59235bc74e85343b8",
        "previous_commit": "38c1c9b74ac35506ea3fee0770fe4636ed85c654",
        "date": 1618849146,
        "releases": {
            "previous": "125702d26805fc1dcd2ba2a59235bc74e85343b8",
            "next": "125702d26805fc1dcd2ba2a59235bc74e85343b8"
        },
        "commit_message": "Added support for setting a user's domain (#1756)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "125702d26805fc1dcd2ba2a59235bc74e85343b8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/User.java": [
                    "public void co.elastic.apm.agent.impl.context.User.resetState()",
                    "public void co.elastic.apm.agent.impl.context.User.copyFrom(User other)",
                    "public boolean co.elastic.apm.agent.impl.context.User.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.setUser(String id, String email, String username, String domain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeUser(final User user)"
                ]
            },
            "38c1c9b74ac35506ea3fee0770fe4636ed85c654": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/User.java": [
                    "public void co.elastic.apm.agent.impl.context.User.resetState()",
                    "public void co.elastic.apm.agent.impl.context.User.copyFrom(User other)",
                    "public boolean co.elastic.apm.agent.impl.context.User.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.setUser(String id, String email, String username)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeUser(final User user)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "516f8fb1f8a21e85f38c0333d033011a025f8ed3",
        "previous_commit": "1c23329725ebf6b4c37f49caa98e122b04eaca3c",
        "date": 1579086552,
        "releases": {
            "previous": "516f8fb1f8a21e85f38c0333d033011a025f8ed3",
            "next": "516f8fb1f8a21e85f38c0333d033011a025f8ed3"
        },
        "commit_message": "Issue 982 removed topicName field from Message (#993)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "516f8fb1f8a21e85f38c0333d033011a025f8ed3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Message.java": [
                    "public boolean co.elastic.apm.agent.impl.context.Message.hasContent()",
                    "public void co.elastic.apm.agent.impl.context.Message.resetState()",
                    "public void co.elastic.apm.agent.impl.context.Message.copyFrom(Message other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMessageContext(final Message message)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public void co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.addDestinationDetails(@Nullable Message message, Destination destination, String destinationName, AbstractSpan span)"
                ]
            },
            "1c23329725ebf6b4c37f49caa98e122b04eaca3c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Message.java": [
                    "public boolean co.elastic.apm.agent.impl.context.Message.hasContent()",
                    "public void co.elastic.apm.agent.impl.context.Message.resetState()",
                    "public void co.elastic.apm.agent.impl.context.Message.copyFrom(Message other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMessageContext(final Message message)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public void co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.addDestinationDetails(@Nullable Message message, Destination destination, String destinationName, AbstractSpan span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6f6f609401f59025e195f174a7332569379355e9",
        "previous_commit": "32a3642af47721442873d00c1cbd3b12553f82bc",
        "date": 1541343174,
        "releases": {
            "previous": "6f6f609401f59025e195f174a7332569379355e9",
            "next": "6f6f609401f59025e195f174a7332569379355e9"
        },
        "commit_message": "Make ES query recording allocation free (#283)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6f6f609401f59025e195f174a7332569379355e9": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Db.java": [
                    "public void co.elastic.apm.impl.transaction.Db.resetState()",
                    "public boolean co.elastic.apm.impl.transaction.Db.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/objectpool/impl/AbstractObjectPool.java": [
                    "public T co.elastic.apm.objectpool.impl.AbstractObjectPool<T>.createInstance()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/objectpool/impl/QueueBasedObjectPool.java": [
                    "public void co.elastic.apm.objectpool.impl.QueueBasedObjectPool<T>.recycle(T obj)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeDbContext(final Db db)"
                ]
            },
            "32a3642af47721442873d00c1cbd3b12553f82bc": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Db.java": [
                    "public void co.elastic.apm.impl.transaction.Db.resetState()",
                    "public boolean co.elastic.apm.impl.transaction.Db.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/objectpool/impl/AbstractObjectPool.java": [],
                "apm-agent-core/src/main/java/co/elastic/apm/objectpool/impl/QueueBasedObjectPool.java": [],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeDbContext(final Db db)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3cb729ca42e8c3407be34337a4642634f5b6cbfa",
        "previous_commit": "0317d58c1849aefc3e45f4d18565a810803e7fde",
        "date": 1556529942,
        "releases": {
            "previous": "3cb729ca42e8c3407be34337a4642634f5b6cbfa",
            "next": "3cb729ca42e8c3407be34337a4642634f5b6cbfa"
        },
        "commit_message": "Discard fast methods coming from trace_methods (#577)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3cb729ca42e8c3407be34337a4642634f5b6cbfa": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static Iterable<ElasticApmInstrumentation> co.elastic.apm.agent.bci.ElasticApmAgent.loadInstrumentations(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(TraceContextHolder<?> holder)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ]
            },
            "0317d58c1849aefc3e45f4d18565a810803e7fde": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static Iterable<ElasticApmInstrumentation> co.elastic.apm.agent.bci.ElasticApmAgent.loadInstrumentations(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(TraceContextHolder<?> holder)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.copyFrom(TraceContext other)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ae3c602115183b8dc8be5ae8e27910ad4955d9df",
        "previous_commit": "e5ffe274805fb5b14d88c1fd1e338f019dfd6f5e",
        "date": 1619625842,
        "releases": {
            "previous": "ae3c602115183b8dc8be5ae8e27910ad4955d9df",
            "next": "ae3c602115183b8dc8be5ae8e27910ad4955d9df"
        },
        "commit_message": "Remove gRPC Helper class from Instrumentation (#1792)\n\n* remove helper access from instrumentation class\r\n* simply update cassandra java driver",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ae3c602115183b8dc8be5ae8e27910ad4955d9df": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ChannelInstrumentation.java": [
                    "public static void co.elastic.apm.agent.grpc.ChannelInstrumentation.onExit(@Advice.Return @Nullable ClientCall<?, ?> clientCall, @Advice.Enter @Nullable Object span)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ClientCallImplInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.grpc.ClientCallImplInstrumentation.onEnter(@Advice.This ClientCall.Listener<?> listener)",
                    "public static void co.elastic.apm.agent.grpc.ClientCallImplInstrumentation.onExit(@Advice.This ClientCall.Listener<?> listener, @Advice.Thrown @Nullable Throwable thrown, @Advice.Enter @Nullable Object span)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallListenerInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.onEnter(@Advice.This ServerCall.Listener<?> listener)",
                    "public static void co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.onExit(@Advice.Thrown @Nullable Throwable thrown, @Advice.This ServerCall.Listener<?> listener, @Advice.Enter @Nullable Object transaction)"
                ]
            },
            "e5ffe274805fb5b14d88c1fd1e338f019dfd6f5e": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ChannelInstrumentation.java": [
                    "public static void co.elastic.apm.agent.grpc.ChannelInstrumentation.onExit(@Advice.Return @Nullable ClientCall<?, ?> clientCall, @Advice.Enter @Nullable Object span)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ClientCallImplInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.grpc.ClientCallImplInstrumentation.onEnter(@Advice.This ClientCall.Listener<?> listener)",
                    "public static void co.elastic.apm.agent.grpc.ClientCallImplInstrumentation.onExit(@Advice.This ClientCall.Listener<?> listener, @Advice.Thrown @Nullable Throwable thrown, @Advice.Enter @Nullable Object span)"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ServerCallListenerInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.onEnter(@Advice.This ServerCall.Listener<?> listener)",
                    "public static void co.elastic.apm.agent.grpc.ServerCallListenerInstrumentation.onExit(@Advice.Thrown @Nullable Throwable thrown, @Advice.This ServerCall.Listener<?> listener, @Advice.Enter @Nullable Object transaction)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "48d8d81fdbfb65dbb1df871f30badabec5a921b1",
        "previous_commit": "76dbecdbe41df578fd8aa9278b9af8dd5b9a4429",
        "date": 1631007051,
        "releases": {
            "previous": "48d8d81fdbfb65dbb1df871f30badabec5a921b1",
            "next": "48d8d81fdbfb65dbb1df871f30badabec5a921b1"
        },
        "commit_message": "Require separate advice class (#2101)\n\nAvoids class loading issues when the advice refers to library classes.\r\n\r\nThis allows to validate the advice class when the instrumentations get initialized\r\nas opposed to on indy bootstrap.\r\nThat caches more errors and fails faster.",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "48d8d81fdbfb65dbb1df871f30badabec5a921b1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/ElasticApmInstrumentation.java": [
                    "public String co.elastic.apm.agent.sdk.ElasticApmInstrumentation.getAdviceClassName()"
                ],
                "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.asynchttpclient.AbstractAsyncHttpClientInstrumentation.onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler)"
                ],
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/AlibabaResponseCallbackInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.dubbo.AlibabaResponseCallbackInstrumentation.onEnter(@Advice.This ResponseCallback thiz)"
                ]
            },
            "76dbecdbe41df578fd8aa9278b9af8dd5b9a4429": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/ElasticApmInstrumentation.java": [
                    "public String co.elastic.apm.agent.sdk.ElasticApmInstrumentation.getAdviceClassName()"
                ],
                "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.asynchttpclient.AbstractAsyncHttpClientInstrumentation.onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler)"
                ],
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/AlibabaResponseCallbackInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.dubbo.AlibabaResponseCallbackInstrumentation.onEnter(@Advice.This ResponseCallback thiz)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b36f20aad336f5aa6e63312730c3e3c444fc40bd",
        "previous_commit": "916821ceabef82396e236d7f8c00be74b3973ade",
        "date": 1563357990,
        "releases": {
            "previous": "b36f20aad336f5aa6e63312730c3e3c444fc40bd",
            "next": "b36f20aad336f5aa6e63312730c3e3c444fc40bd"
        },
        "commit_message": "Supporting SpringMapMessageListener (#714)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b36f20aad336f5aa6e63312730c3e3c444fc40bd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(String traceParentHeader)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsMessageConsumerInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.jms.JmsMessageConsumerInstrumentation.getTypeMatcherPreFilter()"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsMessageListenerInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jms.JmsMessageListenerInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jms.JmsMessageListenerInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsMessageProducerInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.jms.JmsMessageProducerInstrumentation.getTypeMatcherPreFilter()"
                ]
            },
            "916821ceabef82396e236d7f8c00be74b3973ade": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(String traceParentHeader)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsMessageConsumerInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.jms.JmsMessageConsumerInstrumentation.getTypeMatcherPreFilter()"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsMessageListenerInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jms.JmsMessageListenerInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jms.JmsMessageListenerInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsMessageProducerInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.jms.JmsMessageProducerInstrumentation.getTypeMatcherPreFilter()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0eac0af814b8686772c6d4e2212f4231524fa8ce",
        "previous_commit": "d2807457e0cdda27bb4529f1885fb7f9172c5448",
        "date": 1663228708,
        "releases": {
            "previous": "0eac0af814b8686772c6d4e2212f4231524fa8ce",
            "next": "0eac0af814b8686772c6d4e2212f4231524fa8ce"
        },
        "commit_message": "Limit activation stack depth (#2783)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0eac0af814b8686772c6d4e2212f4231524fa8ce": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <T extends ElasticContext<T>> T co.elastic.apm.agent.impl.ElasticApmTracer.wrapActiveContextIfRequired(Class<T> wrapperClass, Callable<T> wrapFunction)",
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()",
                    "public ElasticContext<?> co.elastic.apm.agent.impl.ElasticApmTracer.currentContext()",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(ElasticContext<?> context)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.activate(ElasticContext<?> context)"
                ]
            },
            "d2807457e0cdda27bb4529f1885fb7f9172c5448": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <T extends ElasticContext<T>> T co.elastic.apm.agent.impl.ElasticApmTracer.wrapActiveContextIfRequired(Class<T> wrapperClass, Callable<T> wrapFunction)",
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()",
                    "public ElasticContext<?> co.elastic.apm.agent.impl.ElasticApmTracer.currentContext()",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(ElasticContext<?> context)",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.activate(ElasticContext<?> context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "539ae13a4c7a326c6ad190f4e983362b3c85ce96",
        "previous_commit": "5fcd8a064e084a9d34eb697be913c27ab285e81f",
        "date": 1536237508,
        "releases": {
            "previous": "539ae13a4c7a326c6ad190f4e983362b3c85ce96",
            "next": "539ae13a4c7a326c6ad190f4e983362b3c85ce96"
        },
        "commit_message": "Name transactions based on servlet or url path (#191)\n\n* Add url_groups config\r\n* WildcardMatcher: allow wildcards in the middle of a string",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "539ae13a4c7a326c6ad190f4e983362b3c85ce96": {
                "apm-agent-core/src/main/java/co/elastic/apm/matcher/WildcardMatcher.java": [
                    "public static WildcardMatcher co.elastic.apm.matcher.WildcardMatcher.valueOf(final String wildcardString)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.fillRequestContext(Transaction transaction, @Nullable String userName, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr, StringBuffer requestURL)",
                    "private boolean co.elastic.apm.servlet.ServletTransactionHelper.isExcluded(String servletPath, String pathInfo, String requestURI, @Nullable String userAgentHeader)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/helper/ApmAsyncListener.java": [
                    "private void co.elastic.apm.servlet.helper.ApmAsyncListener.endTransaction(AsyncEvent event)"
                ],
                "apm-agent-plugins/apm-web-plugin/src/main/java/co/elastic/apm/web/SanitizingWebProcessor.java": [
                    "private boolean co.elastic.apm.web.SanitizingWebProcessor.isSensitive(String key)"
                ]
            },
            "5fcd8a064e084a9d34eb697be913c27ab285e81f": {
                "apm-agent-core/src/main/java/co/elastic/apm/matcher/WildcardMatcher.java": [
                    "public static WildcardMatcher co.elastic.apm.matcher.WildcardMatcher.valueOf(final String wildcardString)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.fillRequestContext(Transaction transaction, @Nullable String userName, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr, StringBuffer requestURL)",
                    "private boolean co.elastic.apm.servlet.ServletTransactionHelper.isExcluded(String servletPath, String pathInfo, String requestURI, @Nullable String userAgentHeader)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/helper/ApmAsyncListener.java": [
                    "private void co.elastic.apm.servlet.helper.ApmAsyncListener.endTransaction(AsyncEvent event)"
                ],
                "apm-agent-plugins/apm-web-plugin/src/main/java/co/elastic/apm/web/SanitizingWebProcessor.java": [
                    "private boolean co.elastic.apm.web.SanitizingWebProcessor.isSensitive(String key)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b61ba4a2610e52a5625bba934bdf4861af42604c",
        "previous_commit": "3336faf7223b132a48e9450d7ab23dd211511ffe",
        "date": 1585739387,
        "releases": {
            "previous": "b61ba4a2610e52a5625bba934bdf4861af42604c",
            "next": "b61ba4a2610e52a5625bba934bdf4861af42604c"
        },
        "commit_message": "Issue 846 add errorid to mdc (#1050)\n\n* added preventing the shade plugin from relocating org.slf4j.Logger to *.shaded.slf4j.Logger in error logging instrumentation\r\n\r\n* local\r\n\r\n* ErrorCapture implement TraceContextHolder.\r\n\r\n* feature added error id to mdc\r\n\r\n* added IT for mdc actionvation listener for error id capture\r\n\r\n* deleted jsf snapshot info\r\n\r\n* Update apm-agent-plugins/apm-log-correlation-plugin/src/test/java/co/elastic/apm/agent/mdc/MdcActivationListenerIT.java\r\n\r\nCo-Authored-By: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* Update apm-agent-plugins/apm-log-correlation-plugin/src/test/java/co/elastic/apm/agent/mdc/MdcActivationListenerIT.java\r\n\r\nCo-Authored-By: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* Update apm-agent-plugins/apm-log-correlation-plugin/src/test/java/co/elastic/apm/agent/mdc/MdcActivationListenerIT.java\r\n\r\nCo-Authored-By: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* fixed according to comments\r\n\r\n* fixed according to comments\r\n\r\n* fixed according to comments\r\n\r\n* fixed accordingto comments\r\n\r\n* fixed according to comments\r\n\r\n* Update apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java\r\n\r\nCo-Authored-By: eyalkoren <41850454+eyalkoren@users.noreply.github.com>\r\n\r\n* fixed according to comments\r\n\r\n* added info for asciidoc\r\n\r\n* generated configration.asciidoc\r\n\r\n* Fixing docs\r\n\r\nCo-authored-by: kananindzya <kananindzya@gmail.com>\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b61ba4a2610e52a5625bba934bdf4861af42604c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable TraceContextHolder<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/mdc/MdcActivationListener.java": [
                    "public void co.elastic.apm.agent.mdc.MdcActivationListener.afterDeactivate(TraceContextHolder<?> deactivatedContext)",
                    "public void co.elastic.apm.agent.mdc.MdcActivationListener.beforeActivate(TraceContextHolder<?> context)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/ProfilingActivationListener.java": [
                    "public void co.elastic.apm.agent.profiler.ProfilingActivationListener.afterDeactivate(TraceContextHolder<?> deactivatedContext)",
                    "public void co.elastic.apm.agent.profiler.ProfilingActivationListener.beforeActivate(TraceContextHolder<?> context)"
                ]
            },
            "3336faf7223b132a48e9450d7ab23dd211511ffe": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable TraceContextHolder<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/mdc/MdcActivationListener.java": [
                    "public void co.elastic.apm.agent.mdc.MdcActivationListener.afterDeactivate(TraceContextHolder<?> deactivatedContext)",
                    "public void co.elastic.apm.agent.mdc.MdcActivationListener.beforeActivate(TraceContextHolder<?> context)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/ProfilingActivationListener.java": [
                    "public void co.elastic.apm.agent.profiler.ProfilingActivationListener.afterDeactivate(TraceContextHolder<?> deactivatedContext)",
                    "public void co.elastic.apm.agent.profiler.ProfilingActivationListener.beforeActivate(TraceContextHolder<?> context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0185dc9631033fe367d0e9f9f8205c06838b42a2",
        "previous_commit": "49e962499c06724d14cde46167fcd86cb88ce561",
        "date": 1554717772,
        "releases": {
            "previous": "0185dc9631033fe367d0e9f9f8205c06838b42a2",
            "next": "0185dc9631033fe367d0e9f9f8205c06838b42a2"
        },
        "commit_message": "Adding support for Apache HTTP Async Client (#558)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0185dc9631033fe367d0e9f9f8205c06838b42a2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.es.restclient.ElasticsearchRestClientInstrumentationHelperImpl.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/http/client/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(TraceContextHolder<?> parent, String method, @Nullable String uri, String hostName)"
                ]
            },
            "49e962499c06724d14cde46167fcd86cb88ce561": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.es.restclient.ElasticsearchRestClientInstrumentationHelperImpl.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/http/client/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(TraceContextHolder<?> parent, String method, @Nullable String uri, String hostName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "78e30a7bcf7cbfc39cfe771e01b7ec0c3e8577bd",
        "previous_commit": "4ea8d19ea4827f1055d5aa17f244e2b08a33ddd2",
        "date": 1519460245,
        "releases": {
            "previous": "78e30a7bcf7cbfc39cfe771e01b7ec0c3e8577bd",
            "next": "78e30a7bcf7cbfc39cfe771e01b7ec0c3e8577bd"
        },
        "commit_message": "Remove StackWalkerStackTraceFactory\n\nIt's not faster and allocates more memory\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "78e30a7bcf7cbfc39cfe771e01b7ec0c3e8577bd": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/stacktrace/StacktraceFactory.java": [
                    "public boolean co.elastic.apm.impl.stacktrace.CurrentThreadStackTraceFactory.isAvailable()",
                    "public boolean isAvailable()",
                    "public void co.elastic.apm.impl.stacktrace.CurrentThreadStackTraceFactory.fillStackTrace(List<Stacktrace> stacktrace)",
                    "public void fillStackTrace(List<Stacktrace> stacktrace)"
                ]
            },
            "4ea8d19ea4827f1055d5aa17f244e2b08a33ddd2": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/stacktrace/StacktraceFactory.java": [
                    "public boolean isAvailable()",
                    "public boolean co.elastic.apm.impl.stacktrace.StackWalkerStackTraceFactory.isAvailable()",
                    "public boolean co.elastic.apm.impl.stacktrace.CurrentThreadStackTraceFactory.isAvailable()",
                    "public void co.elastic.apm.impl.stacktrace.StackWalkerStackTraceFactory.fillStackTrace(List<Stacktrace> stacktrace)",
                    "public void co.elastic.apm.impl.stacktrace.CurrentThreadStackTraceFactory.fillStackTrace(List<Stacktrace> stacktrace)",
                    "public void fillStackTrace(List<Stacktrace> stacktrace)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "adc9767d360ba0abdd375976ededff89b4ee758f",
        "previous_commit": "48d8d81fdbfb65dbb1df871f30badabec5a921b1",
        "date": 1631011657,
        "releases": {
            "previous": "adc9767d360ba0abdd375976ededff89b4ee758f",
            "next": "adc9767d360ba0abdd375976ededff89b4ee758f"
        },
        "commit_message": "LRU TypePoolCache (#2102)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "adc9767d360ba0abdd375976ededff89b4ee758f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.initAgentBuilder(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)",
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, final Logger logger, final AgentBuilder.DescriptionStrategy descriptionStrategy, final boolean premain, final boolean useTypePoolCache)",
                    "public static ClassLoader co.elastic.apm.agent.bci.ElasticApmAgent.getAgentClassLoader()"
                ]
            },
            "48d8d81fdbfb65dbb1df871f30badabec5a921b1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.initAgentBuilder(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)",
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, final Logger logger, final AgentBuilder.DescriptionStrategy descriptionStrategy, final boolean premain, final boolean useTypePoolCache)",
                    "public static ClassLoader co.elastic.apm.agent.bci.ElasticApmAgent.getAgentClassLoader()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "dfe033d029e3d75e47c2028f052f67db5d41fc10",
        "previous_commit": "77363b40824d87a2e2aca17dba880dbb2620be68",
        "date": 1675681237,
        "releases": {
            "previous": "dfe033d029e3d75e47c2028f052f67db5d41fc10",
            "next": "dfe033d029e3d75e47c2028f052f67db5d41fc10"
        },
        "commit_message": "Broadened catch clause when extracting es query body, fixed advice exception printing (#2993)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "dfe033d029e3d75e47c2028f052f67db5d41fc10": {
                "apm-agent-bootstrap/src/main/java/bootstrap/dispatcher/IndyBootstrapDispatcher.java": [
                    "public static CallSite bootstrap.dispatcher.IndyBootstrapDispatcher.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "private static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.internalBootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object[] args)",
                    "private static boolean co.elastic.apm.agent.bci.IndyBootstrap.addRequiredModuleOpens(Map<String, List<String>> requiredModuleOpens, ClassLoader targetClassLoader, ClassLoader pluginClassLoader)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ]
            },
            "77363b40824d87a2e2aca17dba880dbb2620be68": {
                "apm-agent-bootstrap/src/main/java/bootstrap/dispatcher/IndyBootstrapDispatcher.java": [
                    "public static CallSite bootstrap.dispatcher.IndyBootstrapDispatcher.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "private static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.internalBootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object[] args)",
                    "private static boolean co.elastic.apm.agent.bci.IndyBootstrap.addRequiredModuleOpens(Map<String, List<String>> requiredModuleOpens, ClassLoader targetClassLoader, ClassLoader pluginClassLoader)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9448f60455b00ebdf682e24bd5e9759b3e05e734",
        "previous_commit": "ef51f6fdd448df3edd40379fd2735d34ffab18ce",
        "date": 1557307019,
        "releases": {
            "previous": "9448f60455b00ebdf682e24bd5e9759b3e05e734",
            "next": "9448f60455b00ebdf682e24bd5e9759b3e05e734"
        },
        "commit_message": "Add support for custom context (#606)\n\ncloses #604",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9448f60455b00ebdf682e24bd5e9759b3e05e734": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeLongStringValue(String value, StringBuilder replaceBuilder, JsonWriter jw)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStringLabels(Iterator<? extends Map.Entry<String, String>> iterator, StringBuilder replaceBuilder, JsonWriter jw)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeContext(final TransactionContext context, TraceContext traceContext)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeLongStringValue(String value)",
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeLabels(AbstractContext context)"
                ]
            },
            "ef51f6fdd448df3edd40379fd2735d34ffab18ce": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeLabels(AbstractContext context)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStringLabels(Iterator<? extends Map.Entry<String, String>> iterator, StringBuilder replaceBuilder, JsonWriter jw)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeContext(final TransactionContext context, TraceContext traceContext)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeLongStringValue(String value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d48e1d6bacbc3a46efeb36608992ab3486b81d92",
        "previous_commit": "5ec144238b665c7f404143afdddd5ee94f5a6e7e",
        "date": 1644995940,
        "releases": {
            "previous": "d48e1d6bacbc3a46efeb36608992ab3486b81d92",
            "next": "d48e1d6bacbc3a46efeb36608992ab3486b81d92"
        },
        "commit_message": "Added support for setting service name and version for a transaction via the public api (#2451)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d48e1d6bacbc3a46efeb36608992ab3486b81d92": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> parent, @Nullable ClassLoader initiatingClassLoader)",
                    "private void co.elastic.apm.agent.impl.ElasticApmTracer.afterTransactionStart(@Nullable ClassLoader initiatingClassLoader, Transaction transaction)"
                ],
                "apm-agent-plugins/apm-ecs-logging-plugin/src/main/java/co/elastic/apm/agent/ecs_logging/Log4j2ServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.ecs_logging.Log4j2ServiceNameInstrumentation.onEnter(@Advice.This EcsLayout.Builder builder)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletServiceNameHelper.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.servlet.ServletServiceNameHelper.determineServiceName(ServletContextAdapter<ServletContext> adapter, @Nullable ServletContext servletContext, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            },
            "5ec144238b665c7f404143afdddd5ee94f5a6e7e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> parent, @Nullable ClassLoader initiatingClassLoader)",
                    "private void co.elastic.apm.agent.impl.ElasticApmTracer.afterTransactionStart(@Nullable ClassLoader initiatingClassLoader, Transaction transaction)"
                ],
                "apm-agent-plugins/apm-ecs-logging-plugin/src/main/java/co/elastic/apm/agent/ecs_logging/Log4j2ServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.ecs_logging.Log4j2ServiceNameInstrumentation.onEnter(@Advice.This EcsLayout.Builder builder)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletServiceNameHelper.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.servlet.ServletServiceNameHelper.determineServiceName(ServletContextAdapter<ServletContext> adapter, @Nullable ServletContext servletContext, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4ab2b6f358eb040df407d830831d9d03a07eef67",
        "previous_commit": "337e5ff3653ddd280fc77e20f6e28df329d70fa7",
        "date": 1556100734,
        "releases": {
            "previous": "4ab2b6f358eb040df407d830831d9d03a07eef67",
            "next": "4ab2b6f358eb040df407d830831d9d03a07eef67"
        },
        "commit_message": "Fixing some async mechanisms lifecycle issues (#605)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4ab2b6f358eb040df407d830831d9d03a07eef67": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(TraceContextHolder<?> holder)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/async/SpanInScopeCallableWrapper.java": [
                    "public V co.elastic.apm.agent.impl.async.SpanInScopeCallableWrapper<V>.call()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/async/SpanInScopeRunnableWrapper.java": [
                    "public void co.elastic.apm.agent.impl.async.SpanInScopeRunnableWrapper.run()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader, boolean deactivate)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ApmAsyncListener.java": [
                    "private void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.endTransaction(AsyncEvent event)"
                ]
            },
            "337e5ff3653ddd280fc77e20f6e28df329d70fa7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(TraceContextHolder<?> holder)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/async/SpanInScopeCallableWrapper.java": [
                    "public V co.elastic.apm.agent.impl.async.SpanInScopeCallableWrapper<V>.call()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/async/SpanInScopeRunnableWrapper.java": [
                    "public void co.elastic.apm.agent.impl.async.SpanInScopeRunnableWrapper.run()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ApmAsyncListener.java": [
                    "private void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.endTransaction(AsyncEvent event)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3e4005dff3c41326dd180bc181dd6821c3c3ff51",
        "previous_commit": "2d9f8cd3510963a90bd12bc06a1ceac886bbf5fe",
        "date": 1683302795,
        "releases": {
            "previous": "3e4005dff3c41326dd180bc181dd6821c3c3ff51",
            "next": "3e4005dff3c41326dd180bc181dd6821c3c3ff51"
        },
        "commit_message": "Implement partial transactions for AWS Lambda (#3134)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3e4005dff3c41326dd180bc181dd6821c3c3ff51": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServerlessConfiguration.java": [
                    "public boolean co.elastic.apm.agent.configuration.ServerlessConfiguration.runsOnAwsLambda()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public boolean co.elastic.apm.agent.report.ApmServerClient.supportsConfiguredAndDetectedHostname()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.agent.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, ApmServerClient apmServerClient, DslJsonSerializer payloadSerializer, ReporterMonitor monitor, ObjectPoolFactory poolFactory)"
                ]
            },
            "2d9f8cd3510963a90bd12bc06a1ceac886bbf5fe": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServerlessConfiguration.java": [
                    "public boolean co.elastic.apm.agent.configuration.ServerlessConfiguration.runsOnAwsLambda()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public boolean co.elastic.apm.agent.report.ApmServerClient.supportsConfiguredAndDetectedHostname()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.agent.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, ApmServerClient apmServerClient, DslJsonSerializer payloadSerializer, ReporterMonitor monitor)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5fcd8a064e084a9d34eb697be913c27ab285e81f",
        "previous_commit": "e135e99dd01b95ed3524062443b8f2aee20154bb",
        "date": 1535976837,
        "releases": {
            "previous": "5fcd8a064e084a9d34eb697be913c27ab285e81f",
            "next": "5fcd8a064e084a9d34eb697be913c27ab285e81f"
        },
        "commit_message": "Implement exponential backoff for intake v2 (#181)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5fcd8a064e084a9d34eb697be913c27ab285e81f": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.report.IntakeV2ReportingEventHandler.onFlushSuccess(InputStream inputStream)",
                    "void co.elastic.apm.report.IntakeV2ReportingEventHandler.flush()",
                    "public void co.elastic.apm.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "private HttpURLConnection co.elastic.apm.report.IntakeV2ReportingEventHandler.startRequest()",
                    "private void co.elastic.apm.report.IntakeV2ReportingEventHandler.onFlushError(int responseCode, InputStream inputStream, @Nullable IOException e)"
                ]
            },
            "e135e99dd01b95ed3524062443b8f2aee20154bb": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.report.IntakeV2ReportingEventHandler.onFlushSuccess(InputStream inputStream)",
                    "void co.elastic.apm.report.IntakeV2ReportingEventHandler.flush()",
                    "public void co.elastic.apm.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "private HttpURLConnection co.elastic.apm.report.IntakeV2ReportingEventHandler.startRequest()",
                    "private void co.elastic.apm.report.IntakeV2ReportingEventHandler.onFlushError(int responseCode, InputStream inputStream, @Nullable IOException e)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b491e8346cafaafcd715bb6a76f08f5e689e9e84",
        "previous_commit": "fb63f78e28e152ab745cd9c49630e3bef7a2fff7",
        "date": 1536654219,
        "releases": {
            "previous": "b491e8346cafaafcd715bb6a76f08f5e689e9e84",
            "next": "b491e8346cafaafcd715bb6a76f08f5e689e9e84"
        },
        "commit_message": "Integration into SLF4J's MDC for trace-log-correlation (#175)\n\n\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b491e8346cafaafcd715bb6a76f08f5e689e9e84": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/SpanId.java": [
                    "public void co.elastic.apm.impl.transaction.SpanId.resetState()",
                    "public String co.elastic.apm.impl.transaction.SpanId.toString()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceId.java": [
                    "public void co.elastic.apm.impl.transaction.TraceId.resetState()",
                    "public String co.elastic.apm.impl.transaction.TraceId.toString()"
                ]
            },
            "fb63f78e28e152ab745cd9c49630e3bef7a2fff7": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/SpanId.java": [
                    "public void co.elastic.apm.impl.transaction.SpanId.resetState()",
                    "public String co.elastic.apm.impl.transaction.SpanId.toString()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceId.java": [
                    "public void co.elastic.apm.impl.transaction.TraceId.resetState()",
                    "public String co.elastic.apm.impl.transaction.TraceId.toString()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "006f7ee50675449e04c60e36ab805a152b3a009a",
        "previous_commit": "a73e8f21c1cff8121ea2a3389106b9b9ff4e2ab0",
        "date": 1536652188,
        "releases": {
            "previous": "006f7ee50675449e04c60e36ab805a152b3a009a",
            "next": "006f7ee50675449e04c60e36ab805a152b3a009a"
        },
        "commit_message": "Client-side load balancing (#190)\n\n\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "006f7ee50675449e04c60e36ab805a152b3a009a": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHealthChecker.java": [
                    "public void co.elastic.apm.report.ApmServerHealthChecker.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.report.IntakeV2ReportingEventHandler.onFlushError(Integer responseCode, InputStream inputStream, @Nullable IOException e)",
                    "private HttpURLConnection co.elastic.apm.report.IntakeV2ReportingEventHandler.startRequest()",
                    "public void co.elastic.apm.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            },
            "a73e8f21c1cff8121ea2a3389106b9b9ff4e2ab0": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHealthChecker.java": [
                    "public void co.elastic.apm.report.ApmServerHealthChecker.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.report.IntakeV2ReportingEventHandler.onFlushError(int responseCode, InputStream inputStream, @Nullable IOException e)",
                    "private HttpURLConnection co.elastic.apm.report.IntakeV2ReportingEventHandler.startRequest()",
                    "public void co.elastic.apm.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a739286a2fac38678178ea78af97fb73e365fee5",
        "previous_commit": "7a34e7b251d59d5d577564ae58ec687ef942cc79",
        "date": 1590409660,
        "releases": {
            "previous": "a739286a2fac38678178ea78af97fb73e365fee5",
            "next": "a739286a2fac38678178ea78af97fb73e365fee5"
        },
        "commit_message": "Fix IndexOutOfBoundsException when handling deactivation events (#1200)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a739286a2fac38678178ea78af97fb73e365fee5": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "public void co.elastic.apm.agent.profiler.CallTree.addStackTrace(ElasticApmTracer tracer, List<StackFrame> stackTrace, long nanoTime, ObjectPool<CallTree> callTreePool, long minDurationNs)",
                    "protected void co.elastic.apm.agent.profiler.CallTree.end(ObjectPool<CallTree> pool, long minDurationNs, Root root)",
                    "public void co.elastic.apm.agent.profiler.CallTree.recursiveGiveChildIdsTo(CallTree giveTo)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processActivationEventsUpTo(long timestamp, ActivationEvent event, long eof)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processTraces()"
                ]
            },
            "7a34e7b251d59d5d577564ae58ec687ef942cc79": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "public void co.elastic.apm.agent.profiler.CallTree.addStackTrace(ElasticApmTracer tracer, List<StackFrame> stackTrace, long nanoTime, ObjectPool<CallTree> callTreePool, long minDurationNs)",
                    "protected void co.elastic.apm.agent.profiler.CallTree.end(ObjectPool<CallTree> pool, long minDurationNs, Root root)",
                    "public void co.elastic.apm.agent.profiler.CallTree.recursiveGiveChildIdsTo(CallTree giveTo)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processActivationEventsUpTo(long timestamp, ActivationEvent event, long eof)",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processTraces()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "275ee58a106ea7e25eb270899c46acde695a6cba",
        "previous_commit": "559ab5b38d396b5179ff3a3272f7951d60b9cbb0",
        "date": 1526625602,
        "releases": {
            "previous": "275ee58a106ea7e25eb270899c46acde695a6cba",
            "next": "275ee58a106ea7e25eb270899c46acde695a6cba"
        },
        "commit_message": "Log start and stop of spans and transactions\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "275ee58a106ea7e25eb270899c46acde695a6cba": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span, boolean releaseActiveSpan)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.endTransaction(Transaction transaction, boolean releaseActiveTransaction)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startManualTransaction(Sampler sampler, long nanoTime)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startManualSpan(@Nullable Transaction transaction, @Nullable Span parentSpan, long nanoTime)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.startNoop(ElasticApmTracer tracer)"
                ]
            },
            "559ab5b38d396b5179ff3a3272f7951d60b9cbb0": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span, boolean releaseActiveSpan)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.endTransaction(Transaction transaction, boolean releaseActiveTransaction)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startManualTransaction(Sampler sampler, long nanoTime)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startManualSpan(@Nullable Transaction transaction, @Nullable Span parentSpan, long nanoTime)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.startNoop(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "61b89213e507e12df1e89a88c0092a3940749c39",
        "previous_commit": "61153887b4440a0decfa5c51223623c4a48d4aec",
        "date": 1533802376,
        "releases": {
            "previous": "61b89213e507e12df1e89a88c0092a3940749c39",
            "next": "61b89213e507e12df1e89a88c0092a3940749c39"
        },
        "commit_message": "Update flag handling of TraceContext (#155)\n\naccording to https://github.com/w3c/distributed-tracing/pull/142",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "61b89213e507e12df1e89a88c0092a3940749c39": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(Transaction transaction, @Nullable Span parentSpan, long nanoTime, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.impl.transaction.TraceContext.asChildOf(String traceParentHeader)",
                    "public void co.elastic.apm.impl.transaction.TraceContext.asRootSpan(Sampler sampler)",
                    "public void co.elastic.apm.impl.transaction.TraceContext.asChildOf(TraceContext traceContext)",
                    "public boolean co.elastic.apm.impl.transaction.TraceContext.isSampled()"
                ]
            },
            "61153887b4440a0decfa5c51223623c4a48d4aec": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(Transaction transaction, @Nullable Span parentSpan, long nanoTime, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.impl.transaction.TraceContext.asChildOf(String traceParentHeader)",
                    "public void co.elastic.apm.impl.transaction.TraceContext.asRootSpan(Sampler sampler)",
                    "public void co.elastic.apm.impl.transaction.TraceContext.asChildOf(TraceContext traceContext)",
                    "public boolean co.elastic.apm.impl.transaction.TraceContext.isSampled()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5c24d68931dad4f0e41801af4a7b509f4b8f5c7e",
        "previous_commit": "9cce3ea50f787f285e5e552dff30b547bce28bec",
        "date": 1670228716,
        "releases": {
            "previous": "5c24d68931dad4f0e41801af4a7b509f4b8f5c7e",
            "next": "5c24d68931dad4f0e41801af4a7b509f4b8f5c7e"
        },
        "commit_message": "Enable security manager in Servlet container tests (#2883)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5c24d68931dad4f0e41801af4a7b509f4b8f5c7e": {
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/internal/InternalUtil.java": [
                    "public ClassLoader co.elastic.apm.agent.sdk.internal.InternalUtil.run()"
                ],
                "integration-tests/external-plugin-test/external-plugin/src/main/java/co/elastic/apm/agent/plugin/PluginInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.plugin.PluginInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.plugin.PluginInstrumentation.getTypeMatcher()"
                ],
                "integration-tests/simple-webapp/src/main/java/co/elastic/webapp/AsyncStartTestServlet.java": [
                    "public void co.elastic.webapp.AsyncStartTestServlet.run()",
                    "protected void co.elastic.webapp.AsyncStartTestServlet.doGet(final HttpServletRequest req, final HttpServletResponse resp)"
                ]
            },
            "9cce3ea50f787f285e5e552dff30b547bce28bec": {
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/internal/InternalUtil.java": [
                    "public ClassLoader co.elastic.apm.agent.sdk.internal.InternalUtil.run()"
                ],
                "integration-tests/external-plugin-test/external-plugin/src/main/java/co/elastic/apm/agent/plugin/PluginInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.plugin.PluginInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.plugin.PluginInstrumentation.getTypeMatcher()"
                ],
                "integration-tests/simple-webapp/src/main/java/co/elastic/webapp/AsyncStartTestServlet.java": [
                    "public void co.elastic.webapp.AsyncStartTestServlet.run()",
                    "protected void co.elastic.webapp.AsyncStartTestServlet.doGet(final HttpServletRequest req, final HttpServletResponse resp)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "367353e9d4ece029e2dc9c3decff50c0dd4f7d5a",
        "previous_commit": "97fa3539a63dafb1e663f2b039499b79a263b181",
        "date": 1539586831,
        "releases": {
            "previous": "367353e9d4ece029e2dc9c3decff50c0dd4f7d5a",
            "next": "367353e9d4ece029e2dc9c3decff50c0dd4f7d5a"
        },
        "commit_message": "Make successive calls to Span#end a noop (#237)\n\nthis is required by the OT API\r\n\r\n* Set default type and name for spans and transactions (closes #223)\r\n\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "367353e9d4ece029e2dc9c3decff50c0dd4f7d5a": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.startNoop()",
                    "private Span co.elastic.apm.impl.transaction.Span.start(TraceContext parent, long epochMicros, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.startNoop()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(@Nullable String traceParentHeader, long epochMicros, Sampler sampler)"
                ]
            },
            "97fa3539a63dafb1e663f2b039499b79a263b181": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.startNoop()",
                    "private Span co.elastic.apm.impl.transaction.Span.start(TraceContext parent, long epochMicros, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.startNoop()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(@Nullable String traceParentHeader, long epochMicros, Sampler sampler)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0465d479430172c3e745afd2ef5b62a3da6b60aa",
        "previous_commit": "d7de9d2298c71c9dc5bc3ff55001b4a72f40f7fd",
        "date": 1618251408,
        "releases": {
            "previous": "0465d479430172c3e745afd2ef5b62a3da6b60aa",
            "next": "0465d479430172c3e745afd2ef5b62a3da6b60aa"
        },
        "commit_message": "Do not instrument proxies (#1735) (#1738)\n\n* Do not instrument proxies (#1735)\r\n\r\n* apply common isProxy impl\r\n\r\n* update changelog\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0465d479430172c3e745afd2ef5b62a3da6b60aa": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public static <T extends NamedElement> ElementMatcher.Junction<T> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.isProxy()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/TraceMethodInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.bci.methodmatching.TraceMethodInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureSpanInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.pluginapi.CaptureSpanInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureTransactionInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.pluginapi.CaptureTransactionInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/TracedInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.pluginapi.TracedInstrumentation.getTypeMatcher()"
                ]
            },
            "d7de9d2298c71c9dc5bc3ff55001b4a72f40f7fd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public static <T extends NamedElement> ElementMatcher.Junction<T> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.isProxy()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/TraceMethodInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.bci.methodmatching.TraceMethodInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureSpanInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.pluginapi.CaptureSpanInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureTransactionInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.pluginapi.CaptureTransactionInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/TracedInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.pluginapi.TracedInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "12b261604bd8f5b5b7a08cf5f6d61608287d026b",
        "previous_commit": "30cf05c1e5e38967a7d0027ef0bfc51e869df95e",
        "date": 1568894102,
        "releases": {
            "previous": "12b261604bd8f5b5b7a08cf5f6d61608287d026b",
            "next": "12b261604bd8f5b5b7a08cf5f6d61608287d026b"
        },
        "commit_message": "Support for filtering JVMs in APM Agent attacher based on system properties (#851)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "12b261604bd8f5b5b7a08cf5f6d61608287d026b": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/JvmDiscoverer.java": [
                    "public static ForHotSpotVm co.elastic.apm.attach.ForHotSpotVm.withDefaultTempDir()"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/JvmInfo.java": [
                    "public String co.elastic.apm.attach.JvmInfo.toString()"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "private String co.elastic.apm.attach.RemoteAttacher.getArgsProviderOutput(JvmInfo jvmInfo)",
                    "private boolean co.elastic.apm.attach.RemoteAttacher.isExcluded(JvmInfo jvmInfo)",
                    "private boolean co.elastic.apm.attach.RemoteAttacher.isIncluded(JvmInfo jvmInfo)"
                ]
            },
            "30cf05c1e5e38967a7d0027ef0bfc51e869df95e": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/JvmDiscoverer.java": [
                    "public static ForHotSpotVm co.elastic.apm.attach.ForHotSpotVm.withDefaultTempDir()"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/JvmInfo.java": [
                    "public String co.elastic.apm.attach.JvmInfo.toString()"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "private String co.elastic.apm.attach.RemoteAttacher.getArgsProviderOutput(JvmInfo jvmInfo)",
                    "private boolean co.elastic.apm.attach.RemoteAttacher.isExcluded(JvmInfo jvmInfo)",
                    "private boolean co.elastic.apm.attach.RemoteAttacher.isIncluded(JvmInfo jvmInfo)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b3a8c147d33e360e8d3bf30193ff79103e904fdc",
        "previous_commit": "095cf82af66a9dc5d57b30bd96ab446f0ca6440d",
        "date": 1627484337,
        "releases": {
            "previous": "b3a8c147d33e360e8d3bf30193ff79103e904fdc",
            "next": "b3a8c147d33e360e8d3bf30193ff79103e904fdc"
        },
        "commit_message": "Make sure trace context headers are added only once (#1937)\n\n* Make sure trace context headers are added only once\r\n\r\n* update changelog\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b3a8c147d33e360e8d3bf30193ff79103e904fdc": {
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/helper/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.helper.HttpAsyncRequestProducerWrapper.generateRequest()",
                    "public HttpAsyncRequestProducerWrapper co.elastic.apm.agent.httpclient.helper.HttpAsyncRequestProducerWrapper.with(HttpAsyncRequestProducer delegate, @Nullable Span span, @Nullable AbstractSpan<?> parent)",
                    "public void co.elastic.apm.agent.httpclient.helper.HttpAsyncRequestProducerWrapper.resetState()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public Span co.elastic.apm.agent.grpc.GrpcHelper.clientCallStartEnter(ClientCall<?, ?> clientCall, ClientCall.Listener<?> listener, Metadata headers)"
                ],
                "apm-agent-plugins/apm-spring-resttemplate/apm-spring-resttemplate-plugin/src/main/java/co/elastic/apm/agent/resttemplate/SpringRestRequestHeaderSetter.java": [
                    "public void co.elastic.apm.agent.resttemplate.SpringRestRequestHeaderSetter.setHeader(String headerName, String headerValue, HttpRequest request)"
                ]
            },
            "095cf82af66a9dc5d57b30bd96ab446f0ca6440d": {
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/helper/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpAsyncRequestProducerWrapper co.elastic.apm.agent.httpclient.helper.HttpAsyncRequestProducerWrapper.with(HttpAsyncRequestProducer delegate, @Nullable Span span, @Nullable AbstractSpan<?> parent, TextHeaderSetter<HttpRequest> headerSetter)",
                    "public HttpRequest co.elastic.apm.agent.httpclient.helper.HttpAsyncRequestProducerWrapper.generateRequest()",
                    "public void co.elastic.apm.agent.httpclient.helper.HttpAsyncRequestProducerWrapper.resetState()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public Span co.elastic.apm.agent.grpc.GrpcHelper.clientCallStartEnter(ClientCall<?, ?> clientCall, ClientCall.Listener<?> listener, Metadata headers)"
                ],
                "apm-agent-plugins/apm-spring-resttemplate/apm-spring-resttemplate-plugin/src/main/java/co/elastic/apm/agent/resttemplate/SpringRestRequestHeaderSetter.java": [
                    "public void co.elastic.apm.agent.resttemplate.SpringRestRequestHeaderSetter.setHeader(String headerName, String headerValue, HttpRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "10321803028c87f504cb390473ea75c4ac35d99d",
        "previous_commit": "a8096b32ec575fb1389b8e1061f9fb77a9fd7d7d",
        "date": 1519285471,
        "releases": {
            "previous": "10321803028c87f504cb390473ea75c4ac35d99d",
            "next": "10321803028c87f504cb390473ea75c4ac35d99d"
        },
        "commit_message": "Clean up of ApmFilter\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "10321803028c87f504cb390473ea75c4ac35d99d": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillResponseHeaders(HttpServletResponse response, Map<String, String> headers)",
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)",
                    "private void co.elastic.apm.servlet.ApmFilter.fillHeaders(HttpServletRequest request, Map<String, String> headers)",
                    "private void co.elastic.apm.servlet.ApmFilter.fillResponse(Response response, HttpServletResponse httpServletResponse)",
                    "private void co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)"
                ]
            },
            "a8096b32ec575fb1389b8e1061f9fb77a9fd7d7d": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private Request co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)",
                    "private Transaction co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)",
                    "private Map<String, String> co.elastic.apm.servlet.ApmFilter.fillHeaders(HttpServletRequest request, Map<String, String> headers)",
                    "private Map<String, String> co.elastic.apm.servlet.ApmFilter.fillResponseHeaders(HttpServletResponse response, Map<String, String> headers)",
                    "private Response co.elastic.apm.servlet.ApmFilter.fillResponse(Response response, HttpServletResponse httpServletResponse)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "cb39ec061f528af895849afc8509a015541e34b2",
        "previous_commit": "a78ac2c05caa6cbfc7c7c596c9c4538e95b8a347",
        "date": 1523300533,
        "releases": {
            "previous": "cb39ec061f528af895849afc8509a015541e34b2",
            "next": "cb39ec061f528af895849afc8509a015541e34b2"
        },
        "commit_message": "Fix nullability problems\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "cb39ec061f528af895849afc8509a015541e34b2": {
                "apm-agent-api/src/main/java/co/elastic/apm/api/ElasticApm.java": [
                    "void co.elastic.apm.api.ElasticApm.register(Tracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()",
                    "public static void co.elastic.apm.impl.ElasticApmTracer.unregister()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/ProcessFactory.java": [
                    "public ProcessInfo co.elastic.apm.impl.payload.ForJava9CompatibleVM.getProcessInformation()",
                    "public ProcessInfo getProcessInformation()"
                ]
            },
            "a78ac2c05caa6cbfc7c7c596c9c4538e95b8a347": {
                "apm-agent-api/src/main/java/co/elastic/apm/api/ElasticApm.java": [
                    "void co.elastic.apm.api.ElasticApm.register(Tracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()",
                    "public static void co.elastic.apm.impl.ElasticApmTracer.unregister()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/ProcessFactory.java": [
                    "public ProcessInfo co.elastic.apm.impl.payload.ForJava9CompatibleVM.getProcessInformation()",
                    "public ProcessInfo getProcessInformation()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7baac853c1139020614743d7c8995cf66d5865fc",
        "previous_commit": "fa298ccde33e2cac6ac1020f4f66d8a84da63f37",
        "date": 1596032297,
        "releases": {
            "previous": "7baac853c1139020614743d7c8995cf66d5865fc",
            "next": "7baac853c1139020614743d7c8995cf66d5865fc"
        },
        "commit_message": "Enable instrumentation of Java 1.4 bytecode (#1317)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7baac853c1139020614743d7c8995cf66d5865fc": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public DynamicType.Builder<?> co.elastic.apm.agent.bci.ElasticApmAgent.transform(DynamicType.Builder<?> builder, TypeDescription typeDescription, ClassLoader classLoader, JavaModule module)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ErrorLoggingListener.java": [
                    "public void co.elastic.apm.agent.bci.bytebuddy.ErrorLoggingListener.onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/MinimumClassFileVersionValidator.java": [
                    "public ClassVisitor wrap(TypeDescription instrumentedType, ClassVisitor classVisitor, Implementation.Context implementationContext, TypePool typePool, FieldList<FieldDescription.InDefinedShape> fields, MethodList<?> methods, int writerFlags, int readerFlags)",
                    "public void co.elastic.apm.agent.bci.bytebuddy..visit(int version, int access, String name, String signature, String superName, String[] interfaces)"
                ]
            },
            "fa298ccde33e2cac6ac1020f4f66d8a84da63f37": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public DynamicType.Builder<?> co.elastic.apm.agent.bci.ElasticApmAgent.transform(DynamicType.Builder<?> builder, TypeDescription typeDescription, ClassLoader classLoader, JavaModule module)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ErrorLoggingListener.java": [
                    "public void co.elastic.apm.agent.bci.bytebuddy.ErrorLoggingListener.onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/MinimumClassFileVersionValidator.java": [
                    "public ClassVisitor wrap(TypeDescription instrumentedType, ClassVisitor classVisitor, Implementation.Context implementationContext, TypePool typePool, FieldList<FieldDescription.InDefinedShape> fields, MethodList<?> methods, int writerFlags, int readerFlags)",
                    "public void co.elastic.apm.agent.bci.bytebuddy..visit(int version, int access, String name, String signature, String superName, String[] interfaces)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "dba624f1ac348433c7f398250a3fb57198bf0e8f",
        "previous_commit": "11b7b96148ccbd20d0b7ca3a75e7b1c2adea1af6",
        "date": 1646655747,
        "releases": {
            "previous": "dba624f1ac348433c7f398250a3fb57198bf0e8f",
            "next": "dba624f1ac348433c7f398250a3fb57198bf0e8f"
        },
        "commit_message": "Add micros time duration (#2496)\n\n* add micros (us) suport to TimeDuration\r\n\r\n* add micros (us) support to tests and TimeDurationValueConverter\r\n\r\n* add micros (us) support to change log",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "dba624f1ac348433c7f398250a3fb57198bf0e8f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/converter/TimeDuration.java": [
                    "public long co.elastic.apm.agent.configuration.converter.TimeDuration.getMillis()",
                    "private static int co.elastic.apm.agent.configuration.converter.TimeDuration.getDurationMultiplier(String unit)",
                    "public int co.elastic.apm.agent.configuration.converter.TimeDuration.compareTo(TimeDuration o)",
                    "public long co.elastic.apm.agent.configuration.converter.TimeDuration.getMicros()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/converter/TimeDurationValueConverter.java": [
                    "public TimeDuration co.elastic.apm.agent.configuration.converter.TimeDurationValueConverter.convert(String s)"
                ]
            },
            "11b7b96148ccbd20d0b7ca3a75e7b1c2adea1af6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/converter/TimeDuration.java": [
                    "public long co.elastic.apm.agent.configuration.converter.TimeDuration.getMillis()",
                    "private static int co.elastic.apm.agent.configuration.converter.TimeDuration.getDurationMultiplier(String unit)",
                    "public int co.elastic.apm.agent.configuration.converter.TimeDuration.compareTo(TimeDuration o)",
                    "public long co.elastic.apm.agent.configuration.converter.TimeDuration.getMicros()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/converter/TimeDurationValueConverter.java": [
                    "public TimeDuration co.elastic.apm.agent.configuration.converter.TimeDurationValueConverter.convert(String s)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f09206d0b8b4d97a978a0055a311f13a014c7143",
        "previous_commit": "c736d0ca45a9cbb80ecf889dc89c6e8646726b06",
        "date": 1690814420,
        "releases": {
            "previous": "f09206d0b8b4d97a978a0055a311f13a014c7143",
            "next": "f09206d0b8b4d97a978a0055a311f13a014c7143"
        },
        "commit_message": "Replace IOUtils thread local usage with loom friendly pooling (#3239)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f09206d0b8b4d97a978a0055a311f13a014c7143": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/baggage/otel/PercentEscaper.java": [
                    "private static String co.elastic.apm.agent.impl.baggage.otel.PercentEscaper.escapeSlow(String s, int index)"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/internal/util/IOUtils.java": [
                    "public static CoderResult co.elastic.apm.agent.sdk.internal.util.IOUtils.decodeUtf8Byte(final byte b, final CharBuffer charBuffer)",
                    "public static CoderResult co.elastic.apm.agent.sdk.internal.util.IOUtils.decodeUtf8Bytes(final byte[] bytes, final int offset, final int length, final CharBuffer charBuffer)",
                    "public static boolean co.elastic.apm.agent.sdk.internal.util.IOUtils.readUtf8Stream(final InputStream is, final CharBuffer charBuffer)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/NettyByteTransfer.java": [
                    "public static CoderResult co.elastic.apm.agent.vertx.NettyByteTransfer.decodeUtf8BytesFromTransfer(final ByteBuf src, final CharBuffer dest)"
                ]
            },
            "c736d0ca45a9cbb80ecf889dc89c6e8646726b06": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/baggage/otel/PercentEscaper.java": [
                    "private static String co.elastic.apm.agent.impl.baggage.otel.PercentEscaper.escapeSlow(String s, int index)"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/internal/util/IOUtils.java": [
                    "public static CoderResult co.elastic.apm.agent.sdk.internal.util.IOUtils.decodeUtf8Byte(final byte b, final CharBuffer charBuffer)",
                    "public static CoderResult co.elastic.apm.agent.sdk.internal.util.IOUtils.decodeUtf8Bytes(final byte[] bytes, final int offset, final int length, final CharBuffer charBuffer)",
                    "public static boolean co.elastic.apm.agent.sdk.internal.util.IOUtils.readUtf8Stream(final InputStream is, final CharBuffer charBuffer)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/NettyByteTransfer.java": [
                    "public static CoderResult co.elastic.apm.agent.vertx.NettyByteTransfer.decodeUtf8BytesFromTransfer(final ByteBuf src, final CharBuffer dest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "dc78d6d8bd2fe167bbf5d529caf3744249698c74",
        "previous_commit": "97b8af4d431f329c6318bcf363bad7dbbbc10a9f",
        "date": 1547022499,
        "releases": {
            "previous": "dc78d6d8bd2fe167bbf5d529caf3744249698c74",
            "next": "dc78d6d8bd2fe167bbf5d529caf3744249698c74"
        },
        "commit_message": "Fix JsonWriter buffer leak when APM server not available (#410)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "dc78d6d8bd2fe167bbf5d529caf3744249698c74": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.startRequest()",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onFlushError(Integer responseCode, InputStream inputStream, @Nullable IOException e)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onConnectionError(@Nullable Integer responseCode, long droppedEvents, long reportedEvents)",
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.close()",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            },
            "97b8af4d431f329c6318bcf363bad7dbbbc10a9f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.startRequest()",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onFlushError(Integer responseCode, InputStream inputStream, @Nullable IOException e)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onConnectionError(@Nullable Integer responseCode, long droppedEvents, long reportedEvents)",
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.close()",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "51fade7824197b62ed3fc2b5105ae08b5e44e3b0",
        "previous_commit": "4ecd8700f1830dc68e6c223555d4bb7b4a0cf24f",
        "date": 1659425362,
        "releases": {
            "previous": "51fade7824197b62ed3fc2b5105ae08b5e44e3b0",
            "next": "51fade7824197b62ed3fc2b5105ae08b5e44e3b0"
        },
        "commit_message": "Making ShadedClassLoader child-first (#2728)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "51fade7824197b62ed3fc2b5105ae08b5e44e3b0": {
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/ShadedClassLoader.java": [
                    "public Enumeration<URL> co.elastic.apm.agent.premain.ShadedClassLoader.findResources(String name)",
                    "public URL co.elastic.apm.agent.premain.ShadedClassLoader.findResource(String name)",
                    "protected Class<?> co.elastic.apm.agent.premain.ShadedClassLoader.findClass(String name)",
                    "private byte[] co.elastic.apm.agent.premain.ShadedClassLoader.getShadedClassBytes(String name)",
                    "private String co.elastic.apm.agent.premain.ShadedClassLoader.getShadedResourceName(String name)"
                ]
            },
            "4ecd8700f1830dc68e6c223555d4bb7b4a0cf24f": {
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/ShadedClassLoader.java": [
                    "public Enumeration<URL> co.elastic.apm.agent.premain.ShadedClassLoader.findResources(String name)",
                    "public URL co.elastic.apm.agent.premain.ShadedClassLoader.findResource(String name)",
                    "protected Class<?> co.elastic.apm.agent.premain.ShadedClassLoader.findClass(String name)",
                    "private byte[] co.elastic.apm.agent.premain.ShadedClassLoader.getClassBytes(String name)",
                    "private String co.elastic.apm.agent.premain.ShadedClassLoader.getShadedResourceName(String name)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2e9e3126f19500ee06df6b4d6342669395322a9a",
        "previous_commit": "71752a92f4d4e39b63008da750880380517adae1",
        "date": 1583226522,
        "releases": {
            "previous": "2e9e3126f19500ee06df6b4d6342669395322a9a",
            "next": "2e9e3126f19500ee06df6b4d6342669395322a9a"
        },
        "commit_message": "Catch SQLException when calling JDBC API from agent (#1035)\n\n* avoid SQLException on unsupported Statement(s)\r\n* code cleanup\r\n* add few other sync & null checks where relevant\r\n\r\nKeeping it 'as-is' is required in servlet plugin,\r\nbecause tests fail for an unknown reason yet.\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2e9e3126f19500ee06df6b4d6342669395322a9a": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Span span, @Advice.Thrown Throwable t, @Advice.Return Object returnValue)",
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Span span, @Advice.Thrown @Nullable Throwable t, @Advice.Return long returnValue /* bytebuddy converts int to long for us here ! */)",
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.This Statement statement, @Advice.Enter @Nullable Span span, @Advice.Thrown @Nullable Throwable t)",
                    "public static Span co.elastic.apm.agent.jdbc.StatementInstrumentation.onBeforeExecute(@Advice.This Statement statement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "private ConnectionMetaData co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.getConnectionMetaData(Connection connection)"
                ]
            },
            "71752a92f4d4e39b63008da750880380517adae1": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Span span, @Advice.Thrown Throwable t, @Advice.Return Object returnValue)",
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Span span, @Advice.Thrown @Nullable Throwable t, @Advice.Return long returnValue /* bytebuddy converts int to long for us here ! */)",
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.This Statement statement, @Advice.Enter @Nullable Span span, @Advice.Thrown @Nullable Throwable t)",
                    "public static Span co.elastic.apm.agent.jdbc.StatementInstrumentation.onBeforeExecute(@Advice.This Statement statement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "private ConnectionMetaData co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.getConnectionMetaData(Connection connection)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a5a9cf2de3807c9bd83b0f085c07c79a22986e03",
        "previous_commit": "a3731b232dee5c89ac256a34eff1fa1bb701084f",
        "date": 1553496044,
        "releases": {
            "previous": "a5a9cf2de3807c9bd83b0f085c07c79a22986e03",
            "next": "a5a9cf2de3807c9bd83b0f085c07c79a22986e03"
        },
        "commit_message": "Add support for providing config on attach (#544)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a5a9cf2de3807c9bd83b0f085c07c79a22986e03": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "static Arguments co.elastic.apm.attach.RemoteAttacher.parse(String... args)",
                    "private String co.elastic.apm.attach.RemoteAttacher.getAgentArgs(JvmInfo jvmInfo)",
                    "public static void co.elastic.apm.attach.RemoteAttacher.main(String[] args)",
                    "void co.elastic.apm.attach.RemoteAttacher.printHelp(PrintStream out)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/AgentArgumentsConfigurationSource.java": [
                    "public static AgentArgumentsConfigurationSource co.elastic.apm.agent.configuration.AgentArgumentsConfigurationSource.parse(String agentAgruments)"
                ]
            },
            "a3731b232dee5c89ac256a34eff1fa1bb701084f": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "static Arguments co.elastic.apm.attach.RemoteAttacher.parse(String... args)",
                    "private String co.elastic.apm.attach.RemoteAttacher.getAgentArgs(JvmInfo jvmInfo)",
                    "public static void co.elastic.apm.attach.RemoteAttacher.main(String[] args)",
                    "void co.elastic.apm.attach.RemoteAttacher.printHelp(PrintStream out)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/AgentArgumentsConfigurationSource.java": [
                    "public static AgentArgumentsConfigurationSource co.elastic.apm.agent.configuration.AgentArgumentsConfigurationSource.parse(String agentAgruments)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a7c51acfa4fb0723cf02f04c252682ef22f008dc",
        "previous_commit": "7b8508530ef464c9a57a4443794a70c7161adcec",
        "date": 1652711165,
        "releases": {
            "previous": "a7c51acfa4fb0723cf02f04c252682ef22f008dc",
            "next": "a7c51acfa4fb0723cf02f04c252682ef22f008dc"
        },
        "commit_message": "Servlet version error catching (#2627)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a7c51acfa4fb0723cf02f04c252682ef22f008dc": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/JakartaServletVersionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.servlet.JakartaServletVersionInstrumentation.onEnter(@Advice.This Servlet servlet)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/JakartaUtil.java": [
                    "public static Object[] co.elastic.apm.agent.servlet.JakartaUtil.getInfoFromServletContext(@Nullable ServletConfig servletConfig)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/JavaxServletVersionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.servlet.JavaxServletVersionInstrumentation.onEnter(@Advice.This Servlet servlet)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/JavaxUtil.java": [
                    "public static Object[] co.elastic.apm.agent.servlet.JavaxUtil.getInfoFromServletContext(@Nullable ServletConfig servletConfig)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletVersionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.servlet.ServletVersionInstrumentation.logServletVersion(@Nullable Object[] infoFromServletContext)"
                ]
            },
            "7b8508530ef464c9a57a4443794a70c7161adcec": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/JakartaServletVersionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.servlet.JakartaServletVersionInstrumentation.onEnter(@Advice.This Servlet servlet)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/JakartaUtil.java": [
                    "public static Object[] co.elastic.apm.agent.servlet.JakartaUtil.getInfoFromServletContext(@Nullable ServletConfig servletConfig)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/JavaxServletVersionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.servlet.JavaxServletVersionInstrumentation.onEnter(@Advice.This Servlet servlet)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/JavaxUtil.java": [
                    "public static Object[] co.elastic.apm.agent.servlet.JavaxUtil.getInfoFromServletContext(@Nullable ServletConfig servletConfig)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletVersionInstrumentation.java": [
                    "public static void co.elastic.apm.agent.servlet.ServletVersionInstrumentation.logServletVersion(@Nullable Object[] infoFromServletContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "827450d577ee41b43a6b426ed369e1fec9421f26",
        "previous_commit": "4177f07515573701d7289f618c88976ab1b3b1aa",
        "date": 1595494857,
        "releases": {
            "previous": "827450d577ee41b43a6b426ed369e1fec9421f26",
            "next": "827450d577ee41b43a6b426ed369e1fec9421f26"
        },
        "commit_message": "Validate that tests don't leaks tracers, scopes and pooled objects (#1275)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "827450d577ee41b43a6b426ed369e1fec9421f26": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/GlobalTracer.java": [
                    "public static synchronized void co.elastic.apm.agent.impl.GlobalTracer.setNoop()"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "public static <T> Collection<? extends Callable<T>> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Collection<? extends Callable<T>> callables, Tracer tracer)"
                ]
            },
            "4177f07515573701d7289f618c88976ab1b3b1aa": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/GlobalTracer.java": [
                    "public static void co.elastic.apm.agent.impl.GlobalTracer.setNoop()"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "public static <T> Collection<? extends Callable<T>> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Collection<? extends Callable<T>> callables, Tracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d36e7dc1f72b40e3fde241a9384d8be549c2e015",
        "previous_commit": "d1aca85c53b8f215098bf12ba449dcfa141b1a3e",
        "date": 1654495566,
        "releases": {
            "previous": "d36e7dc1f72b40e3fde241a9384d8be549c2e015",
            "next": "d36e7dc1f72b40e3fde241a9384d8be549c2e015"
        },
        "commit_message": "Adding support for `latest` version to attcher cli (#2659)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d36e7dc1f72b40e3fde241a9384d8be549c2e015": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "public static void co.elastic.apm.attach.AgentAttacher.main(String[] args)",
                    "static void co.elastic.apm.attach.AgentAttacher.printHelp(PrintStream out)",
                    "private static void co.elastic.apm.attach.AgentAttacher.downloadAndVerifyAgent(Arguments arguments, String downloadAgentVersion)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentDownloader.java": [
                    "Path co.elastic.apm.attach.AgentDownloader.downloadAndVerifyAgent(String agentVersion)"
                ]
            },
            "d1aca85c53b8f215098bf12ba449dcfa141b1a3e": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "public static void co.elastic.apm.attach.AgentAttacher.main(String[] args)",
                    "static void co.elastic.apm.attach.AgentAttacher.printHelp(PrintStream out)",
                    "private static void co.elastic.apm.attach.AgentAttacher.downloadAndVerifyAgent(Arguments arguments, String downloadAgentVersion)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentDownloader.java": [
                    "Path co.elastic.apm.attach.AgentDownloader.downloadAndVerifyAgent(String agentVersion)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "63628bfa6b2f14364ce9958fbb5e0ebc27d7c8a9",
        "previous_commit": "076a95b384924e11f5a071ab8654672747b75c66",
        "date": 1563802637,
        "releases": {
            "previous": "63628bfa6b2f14364ce9958fbb5e0ebc27d7c8a9",
            "next": "63628bfa6b2f14364ce9958fbb5e0ebc27d7c8a9"
        },
        "commit_message": "Add database link to span context(#732) (#735)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "63628bfa6b2f14364ce9958fbb5e0ebc27d7c8a9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Db.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Db.resetState()",
                    "public void co.elastic.apm.agent.impl.transaction.Db.copyFrom(Db other)",
                    "public boolean co.elastic.apm.agent.impl.transaction.Db.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeDbContext(final Db db)"
                ]
            },
            "076a95b384924e11f5a071ab8654672747b75c66": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Db.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Db.resetState()",
                    "public void co.elastic.apm.agent.impl.transaction.Db.copyFrom(Db other)",
                    "public boolean co.elastic.apm.agent.impl.transaction.Db.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeDbContext(final Db db)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "10035290ba83774a1931c151e79a02da0503a11c",
        "previous_commit": "9a7576eb9407f40430787db6f7be75186a9371b9",
        "date": 1549534835,
        "releases": {
            "previous": "10035290ba83774a1931c151e79a02da0503a11c",
            "next": "10035290ba83774a1931c151e79a02da0503a11c"
        },
        "commit_message": "Cache element matchers (#482)\n\nThe effect is mostly notable on class loader matchers.\r\nPreviously, a new matcher was created for every loaded class.\r\nClass loader matchers have an internal cache which is now actually used.",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "10035290ba83774a1931c151e79a02da0503a11c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(MethodDescription target)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ]
            },
            "9a7576eb9407f40430787db6f7be75186a9371b9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(MethodDescription target)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d425fac6883c9a670918e35d8f3ba62ad922d23f",
        "previous_commit": "1b7265993d5983d4f626f76b108066b8dc71dcef",
        "date": 1581337055,
        "releases": {
            "previous": "d425fac6883c9a670918e35d8f3ba62ad922d23f",
            "next": "d425fac6883c9a670918e35d8f3ba62ad922d23f"
        },
        "commit_message": "Make Process, JMS and Kafka plugins non-incubating (#1026)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d425fac6883c9a670918e35d8f3ba62ad922d23f": {
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/BaseJmsInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.jms.BaseJmsInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/BaseKafkaInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.kafka.BaseKafkaInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/BaseProcessInstrumentation.java": [
                    "public final Collection<String> co.elastic.apm.agent.process.BaseProcessInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/CommonsExecAsyncInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.process.CommonsExecAsyncInstrumentation.getInstrumentationGroupNames()"
                ]
            },
            "1b7265993d5983d4f626f76b108066b8dc71dcef": {
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/BaseJmsInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.jms.BaseJmsInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/BaseKafkaInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.kafka.BaseKafkaInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/BaseProcessInstrumentation.java": [
                    "public final Collection<String> co.elastic.apm.agent.process.BaseProcessInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/CommonsExecAsyncInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.process.CommonsExecAsyncInstrumentation.getInstrumentationGroupNames()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d943484772f2a01bf273b475e894d5384d7fb888",
        "previous_commit": "9f36a55750b699eb6b4efc42d96f651101aa1763",
        "date": 1634542599,
        "releases": {
            "previous": "d943484772f2a01bf273b475e894d5384d7fb888",
            "next": "d943484772f2a01bf273b475e894d5384d7fb888"
        },
        "commit_message": "Implement user-agent spec (#2177)\n\n* implement spec + test\r\n\r\n* annotate some nullable configuration items\r\n\r\n* prevent NPE:wq\r\n\r\n* fix other NPEs + cleanup\r\n\r\n* fix copyright\r\n\r\n* update changelog\r\n\r\n* post review changes",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d943484772f2a01bf273b475e894d5384d7fb888": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/ServiceFactory.java": [
                    "public Service co.elastic.apm.agent.impl.payload.ServiceFactory.createService(CoreConfiguration coreConfiguration, String ephemeralId)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequestToUrl(URL url)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/VersionUtils.java": [
                    "public static String co.elastic.apm.agent.util.VersionUtils.getAgentVersion()"
                ]
            },
            "9f36a55750b699eb6b4efc42d96f651101aa1763": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/ServiceFactory.java": [
                    "public Service co.elastic.apm.agent.impl.payload.ServiceFactory.createService(CoreConfiguration coreConfiguration, String ephemeralId)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequestToUrl(URL url)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/VersionUtils.java": [
                    "public static String co.elastic.apm.agent.util.VersionUtils.getAgentVersion()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "37eb0135f1dd5595f55fe851b7ff84a72ec8148b",
        "previous_commit": "7edd59862f7a01264c001ebd5122fa9b2051739b",
        "date": 1612710768,
        "releases": {
            "previous": "37eb0135f1dd5595f55fe851b7ff84a72ec8148b",
            "next": "37eb0135f1dd5595f55fe851b7ff84a72ec8148b"
        },
        "commit_message": "Avoid sending null fields in the cloud metadata (#1648)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "37eb0135f1dd5595f55fe851b7ff84a72ec8148b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/CloudMetadataProvider.java": [
                    "static CloudProviderInfo co.elastic.apm.agent.impl.CloudMetadataProvider.deserializeAwsMetadata(@Nullable String rawMetadata)",
                    "static CloudProviderInfo co.elastic.apm.agent.impl.CloudMetadataProvider.deserializeGcpMetadata(@Nullable String rawMetadata)",
                    "static CloudProviderInfo co.elastic.apm.agent.impl.CloudMetadataProvider.deserializeAzureMetadata(@Nullable String rawMetadata)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeCloudProvider(final CloudProviderInfo cloudProviderInfo, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ]
            },
            "7edd59862f7a01264c001ebd5122fa9b2051739b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/CloudMetadataProvider.java": [
                    "static CloudProviderInfo co.elastic.apm.agent.impl.CloudMetadataProvider.deserializeAwsMetadata(@Nullable String rawMetadata)",
                    "static CloudProviderInfo co.elastic.apm.agent.impl.CloudMetadataProvider.deserializeGcpMetadata(@Nullable String rawMetadata)",
                    "static CloudProviderInfo co.elastic.apm.agent.impl.CloudMetadataProvider.deserializeAzureMetadata(@Nullable String rawMetadata)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeCloudProvider(final CloudProviderInfo cloudProviderInfo, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "20be1b23d4d0b7eea18b3c032f8b79bf64a68047",
        "previous_commit": "eca9328c7274e54d80caa4d26212cb9b0046276f",
        "date": 1519392765,
        "releases": {
            "previous": "20be1b23d4d0b7eea18b3c032f8b79bf64a68047",
            "next": "20be1b23d4d0b7eea18b3c032f8b79bf64a68047"
        },
        "commit_message": "Add option to not collect stack of fast spans\n\nPython equivalent: elastic/apm-agent-python#142\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "20be1b23d4d0b7eea18b3c032f8b79bf64a68047": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span)",
                    "void co.elastic.apm.impl.ElasticApmTracer.recycle(Transaction transaction)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Span.java": [
                    "public void co.elastic.apm.impl.Span.resetState()"
                ]
            },
            "eca9328c7274e54d80caa4d26212cb9b0046276f": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span)",
                    "void co.elastic.apm.impl.ElasticApmTracer.recycle(Transaction transaction)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Span.java": [
                    "public void co.elastic.apm.impl.Span.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d262712fb2efa07f60cf765e1a04e88d7c14236b",
        "previous_commit": "1857f55a455123faafa1a10a9d34281bdadff047",
        "date": 1536672658,
        "releases": {
            "previous": "d262712fb2efa07f60cf765e1a04e88d7c14236b",
            "next": "d262712fb2efa07f60cf765e1a04e88d7c14236b"
        },
        "commit_message": "Add transaction.span_count.started (#198)\n\nimplements elastic/apm-server#1241",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d262712fb2efa07f60cf765e1a04e88d7c14236b": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction, @Nullable Span parentSpan, long nanoTime)",
                    "private boolean co.elastic.apm.impl.ElasticApmTracer.isTransactionSpanLimitReached(Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/SpanCount.java": [
                    "public void co.elastic.apm.impl.transaction.SpanCount.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ]
            },
            "1857f55a455123faafa1a10a9d34281bdadff047": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction, @Nullable Span parentSpan, long nanoTime)",
                    "private boolean co.elastic.apm.impl.ElasticApmTracer.isTransactionSpanLimitReached(Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/SpanCount.java": [
                    "public void co.elastic.apm.impl.transaction.SpanCount.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3abc70a91d4e270bed0cabe1256587f21adabe08",
        "previous_commit": "1dce34018b76345bdf33d6f000aacca56a8008e7",
        "date": 1691763795,
        "releases": {
            "previous": "3abc70a91d4e270bed0cabe1256587f21adabe08",
            "next": "3abc70a91d4e270bed0cabe1256587f21adabe08"
        },
        "commit_message": "Bump co.elastic.clients:elasticsearch-java from 8.8.1 to 8.9.0 (#3283)\n\n* Bump co.elastic.clients:elasticsearch-java from 8.8.1 to 8.9.0\n\nBumps [co.elastic.clients:elasticsearch-java](https://github.com/elastic/elasticsearch-java) from 8.8.1 to 8.9.0.\n- [Release notes](https://github.com/elastic/elasticsearch-java/releases)\n- [Changelog](https://github.com/elastic/elasticsearch-java/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/elastic/elasticsearch-java/compare/v8.8.1...v8.9.0)\n\n---\nupdated-dependencies:\n- dependency-name: co.elastic.clients:elasticsearch-java\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\n\n* remove broken javadoc link for 8.9\n\n* make it work for 8.9 and earlier\n\n* minor changes before review\n\n* update changelog\n\n---------\n\nSigned-off-by: dependabot[bot] <support@github.com>\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\nCo-authored-by: Sylvain Juge <763082+SylvainJuge@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3abc70a91d4e270bed0cabe1256587f21adabe08": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-8_x/src/main/java/co/elastic/apm/agent/esrestclient/v8_x/RestClientTransportInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.esrestclient.v8_x.RestClientTransportInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.esrestclient.v8_x.RestClientTransportInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchEndpointMap.java": [
                    "private static void co.elastic.apm.agent.esrestclient.ElasticsearchEndpointMap.initEndpoint(Map<String, ElasticsearchEndpointDefinition> map, String endpointId, boolean isSearchEndpoint, String... routes)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span<?> co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String httpPath, @Nullable HttpEntity httpEntity)"
                ]
            },
            "1dce34018b76345bdf33d6f000aacca56a8008e7": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-8_x/src/main/java/co/elastic/apm/agent/esrestclient/v8_x/RestClientTransportInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.esrestclient.v8_x.RestClientTransportInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.esrestclient.v8_x.RestClientTransportInstrumentation.getMethodMatcher()"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchEndpointMap.java": [
                    "private static void co.elastic.apm.agent.esrestclient.ElasticsearchEndpointMap.initEndpoint( Map<String, ElasticsearchEndpointDefinition> map, String endpointId, boolean isSearchEndpoint, String... routes)"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span<?> co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String httpPath, @Nullable HttpEntity httpEntity)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1cce82a0033685a3134446d0ef4f892e92a66c5d",
        "previous_commit": "bb817cf493dfd173084f43cd687d3e008ed24d2b",
        "date": 1613658554,
        "releases": {
            "previous": "1cce82a0033685a3134446d0ef4f892e92a66c5d",
            "next": "1cce82a0033685a3134446d0ef4f892e92a66c5d"
        },
        "commit_message": "External plugin loading fix (#1660)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1cce82a0033685a3134446d0ef4f892e92a66c5d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyPluginClassLoaderFactory.java": [
                    "public synchronized static ClassLoader co.elastic.apm.agent.bci.IndyPluginClassLoaderFactory.getOrCreatePluginClassLoader(@Nullable ClassLoader targetClassLoader, List<String> classesToInject, ClassLoader agentClassLoader, ClassFileLocator classFileLocator, ElementMatcher<? super TypeDescription> exclusionMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DependencyInjectingServiceLoader.java": [
                    "private Set<String> co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.getImplementations(Enumeration<URL> resources)",
                    "private T co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.instantiate(ClassLoader classLoader, String implementation)"
                ]
            },
            "bb817cf493dfd173084f43cd687d3e008ed24d2b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyPluginClassLoaderFactory.java": [
                    "public synchronized static ClassLoader co.elastic.apm.agent.bci.IndyPluginClassLoaderFactory.getOrCreatePluginClassLoader(@Nullable ClassLoader targetClassLoader, List<String> classesToInject, ClassLoader agentClassLoader, ElementMatcher<? super TypeDescription> exclusionMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DependencyInjectingServiceLoader.java": [
                    "private Set<String> co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.getImplementations(Enumeration<URL> resources)",
                    "private T co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.instantiate(ClassLoader classLoader, String implementation)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c0754095ce0bbd648d853b274b033e86a59c67d6",
        "previous_commit": "e2c6207df9877481a5dec0f1180ad334270dcf19",
        "date": 1636640856,
        "releases": {
            "previous": "c0754095ce0bbd648d853b274b033e86a59c67d6",
            "next": "c0754095ce0bbd648d853b274b033e86a59c67d6"
        },
        "commit_message": "added support to jakartaee for jaxrs (#2248)\n\n* added support to jakartaee for jaxrs\r\n\r\n* added test for jakartaee\r\n\r\n* local save - should solve problem with common JerseyTest(conflicts in jakartaee-test classes\r\n\r\n* refactored jaxrs tests\r\n\r\n* added miss headers. added entry to changelog\r\n\r\n* added license headers after tests.",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c0754095ce0bbd648d853b274b033e86a59c67d6": {
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsOffsetMappingFactory.java": [
                    "private void co.elastic.apm.agent.jaxrs.JaxRsOffsetMappingFactory.getAnnotationValueFromAnnotationSource(TransactionAnnotationValue transactionAnnotationValue, AnnotationSource annotationSource, Boolean isClassLevelPath)"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getClassLoaderMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getTypeMatcher()"
                ]
            },
            "e2c6207df9877481a5dec0f1180ad334270dcf19": {
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsOffsetMappingFactory.java": [
                    "private void co.elastic.apm.agent.jaxrs.JaxRsOffsetMappingFactory.getAnnotationValueFromAnnotationSource(TransactionAnnotationValue transactionAnnotationValue, AnnotationSource annotationSource, Boolean isClassLevelPath)"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getClassLoaderMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f3b28350fad9cdd41e51c6be599dab52152bade0",
        "previous_commit": "50981bb8f7c82141d1468e981ac6b7faded19599",
        "date": 1724154321,
        "releases": {
            "previous": "f3b28350fad9cdd41e51c6be599dab52152bade0",
            "next": "f3b28350fad9cdd41e51c6be599dab52152bade0"
        },
        "commit_message": "Add support for apache http client v5 body capturing (#3767)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f3b28350fad9cdd41e51c6be599dab52152bade0": {
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/ApacheHttpEntityGetContentInstrumentation.java": [
                    "public static InputStream co.elastic.apm.agent.httpclient.v4.ApacheHttpEntityGetContentInstrumentation.onExit(@Advice.This HttpEntity thiz, @Advice.Return InputStream content)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/ApacheHttpEntityWriteToInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.ApacheHttpEntityWriteToInstrumentation.onExit(@Advice.Enter OutputStream potentiallyWrappedStream)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/helper/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.v4.helper.HttpAsyncRequestProducerWrapper.generateRequest()"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient5-plugin/src/main/java/co/elastic/apm/agent/httpclient/v5/helper/RequestChannelWrapper.java": [
                    "public void co.elastic.apm.agent.httpclient.v5.helper.RequestChannelWrapper.sendRequest(HttpRequest httpRequest, EntityDetails entityDetails, HttpContext httpContext)"
                ]
            },
            "50981bb8f7c82141d1468e981ac6b7faded19599": {
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/ApacheHttpEntityGetContentInstrumentation.java": [
                    "public static InputStream co.elastic.apm.agent.httpclient.v4.ApacheHttpEntityGetContentInstrumentation.onExit(@Advice.This HttpEntity thiz, @Advice.Return InputStream content)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/ApacheHttpEntityWriteToInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.ApacheHttpEntityWriteToInstrumentation.onExit(@Advice.Enter OutputStream potentiallyWrappedStream)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/helper/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.v4.helper.HttpAsyncRequestProducerWrapper.generateRequest()"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient5-plugin/src/main/java/co/elastic/apm/agent/httpclient/v5/helper/RequestChannelWrapper.java": [
                    "public void co.elastic.apm.agent.httpclient.v5.helper.RequestChannelWrapper.sendRequest(HttpRequest httpRequest, EntityDetails entityDetails, HttpContext httpContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "57d0dbd903fb22b2f288c8faf468e5d9e027f4d8",
        "previous_commit": "c1fc21c01db6a4b5a556c69d996d50dc76be1a9c",
        "date": 1633432260,
        "releases": {
            "previous": "57d0dbd903fb22b2f288c8faf468e5d9e027f4d8",
            "next": "57d0dbd903fb22b2f288c8faf468e5d9e027f4d8"
        },
        "commit_message": "Simplify DynamicTransformer API (#2164)\n\nInstead of DynamicTransformer.Accessor.get().ensureInstrumented,\r\nusers can just call DynamicTransformer.ensureInstrumented",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "57d0dbd903fb22b2f288c8faf468e5d9e027f4d8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/collections/WeakMapCleaner.java": [
                    "public void co.elastic.apm.agent.collections.WeakMapCleaner.run()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ChannelInstrumentation.java": [
                    "public static void co.elastic.apm.agent.grpc.ChannelInstrumentation.onExit(@Advice.Return @Nullable ClientCall<?, ?> clientCall, @Advice.Enter @Nullable Object span)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "private static void co.elastic.apm.agent.concurrent.JavaConcurrent.captureContext(Object task, AbstractSpan<?> active)"
                ],
                "apm-agent-plugins/apm-jdk-httpserver-plugin/src/main/java/co/elastic/apm/agent/httpserver/HttpHandlerHelper.java": [
                    "public static void co.elastic.apm.agent.httpserver.HttpHandlerHelper.ensureInstrumented(@Nullable HttpHandler handler)"
                ]
            },
            "c1fc21c01db6a4b5a556c69d996d50dc76be1a9c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/collections/WeakMapCleaner.java": [
                    "public void co.elastic.apm.agent.collections.WeakMapCleaner.run()"
                ],
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/ChannelInstrumentation.java": [
                    "public static void co.elastic.apm.agent.grpc.ChannelInstrumentation.onExit(@Advice.Return @Nullable ClientCall<?, ?> clientCall, @Advice.Enter @Nullable Object span)"
                ],
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "private static void co.elastic.apm.agent.concurrent.JavaConcurrent.captureContext(Object task, AbstractSpan<?> active)"
                ],
                "apm-agent-plugins/apm-jdk-httpserver-plugin/src/main/java/co/elastic/apm/agent/httpserver/HttpHandlerHelper.java": [
                    "public static void co.elastic.apm.agent.httpserver.HttpHandlerHelper.ensureInstrumented(@Nullable HttpHandler handler)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c5a83734447ca789f34c632b837a03640665af9c",
        "previous_commit": "445685e6cd240c826b95a4a0db8aaf356b94d4a8",
        "date": 1701258158,
        "releases": {
            "previous": "c5a83734447ca789f34c632b837a03640665af9c",
            "next": "c5a83734447ca789f34c632b837a03640665af9c"
        },
        "commit_message": "#3439 - Handle removal of ClientResponse#rawStatusCode and bump to Spring Boot to 3.2 (#3440)\n\n\r\nCo-authored-by: Jonas Kunz <jonas.kunz@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c5a83734447ca789f34c632b837a03640665af9c": {
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webclient-plugin/src/main/java/co/elastic/apm/agent/springwebclient/WebClientSubscriber.java": [
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onNext(T t)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-spring5/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "private static void co.elastic.apm.agent.springwebflux.WebfluxHelper.fillResponse(Transaction<?> transaction, ServerWebExchange exchange)",
                    "private static void co.elastic.apm.agent.springwebflux.WebfluxHelper.fillRequest(Transaction<?> transaction, ServerWebExchange exchange)",
                    "public static void co.elastic.apm.agent.springwebflux.WebfluxHelper.setTransactionName(@Nullable Transaction<?> transaction, ServerWebExchange exchange)"
                ]
            },
            "445685e6cd240c826b95a4a0db8aaf356b94d4a8": {
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webclient-plugin/src/main/java/co/elastic/apm/agent/springwebclient/WebClientSubscriber.java": [
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onNext(T t)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-spring5/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "private static void co.elastic.apm.agent.springwebflux.WebfluxHelper.fillResponse(Transaction<?> transaction, ServerWebExchange exchange)",
                    "private static void co.elastic.apm.agent.springwebflux.WebfluxHelper.fillRequest(Transaction<?> transaction, ServerWebExchange exchange)",
                    "public static void co.elastic.apm.agent.springwebflux.WebfluxHelper.setTransactionName(@Nullable Transaction<?> transaction, ServerWebExchange exchange)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "46b8626b2e0c6d3ac971eee85fc7cabc61a81ae8",
        "previous_commit": "78ff0dfab1b83c0f38a999f8a15a3726001b34a6",
        "date": 1589557745,
        "releases": {
            "previous": "46b8626b2e0c6d3ac971eee85fc7cabc61a81ae8",
            "next": "46b8626b2e0c6d3ac971eee85fc7cabc61a81ae8"
        },
        "commit_message": "Use log4j2 for logging (#1169)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "46b8626b2e0c6d3ac971eee85fc7cabc61a81ae8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public void co.elastic.apm.agent.logging.LoggingConfiguration.onChange(ConfigurationOption<?> configurationOption, LogLevel oldValue, LogLevel newValue)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.close()",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            },
            "78ff0dfab1b83c0f38a999f8a15a3726001b34a6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public void co.elastic.apm.agent.logging.LoggingConfiguration.onChange(ConfigurationOption<?> configurationOption, LogLevel oldValue, LogLevel newValue)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.close()",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c3e718a1b991d402f6a66be643ec18fd672f940d",
        "previous_commit": "59d358cf15dd0ab82f7f2a181ea77e540325eb85",
        "date": 1579710660,
        "releases": {
            "previous": "c3e718a1b991d402f6a66be643ec18fd672f940d",
            "next": "c3e718a1b991d402f6a66be643ec18fd672f940d"
        },
        "commit_message": "improve objectpool (#967)\n\nImprove object pool in multiple ways\r\n- provide a \"bookkeeper\" variant that will help testing and making sure pooled objects are returned to pool\r\n- improved javadoc\r\n- simpler design and few naming tweaks\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c3e718a1b991d402f6a66be643ec18fd672f940d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.stop()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/objectpool/impl/AbstractObjectPool.java": [
                    "public final T co.elastic.apm.agent.objectpool.impl.AbstractObjectPool<T>.createInstance()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/objectpool/impl/QueueBasedObjectPool.java": [
                    "public static <T extends Recyclable> QueueBasedObjectPool<T> co.elastic.apm.agent.objectpool.impl.QueueBasedObjectPool<T>.ofRecyclable(Queue<T> queue, boolean preAllocate, Allocator<T> allocator)"
                ]
            },
            "59d358cf15dd0ab82f7f2a181ea77e540325eb85": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.stop()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/objectpool/impl/AbstractObjectPool.java": [
                    "public T co.elastic.apm.agent.objectpool.impl.AbstractObjectPool<T>.createInstance()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/objectpool/impl/QueueBasedObjectPool.java": [
                    "public static <T extends Recyclable> QueueBasedObjectPool<T> co.elastic.apm.agent.objectpool.impl.QueueBasedObjectPool<T>.ofRecyclable(Queue<T> queue, boolean preAllocate, Allocator<T> allocator)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2d28d00626db9b41b28a2bab08875853329426e4",
        "previous_commit": "a739286a2fac38678178ea78af97fb73e365fee5",
        "date": 1590474010,
        "releases": {
            "previous": "2d28d00626db9b41b28a2bab08875853329426e4",
            "next": "2d28d00626db9b41b28a2bab08875853329426e4"
        },
        "commit_message": "Ingres jdbc port parsing (#1199)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2d28d00626db9b41b28a2bab08875853329426e4": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/ConnectionMetaData.java": [
                    "static HostPort co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.parseAuthority(String url)",
                    "HostPort co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.findAddressInTree(String connectionUrl, TreeNode treeNode)",
                    "private HostPort co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.parseAddressList(String connectionUrl)",
                    "static HostPort co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.parseMySqlFlavor(String connectionUrl)"
                ]
            },
            "a739286a2fac38678178ea78af97fb73e365fee5": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/ConnectionMetaData.java": [
                    "HostPort co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.findAddressInTree(TreeNode treeNode)",
                    "static HostPort co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.parseMySqlFlavor(String connectionUrl)",
                    "static HostPort co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.parseAuthority(String url)",
                    "private HostPort co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.parseAddressList(String connectionUrl)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "953f8dc7e7d0fa1f211859c732f4a9c20a0440d0",
        "previous_commit": "c279752208c795a89169d20634e6303f12a6a3f5",
        "date": 1604560681,
        "releases": {
            "previous": "953f8dc7e7d0fa1f211859c732f4a9c20a0440d0",
            "next": "953f8dc7e7d0fa1f211859c732f4a9c20a0440d0"
        },
        "commit_message": "Override IndyBootstrapDispatcher class module (#1468)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "953f8dc7e7d0fa1f211859c732f4a9c20a0440d0": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static Method co.elastic.apm.agent.bci.IndyBootstrap.getIndyBootstrapMethod(final Logger logger)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/JvmRuntimeInfo.java": [
                    "static void co.elastic.apm.agent.util.JvmRuntimeInfo.parseVmInfo(String version, String vmName, @Nullable String vmVersion)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.httpclient.HttpClientInstrumentation.getTypeMatcherPreFilter()"
                ]
            },
            "c279752208c795a89169d20634e6303f12a6a3f5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static Method co.elastic.apm.agent.bci.IndyBootstrap.getIndyBootstrapMethod()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/JvmRuntimeInfo.java": [
                    "static void co.elastic.apm.agent.util.JvmRuntimeInfo.parseVmInfo(String version, String vmName, @Nullable String vmVersion)"
                ],
                "apm-agent-plugins/apm-jdk-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpClientInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.httpclient.HttpClientInstrumentation.getTypeMatcherPreFilter()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "954651153f76eca4dc5c516cc05169b7e305ecf9",
        "previous_commit": "8d6048501f1b93d4a872049784f7393dc9e4f9e3",
        "date": 1594977171,
        "releases": {
            "previous": "954651153f76eca4dc5c516cc05169b7e305ecf9",
            "next": "954651153f76eca4dc5c516cc05169b7e305ecf9"
        },
        "commit_message": "Avoid segfault when executing tests with JDK < 11.0.4 (#1272)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "954651153f76eca4dc5c516cc05169b7e305ecf9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "public static synchronized Future<?> co.elastic.apm.agent.bci.ElasticApmAgent.reInitInstrumentation()",
                    "public void co.elastic.apm.agent.bci.ElasticApmAgent.run()"
                ]
            },
            "8d6048501f1b93d4a872049784f7393dc9e4f9e3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)",
                    "public static synchronized Future<?> co.elastic.apm.agent.bci.ElasticApmAgent.reInitInstrumentation()",
                    "public void co.elastic.apm.agent.bci.ElasticApmAgent.run()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1eaae2aea86cb70b5ff974d4b41a78a143119390",
        "previous_commit": "7752081468a96cb4702a3c1e29cf481e0e159754",
        "date": 1630920649,
        "releases": {
            "previous": "1eaae2aea86cb70b5ff974d4b41a78a143119390",
            "next": "1eaae2aea86cb70b5ff974d4b41a78a143119390"
        },
        "commit_message": "Enforce server schema validation (#2085)\n\n* test url port serialization compatibility\r\n\r\n* move existing 6.7 schema + enforce it\r\n\r\n* schema is actually 6.5, not 6.7\r\n\r\n* serialize & validate schema on each version\r\n\r\n* add json schema validation path + pretty JSON\r\n\r\n* minor cleanup\r\n\r\n* use programatic log level for validation\r\n\r\n* revert back logger config to avoid verbose output\r\n\r\n* set log level at configuration for schema validator\r\n\r\n* add fix for 6.5 headers with multiple values\r\n\r\n* fix broken tests",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1eaae2aea86cb70b5ff974d4b41a78a143119390": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "private static void co.elastic.apm.agent.logging.LoggingConfiguration.setLogLevel(@Nullable LogLevel level)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeResponse(final Response response)",
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeUrl(final Url url)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeRequest(final Request request)"
                ]
            },
            "7752081468a96cb4702a3c1e29cf481e0e159754": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "private static void co.elastic.apm.agent.logging.LoggingConfiguration.setLogLevel(@Nullable LogLevel level)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeResponse(final Response response)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeRequest(final Request request)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeUrl(final Url url)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "cc4d8a16a7aa85099bcb8b14da0cffb3e37b9d63",
        "previous_commit": "35e0d6d0de0b6d1753f2e6bdd5678a10c2267cd4",
        "date": 1714142515,
        "releases": {
            "previous": "cc4d8a16a7aa85099bcb8b14da0cffb3e37b9d63",
            "next": "cc4d8a16a7aa85099bcb8b14da0cffb3e37b9d63"
        },
        "commit_message": "Universal profiling integration: write shared memory (#3598)\n\n\r\n---------\r\n\r\nCo-authored-by: SylvainJuge <763082+SylvainJuge@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "cc4d8a16a7aa85099bcb8b14da0cffb3e37b9d63": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.stop()",
                    "private synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.startSync()",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endTransaction(Transaction transaction)",
                    "private void co.elastic.apm.agent.impl.ElasticApmTracer.afterTransactionStart(@Nullable ClassLoader initiatingClassLoader, Transaction transaction)"
                ]
            },
            "35e0d6d0de0b6d1753f2e6bdd5678a10c2267cd4": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.stop()",
                    "private synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.startSync()",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endTransaction(Transaction transaction)",
                    "private void co.elastic.apm.agent.impl.ElasticApmTracer.afterTransactionStart(@Nullable ClassLoader initiatingClassLoader, Transaction transaction)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "60ca9ca841307706d86d3dd78d1bb8b143d3aab1",
        "previous_commit": "174825926cf5663a1a069cd24d0f2e6ef90bf40b",
        "date": 1617284767,
        "releases": {
            "previous": "60ca9ca841307706d86d3dd78d1bb8b143d3aab1",
            "next": "60ca9ca841307706d86d3dd78d1bb8b143d3aab1"
        },
        "commit_message": "Cassandra instrumentation (#1712)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "60ca9ca841307706d86d3dd78d1bb8b143d3aab1": {
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/helper/DubboTraceHelper.java": [
                    "public static Span co.elastic.apm.agent.dubbo.helper.DubboTraceHelper.createConsumerSpan(ElasticApmTracer tracer, Class<?> apiClass, String methodName, InetSocketAddress remoteAddress)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.jdbc.StatementInstrumentation.onBeforeExecute(@Advice.This Statement statement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-plugin/src/main/java/co/elastic/apm/agent/rabbitmq/ChannelInstrumentation.java": [
                    "private static void co.elastic.apm.agent.rabbitmq.ChannelInstrumentation.captureDestination(String exchange, Channel channel, Span span)"
                ]
            },
            "174825926cf5663a1a069cd24d0f2e6ef90bf40b": {
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/helper/DubboTraceHelper.java": [
                    "public static Span co.elastic.apm.agent.dubbo.helper.DubboTraceHelper.createConsumerSpan(ElasticApmTracer tracer, Class<?> apiClass, String methodName, InetSocketAddress remoteAddress)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.jdbc.StatementInstrumentation.onBeforeExecute(@Advice.This Statement statement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-plugin/src/main/java/co/elastic/apm/agent/rabbitmq/ChannelInstrumentation.java": [
                    "private static void co.elastic.apm.agent.rabbitmq.ChannelInstrumentation.captureDestination(String exchange, Channel channel, Span span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1dc8738f5b53756dab557a1ade5a739193633543",
        "previous_commit": "b68c803b2bb0d7019d62754f9666f97a9689a60a",
        "date": 1539856709,
        "releases": {
            "previous": "1dc8738f5b53756dab557a1ade5a739193633543",
            "next": "1dc8738f5b53756dab557a1ade5a739193633543"
        },
        "commit_message": "Store a stack with active spans in ThreadLocal (#244)\n\n* Allows getting ahold of the active transaction (bottom of the stack)\r\n* Deprecate Span#getTransaction (see javadoc)\r\n* This change reduces the usage of Span#getTransaction\r\n* Gets rid of AbstractSpan#previouslyActive",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1dc8738f5b53756dab557a1ade5a739193633543": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public AbstractSpan<?> co.elastic.apm.impl.ElasticApmTracer.getActive()",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.currentSpan()",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.currentTransaction()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo)"
                ]
            },
            "b68c803b2bb0d7019d62754f9666f97a9689a60a": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public AbstractSpan<?> co.elastic.apm.impl.ElasticApmTracer.getActive()",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.currentSpan()",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.currentTransaction()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "319f472f1bb6cb4a3b5f840cc1ea8d27f6310dda",
        "previous_commit": "6bcc5a674eeab1ea1d4e535eefc0e0a0d77ff7bf",
        "date": 1618315004,
        "releases": {
            "previous": "319f472f1bb6cb4a3b5f840cc1ea8d27f6310dda",
            "next": "319f472f1bb6cb4a3b5f840cc1ea8d27f6310dda"
        },
        "commit_message": "Fix another JMS readonly exception (#1730) follow-up (#1715)\n\n* fix another way to write to JMS msg",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "319f472f1bb6cb4a3b5f840cc1ea8d27f6310dda": {
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public String co.elastic.apm.agent.jms.JmsInstrumentationHelper.extractDestinationName(@Nullable Message message, Destination destination)",
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelper.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsMessagePropertyAccessor.java": [
                    "public void co.elastic.apm.agent.jms.JmsMessagePropertyAccessor.setHeader(String headerName, String headerValue, Message message)",
                    "public String co.elastic.apm.agent.jms.JmsMessagePropertyAccessor.getFirstHeader(String headerName, Message message)"
                ]
            },
            "6bcc5a674eeab1ea1d4e535eefc0e0a0d77ff7bf": {
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public String co.elastic.apm.agent.jms.JmsInstrumentationHelper.extractDestinationName(@Nullable Message message, Destination destination)",
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelper.startJmsSendSpan(Destination destination, Message message)"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsMessagePropertyAccessor.java": [
                    "public void co.elastic.apm.agent.jms.JmsMessagePropertyAccessor.setHeader(String headerName, String headerValue, Message message)",
                    "public String co.elastic.apm.agent.jms.JmsMessagePropertyAccessor.getFirstHeader(String headerName, Message message)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9962e2ddfa55caed20f8565776738febb57ae653",
        "previous_commit": "d073b288eb4901b742b2a8fdbeba5f8298937faf",
        "date": 1548775190,
        "releases": {
            "previous": "9962e2ddfa55caed20f8565776738febb57ae653",
            "next": "9962e2ddfa55caed20f8565776738febb57ae653"
        },
        "commit_message": "Add support for HttpUrlConnection (#460)\n\ncloses #330",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9962e2ddfa55caed20f8565776738febb57ae653": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(TraceContextHolder<?> holder)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.resetState()",
                    "public void co.elastic.apm.agent.impl.transaction.Span.doEnd(long epochMicros)"
                ]
            },
            "d073b288eb4901b742b2a8fdbeba5f8298937faf": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(TraceContextHolder<?> holder)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.resetState()",
                    "public void co.elastic.apm.agent.impl.transaction.Span.doEnd(long epochMicros)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b386715d794ab01c03d36f9752abad6256db02fd",
        "previous_commit": "dba624f1ac348433c7f398250a3fb57198bf0e8f",
        "date": 1646662021,
        "releases": {
            "previous": "b386715d794ab01c03d36f9752abad6256db02fd",
            "next": "b386715d794ab01c03d36f9752abad6256db02fd"
        },
        "commit_message": "add granular/fine duration support (micros are only granular) (#2497)\n\n* add granular/fine duration support (micros are only granular)\r\n\r\n* cleaner code\r\n\r\nCo-authored-by: SylvainJuge <syl20j@gmail.com>\r\n\r\nCo-authored-by: SylvainJuge <syl20j@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b386715d794ab01c03d36f9752abad6256db02fd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/converter/TimeDuration.java": [
                    "public static TimeDuration co.elastic.apm.agent.configuration.converter.TimeDuration.of(String durationString)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/converter/TimeDurationValueConverter.java": [
                    "public TimeDuration co.elastic.apm.agent.configuration.converter.TimeDurationValueConverter.convert(String s)",
                    "public static ConfigurationOption.ConfigurationOptionBuilder<TimeDuration> co.elastic.apm.agent.configuration.converter.TimeDurationValueConverter.durationOption(String defaultDuration)",
                    "public static TimeDurationValueConverter co.elastic.apm.agent.configuration.converter.TimeDurationValueConverter.withDefaultDuration(String defaultDurationSuffix)"
                ]
            },
            "dba624f1ac348433c7f398250a3fb57198bf0e8f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/converter/TimeDuration.java": [
                    "public static TimeDuration co.elastic.apm.agent.configuration.converter.TimeDuration.of(String durationString)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/converter/TimeDurationValueConverter.java": [
                    "public TimeDuration co.elastic.apm.agent.configuration.converter.TimeDurationValueConverter.convert(String s)",
                    "public static ConfigurationOption.ConfigurationOptionBuilder<TimeDuration> co.elastic.apm.agent.configuration.converter.TimeDurationValueConverter.durationOption(String defaultDuration)",
                    "public static TimeDurationValueConverter co.elastic.apm.agent.configuration.converter.TimeDurationValueConverter.withDefaultDuration(String defaultDurationSuffix)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "016470294454c691bdd9ee44ea464183c3dbbf70",
        "previous_commit": "93f3140d2f8da968caac341cae800eb1244e539e",
        "date": 1669916944,
        "releases": {
            "previous": "016470294454c691bdd9ee44ea464183c3dbbf70",
            "next": "016470294454c691bdd9ee44ea464183c3dbbf70"
        },
        "commit_message": "Added agent background overhead metrics (#2888)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "016470294454c691bdd9ee44ea464183c3dbbf70": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public static ThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadDaemonPool(final String threadPurpose, int queueCapacity)",
                    "public Thread co.elastic.apm.agent.util.ExecutorUtils.newThread(Runnable r)",
                    "public static ScheduledThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadSchedulingDaemonPool(final String threadPurpose)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/JmxUtils.java": [
                    "public static Method co.elastic.apm.agent.util.JmxUtils.getOperatingSystemMBeanMethod(OperatingSystemMXBean operatingSystemBean, String methodName)"
                ]
            },
            "93f3140d2f8da968caac341cae800eb1244e539e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public static ThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadDaemonPool(final String threadPurpose, int queueCapacity)",
                    "public Thread co.elastic.apm.agent.util.ExecutorUtils.newThread(Runnable r)",
                    "public static ScheduledThreadPoolExecutor co.elastic.apm.agent.util.ExecutorUtils.createSingleThreadSchedulingDaemonPool(final String threadPurpose)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/JmxUtils.java": [
                    "public synchronized static Method co.elastic.apm.agent.util.JmxUtils.getOperatingSystemMBeanMethod(OperatingSystemMXBean operatingSystemBean, String methodName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2c1028090902a1fa13cc94f733b006fc7493fb9b",
        "previous_commit": "f241f91f4cd581b5f948fa87ef09ff3a6202d91f",
        "date": 1657273766,
        "releases": {
            "previous": "2c1028090902a1fa13cc94f733b006fc7493fb9b",
            "next": "2c1028090902a1fa13cc94f733b006fc7493fb9b"
        },
        "commit_message": "Webclient fix NPE (#2702)\n\n* prevent NPE when span is null\r\n* fix & simplify http client outcome",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2c1028090902a1fa13cc94f733b006fc7493fb9b": {
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webclient-plugin/src/main/java/co/elastic/apm/agent/springwebclient/WebClientSubscriber.java": [
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onError(Throwable throwable)",
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onNext(T t)",
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onComplete()",
                    "private void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.cancelSpan()"
                ]
            },
            "f241f91f4cd581b5f948fa87ef09ff3a6202d91f": {
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webclient-plugin/src/main/java/co/elastic/apm/agent/springwebclient/WebClientSubscriber.java": [
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onError(Throwable throwable)",
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onNext(T t)",
                    "public void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.onComplete()",
                    "private void co.elastic.apm.agent.springwebclient.WebClientSubscriber<T>.cancelSpan()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4067420042466fd20ef704f82d6535c85fd09caa",
        "previous_commit": "7430c127c4792c89162a558ac544894f4b82e6d6",
        "date": 1590913171,
        "releases": {
            "previous": "4067420042466fd20ef704f82d6535c85fd09caa",
            "next": "4067420042466fd20ef704f82d6535c85fd09caa"
        },
        "commit_message": "Jul deadlock workaround (#1203)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4067420042466fd20ef704f82d6535c85fd09caa": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequestToUrl(URL url)"
                ],
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private synchronized void co.elastic.apm.agent.jmx.JmxMetricTracker.tryInit()",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.run()",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.deferInit()"
                ]
            },
            "7430c127c4792c89162a558ac544894f4b82e6d6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequestToUrl(URL url)"
                ],
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private synchronized void co.elastic.apm.agent.jmx.JmxMetricTracker.tryInit()",
                    "public void co.elastic.apm.agent.jmx.JmxMetricTracker.run()",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.deferInit()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5c73fc0519c145a3d4fb38c02f456acb1854fe29",
        "previous_commit": "5acdd7b0a9d72bfac17c2a856f72c74ceb3ebb4c",
        "date": 1616589796,
        "releases": {
            "previous": "5c73fc0519c145a3d4fb38c02f456acb1854fe29",
            "next": "5c73fc0519c145a3d4fb38c02f456acb1854fe29"
        },
        "commit_message": "Attacher improvements (#1667)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5c73fc0519c145a3d4fb38c02f456acb1854fe29": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(Map<String, String> configuration)",
                    "private static File co.elastic.apm.attach.ElasticApmAttacher.getAgentJarFile()",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticAttachmentProvider.java": [
                    "public synchronized static ByteBuddyAgent.AttachmentProvider co.elastic.apm.attach.ElasticAttachmentProvider.get()"
                ]
            },
            "5acdd7b0a9d72bfac17c2a856f72c74ceb3ebb4c": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(Map<String, String> configuration)",
                    "private static File co.elastic.apm.attach.ElasticApmAttacher.getAgentJarFile()",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticAttachmentProvider.java": [
                    "public synchronized static ByteBuddyAgent.AttachmentProvider co.elastic.apm.attach.ElasticAttachmentProvider.get()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "484155a16f0d046a82c88f5b6d2b8245137442e3",
        "previous_commit": "a538a5e80b69b22f011e46a7d16d47bce9eba0fc",
        "date": 1527505921,
        "releases": {
            "previous": "484155a16f0d046a82c88f5b6d2b8245137442e3",
            "next": "484155a16f0d046a82c88f5b6d2b8245137442e3"
        },
        "commit_message": "Optimize logging of start/end transaction/span\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "484155a16f0d046a82c88f5b6d2b8245137442e3": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.endTransaction(Transaction transaction, boolean releaseActiveTransaction)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startManualTransaction(@Nullable String traceContextHeader, Sampler sampler, long nanoTime)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span, boolean releaseActiveSpan)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startManualSpan(@Nullable Transaction transaction, @Nullable Span parentSpan, long nanoTime)"
                ]
            },
            "a538a5e80b69b22f011e46a7d16d47bce9eba0fc": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.endTransaction(Transaction transaction, boolean releaseActiveTransaction)",
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startManualTransaction(@Nullable String traceContextHeader, Sampler sampler, long nanoTime)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.endSpan(Span span, boolean releaseActiveSpan)",
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startManualSpan(@Nullable Transaction transaction, @Nullable Span parentSpan, long nanoTime)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ae4c1f88f2ef844f3ed68b6bc0d8ae714f9ac437",
        "previous_commit": "355fd9a190591ca91df6d4fca55d1b1f664ee867",
        "date": 1681989786,
        "releases": {
            "previous": "ae4c1f88f2ef844f3ed68b6bc0d8ae714f9ac437",
            "next": "ae4c1f88f2ef844f3ed68b6bc0d8ae714f9ac437"
        },
        "commit_message": "correlate service.environment for ecs-logging & ecs reformat  (#3115)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ae4c1f88f2ef844f3ed68b6bc0d8ae714f9ac437": {
                "apm-agent-plugins/apm-ecs-logging-plugin/src/main/java/co/elastic/apm/agent/ecs_logging/logback/LogBackServiceInstrumentation.java": [
                    "public ElementMatcher.Junction<? super TypeDescription> co.elastic.apm.agent.ecs_logging.logback.LogBackServiceInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j1-plugin/src/main/java/co/elastic/apm/agent/log4j1/reformatting/Log4J1EcsReformattingHelper.java": [
                    "protected Layout co.elastic.apm.agent.log4j1.reformatting.Log4J1EcsReformattingHelper.createEcsFormatter(String eventDataset, @Nullable String serviceName, @Nullable String serviceVersion, @Nullable String serviceEnvironment, @Nullable String serviceNodeName, @Nullable Map<String, String> additionalFields, @Nullable Layout originalFormatter)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/reformatting/Log4J2EcsReformattingHelper.java": [
                    "protected Layout<? extends Serializable> co.elastic.apm.agent.log4j2.reformatting.Log4J2EcsReformattingHelper.createEcsFormatter(String eventDataset, @Nullable String serviceName, @Nullable String serviceVersion, @Nullable String serviceEnvironment, @Nullable String serviceNodeName, @Nullable Map<String, String> additionalFields, @Nullable Layout<? extends Serializable> originalFormatter)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logback-plugin/apm-logback-plugin-impl/src/main/java/co/elastic/apm/agent/logback/reformatting/LogbackEcsReformattingHelper.java": [
                    "protected Encoder<ILoggingEvent> co.elastic.apm.agent.logback.reformatting.LogbackEcsReformattingHelper.createEcsFormatter(String eventDataset, @Nullable String serviceName, @Nullable String serviceVersion, @Nullable String serviceEnvironment, @Nullable String serviceNodeName, @Nullable Map<String, String> additionalFields, @Nullable Encoder<ILoggingEvent> originalFormatter)"
                ]
            },
            "355fd9a190591ca91df6d4fca55d1b1f664ee867": {
                "apm-agent-plugins/apm-ecs-logging-plugin/src/main/java/co/elastic/apm/agent/ecs_logging/logback/LogBackServiceInstrumentation.java": [
                    "public ElementMatcher.Junction<? super TypeDescription> co.elastic.apm.agent.ecs_logging.logback.LogBackServiceInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j1-plugin/src/main/java/co/elastic/apm/agent/log4j1/reformatting/Log4J1EcsReformattingHelper.java": [
                    "protected Layout co.elastic.apm.agent.log4j1.reformatting.Log4J1EcsReformattingHelper.createEcsFormatter(String eventDataset, @Nullable String serviceName, @Nullable String serviceVersion, @Nullable String serviceNodeName, @Nullable Map<String, String> additionalFields, @Nullable Layout originalFormatter)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/reformatting/Log4J2EcsReformattingHelper.java": [
                    "protected Layout<? extends Serializable> co.elastic.apm.agent.log4j2.reformatting.Log4J2EcsReformattingHelper.createEcsFormatter(String eventDataset, @Nullable String serviceName, @Nullable String serviceVersion, @Nullable String serviceNodeName, @Nullable Map<String, String> additionalFields, @Nullable Layout<? extends Serializable> originalFormatter)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logback-plugin/apm-logback-plugin-impl/src/main/java/co/elastic/apm/agent/logback/reformatting/LogbackEcsReformattingHelper.java": [
                    "protected Encoder<ILoggingEvent> co.elastic.apm.agent.logback.reformatting.LogbackEcsReformattingHelper.createEcsFormatter(String eventDataset, @Nullable String serviceName, @Nullable String serviceVersion, @Nullable String serviceNodeName, @Nullable Map<String, String> additionalFields, @Nullable Encoder<ILoggingEvent> originalFormatter)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4820a92028048eb412d5f84139031599ffb15474",
        "previous_commit": "8e0d8069eb5823fc8ff8e27812e37fce33cb2941",
        "date": 1548952090,
        "releases": {
            "previous": "4820a92028048eb412d5f84139031599ffb15474",
            "next": "4820a92028048eb412d5f84139031599ffb15474"
        },
        "commit_message": "Add transaction.type to Error captures (#463)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4820a92028048eb412d5f84139031599ffb15474": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable TraceContextHolder<?> active)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.agent.impl.error.ErrorCapture.resetState()",
                    "public void co.elastic.apm.agent.impl.error.ErrorCapture.setTransactionSampled(boolean transactionSampled)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)"
                ]
            },
            "8e0d8069eb5823fc8ff8e27812e37fce33cb2941": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable TraceContextHolder<?> active)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.agent.impl.error.ErrorCapture.resetState()",
                    "public void co.elastic.apm.agent.impl.error.ErrorCapture.setTransactionSampled(boolean transactionSampled)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e81f0824af1aaaca3addebc69859330f4096e428",
        "previous_commit": "30f5f3d1ca7deaadd8e156bea032b4da03e2e2c5",
        "date": 1694170925,
        "releases": {
            "previous": "e81f0824af1aaaca3addebc69859330f4096e428",
            "next": "e81f0824af1aaaca3addebc69859330f4096e428"
        },
        "commit_message": "Add error reporting API to tracer-api. (#3273)\n\n* Add error reporting API to tracer-api.\r\n\r\n* Added missing @Override annotations\r\n\r\n---------\r\n\r\nCo-authored-by: Jonas Kunz <jonas.kunz@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e81f0824af1aaaca3addebc69859330f4096e428": {
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/correlation/Log4j2_7PlusLogCorrelationHelper.java": [
                    "protected boolean co.elastic.apm.agent.log4j2.correlation.Log4j2_7PlusLogCorrelationHelper.addToMdc()"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/correlation/AbstractLogCorrelationHelper.java": [
                    "protected boolean co.elastic.apm.agent.loginstr.correlation.AbstractLogCorrelationHelper.addToMdc()"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/correlation/CorrelationIdMapAdapter.java": [
                    "public String co.elastic.apm.agent.loginstr.correlation.CorrelationIdMapAdapter.call()"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/error/LoggerErrorHelper.java": [
                    "public Object co.elastic.apm.agent.loginstr.error.LoggerErrorHelper.enter(@Nullable Throwable exception, Class<?> originClass)"
                ]
            },
            "30f5f3d1ca7deaadd8e156bea032b4da03e2e2c5": {
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/correlation/Log4j2_7PlusLogCorrelationHelper.java": [
                    "protected boolean co.elastic.apm.agent.log4j2.correlation.Log4j2_7PlusLogCorrelationHelper.addToMdc()"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/correlation/AbstractLogCorrelationHelper.java": [
                    "protected boolean co.elastic.apm.agent.loginstr.correlation.AbstractLogCorrelationHelper.addToMdc()"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/correlation/CorrelationIdMapAdapter.java": [
                    "public String co.elastic.apm.agent.loginstr.correlation.CorrelationIdMapAdapter.call()"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/error/LoggerErrorHelper.java": [
                    "public Object co.elastic.apm.agent.loginstr.error.LoggerErrorHelper.enter(@Nullable Throwable exception, Class<?> originClass)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8d558b9034cae7648ccbe5ecc84b20cf4940fb32",
        "previous_commit": "3321589e8e5de5291e8607707da7a3e656a36a88",
        "date": 1645112653,
        "releases": {
            "previous": "8d558b9034cae7648ccbe5ecc84b20cf4940fb32",
            "next": "8d558b9034cae7648ccbe5ecc84b20cf4940fb32"
        },
        "commit_message": "Do not try to instrument proxy classes (#2474)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8d558b9034cae7648ccbe5ecc84b20cf4940fb32": {
                "apm-agent-plugins/apm-jakarta-websocket-plugin/src/main/java/co/elastic/apm/agent/websocket/BaseServerEndpointInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.websocket.BaseServerEndpointInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsMessageListenerInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jms.JmsMessageListenerInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-scheduled-annotation-plugin/src/main/java/co/elastic/apm/agent/scheduled/ScheduledTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.scheduled.ScheduledTransactionNameInstrumentation.getTypeMatcher()"
                ]
            },
            "3321589e8e5de5291e8607707da7a3e656a36a88": {
                "apm-agent-plugins/apm-jakarta-websocket-plugin/src/main/java/co/elastic/apm/agent/websocket/BaseServerEndpointInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.websocket.BaseServerEndpointInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsMessageListenerInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jms.JmsMessageListenerInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-scheduled-annotation-plugin/src/main/java/co/elastic/apm/agent/scheduled/ScheduledTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.scheduled.ScheduledTransactionNameInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "40109794fef2ac9b789c7bca3e9235f160800c97",
        "previous_commit": "f780b13ec71e615951343018d36285b3f0faf963",
        "date": 1547804269,
        "releases": {
            "previous": "40109794fef2ac9b789c7bca3e9235f160800c97",
            "next": "40109794fef2ac9b789c7bca3e9235f160800c97"
        },
        "commit_message": "Add self and remote attach capabilities (#420)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "40109794fef2ac9b789c7bca3e9235f160800c97": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public static void co.elastic.apm.agent.bci.AgentMain.agentmain(String agentArguments, Instrumentation instrumentation)",
                    "public static void co.elastic.apm.agent.bci.AgentMain.premain(String agentArguments, Instrumentation instrumentation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initialize(String agentArguments, Instrumentation instrumentation, File agentJarFile)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ]
            },
            "f780b13ec71e615951343018d36285b3f0faf963": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public static void co.elastic.apm.agent.bci.AgentMain.agentmain(String agentArguments, Instrumentation instrumentation)",
                    "public static void co.elastic.apm.agent.bci.AgentMain.premain(String agentArguments, Instrumentation instrumentation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initialize(Instrumentation instrumentation, File agentJarFile)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d0f4d134599ce87803f25f1a003224e2b44e4548",
        "previous_commit": "d0be02bd3fef00ad128f08588fb4c25dd17fb7a9",
        "date": 1519140118,
        "releases": {
            "previous": "d0f4d134599ce87803f25f1a003224e2b44e4548",
            "next": "d0f4d134599ce87803f25f1a003224e2b44e4548"
        },
        "commit_message": "First draft of internal and external API\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d0f4d134599ce87803f25f1a003224e2b44e4548": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)",
                    "public MediaType co.elastic.apm.report.ApmServerHttpPayloadSender.contentType()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.init(FilterConfig filterConfig)",
                    "public void co.elastic.apm.servlet.ApmFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)"
                ]
            },
            "d0be02bd3fef00ad128f08588fb4c25dd17fb7a9": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)",
                    "public MediaType co.elastic.apm.report.ApmServerHttpPayloadSender.contentType()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.init(FilterConfig filterConfig)",
                    "public void co.elastic.apm.servlet.ApmFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "951b5fff8863a7d1a0816c43b16ac920006e315c",
        "previous_commit": "e1438b6cd80eb238e59929e8f175526c4c435355",
        "date": 1597933221,
        "releases": {
            "previous": "951b5fff8863a7d1a0816c43b16ac920006e315c",
            "next": "951b5fff8863a7d1a0816c43b16ac920006e315c"
        },
        "commit_message": "Add ability to specify directory that libasyncProfiler is exported to, to support /tmp partitions that have noexec set (#1350)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "951b5fff8863a7d1a0816c43b16ac920006e315c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/IOUtils.java": [
                    "public static synchronized File co.elastic.apm.agent.util.IOUtils.exportResourceToDirectory(String resource, String parentDirectory, String tempFileNamePrefix, String tempFileNameExtension)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.profile(TimeDuration sampleRate, TimeDuration profilingDuration)",
                    "public boolean co.elastic.apm.agent.profiler.SamplingProfiler.onDeactivation(TraceContext activeSpan, @Nullable TraceContext previouslyActive)",
                    "public boolean co.elastic.apm.agent.profiler.SamplingProfiler.onActivation(TraceContext activeSpan, @Nullable TraceContext previouslyActive)"
                ]
            },
            "e1438b6cd80eb238e59929e8f175526c4c435355": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/IOUtils.java": [
                    "public static synchronized File co.elastic.apm.agent.util.IOUtils.exportResourceToTemp(String resource, String tempFileNamePrefix, String tempFileNameExtension)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.profile(TimeDuration sampleRate, TimeDuration profilingDuration)",
                    "public boolean co.elastic.apm.agent.profiler.SamplingProfiler.onDeactivation(TraceContext activeSpan, @Nullable TraceContext previouslyActive)",
                    "public boolean co.elastic.apm.agent.profiler.SamplingProfiler.onActivation(TraceContext activeSpan, @Nullable TraceContext previouslyActive)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "df7159e4b060abe236ed855f38fba2a7a3482ec8",
        "previous_commit": "418eda99a755de1135e79f72dcf7f72df56f5cce",
        "date": 1624945651,
        "releases": {
            "previous": "df7159e4b060abe236ed855f38fba2a7a3482ec8",
            "next": "df7159e4b060abe236ed855f38fba2a7a3482ec8"
        },
        "commit_message": "Printing info for NullCheck logger initialization error (#1866)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "df7159e4b060abe236ed855f38fba2a7a3482ec8": {
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/weakmap/NullCheck.java": [
                    "private static <T> boolean co.elastic.apm.agent.sdk.weakmap.NullCheck.isNull(@Nullable T v, boolean isKey)"
                ],
                "apm-agent-premain/src/main/java/co/elastic/apm/agent/premain/AgentMain.java": [
                    "private static void co.elastic.apm.agent.premain.AgentMain.delayAndInitAgentAsync(final String agentArguments, final Instrumentation instrumentation, final boolean premain, final long delayAgentInitMs)",
                    "public void co.elastic.apm.agent.premain.AgentMain.run()"
                ],
                "apm-agent-premain/src/main/java/co/elastic/apm/agent/premain/BootstrapChecks.java": [
                    "boolean co.elastic.apm.agent.premain.BootstrapChecks.isPassing()"
                ]
            },
            "418eda99a755de1135e79f72dcf7f72df56f5cce": {
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/weakmap/NullCheck.java": [
                    "private static <T> boolean co.elastic.apm.agent.sdk.weakmap.NullCheck.isNull(@Nullable T v, boolean isKey)"
                ],
                "apm-agent-premain/src/main/java/co/elastic/apm/agent/premain/AgentMain.java": [
                    "private static void co.elastic.apm.agent.premain.AgentMain.delayAndInitAgentAsync(final String agentArguments, final Instrumentation instrumentation, final boolean premain, final long delayAgentInitMs)",
                    "public void co.elastic.apm.agent.premain.AgentMain.run()"
                ],
                "apm-agent-premain/src/main/java/co/elastic/apm/agent/premain/BootstrapChecks.java": [
                    "boolean co.elastic.apm.agent.premain.BootstrapChecks.isPassing()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c9149dbf340c22cd27617f7c55cee7d8b41999db",
        "previous_commit": "39ee1f05e213c090d7c27b18b30b39d3bc09998d",
        "date": 1554281103,
        "releases": {
            "previous": "c9149dbf340c22cd27617f7c55cee7d8b41999db",
            "next": "c9149dbf340c22cd27617f7c55cee7d8b41999db"
        },
        "commit_message": "Avoid that the reporter blocks server shutdown (#554)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c9149dbf340c22cd27617f7c55cee7d8b41999db": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.run()",
                    "public Future<Void> co.elastic.apm.agent.report.ApmServerReporter.flush()",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.close()",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.scheduleMetricReporting(final MetricRegistry metricRegistry, long intervalMs)"
                ]
            },
            "39ee1f05e213c090d7c27b18b30b39d3bc09998d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.run()",
                    "public Future<Void> co.elastic.apm.agent.report.ApmServerReporter.flush()",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.close()",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.scheduleMetricReporting(final MetricRegistry metricRegistry, long intervalMs)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9e8b64f89057d8cfc248048c1cccb246032955bd",
        "previous_commit": "0323be3d47acb8f6fb8376f59f59287bc7d963cc",
        "date": 1560346130,
        "releases": {
            "previous": "9e8b64f89057d8cfc248048c1cccb246032955bd",
            "next": "9e8b64f89057d8cfc248048c1cccb246032955bd"
        },
        "commit_message": "Handling recycling race and volatile read-writes in Apache Async client (#662)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9e8b64f89057d8cfc248048c1cccb246032955bd": {
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpAsyncRequestProducerWrapper.java": [
                    "public void co.elastic.apm.agent.httpclient.HttpAsyncRequestProducerWrapper.close()",
                    "public HttpRequest co.elastic.apm.agent.httpclient.HttpAsyncRequestProducerWrapper.generateRequest()",
                    "public HttpAsyncRequestProducerWrapper co.elastic.apm.agent.httpclient.HttpAsyncRequestProducerWrapper.with(HttpAsyncRequestProducer delegate, Span span)",
                    "public void co.elastic.apm.agent.httpclient.HttpAsyncRequestProducerWrapper.resetState()"
                ]
            },
            "0323be3d47acb8f6fb8376f59f59287bc7d963cc": {
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/HttpAsyncRequestProducerWrapper.java": [
                    "public void co.elastic.apm.agent.httpclient.HttpAsyncRequestProducerWrapper.close()",
                    "public HttpRequest co.elastic.apm.agent.httpclient.HttpAsyncRequestProducerWrapper.generateRequest()",
                    "public HttpAsyncRequestProducerWrapper co.elastic.apm.agent.httpclient.HttpAsyncRequestProducerWrapper.with(HttpAsyncRequestProducer delegate, Span span)",
                    "public void co.elastic.apm.agent.httpclient.HttpAsyncRequestProducerWrapper.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "64a6c21d3b3cfe50b1fd58e7d8bbe62daccd13b7",
        "previous_commit": "5ce62af57be3bb28eb17fc8d33aacfb8c2b14602",
        "date": 1546850593,
        "releases": {
            "previous": "64a6c21d3b3cfe50b1fd58e7d8bbe62daccd13b7",
            "next": "64a6c21d3b3cfe50b1fd58e7d8bbe62daccd13b7"
        },
        "commit_message": "Flush reporter on shutdown (#397)\n\nreference: https://discuss.elastic.co/t/debugging-information-for-java-agent/160925/24",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "64a6c21d3b3cfe50b1fd58e7d8bbe62daccd13b7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.translateTo(ReportingEvent event, long sequence)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.close()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            },
            "5ce62af57be3bb28eb17fc8d33aacfb8c2b14602": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.translateTo(ReportingEvent event, long sequence)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.close()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)",
                    "private void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.handleEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d178642d11b7ee69f622cd38a35268f5e67cad2e",
        "previous_commit": "414860edd0674beed5171c13c25e650975b0cc29",
        "date": 1707474596,
        "releases": {
            "previous": "d178642d11b7ee69f622cd38a35268f5e67cad2e",
            "next": "d178642d11b7ee69f622cd38a35268f5e67cad2e"
        },
        "commit_message": "Introduce Tracer API for log capture. (#3515)\n\n\r\n\r\n---------\r\n\r\nCo-authored-by: Sylvain Juge <763082+SylvainJuge@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d178642d11b7ee69f622cd38a35268f5e67cad2e": {
                "apm-agent-plugins/apm-logging-plugin/apm-jul-plugin/src/main/java/co/elastic/apm/agent/jul/sending/JulLogSenderHandler.java": [
                    "public void co.elastic.apm.agent.jul.sending.JulLogSenderHandler.publish(LogRecord record)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j1-plugin/src/main/java/co/elastic/apm/agent/log4j1/sending/LogSenderAppender.java": [
                    "protected void co.elastic.apm.agent.log4j1.sending.LogSenderAppender.append(LoggingEvent event)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/sending/Log4j2LogSenderAppender.java": [
                    "public void co.elastic.apm.agent.log4j2.sending.Log4j2LogSenderAppender.append(LogEvent event)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logback-plugin/apm-logback-plugin-impl/src/main/java/co/elastic/apm/agent/logback/sending/LogbackLogSenderAppender.java": [
                    "protected void co.elastic.apm.agent.logback.sending.LogbackLogSenderAppender.append(ILoggingEvent eventObject)"
                ]
            },
            "414860edd0674beed5171c13c25e650975b0cc29": {
                "apm-agent-plugins/apm-logging-plugin/apm-jul-plugin/src/main/java/co/elastic/apm/agent/jul/sending/JulLogSenderHandler.java": [
                    "public void co.elastic.apm.agent.jul.sending.JulLogSenderHandler.publish(LogRecord record)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j1-plugin/src/main/java/co/elastic/apm/agent/log4j1/sending/LogSenderAppender.java": [
                    "protected void co.elastic.apm.agent.log4j1.sending.LogSenderAppender.append(LoggingEvent event)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/sending/Log4j2LogSenderAppender.java": [
                    "public void co.elastic.apm.agent.log4j2.sending.Log4j2LogSenderAppender.append(LogEvent event)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logback-plugin/apm-logback-plugin-impl/src/main/java/co/elastic/apm/agent/logback/sending/LogbackLogSenderAppender.java": [
                    "protected void co.elastic.apm.agent.logback.sending.LogbackLogSenderAppender.append(ILoggingEvent eventObject)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2dea96a881bd3488388149feb5b8087225af55ad",
        "previous_commit": "e88df63db8e236c492bffb9c4d33aa94823b0cf1",
        "date": 1686009256,
        "releases": {
            "previous": "2dea96a881bd3488388149feb5b8087225af55ad",
            "next": "2dea96a881bd3488388149feb5b8087225af55ad"
        },
        "commit_message": "Fix external plugin OpenTelemetry instrumentation (#3154)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2dea96a881bd3488388149feb5b8087225af55ad": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "private static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.internalBootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object[] args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyPluginClassLoaderFactory.java": [
                    "public synchronized static ClassLoader co.elastic.apm.agent.bci.IndyPluginClassLoaderFactory.getOrCreatePluginClassLoader(@Nullable ClassLoader targetClassLoader, List<String> classesToInject, ClassLoader agentClassLoader, ClassFileLocator classFileLocator, ElementMatcher<? super TypeDescription> exclusionMatcher, boolean allowOtelClassesFromAgentCl)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/classloading/DiscriminatingMultiParentClassLoader.java": [
                    "public String co.elastic.apm.agent.bci.classloading.DiscriminatingMultiParentClassLoader.toString()"
                ],
                "integration-tests/external-plugin-otel-test/external-plugin-otel-test-plugin1/src/main/java/co/elastic/apm/sample/plugin1/CreateTransactionInstrumentation.java": [
                    "public static Object co.elastic.apm.sample.plugin1.CreateTransactionInstrumentation.onEnter()"
                ]
            },
            "e88df63db8e236c492bffb9c4d33aa94823b0cf1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "private static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.internalBootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object[] args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyPluginClassLoaderFactory.java": [
                    "public synchronized static ClassLoader co.elastic.apm.agent.bci.IndyPluginClassLoaderFactory.getOrCreatePluginClassLoader(@Nullable ClassLoader targetClassLoader, List<String> classesToInject, ClassLoader agentClassLoader, ClassFileLocator classFileLocator, ElementMatcher<? super TypeDescription> exclusionMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/classloading/DiscriminatingMultiParentClassLoader.java": [
                    "public String co.elastic.apm.agent.bci.classloading.DiscriminatingMultiParentClassLoader.toString()"
                ],
                "integration-tests/external-plugin-otel-test/external-plugin-otel-test-plugin1/src/main/java/co/elastic/apm/sample/plugin1/CreateTransactionInstrumentation.java": [
                    "public static Object co.elastic.apm.sample.plugin1.CreateTransactionInstrumentation.onEnter()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6c772dc9a2ed839718d94667847f0aac0f458aee",
        "previous_commit": "5d28620dbc462d85886f333ef8b0dca4337145be",
        "date": 1617548637,
        "releases": {
            "previous": "6c772dc9a2ed839718d94667847f0aac0f458aee",
            "next": "6c772dc9a2ed839718d94667847f0aac0f458aee"
        },
        "commit_message": "Loading Advice classes lazily when required (#1736)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6c772dc9a2ed839718d94667847f0aac0f458aee": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ]
            },
            "5d28620dbc462d85886f333ef8b0dca4337145be": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a040f5ad380a5bd401f26ccebdf71b61a2630970",
        "previous_commit": "6bcc51bdfe772080fc98405c8d403682539de60a",
        "date": 1623144777,
        "releases": {
            "previous": "a040f5ad380a5bd401f26ccebdf71b61a2630970",
            "next": "a040f5ad380a5bd401f26ccebdf71b61a2630970"
        },
        "commit_message": "prevent NPE when capturing headers (#1842)\n\n* prevent NPE when capturing headers\n\n* allow & serialize null message headers\n\n* ensure proper array capacity + test\n\n* update changelog\n\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a040f5ad380a5bd401f26ccebdf71b61a2630970": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMessageContext(final Message message)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeField(final String fieldName, @Nullable final CharSequence value, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/BinaryHeaderMap.java": [
                    "public CharSequence co.elastic.apm.agent.util.BinaryHeaderMap.getValue()",
                    "public Entry co.elastic.apm.agent.util.BinaryHeaderMap.next()"
                ]
            },
            "6bcc51bdfe772080fc98405c8d403682539de60a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMessageContext(final Message message)",
                    "static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.writeField(final String fieldName, @Nullable final CharSequence value, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/BinaryHeaderMap.java": [
                    "public CharSequence co.elastic.apm.agent.util.BinaryHeaderMap.getValue()",
                    "public Entry co.elastic.apm.agent.util.BinaryHeaderMap.next()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b9f10636ab159e358470ada26c758c00ac452c7f",
        "previous_commit": "ec7781c7698b14ef2205960eb321689e5cf5d10c",
        "date": 1625382900,
        "releases": {
            "previous": "b9f10636ab159e358470ada26c758c00ac452c7f",
            "next": "b9f10636ab159e358470ada26c758c00ac452c7f"
        },
        "commit_message": "Propagating trace context in HTTP requests without spans (#1883)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b9f10636ab159e358470ada26c758c00ac452c7f": {
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/helper/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.helper.HttpAsyncRequestProducerWrapper.generateRequest()",
                    "public void co.elastic.apm.agent.httpclient.helper.HttpAsyncRequestProducerWrapper.resetState()"
                ],
                "apm-agent-plugins/apm-spring-resttemplate/apm-spring-resttemplate-plugin/src/main/java/co/elastic/apm/agent/resttemplate/SpringRestTemplateAdvice.java": [
                    "public static Object co.elastic.apm.agent.resttemplate.SpringRestTemplateAdvice.beforeExecute(@Advice.This ClientHttpRequest request)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebClientHelper.java": [
                    "public void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.startSpan(AbstractSpan<?> parent, HttpContext<?> httpContext, HttpClientRequest httpRequest)"
                ]
            },
            "ec7781c7698b14ef2205960eb321689e5cf5d10c": {
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/helper/HttpAsyncRequestProducerWrapper.java": [
                    "public HttpRequest co.elastic.apm.agent.httpclient.helper.HttpAsyncRequestProducerWrapper.generateRequest()",
                    "public void co.elastic.apm.agent.httpclient.helper.HttpAsyncRequestProducerWrapper.resetState()"
                ],
                "apm-agent-plugins/apm-spring-resttemplate/apm-spring-resttemplate-plugin/src/main/java/co/elastic/apm/agent/resttemplate/SpringRestTemplateAdvice.java": [
                    "public static Object co.elastic.apm.agent.resttemplate.SpringRestTemplateAdvice.beforeExecute(@Advice.This ClientHttpRequest request)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebClientHelper.java": [
                    "public void co.elastic.apm.agent.vertx.AbstractVertxWebClientHelper.startSpan(AbstractSpan<?> parent, HttpContext<?> httpContext, HttpClientRequest httpRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c4a9dc65967347c9d64ed680def4c86df8d2e6f9",
        "previous_commit": "73b62624cfa4e095b1a6241ac11bac046dc096f1",
        "date": 1674736564,
        "releases": {
            "previous": "c4a9dc65967347c9d64ed680def4c86df8d2e6f9",
            "next": "c4a9dc65967347c9d64ed680def4c86df8d2e6f9"
        },
        "commit_message": "Readded ldap plugin, added instrumentation module opening support (#2977)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c4a9dc65967347c9d64ed680def4c86df8d2e6f9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static Collection<String> co.elastic.apm.agent.bci.ElasticApmAgent.getPluginClassLoaderRootPackages(String pluginPackage)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "private static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.internalBootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object[] args)"
                ]
            },
            "73b62624cfa4e095b1a6241ac11bac046dc096f1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)",
                    "public static Collection<String> co.elastic.apm.agent.bci.ElasticApmAgent.getPluginClassLoaderRootPackages(String pluginPackage)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "private static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.internalBootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object[] args)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a987ee1d8e33b60ad740dd8ee18612ff7d8316dc",
        "previous_commit": "ea58e39e08f246aee28477d66083811289b6836f",
        "date": 1668893518,
        "releases": {
            "previous": "a987ee1d8e33b60ad740dd8ee18612ff7d8316dc",
            "next": "a987ee1d8e33b60ad740dd8ee18612ff7d8316dc"
        },
        "commit_message": "handle micrometer interval vs metrics interval (#2801)\n\n* handle micrometer interval vs metrics interval\r\n\r\n* support attaching after the micrometer SimpleMeterRegistry has been created\r\n\r\n* handle micrometer interval vs metrics interval\r\n\r\n* support attaching after the micrometer SimpleMeterRegistry has been created\r\n\r\n* move static class ref to runtime to fix the test break",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a987ee1d8e33b60ad740dd8ee18612ff7d8316dc": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterConfiguration.java": [
                    "public long co.elastic.apm.agent.report.ReporterConfiguration.getMetricsIntervalMs()"
                ],
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMetricsReporter.java": [
                    "public void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.run()",
                    "private synchronized void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.scheduleReporting()",
                    "void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.registerMeterRegistry(MeterRegistry meterRegistry)"
                ]
            },
            "ea58e39e08f246aee28477d66083811289b6836f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterConfiguration.java": [
                    "public long co.elastic.apm.agent.report.ReporterConfiguration.getMetricsIntervalMs()"
                ],
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMetricsReporter.java": [
                    "public void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.run()",
                    "private synchronized void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.scheduleReporting()",
                    "public void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.registerMeterRegistry(MeterRegistry meterRegistry)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b81305dc53ff46ff1d16a049858d44aedd979c4a",
        "previous_commit": "8ef5bf956c42d907aa1b4c3f1ba54d3963f2f43d",
        "date": 1701246229,
        "releases": {
            "previous": "b81305dc53ff46ff1d16a049858d44aedd979c4a",
            "next": "b81305dc53ff46ff1d16a049858d44aedd979c4a"
        },
        "commit_message": "fix metadata parsing for gardener + hostname detection heuristic (#3418)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b81305dc53ff46ff1d16a049858d44aedd979c4a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.metadata.SystemInfo.parseCgroupsLine(String line)",
                    "SystemInfo co.elastic.apm.agent.impl.metadata.SystemInfo.parseCgroupsV2ContainerId(List<String> lines)",
                    "public static SystemInfo co.elastic.apm.agent.impl.metadata.SystemInfo.create(final @Nullable String configuredHostname, final long timeoutMillis, ServerlessConfiguration serverlessConfiguration)",
                    "static String co.elastic.apm.agent.impl.metadata.SystemInfo.fallbackHostnameDiscovery(boolean isWindows)"
                ]
            },
            "8ef5bf956c42d907aa1b4c3f1ba54d3963f2f43d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.metadata.SystemInfo.parseCgroupsLine(String line)",
                    "SystemInfo co.elastic.apm.agent.impl.metadata.SystemInfo.parseCgroupsV2ContainerId(List<String> lines)",
                    "public static SystemInfo co.elastic.apm.agent.impl.metadata.SystemInfo.create(final @Nullable String configuredHostname, final long timeoutMillis, ServerlessConfiguration serverlessConfiguration)",
                    "static String co.elastic.apm.agent.impl.metadata.SystemInfo.fallbackHostnameDiscovery(boolean isWindows)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a8096b32ec575fb1389b8e1061f9fb77a9fd7d7d",
        "previous_commit": "2ff13a01101bafab36fe0faa8492557d5b8e4947",
        "date": 1519229915,
        "releases": {
            "previous": "a8096b32ec575fb1389b8e1061f9fb77a9fd7d7d",
            "next": "a8096b32ec575fb1389b8e1061f9fb77a9fd7d7d"
        },
        "commit_message": "Fix json and reporter\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a8096b32ec575fb1389b8e1061f9fb77a9fd7d7d": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Transaction.java": [
                    "public void co.elastic.apm.impl.Transaction.resetState()",
                    "public Transaction co.elastic.apm.impl.Transaction.start(ElasticApmTracer tracer, long startTimestampNanos)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final TransactionPayload payload)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)"
                ]
            },
            "2ff13a01101bafab36fe0faa8492557d5b8e4947": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Transaction.java": [
                    "public void co.elastic.apm.impl.Transaction.resetState()",
                    "public Transaction co.elastic.apm.impl.Transaction.start(ElasticApmTracer tracer, long startTimestampNanos)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final TransactionPayload payload)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "44bf46e36b53c59a14b836c0a3a52a2075f2ef2a",
        "previous_commit": "d46404b5c95f516b5650eb5ca648d0000105243e",
        "date": 1529146684,
        "releases": {
            "previous": "44bf46e36b53c59a14b836c0a3a52a2075f2ef2a",
            "next": "44bf46e36b53c59a14b836c0a3a52a2075f2ef2a"
        },
        "commit_message": "Use same advice for Servlet and FilterChain\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "44bf46e36b53c59a14b836c0a3a52a2075f2ef2a": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/FilterChainInstrumentation.java": [
                    "public void co.elastic.apm.servlet.FilterChainInstrumentation.init(ElasticApmTracer tracer)",
                    "public Class<?> co.elastic.apm.servlet.FilterChainInstrumentation.getAdviceClass()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletInstrumentation.java": [
                    "public void co.elastic.apm.servlet.ServletInstrumentation.init(ElasticApmTracer tracer)",
                    "public Class<?> co.elastic.apm.servlet.ServletInstrumentation.getAdviceClass()"
                ]
            },
            "d46404b5c95f516b5650eb5ca648d0000105243e": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/FilterChainInstrumentation.java": [
                    "static void co.elastic.apm.servlet.FilterChainInstrumentation.init(ElasticApmTracer tracer)",
                    "public void co.elastic.apm.servlet.FilterChainInstrumentation.init(ElasticApmTracer tracer)",
                    "public Class<?> co.elastic.apm.servlet.FilterChainInstrumentation.getAdviceClass()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletInstrumentation.java": [
                    "public void co.elastic.apm.servlet.ServletInstrumentation.init(ElasticApmTracer tracer)",
                    "static void co.elastic.apm.servlet.ServletInstrumentation.init(ElasticApmTracer tracer)",
                    "public Class<?> co.elastic.apm.servlet.ServletInstrumentation.getAdviceClass()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e6c7e7804aaafb9db99db902bc7df1a6d904c6ed",
        "previous_commit": "09d11e178ca6224baf06c5e87d0a6eeca55bbb8d",
        "date": 1572777568,
        "releases": {
            "previous": "e6c7e7804aaafb9db99db902bc7df1a6d904c6ed",
            "next": "e6c7e7804aaafb9db99db902bc7df1a6d904c6ed"
        },
        "commit_message": "Avoid using agent args when attaching (#914)\n\nBecause they are limited in size",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e6c7e7804aaafb9db99db902bc7df1a6d904c6ed": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(Map<String, String> configuration)",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "static Arguments co.elastic.apm.attach.RemoteAttacher.parse(String... args)",
                    "private void co.elastic.apm.attach.RemoteAttacher.onJvmStart(JvmInfo jvmInfo)"
                ]
            },
            "09d11e178ca6224baf06c5e87d0a6eeca55bbb8d": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(Map<String, String> configuration)",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "static Arguments co.elastic.apm.attach.RemoteAttacher.parse(String... args)",
                    "private void co.elastic.apm.attach.RemoteAttacher.onJvmStart(JvmInfo jvmInfo)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "279d8b41f2101023d83f80e477e551f5c8e18470",
        "previous_commit": "8acd694298f61cc6d66246b8e78ed31de0118451",
        "date": 1541411337,
        "releases": {
            "previous": "279d8b41f2101023d83f80e477e551f5c8e18470",
            "next": "279d8b41f2101023d83f80e477e551f5c8e18470"
        },
        "commit_message": "Add annotations to create transactions and spans (#281)\n\ncloses #212",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "279d8b41f2101023d83f80e477e551f5c8e18470": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/bci/bytebuddy/SimpleMethodSignatureOffsetMappingFactory.java": [
                    "public Advice.OffsetMapping co.elastic.apm.bci.bytebuddy.SimpleMethodSignatureOffsetMappingFactory.make(ParameterDescription.InDefinedShape target, AnnotationDescription.Loadable<SimpleMethodSignature> annotation, AdviceType adviceType)",
                    "public Target co.elastic.apm.bci.bytebuddy.SimpleMethodSignatureOffsetMappingFactory.resolve(TypeDescription instrumentedType, MethodDescription instrumentedMethod, Assigner assigner, Advice.ArgumentHandler argumentHandler, Sort sort)"
                ]
            },
            "8acd694298f61cc6d66246b8e78ed31de0118451": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/bci/bytebuddy/SimpleMethodSignatureOffsetMappingFactory.java": [
                    "public Advice.OffsetMapping co.elastic.apm.bci.bytebuddy.SimpleMethodSignatureOffsetMappingFactory.make(ParameterDescription.InDefinedShape target, AnnotationDescription.Loadable<SimpleMethodSignature> annotation, AdviceType adviceType)",
                    "public Target co.elastic.apm.bci.bytebuddy.SimpleMethodSignatureOffsetMappingFactory.resolve(TypeDescription instrumentedType, MethodDescription instrumentedMethod, Assigner assigner, Advice.ArgumentHandler argumentHandler, Sort sort)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "935c73367b596d9b41ca86817e1a5fdd21f45d6f",
        "previous_commit": "a8210c03885b0e4f53f4cd3df8419caeb9924026",
        "date": 1576768811,
        "releases": {
            "previous": "935c73367b596d9b41ca86817e1a5fdd21f45d6f",
            "next": "935c73367b596d9b41ca86817e1a5fdd21f45d6f"
        },
        "commit_message": "Adding context.message.age.ms field (#970)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "935c73367b596d9b41ca86817e1a5fdd21f45d6f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Message.java": [
                    "public void co.elastic.apm.agent.impl.context.Message.resetState()",
                    "public void co.elastic.apm.agent.impl.context.Message.copyFrom(Message other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMessageContext(final Message message)"
                ]
            },
            "a8210c03885b0e4f53f4cd3df8419caeb9924026": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Message.java": [
                    "public void co.elastic.apm.agent.impl.context.Message.resetState()",
                    "public void co.elastic.apm.agent.impl.context.Message.copyFrom(Message other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMessageContext(final Message message)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1e134655830b22e844b5e95c399b28cfa12641bb",
        "previous_commit": "36754223dd5f8b0300eccfc0f6a7f8aac8e1744b",
        "date": 1548165211,
        "releases": {
            "previous": "1e134655830b22e844b5e95c399b28cfa12641bb",
            "next": "1e134655830b22e844b5e95c399b28cfa12641bb"
        },
        "commit_message": "Disable jvm.gc metrics (#437)\n\nThe APM 6.6.0 UI has problems handling metrics with tags.\r\nSo for the moment tagged metrics will be disabled.\r\nOnce you are on Kibana 6.6.1, you can safely enable the metrics again.",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1e134655830b22e844b5e95c399b28cfa12641bb": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java": [
                    "public void co.elastic.apm.agent.metrics.MetricRegistry.addUnlessNan(String name, Map<String, String> tags, DoubleSupplier metric)",
                    "public void co.elastic.apm.agent.metrics.MetricRegistry.addUnlessNegative(String name, Map<String, String> tags, DoubleSupplier metric)",
                    "public void co.elastic.apm.agent.metrics.MetricRegistry.add(String name, Map<String, String> tags, DoubleSupplier metric)"
                ]
            },
            "36754223dd5f8b0300eccfc0f6a7f8aac8e1744b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java": [
                    "public void co.elastic.apm.agent.metrics.MetricRegistry.addUnlessNan(String name, Map<String, String> tags, DoubleSupplier metric)",
                    "public void co.elastic.apm.agent.metrics.MetricRegistry.addUnlessNegative(String name, Map<String, String> tags, DoubleSupplier metric)",
                    "public void co.elastic.apm.agent.metrics.MetricRegistry.add(String name, Map<String, String> tags, DoubleSupplier metric)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "848894752ab3ca06aa7b47404043990780d761d3",
        "previous_commit": "283ecb91e556718d1096a2d3a4780a0cf886b841",
        "date": 1622445225,
        "releases": {
            "previous": "848894752ab3ca06aa7b47404043990780d761d3",
            "next": "848894752ab3ca06aa7b47404043990780d761d3"
        },
        "commit_message": "Fix type-pool cache (#1828)\n\n* Draft fix for type-pool cache\r\n\r\n* Enhance and fix cache clearance logic\r\n\r\n* Fix periodic clear\r\n\r\n* Fix SoftlyReferencingTypePoolCacheTest\r\n\r\n* Adding to CHANGELOG\r\n\r\nCo-authored-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "848894752ab3ca06aa7b47404043990780d761d3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/SoftlyReferencingTypePoolCache.java": [
                    "protected TypePool.CacheProvider co.elastic.apm.agent.bci.bytebuddy.SoftlyReferencingTypePoolCache.locate(ClassLoader classLoader)",
                    "long co.elastic.apm.agent.bci.bytebuddy.SoftlyReferencingTypePoolCache.getLastAccess()",
                    "void co.elastic.apm.agent.bci.bytebuddy.SoftlyReferencingTypePoolCache.clearIfNotAccessedSince(long clearIfNotAccessedSinceMinutes)"
                ]
            },
            "283ecb91e556718d1096a2d3a4780a0cf886b841": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/SoftlyReferencingTypePoolCache.java": [
                    "protected TypePool.CacheProvider co.elastic.apm.agent.bci.bytebuddy.SoftlyReferencingTypePoolCache.locate(ClassLoader classLoader)",
                    "long co.elastic.apm.agent.bci.bytebuddy.SoftlyReferencingTypePoolCache.getLastAccess()",
                    "void co.elastic.apm.agent.bci.bytebuddy.SoftlyReferencingTypePoolCache.clearIfNotAccessedSince(long clearIfNotAccessedSinceMinutes)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f4ba58000b377fe3f8a7559db03d8892b8199969",
        "previous_commit": "98a8aad12dd973126c96c174947af3ef40084031",
        "date": 1604929085,
        "releases": {
            "previous": "f4ba58000b377fe3f8a7559db03d8892b8199969",
            "next": "f4ba58000b377fe3f8a7559db03d8892b8199969"
        },
        "commit_message": "implement fix for hp-ux version parsing (#1477)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f4ba58000b377fe3f8a7559db03d8892b8199969": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.bci.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/JvmRuntimeInfo.java": [
                    "private static boolean co.elastic.apm.agent.util.JvmRuntimeInfo.isHotSpotVersionSupported()",
                    "static void co.elastic.apm.agent.util.JvmRuntimeInfo.parseVmInfo(String version, String vmName, @Nullable String vmVersion)"
                ]
            },
            "98a8aad12dd973126c96c174947af3ef40084031": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.bci.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/JvmRuntimeInfo.java": [
                    "private static boolean co.elastic.apm.agent.util.JvmRuntimeInfo.isHotSpotVersionSupported()",
                    "static void co.elastic.apm.agent.util.JvmRuntimeInfo.parseVmInfo(String version, String vmName, @Nullable String vmVersion)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "035ba3a2ef30262d6e1983daf36d92128bd76ce2",
        "previous_commit": "64a6c21d3b3cfe50b1fd58e7d8bbe62daccd13b7",
        "date": 1546850882,
        "releases": {
            "previous": "035ba3a2ef30262d6e1983daf36d92128bd76ce2",
            "next": "035ba3a2ef30262d6e1983daf36d92128bd76ce2"
        },
        "commit_message": "Discovery of Kubernetes details from cgroup paths and env variables (#403)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "035ba3a2ef30262d6e1983daf36d92128bd76ce2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "public static SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.create()",
                    "public boolean co.elastic.apm.agent.impl.payload.SystemInfo.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSystem(final SystemInfo system)"
                ]
            },
            "64a6c21d3b3cfe50b1fd58e7d8bbe62daccd13b7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "public static SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.create()",
                    "public boolean co.elastic.apm.agent.impl.payload.SystemInfo.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSystem(final SystemInfo system)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "45857cea69a82ac97d5f1bee266f58fbedddb43e",
        "previous_commit": "ff04b0693b2de435f9e6111e475088d500ea6262",
        "date": 1563187137,
        "releases": {
            "previous": "45857cea69a82ac97d5f1bee266f58fbedddb43e",
            "next": "45857cea69a82ac97d5f1bee266f58fbedddb43e"
        },
        "commit_message": "Attempting System CL when Context CL is null and caching loading failure (#718)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "45857cea69a82ac97d5f1bee266f58fbedddb43e": {
                "apm-agent-plugins/apm-slf4j-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java": [
                    "public MethodHandle co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.get(ClassLoader classLoader)",
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.beforeActivate(TraceContextHolder<?> context)",
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.afterDeactivate()"
                ]
            },
            "ff04b0693b2de435f9e6111e475088d500ea6262": {
                "apm-agent-plugins/apm-slf4j-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java": [
                    "public MethodHandle co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.get(ClassLoader classLoader)",
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.beforeActivate(TraceContextHolder<?> context)",
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.afterDeactivate()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "246c52db2d3e7f72cb2a39840c3b7d91b4bce959",
        "previous_commit": "decd5c56a274a58e7cd5b03dd8e3cdfa8c6e3b6a",
        "date": 1647611546,
        "releases": {
            "previous": "246c52db2d3e7f72cb2a39840c3b7d91b4bce959",
            "next": "246c52db2d3e7f72cb2a39840c3b7d91b4bce959"
        },
        "commit_message": "Refactor HTTP request exclusion (#2524)\n\n* refactor http request exclusion\n\n* simplify and use single path form\n\n* remove duplication in webflux",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "246c52db2d3e7f72cb2a39840c3b7d91b4bce959": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public <HttpServletRequest, ServletContext> Transaction co.elastic.apm.agent.servlet.ServletTransactionHelper.createAndActivateTransaction( ServletRequestAdapter<HttpServletRequest, ServletContext> requestAdapter, ServletContextAdapter<ServletContext> contextAdapter, HttpServletRequest request)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "public static Transaction co.elastic.apm.agent.springwebflux.WebfluxHelper.getOrCreateTransaction(Tracer tracer, ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebHelper.java": [
                    "protected Transaction co.elastic.apm.agent.vertx.AbstractVertxWebHelper.startOrGetTransaction(HttpServerRequest httpServerRequest)"
                ]
            },
            "decd5c56a274a58e7cd5b03dd8e3cdfa8c6e3b6a": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public <HttpServletRequest, ServletContext> Transaction co.elastic.apm.agent.servlet.ServletTransactionHelper.createAndActivateTransaction( ServletRequestAdapter<HttpServletRequest, ServletContext> requestAdapter, ServletContextAdapter<ServletContext> contextAdapter, HttpServletRequest request)"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "public static Transaction co.elastic.apm.agent.springwebflux.WebfluxHelper.getOrCreateTransaction(Tracer tracer, ServerWebExchange exchange)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebHelper.java": [
                    "protected Transaction co.elastic.apm.agent.vertx.AbstractVertxWebHelper.startOrGetTransaction(HttpServerRequest httpServerRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "19a6883cb23255aaf1288529d8d0cd1751f1e231",
        "previous_commit": "196bf202edbaf3774815bcfae3f827b73caeeed5",
        "date": 1585129973,
        "releases": {
            "previous": "19a6883cb23255aaf1288529d8d0cd1751f1e231",
            "next": "19a6883cb23255aaf1288529d8d0cd1751f1e231"
        },
        "commit_message": "Document and reorder classpath config (#1087)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "19a6883cb23255aaf1288529d8d0cd1751f1e231": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()",
                    "private ConfigurationRegistry co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry(List<ConfigurationSource> configSources)",
                    "private List<ConfigurationSource> co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getConfigSources(@Nullable String agentArguments)"
                ]
            },
            "196bf202edbaf3774815bcfae3f827b73caeeed5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()",
                    "private ConfigurationRegistry co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry(List<ConfigurationSource> configSources)",
                    "private List<ConfigurationSource> co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getConfigSources(@Nullable String agentArguments)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4664ac34fbecdb8f946ad61aee4431958585746d",
        "previous_commit": "d9370ea5957639b110fbaa11d63bc382938f419e",
        "date": 1663138453,
        "releases": {
            "previous": "4664ac34fbecdb8f946ad61aee4431958585746d",
            "next": "4664ac34fbecdb8f946ad61aee4431958585746d"
        },
        "commit_message": "Promote Reactor & Weblux plugins to GA (#2782)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4664ac34fbecdb8f946ad61aee4431958585746d": {
                "apm-agent-plugins/apm-reactor-plugin/src/main/java/co/elastic/apm/agent/reactor/ReactorInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.reactor.ReactorInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webclient-plugin/src/main/java/co/elastic/apm/agent/springwebclient/WebClientExchangeFunctionInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.springwebclient.WebClientExchangeFunctionInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebFluxInstrumentation.java": [
                    "public final Collection<String> co.elastic.apm.agent.springwebflux.WebFluxInstrumentation.getInstrumentationGroupNames()"
                ]
            },
            "d9370ea5957639b110fbaa11d63bc382938f419e": {
                "apm-agent-plugins/apm-reactor-plugin/src/main/java/co/elastic/apm/agent/reactor/ReactorInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.reactor.ReactorInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webclient-plugin/src/main/java/co/elastic/apm/agent/springwebclient/WebClientExchangeFunctionInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.springwebclient.WebClientExchangeFunctionInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebFluxInstrumentation.java": [
                    "public final Collection<String> co.elastic.apm.agent.springwebflux.WebFluxInstrumentation.getInstrumentationGroupNames()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6dde355383ddee23cec45ae9be0ab31b9b515d42",
        "previous_commit": "cf3d0fcf83f180d5466ac4b32fa117b0e826f763",
        "date": 1721732629,
        "releases": {
            "previous": "6dde355383ddee23cec45ae9be0ab31b9b515d42",
            "next": "6dde355383ddee23cec45ae9be0ab31b9b515d42"
        },
        "commit_message": "jmx-metrics-fix (#3713)\n\n* properly handle missing metrics with non-wildcards\r\n\r\n* update changelog\r\n\r\n---------\r\n\r\nCo-authored-by: jackshirazi <jack.shirazi@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6dde355383ddee23cec45ae9be0ab31b9b515d42": {
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "public double co.elastic.apm.agent.jmx.JmxMetricTracker.get()",
                    "void co.elastic.apm.agent.jmx.JmxMetricTracker.register(final MBeanServer server, final Tracer tracer)",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.addJmxMetricRegistration(final JmxMetric jmxMetric, List<JmxMetricRegistration> registrations, MBeanServer server)"
                ]
            },
            "cf3d0fcf83f180d5466ac4b32fa117b0e826f763": {
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "public double co.elastic.apm.agent.jmx.JmxMetricTracker.get()",
                    "void co.elastic.apm.agent.jmx.JmxMetricTracker.register(final MBeanServer server, final Tracer tracer)",
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.addJmxMetricRegistration(final JmxMetric jmxMetric, List<JmxMetricRegistration> registrations, MBeanServer server)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "57a3870b4af6c1edc471fb407dc8d1e89a3be33d",
        "previous_commit": "4067420042466fd20ef704f82d6535c85fd09caa",
        "date": 1591183908,
        "releases": {
            "previous": "57a3870b4af6c1edc471fb407dc8d1e89a3be33d",
            "next": "57a3870b4af6c1edc471fb407dc8d1e89a3be33d"
        },
        "commit_message": "ignore jps JVM for runtime attach (#1205)\n\n* ignore jps JVM for runtime attach\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "57a3870b4af6c1edc471fb407dc8d1e89a3be33d": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/JvmDiscoverer.java": [
                    "private Set<JvmInfo> getJVMs(String jpsOutput)",
                    "private static String getJpsOutput()"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "private void co.elastic.apm.attach.RemoteAttacher.onJvmStart(JvmInfo jvmInfo)"
                ]
            },
            "4067420042466fd20ef704f82d6535c85fd09caa": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/JvmDiscoverer.java": [
                    "private Set<JvmInfo> getJVMs(String jpsOutput)",
                    "private static String getJpsOutput()"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "private void co.elastic.apm.attach.RemoteAttacher.onJvmStart(JvmInfo jvmInfo)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7434123a31cdf208f57f8f7584b099fa049d66c7",
        "previous_commit": "aa574158260955b640aa8c1904fcf83b1802774a",
        "date": 1639039354,
        "releases": {
            "previous": "7434123a31cdf208f57f8f7584b099fa049d66c7",
            "next": "7434123a31cdf208f57f8f7584b099fa049d66c7"
        },
        "commit_message": "Support to selectively enable instrumentations (#2292)\n\n* Added support to selectively enable instrumentations (#1740)\r\n\r\n* Added #2292 to the changelog\r\n\r\n* Review suggestions by @felixbarny\r\n\r\n* Added Tests for CoreConfiguration#isInstrumentationEnabled\r\n\r\n* Review suggestions by @felixbarny\r\n\r\n* Improved code\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* Updated configuration.asciidoc\r\n\r\n* Improve documentation as suggested by @SylvainJuge\r\n\r\nCo-authored-by: SylvainJuge <syl20j@gmail.com>\r\n\r\n* Added test for enable_experimental_instrumentations\r\n\r\n* Fixed enable_experimental_instrumentations\r\n\r\n* Updated configuration.asciidoc\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\nCo-authored-by: SylvainJuge <syl20j@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7434123a31cdf208f57f8f7584b099fa049d66c7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static boolean co.elastic.apm.agent.bci.ElasticApmAgent.isIncluded(ElasticApmInstrumentation advice, CoreConfiguration coreConfiguration)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/CoreConfiguration.java": [
                    "public List<ConfigurationOption<?>> co.elastic.apm.agent.configuration.CoreConfiguration.getInstrumentationOptions()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <REQUEST, RESPONSE, HTTPREQUEST, HTTPRESPONSE, CONTEXT> Object co.elastic.apm.agent.servlet.ServletApiAdvice.onServletEnter(REQUEST servletRequest, ServletHelper<REQUEST, RESPONSE, HTTPREQUEST, HTTPRESPONSE, CONTEXT> helper)"
                ]
            },
            "aa574158260955b640aa8c1904fcf83b1802774a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static boolean co.elastic.apm.agent.bci.ElasticApmAgent.isIncluded(ElasticApmInstrumentation advice, CoreConfiguration coreConfiguration)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/CoreConfiguration.java": [
                    "public List<ConfigurationOption<?>> co.elastic.apm.agent.configuration.CoreConfiguration.getInstrumentationOptions()"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <REQUEST, RESPONSE, HTTPREQUEST, HTTPRESPONSE, CONTEXT> Object co.elastic.apm.agent.servlet.ServletApiAdvice.onServletEnter(REQUEST servletRequest, ServletHelper<REQUEST, RESPONSE, HTTPREQUEST, HTTPRESPONSE, CONTEXT> helper)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3321589e8e5de5291e8607707da7a3e656a36a88",
        "previous_commit": "01843348fec16b7bb5d912800a47642de508e7c6",
        "date": 1645112576,
        "releases": {
            "previous": "3321589e8e5de5291e8607707da7a3e656a36a88",
            "next": "3321589e8e5de5291e8607707da7a3e656a36a88"
        },
        "commit_message": "Add support for en-/disabling each public annotation on each own (#2472)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3321589e8e5de5291e8607707da7a3e656a36a88": {
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureSpanInstrumentation.java": [
                    "public final Collection<String> co.elastic.apm.agent.pluginapi.CaptureSpanInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureTransactionInstrumentation.java": [
                    "public final Collection<String> co.elastic.apm.agent.pluginapi.CaptureTransactionInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/TracedInstrumentation.java": [
                    "public final Collection<String> co.elastic.apm.agent.pluginapi.TracedInstrumentation.getInstrumentationGroupNames()"
                ]
            },
            "01843348fec16b7bb5d912800a47642de508e7c6": {
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureSpanInstrumentation.java": [
                    "public final Collection<String> co.elastic.apm.agent.pluginapi.CaptureSpanInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/CaptureTransactionInstrumentation.java": [
                    "public final Collection<String> co.elastic.apm.agent.pluginapi.CaptureTransactionInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/TracedInstrumentation.java": [
                    "public final Collection<String> co.elastic.apm.agent.pluginapi.TracedInstrumentation.getInstrumentationGroupNames()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c95e5e524db86732f0508632acf8525511d8a54a",
        "previous_commit": "52fa68385d820dd37f56c4d17cb34b6ac6bf3628",
        "date": 1559630037,
        "releases": {
            "previous": "c95e5e524db86732f0508632acf8525511d8a54a",
            "next": "c95e5e524db86732f0508632acf8525511d8a54a"
        },
        "commit_message": "Fix service loading for WebLogic 12.2.1.2.0 (#649)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c95e5e524db86732f0508632acf8525511d8a54a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()",
                    "private ConfigurationRegistry co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry(List<ConfigurationSource> configSources)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DependencyInjectingServiceLoader.java": [
                    "private T co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.instantiate(String implementation)"
                ]
            },
            "52fa68385d820dd37f56c4d17cb34b6ac6bf3628": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "public ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build()",
                    "private ConfigurationRegistry co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry(List<ConfigurationSource> configSources)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DependencyInjectingServiceLoader.java": [
                    "private T co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.instantiate(String implementation)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "bd85fc411d88c2f1eb870baf06e60cdf78d79ef0",
        "previous_commit": "a7e1c25af8813c81f0593b196dcf96eb54a6cfe8",
        "date": 1613404071,
        "releases": {
            "previous": "bd85fc411d88c2f1eb870baf06e60cdf78d79ef0",
            "next": "bd85fc411d88c2f1eb870baf06e60cdf78d79ef0"
        },
        "commit_message": "Fix sample less than precision (#1655)\n\n* fix low but non-zero sample rate",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "bd85fc411d88c2f1eb870baf06e60cdf78d79ef0": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/converter/RoundedDoubleConverter.java": [
                    "public Double co.elastic.apm.agent.configuration.converter.RoundedDoubleConverter.convert(String s)",
                    "public String co.elastic.apm.agent.configuration.converter.RoundedDoubleConverter.toString(Double value)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceState.addTextHeader(String headerValue)"
                ]
            },
            "a7e1c25af8813c81f0593b196dcf96eb54a6cfe8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/converter/RoundedDoubleConverter.java": [
                    "public Double co.elastic.apm.agent.configuration.converter.RoundedDoubleConverter.convert(String s)",
                    "public String co.elastic.apm.agent.configuration.converter.RoundedDoubleConverter.toString(Double value)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceState.addTextHeader(String headerValue)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b73f0346fb84b1e90dc52dde0966e136c4a3afbb",
        "previous_commit": "d4e3a6e4dfe9abf5a4f18d30b5fd75d20a83d16e",
        "date": 1532342214,
        "releases": {
            "previous": "b73f0346fb84b1e90dc52dde0966e136c4a3afbb",
            "next": "b73f0346fb84b1e90dc52dde0966e136c4a3afbb"
        },
        "commit_message": "Execute APM server healthcheck only once\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b73f0346fb84b1e90dc52dde0966e136c4a3afbb": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "OkHttpClient co.elastic.apm.report.ReporterFactory.getOkHttpClient(ReporterConfiguration reporterConfiguration)"
                ]
            },
            "d4e3a6e4dfe9abf5a4f18d30b5fd75d20a83d16e": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "OkHttpClient co.elastic.apm.report.ReporterFactory.getOkHttpClient(ReporterConfiguration reporterConfiguration)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "70cde50ff2419a67f424fdfbea82b9d5005c7115",
        "previous_commit": "305e177e913f910528de4c23251b3a3c72feaa71",
        "date": 1559044496,
        "releases": {
            "previous": "70cde50ff2419a67f424fdfbea82b9d5005c7115",
            "next": "70cde50ff2419a67f424fdfbea82b9d5005c7115"
        },
        "commit_message": "Fix for multiple attachments on JDK < 9 (#646)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "70cde50ff2419a67f424fdfbea82b9d5005c7115": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, String agentArgs)",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "private void co.elastic.apm.attach.RemoteAttacher.attachToNewJvms(String jpsOutput)"
                ]
            },
            "305e177e913f910528de4c23251b3a3c72feaa71": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, String agentArgs)",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "private void co.elastic.apm.attach.RemoteAttacher.attachToNewJvms(String jpsOutput)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "83167b5d3f319e719539e902e755f0046e9120e7",
        "previous_commit": "78d25514be5362e3800fa460db58a9b59bef7948",
        "date": 1522066142,
        "releases": {
            "previous": "83167b5d3f319e719539e902e755f0046e9120e7",
            "next": "83167b5d3f319e719539e902e755f0046e9120e7"
        },
        "commit_message": "Log request and response on TRACE level\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "83167b5d3f319e719539e902e755f0046e9120e7": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "OkHttpClient co.elastic.apm.report.ReporterFactory.getOkHttpClient(ReporterConfiguration reporterConfiguration)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/JacksonPayloadSerializer.java": [
                    "public void co.elastic.apm.report.serialize.JacksonPayloadSerializer.serializePayload(BufferedSink sink, Payload payload)"
                ]
            },
            "78d25514be5362e3800fa460db58a9b59bef7948": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "OkHttpClient co.elastic.apm.report.ReporterFactory.getOkHttpClient(ReporterConfiguration reporterConfiguration)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/JacksonPayloadSerializer.java": [
                    "public void co.elastic.apm.report.serialize.JacksonPayloadSerializer.serializePayload(BufferedSink sink, Payload payload)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a29e51b1ed6594a66d7cd92575de907b3b2862ea",
        "previous_commit": "1ed279fe2b9a370c36a9d413e7bbda5cc3652158",
        "date": 1546611720,
        "releases": {
            "previous": "a29e51b1ed6594a66d7cd92575de907b3b2862ea",
            "next": "a29e51b1ed6594a66d7cd92575de907b3b2862ea"
        },
        "commit_message": "Fix lgtm.com warnings (#407)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a29e51b1ed6594a66d7cd92575de907b3b2862ea": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public static void co.elastic.apm.agent.bci.AgentMain.init(Instrumentation instrumentation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(String traceParentHeader)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public Transaction co.elastic.apm.agent.servlet.ServletTransactionHelper.onBefore(String servletPath, @Nullable String pathInfo, @Nullable String userAgentHeader, @Nullable String traceContextHeader)"
                ]
            },
            "1ed279fe2b9a370c36a9d413e7bbda5cc3652158": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public static void co.elastic.apm.agent.bci.AgentMain.init(Instrumentation instrumentation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(String traceParentHeader)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public Transaction co.elastic.apm.agent.servlet.ServletTransactionHelper.onBefore(String servletPath, String pathInfo, String requestURI, @Nullable String userAgentHeader, @Nullable String traceContextHeader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8e44cb51b862572d08ff6c0e44e5fbb5529fd159",
        "previous_commit": "8aaaf6a87be4dd5c172004f309e0f8ddd1f8474a",
        "date": 1563443208,
        "releases": {
            "previous": "8e44cb51b862572d08ff6c0e44e5fbb5529fd159",
            "next": "8e44cb51b862572d08ff6c0e44e5fbb5529fd159"
        },
        "commit_message": "SQL parsing improvements (#696)\n\nsupport for CALL using JDBC escape syntax\r\nsupport for MERGE\r\nsupport for DB links\r\n\r\nfixes #676",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8e44cb51b862572d08ff6c0e44e5fbb5529fd159": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/signature/Scanner.java": [
                    "public void co.elastic.apm.agent.jdbc.signature.Scanner.setQuery(String sql)",
                    "public Token co.elastic.apm.agent.jdbc.signature.Scanner.scan()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/signature/SignatureParser.java": [
                    "public void co.elastic.apm.agent.jdbc.signature.SignatureParser.querySignature(String query, StringBuilder signature, boolean preparedStatement)"
                ]
            },
            "8aaaf6a87be4dd5c172004f309e0f8ddd1f8474a": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/signature/Scanner.java": [
                    "public void co.elastic.apm.agent.jdbc.signature.Scanner.setQuery(String sql)",
                    "public Token co.elastic.apm.agent.jdbc.signature.Scanner.scan()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/signature/SignatureParser.java": [
                    "public void co.elastic.apm.agent.jdbc.signature.SignatureParser.querySignature(String query, StringBuilder signature, boolean preparedStatement)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "936d1baf7c8a26e827fbfc41e31ab9f61366b868",
        "previous_commit": "5ed21af51efc8a3bfe81b13a6727e86d05ee0740",
        "date": 1539700529,
        "releases": {
            "previous": "936d1baf7c8a26e827fbfc41e31ab9f61366b868",
            "next": "936d1baf7c8a26e827fbfc41e31ab9f61366b868"
        },
        "commit_message": "Add support for JAX-RS-based transaction names (#224)\n\ncloses #67",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "936d1baf7c8a26e827fbfc41e31ab9f61366b868": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)",
                    "public boolean co.elastic.apm.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/configuration/StartupInfo.java": [
                    "void co.elastic.apm.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ]
            },
            "5ed21af51efc8a3bfe81b13a6727e86d05ee0740": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)",
                    "public boolean co.elastic.apm.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/configuration/StartupInfo.java": [
                    "void co.elastic.apm.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "bf6782cbe143ef8a5c6a96637f50ec70e46ae37a",
        "previous_commit": "d0cd27032280bfec78065cf959dcc5488bc1f0ab",
        "date": 1541778230,
        "releases": {
            "previous": "bf6782cbe143ef8a5c6a96637f50ec70e46ae37a",
            "next": "bf6782cbe143ef8a5c6a96637f50ec70e46ae37a"
        },
        "commit_message": "Cache User-Agent header\n\nensure backoff on error\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "bf6782cbe143ef8a5c6a96637f50ec70e46ae37a": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private HttpURLConnection co.elastic.apm.report.IntakeV2ReportingEventHandler.startRequest()",
                    "private void co.elastic.apm.report.IntakeV2ReportingEventHandler.handleEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/util/VersionUtils.java": [
                    "public static String co.elastic.apm.util.VersionUtils.getAgentVersion()"
                ]
            },
            "d0cd27032280bfec78065cf959dcc5488bc1f0ab": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private HttpURLConnection co.elastic.apm.report.IntakeV2ReportingEventHandler.startRequest()",
                    "private void co.elastic.apm.report.IntakeV2ReportingEventHandler.handleEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/util/VersionUtils.java": [
                    "public static String co.elastic.apm.util.VersionUtils.getAgentVersion()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "12cef73ad70c1c3490beb8e5728184cc78288630",
        "previous_commit": "342712960cc8e0584c2e16fccad53e2b8ef035e9",
        "date": 1538560925,
        "releases": {
            "previous": "12cef73ad70c1c3490beb8e5728184cc78288630",
            "next": "12cef73ad70c1c3490beb8e5728184cc78288630"
        },
        "commit_message": "Change span type to db.<db-provider>.query (#231)\n\n* Change span type to db.<db-provider>.query\r\n\r\n* Review-based changes\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "12cef73ad70c1c3490beb8e5728184cc78288630": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/helper/JdbcHelperImpl.java": [
                    "private boolean co.elastic.apm.jdbc.helper.JdbcHelperImpl.isAlreadyMonitored(@Nullable AbstractSpan<?> parent)",
                    "public Span co.elastic.apm.jdbc.helper.JdbcHelperImpl.createJdbcSpan(@Nullable String sql, Connection connection, @Nullable AbstractSpan<?> parent)",
                    "private ConnectionMetaData co.elastic.apm.jdbc.helper.JdbcHelperImpl.getConnectionMetaData(Connection connection)"
                ]
            },
            "342712960cc8e0584c2e16fccad53e2b8ef035e9": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/helper/JdbcHelperImpl.java": [
                    "private boolean co.elastic.apm.jdbc.helper.JdbcHelperImpl.isAlreadyMonitored(@Nullable AbstractSpan<?> parent)",
                    "public Span co.elastic.apm.jdbc.helper.JdbcHelperImpl.createJdbcSpan(@Nullable String sql, Connection connection, @Nullable AbstractSpan<?> parent)",
                    "private ConnectionMetaData co.elastic.apm.jdbc.helper.JdbcHelperImpl.getConnectionMetaData(Connection connection)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "32ee207ccafe347d3fe77a65172ef809307c29f2",
        "previous_commit": "03638499be83e946050dc0d26cf465ba6e2d7195",
        "date": 1656930394,
        "releases": {
            "previous": "32ee207ccafe347d3fe77a65172ef809307c29f2",
            "next": "32ee207ccafe347d3fe77a65172ef809307c29f2"
        },
        "commit_message": "Make the metric set limit configurable (#2147) (#2148)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "32ee207ccafe347d3fe77a65172ef809307c29f2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java": [
                    "private boolean co.elastic.apm.agent.metrics.MetricRegistry.isDisabled(String name)",
                    "private MetricSet co.elastic.apm.agent.metrics.MetricRegistry.getOrCreateMetricSet(Labels labels)",
                    "private MetricSet co.elastic.apm.agent.metrics.MetricRegistry.createMetricSet(Labels.Immutable labelsCopy)"
                ]
            },
            "03638499be83e946050dc0d26cf465ba6e2d7195": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java": [
                    "private boolean co.elastic.apm.agent.metrics.MetricRegistry.isDisabled(String name)",
                    "private MetricSet co.elastic.apm.agent.metrics.MetricRegistry.getOrCreateMetricSet(Labels labels)",
                    "private MetricSet co.elastic.apm.agent.metrics.MetricRegistry.createMetricSet(Labels.Immutable labelsCopy)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9d9820bf7d8f5b7a41dd39c395c43352df23e5fd",
        "previous_commit": "77fc599fdb7df5a00dcae87b583d26a356c2efe5",
        "date": 1594103617,
        "releases": {
            "previous": "9d9820bf7d8f5b7a41dd39c395c43352df23e5fd",
            "next": "9d9820bf7d8f5b7a41dd39c395c43352df23e5fd"
        },
        "commit_message": "Delay init by default in Tomcat and JBoss, only once (#1262)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9d9820bf7d8f5b7a41dd39c395c43352df23e5fd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initialize(String agentArguments, Instrumentation instrumentation, File agentJarFile, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ]
            },
            "77fc599fdb7df5a00dcae87b583d26a356c2efe5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initialize(String agentArguments, Instrumentation instrumentation, File agentJarFile, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d4280c95bc73e9742a29403ede8f5ac3d5208fcd",
        "previous_commit": "030893a4fdbc331e60379c2a8ce747abd7d15049",
        "date": 1723623896,
        "releases": {
            "previous": "d4280c95bc73e9742a29403ede8f5ac3d5208fcd",
            "next": "d4280c95bc73e9742a29403ede8f5ac3d5208fcd"
        },
        "commit_message": "Fix log4j2 correlation with shaded log4j (#3764)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d4280c95bc73e9742a29403ede8f5ac3d5208fcd": {
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/bytebuddy/CustomElementMatchers.java": [
                    "private static ElementMatcher.Junction<ProtectionDomain> co.elastic.apm.agent.sdk.bytebuddy.CustomElementMatchers.implementationVersion(final String version, final Matcher matcher, @Nullable final String mavenGroupId, @Nullable final String mavenArtifactId)",
                    "public boolean co.elastic.apm.agent.sdk.bytebuddy.CustomElementMatchers.matches(@Nullable ProtectionDomain protectionDomain)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/correlation/Log4j2LogCorrelationInstrumentation.java": [
                    "public ElementMatcher.Junction<ProtectionDomain> co.elastic.apm.agent.log4j2.correlation.Log4j2LogCorrelationInstrumentation.getProtectionDomainPostFilter()"
                ]
            },
            "030893a4fdbc331e60379c2a8ce747abd7d15049": {
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/bytebuddy/CustomElementMatchers.java": [
                    "private static ElementMatcher.Junction<ProtectionDomain> co.elastic.apm.agent.sdk.bytebuddy.CustomElementMatchers.implementationVersion(final String version, final Matcher matcher)",
                    "public boolean co.elastic.apm.agent.sdk.bytebuddy.CustomElementMatchers.matches(@Nullable ProtectionDomain protectionDomain)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/correlation/Log4j2LogCorrelationInstrumentation.java": [
                    "public ElementMatcher.Junction<ProtectionDomain> co.elastic.apm.agent.log4j2.correlation.Log4j2LogCorrelationInstrumentation.getProtectionDomainPostFilter()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f105513a7652c180db1dd13cd4727c919a261455",
        "previous_commit": "7ffa7dd3d73e5e01e24c0f6d03639b3ee0951393",
        "date": 1633519350,
        "releases": {
            "previous": "f105513a7652c180db1dd13cd4727c919a261455",
            "next": "f105513a7652c180db1dd13cd4727c919a261455"
        },
        "commit_message": "Introduce async profiler upgrade utility and upgrade to 1.8.7 (#2165)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f105513a7652c180db1dd13cd4727c919a261455": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.profile(TimeDuration sampleRate, TimeDuration profilingDuration)",
                    "public boolean co.elastic.apm.agent.profiler.SamplingProfiler.onDeactivation(TraceContext activeSpan, @Nullable TraceContext previouslyActive)",
                    "public boolean co.elastic.apm.agent.profiler.SamplingProfiler.onActivation(TraceContext activeSpan, @Nullable TraceContext previouslyActive)"
                ]
            },
            "7ffa7dd3d73e5e01e24c0f6d03639b3ee0951393": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.profile(TimeDuration sampleRate, TimeDuration profilingDuration)",
                    "public boolean co.elastic.apm.agent.profiler.SamplingProfiler.onDeactivation(TraceContext activeSpan, @Nullable TraceContext previouslyActive)",
                    "public boolean co.elastic.apm.agent.profiler.SamplingProfiler.onActivation(TraceContext activeSpan, @Nullable TraceContext previouslyActive)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "50b2e1d4bc461cf7c752b40876cc9822ba60d1d2",
        "previous_commit": "af562cdeb0de6a352e67198b8bdbf2bac103b8f2",
        "date": 1548070580,
        "releases": {
            "previous": "50b2e1d4bc461cf7c752b40876cc9822ba60d1d2",
            "next": "50b2e1d4bc461cf7c752b40876cc9822ba60d1d2"
        },
        "commit_message": "Jsf support (#422)\n\n\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "50b2e1d4bc461cf7c752b40876cc9822ba60d1d2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.servlet.ServletInstrumentation.getTypeMatcherPreFilter()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.ServletInstrumentation.getTypeMatcher()"
                ]
            },
            "af562cdeb0de6a352e67198b8bdbf2bac103b8f2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.servlet.ServletInstrumentation.getTypeMatcherPreFilter()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.ServletInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "fb8eec30bfa529e73dac3651b79489ead8ce88de",
        "previous_commit": "fbf47846cd6f13e4d82fed68610c1f232a2ebe4f",
        "date": 1549272093,
        "releases": {
            "previous": "fb8eec30bfa529e73dac3651b79489ead8ce88de",
            "next": "fb8eec30bfa529e73dac3651b79489ead8ce88de"
        },
        "commit_message": "Fix multi-threaded use of HttpUrlConnection (#472)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "fb8eec30bfa529e73dac3651b79489ead8ce88de": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.resetState()",
                    "public void co.elastic.apm.agent.impl.transaction.Span.doEnd(long epochMicros)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/http/client/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(TraceContextHolder<?> parent, String method, @Nullable String uri, String hostName)"
                ]
            },
            "fbf47846cd6f13e4d82fed68610c1f232a2ebe4f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.resetState()",
                    "public void co.elastic.apm.agent.impl.transaction.Span.doEnd(long epochMicros)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/http/client/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(TraceContextHolder<?> parent, String method, @Nullable String uri, String hostName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "22cc1e9a7f6f5b7a866a17ef3eed2a07630afb22",
        "previous_commit": "2289d4143d1e0ed965f5c0e04098d6ed6a26c202",
        "date": 1561025770,
        "releases": {
            "previous": "22cc1e9a7f6f5b7a866a17ef3eed2a07630afb22",
            "next": "22cc1e9a7f6f5b7a866a17ef3eed2a07630afb22"
        },
        "commit_message": "Implementation version- parsing dashes and reducing log level (#683)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "22cc1e9a7f6f5b7a866a17ef3eed2a07630afb22": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(@Nullable ProtectionDomain protectionDomain)",
                    "private static Version co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.readImplementationVersionFromManifest(@Nullable ProtectionDomain protectionDomain)",
                    "public static ElementMatcher.Junction<ProtectionDomain> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.implementationVersionLte(final String version)"
                ]
            },
            "2289d4143d1e0ed965f5c0e04098d6ed6a26c202": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(@Nullable ProtectionDomain protectionDomain)",
                    "private static @Nullable Version co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.readImplementationVersionFromManifest(@Nullable ProtectionDomain protectionDomain)",
                    "public static ElementMatcher.Junction<ProtectionDomain> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.implementationVersionLte(final String version)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e9daddf977a1223a30c049a7cbfffabc07d45607",
        "previous_commit": "1f010a905deec2e7d0d20b4e9f9c01bb3f6d12ac",
        "date": 1681396394,
        "releases": {
            "previous": "e9daddf977a1223a30c049a7cbfffabc07d45607",
            "next": "e9daddf977a1223a30c049a7cbfffabc07d45607"
        },
        "commit_message": "Bypass proxy for cloud metadata (#3108)\n\n* bypass proxy for cloud metadata",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e9daddf977a1223a30c049a7cbfffabc07d45607": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/CloudMetadataProvider.java": [
                    "private static String co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.executeRequest(String url, String method, @Nullable Map<String, String> headers, int queryTimeoutMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequestToUrl(URL url)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/UrlConnectionUtils.java": [
                    "private static void co.elastic.apm.agent.util.UrlConnectionUtils.debugPrintProxySettings(URL url, boolean allowProxy)"
                ]
            },
            "1f010a905deec2e7d0d20b4e9f9c01bb3f6d12ac": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/CloudMetadataProvider.java": [
                    "private static String co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.executeRequest(String url, String method, @Nullable Map<String, String> headers, int queryTimeoutMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequestToUrl(URL url)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/UrlConnectionUtils.java": [
                    "private static void co.elastic.apm.agent.util.UrlConnectionUtils.debugPrintProxySettings(URL url)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "15c0cfc5bdfe3a8bf2090d96d8ff8451bcd4ee36",
        "previous_commit": "b53366662a3dad5a7da5f36569e72630b4b60269",
        "date": 1634127642,
        "releases": {
            "previous": "15c0cfc5bdfe3a8bf2090d96d8ff8451bcd4ee36",
            "next": "15c0cfc5bdfe3a8bf2090d96d8ff8451bcd4ee36"
        },
        "commit_message": "Issue 1562 routing key rabbitmq (#1767)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "15c0cfc5bdfe3a8bf2090d96d8ff8451bcd4ee36": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Message.java": [
                    "public void co.elastic.apm.agent.impl.context.Message.resetState()",
                    "public void co.elastic.apm.agent.impl.context.Message.copyFrom(Message other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMessageContext(final Message message)"
                ]
            },
            "b53366662a3dad5a7da5f36569e72630b4b60269": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Message.java": [
                    "public void co.elastic.apm.agent.impl.context.Message.resetState()",
                    "public void co.elastic.apm.agent.impl.context.Message.copyFrom(Message other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMessageContext(final Message message)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "56afb3d86527170c152a7dcca94e9c3e5e80a460",
        "previous_commit": "4dc086f425e160fc630fc4f1c220b7e9f35063ba",
        "date": 1519914388,
        "releases": {
            "previous": "56afb3d86527170c152a7dcca94e9c3e5e80a460",
            "next": "56afb3d86527170c152a7dcca94e9c3e5e80a460"
        },
        "commit_message": "Refactor ProcessFactory raphw style\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "56afb3d86527170c152a7dcca94e9c3e5e80a460": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private Reporter co.elastic.apm.impl.ElasticApmTracer.createReporter(CoreConfiguration coreConfiguration, ReporterConfiguration reporterConfiguration, String frameworkName, String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ProcessFactory.java": [
                    "public Process getProcessInformation()",
                    "public Process co.elastic.apm.impl.ForJava9CompatibleVM.getProcessInformation()"
                ]
            },
            "4dc086f425e160fc630fc4f1c220b7e9f35063ba": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private Reporter co.elastic.apm.impl.ElasticApmTracer.createReporter(CoreConfiguration coreConfiguration, ReporterConfiguration reporterConfiguration, String frameworkName, String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ProcessFactory.java": [
                    "public Process co.elastic.apm.impl.ProcessFactory.getProcessInformation()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "86ff506c6a98471d7ffe108faa2bbbde4e611570",
        "previous_commit": "5f2af8f264142c1e5c16698d547499b78529f656",
        "date": 1520729804,
        "releases": {
            "previous": "86ff506c6a98471d7ffe108faa2bbbde4e611570",
            "next": "86ff506c6a98471d7ffe108faa2bbbde4e611570"
        },
        "commit_message": "Thread safety on critical methods\n\n- Transaction#addSpan\n- Transaction.tags is now a ConcurrentHashMap\n- Transaction.custom is now a ConcurrentHashMap\n- incrementing dropped span count via AtomicInteger\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "86ff506c6a98471d7ffe108faa2bbbde4e611570": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Dropped.java": [
                    "public void co.elastic.apm.impl.transaction.Dropped.resetState()",
                    "Dropped co.elastic.apm.impl.transaction.Dropped.increment()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.addSpan(Span span)"
                ]
            },
            "5f2af8f264142c1e5c16698d547499b78529f656": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Dropped.java": [
                    "public void co.elastic.apm.impl.transaction.Dropped.resetState()",
                    "public Dropped co.elastic.apm.impl.transaction.Dropped.increment()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.addSpan(Span span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3b2fdbe89dfbb4691092ee73643da575f3650889",
        "previous_commit": "38aef914d9c626a617615ce7e9e248177ae5a95b",
        "date": 1620803630,
        "releases": {
            "previous": "3b2fdbe89dfbb4691092ee73643da575f3650889",
            "next": "3b2fdbe89dfbb4691092ee73643da575f3650889"
        },
        "commit_message": "Avoid tracestate error with sample rate provided through headers (#1808)\n\n* allow to set identical sample rate multiple times\r\n* change check method name\r\n* make vertx version test more robust\r\n* ignore 2cnd value + log in debug\r\n* fail on double set + warn on double header\r\n* fix tests\r\n* early skip if sample rate is already set\r\n* revert micrometer plugin hack\r\n* update changelog\r\n* fix javadoc",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3b2fdbe89dfbb4691092ee73643da575f3650889": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java": [
                    "public static String co.elastic.apm.agent.impl.transaction.TraceState.getHeaderValue(double sampleRate)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceState.addTextHeader(String headerValue)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceState.set(double rate, String headerValue)"
                ]
            },
            "38aef914d9c626a617615ce7e9e248177ae5a95b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java": [
                    "public static String co.elastic.apm.agent.impl.transaction.TraceState.getHeaderValue(double sampleRate)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceState.addTextHeader(String headerValue)",
                    "public void co.elastic.apm.agent.impl.transaction.TraceState.set(double rate, String headerValue)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "06f171f972f60cbfe50b600f80cfbfa9601a48c6",
        "previous_commit": "2dcc82e18cfb511b1dbea582a2c097a5526ec256",
        "date": 1664966323,
        "releases": {
            "previous": "06f171f972f60cbfe50b600f80cfbfa9601a48c6",
            "next": "06f171f972f60cbfe50b600f80cfbfa9601a48c6"
        },
        "commit_message": "JUL log correlation (#2724)\n\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "06f171f972f60cbfe50b600f80cfbfa9601a48c6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(@Nullable ClassLoader classLoader)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-jul-plugin/src/main/java/co/elastic/apm/agent/jul/reformatting/JulEcsReformattingHelper.java": [
                    "protected Formatter co.elastic.apm.agent.jul.reformatting.JulEcsReformattingHelper.createEcsFormatter(String eventDataset, @Nullable String serviceName, @Nullable String serviceVersion, @Nullable String serviceNodeName, @Nullable Map<String, String> additionalFields, Formatter originalFormatter)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/error/AbstractLoggerErrorCapturingInstrumentation.java": [
                    "public static void co.elastic.apm.agent.loginstr.error.AbstractLoggerErrorCapturingInstrumentation.logExit(@Advice.Enter @Nullable Object errorCaptureObj)"
                ]
            },
            "2dcc82e18cfb511b1dbea582a2c097a5526ec256": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(@Nullable ClassLoader classLoader)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-jul-plugin/src/main/java/co/elastic/apm/agent/jul/reformatting/JulEcsReformattingHelper.java": [
                    "protected Formatter co.elastic.apm.agent.jul.reformatting.JulEcsReformattingHelper.createEcsFormatter(String eventDataset, @Nullable String serviceName, @Nullable String serviceVersion, @Nullable String serviceNodeName, @Nullable Map<String, String> additionalFields, Formatter originalFormatter)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/error/AbstractLoggerErrorCapturingInstrumentation.java": [
                    "public static void co.elastic.apm.agent.loginstr.error.AbstractLoggerErrorCapturingInstrumentation.logExit(@Advice.Enter @Nullable Object errorCaptureObj)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e29f1e242f5ff9df86cf1843682c7e48fcdb4474",
        "previous_commit": "43ab778877c8755d492135be81f4eeca01399f82",
        "date": 1539583719,
        "releases": {
            "previous": "e29f1e242f5ff9df86cf1843682c7e48fcdb4474",
            "next": "e29f1e242f5ff9df86cf1843682c7e48fcdb4474"
        },
        "commit_message": "Use epoch micros for intake v2 (#240)\n\nsee elastic/apm-server#1413",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e29f1e242f5ff9df86cf1843682c7e48fcdb4474": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)"
                ]
            },
            "43ab778877c8755d492135be81f4eeca01399f82": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpan(final Span span)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3235db757f1055cc7d40d1c4f6b17b02be8f0667",
        "previous_commit": "92207937300ebfdcdf1f5a8d5ec939367ae9e07d",
        "date": 1520559873,
        "releases": {
            "previous": "3235db757f1055cc7d40d1c4f6b17b02be8f0667",
            "next": "3235db757f1055cc7d40d1c4f6b17b02be8f0667"
        },
        "commit_message": "Remove setters in favour of chainable with* methods\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3235db757f1055cc7d40d1c4f6b17b02be8f0667": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(Exception e)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/stacktrace/StacktraceFactory.java": [
                    "private Stacktrace co.elastic.apm.impl.stacktrace.CurrentThreadStackTraceFactory.getStacktrace(StackTraceElement stackTraceElement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/ApmJdbcEventListener.java": [
                    "public void co.elastic.apm.jdbc.ApmJdbcEventListener.onBeforeAnyExecute(StatementInformation statementInformation)"
                ]
            },
            "92207937300ebfdcdf1f5a8d5ec939367ae9e07d": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(Exception e)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/stacktrace/StacktraceFactory.java": [
                    "private Stacktrace co.elastic.apm.impl.stacktrace.CurrentThreadStackTraceFactory.getStacktrace(StackTraceElement stackTraceElement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/ApmJdbcEventListener.java": [
                    "public void co.elastic.apm.jdbc.ApmJdbcEventListener.onBeforeAnyExecute(StatementInformation statementInformation)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f1611f92919e40369bac52389a699de31c6c30c7",
        "previous_commit": "035ba3a2ef30262d6e1983daf36d92128bd76ce2",
        "date": 1546874842,
        "releases": {
            "previous": "f1611f92919e40369bac52389a699de31c6c30c7",
            "next": "f1611f92919e40369bac52389a699de31c6c30c7"
        },
        "commit_message": "Add trace_methods option (#398)\n\nDefines a syntax for matching methods which should be traced\r\n\r\ncloses #347",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f1611f92919e40369bac52389a699de31c6c30c7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/matcher/WildcardMatcher.java": [
                    "int co.elastic.apm.agent.matcher.WildcardMatcher.indexOf(String firstPart, @Nullable String secondPart, int offset)",
                    "public static WildcardMatcher co.elastic.apm.agent.matcher.WildcardMatcher.valueOf(final String wildcardString)"
                ]
            },
            "035ba3a2ef30262d6e1983daf36d92128bd76ce2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/matcher/WildcardMatcher.java": [
                    "int co.elastic.apm.agent.matcher.WildcardMatcher.indexOf(String firstPart, @Nullable String secondPart, int offset)",
                    "public static WildcardMatcher co.elastic.apm.agent.matcher.WildcardMatcher.valueOf(final String wildcardString)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d2918bb0d41fbf14c48e7aed64e11a41fdfa544e",
        "previous_commit": "246bbd27c7697b639e8830fa25f7f9007f4e1de9",
        "date": 1521352180,
        "releases": {
            "previous": "d2918bb0d41fbf14c48e7aed64e11a41fdfa544e",
            "next": "d2918bb0d41fbf14c48e7aed64e11a41fdfa544e"
        },
        "commit_message": "Integrate errorprone\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d2918bb0d41fbf14c48e7aed64e11a41fdfa544e": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/ProcessFactory.java": [
                    "public ProcessInfo co.elastic.apm.impl.payload.ForJava9CompatibleVM.getProcessInformation()",
                    "public ProcessInfo getProcessInformation()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/ServiceFactory.java": [
                    "public Service co.elastic.apm.impl.payload.ServiceFactory.createService(CoreConfiguration coreConfiguration, String frameworkName, String frameworkVersion)"
                ]
            },
            "246bbd27c7697b639e8830fa25f7f9007f4e1de9": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/ProcessFactory.java": [
                    "public Process getProcessInformation()",
                    "public Process co.elastic.apm.impl.payload.ForJava9CompatibleVM.getProcessInformation()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/ServiceFactory.java": [
                    "public Service co.elastic.apm.impl.payload.ServiceFactory.createService(CoreConfiguration coreConfiguration, String frameworkName, String frameworkVersion)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "845314c22812781bef92f1e5bc8a290f1e27ecf7",
        "previous_commit": "8f771d943340153c8b0265909f9ff2cf9cdeb931",
        "date": 1631540522,
        "releases": {
            "previous": "845314c22812781bef92f1e5bc8a290f1e27ecf7",
            "next": "845314c22812781bef92f1e5bc8a290f1e27ecf7"
        },
        "commit_message": "Adding debug messages to service name auto discovery (#1965)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "845314c22812781bef92f1e5bc8a290f1e27ecf7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.overrideServiceNameForClassLoader(@Nullable ClassLoader classLoader, @Nullable String serviceName)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public static void co.elastic.apm.agent.servlet.ServletTransactionHelper.determineServiceName(@Nullable String servletContextName, @Nullable ClassLoader servletContextClassLoader, @Nullable String contextPath)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            },
            "8f771d943340153c8b0265909f9ff2cf9cdeb931": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.overrideServiceNameForClassLoader(@Nullable ClassLoader classLoader, @Nullable String serviceName)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public static void co.elastic.apm.agent.servlet.ServletTransactionHelper.determineServiceName(@Nullable String servletContextName, @Nullable ClassLoader servletContextClassLoader, @Nullable String contextPath)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a442f88523831dab6f9b44420ea8cdddc8511707",
        "previous_commit": "1db65984484c8d928fb1c75a39b5be81f328e7af",
        "date": 1531992976,
        "releases": {
            "previous": "a442f88523831dab6f9b44420ea8cdddc8511707",
            "next": "a442f88523831dab6f9b44420ea8cdddc8511707"
        },
        "commit_message": "Make Transaction extend Span in public api\n\n* ElasticApm.currentSpan can return either a Transaction or a Span\n  so that creating a child of the currently active transaction or span\n  is as simple as ElasticApm.currentSpan().createSpan()\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a442f88523831dab6f9b44420ea8cdddc8511707": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/JdbcHelper.java": [
                    "Span co.elastic.apm.jdbc.JdbcHelper.createJdbcSpan(@Nullable String sql, Connection connection, @Nullable AbstractSpan<?> parent)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.opentracing.impl.ApmSpanInstrumentation.handleSpecialSpanTag(Span span, String key, Object value)",
                    "private static boolean co.elastic.apm.opentracing.impl.ApmSpanInstrumentation.handleSpecialTransactionTag(Transaction transaction, String key, Object value)"
                ]
            },
            "1db65984484c8d928fb1c75a39b5be81f328e7af": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/JdbcHelper.java": [
                    "Span co.elastic.apm.jdbc.JdbcHelper.createJdbcSpan(@Nullable String sql, Connection connection, @Nullable AbstractSpan<?> parent)"
                ],
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.opentracing.impl.ApmSpanInstrumentation.handleSpecialSpanTag(Span span, String key, Object value)",
                    "private static boolean co.elastic.apm.opentracing.impl.ApmSpanInstrumentation.handleSpecialTransactionTag(Transaction transaction, String key, Object value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8d85a214239ed514d3c3d924d154cb22c9f4a898",
        "previous_commit": "0f852a41c9c734625bc77151cabbcb047993f2ca",
        "date": 1597675290,
        "releases": {
            "previous": "8d85a214239ed514d3c3d924d154cb22c9f4a898",
            "next": "8d85a214239ed514d3c3d924d154cb22c9f4a898"
        },
        "commit_message": "Deprecate non-indy plugins (#1329)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8d85a214239ed514d3c3d924d154cb22c9f4a898": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/TracerAwareInstrumentation.java": [
                    "public boolean co.elastic.apm.agent.bci.TracerAwareInstrumentation.indyPlugin()"
                ]
            },
            "0f852a41c9c734625bc77151cabbcb047993f2ca": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/TracerAwareInstrumentation.java": [
                    "public boolean co.elastic.apm.agent.bci.TracerAwareInstrumentation.indyPlugin()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "803550cd9bd14c139d951e9eea0f4067ef70c299",
        "previous_commit": "028f562fc65b0af2841ed217177de119a32a8882",
        "date": 1643896021,
        "releases": {
            "previous": "803550cd9bd14c139d951e9eea0f4067ef70c299",
            "next": "803550cd9bd14c139d951e9eea0f4067ef70c299"
        },
        "commit_message": "Added Instrumentation for `ServletContextListener#contextInitialized` (#2443)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "803550cd9bd14c139d951e9eea0f4067ef70c299": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/InitServiceNameInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.InitServiceNameInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.servlet.InitServiceNameInstrumentation.getTypeMatcherPreFilter()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.InitServiceNameInstrumentation.getTypeMatcher()"
                ]
            },
            "028f562fc65b0af2841ed217177de119a32a8882": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/InitServiceNameInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.InitServiceNameInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.servlet.InitServiceNameInstrumentation.getTypeMatcherPreFilter()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.servlet.InitServiceNameInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "101b369ff602eb7c5410d8e485a442cbd2fdf410",
        "previous_commit": "5a9bfac1e2698b06bb985b0358270022690788eb",
        "date": 1524635513,
        "releases": {
            "previous": "101b369ff602eb7c5410d8e485a442cbd2fdf410",
            "next": "101b369ff602eb7c5410d8e485a442cbd2fdf410"
        },
        "commit_message": "Fix broken json (missing comma)\n\nLog JSON on trace level\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "101b369ff602eb7c5410d8e485a442cbd2fdf410": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "public String co.elastic.apm.report.serialize.DslJsonSerializer.toJsonString(final Payload payload)",
                    "public void co.elastic.apm.report.serialize.DslJsonSerializer.serializePayload(final BufferedSink sink, final Payload payload)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.writeField(final String fieldName, final List<String> values)"
                ]
            },
            "5a9bfac1e2698b06bb985b0358270022690788eb": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "public String co.elastic.apm.report.serialize.DslJsonSerializer.toJsonString(final Payload payload)",
                    "public void co.elastic.apm.report.serialize.DslJsonSerializer.serializePayload(final BufferedSink sink, final Payload payload)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.writeField(final String fieldName, final List<String> values)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "03b566ea5dff02f9bad1b61b5ddc4518e2604aad",
        "previous_commit": "e2261a9660fd6d5407d7bb43c2f05d9d52acc83e",
        "date": 1546877714,
        "releases": {
            "previous": "03b566ea5dff02f9bad1b61b5ddc4518e2604aad",
            "next": "03b566ea5dff02f9bad1b61b5ddc4518e2604aad"
        },
        "commit_message": "Setting transaction.sampled in errors (#405)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "03b566ea5dff02f9bad1b61b5ddc4518e2604aad": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> active)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.agent.impl.error.ErrorCapture.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)"
                ]
            },
            "e2261a9660fd6d5407d7bb43c2f05d9d52acc83e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> active)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.agent.impl.error.ErrorCapture.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeError(ErrorCapture errorCapture)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f9da8c2ad7df10a4e051533921bd3906fab8c998",
        "previous_commit": "a15c021f15625a4a45fb84c9fea9e0c053ae4b24",
        "date": 1521640413,
        "releases": {
            "previous": "f9da8c2ad7df10a4e051533921bd3906fab8c998",
            "next": "f9da8c2ad7df10a4e051533921bd3906fab8c998"
        },
        "commit_message": "Implement sampling (#16)\n\nImplement sampling\r\n\r\n(closes #3)",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f9da8c2ad7df10a4e051533921bd3906fab8c998": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span span, long nanoTime, boolean dropped)"
                ]
            },
            "a15c021f15625a4a45fb84c9fea9e0c053ae4b24": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.impl.ElasticApmTracer.startTransaction()",
                    "private Span co.elastic.apm.impl.ElasticApmTracer.createRealSpan(Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span span, long nanoTime, boolean dropped)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e2261a9660fd6d5407d7bb43c2f05d9d52acc83e",
        "previous_commit": "f1611f92919e40369bac52389a699de31c6c30c7",
        "date": 1546877448,
        "releases": {
            "previous": "e2261a9660fd6d5407d7bb43c2f05d9d52acc83e",
            "next": "e2261a9660fd6d5407d7bb43c2f05d9d52acc83e"
        },
        "commit_message": "Add APIs for manual inter process context propagation (#396)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e2261a9660fd6d5407d7bb43c2f05d9d52acc83e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(MethodDescription target)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ]
            },
            "f1611f92919e40369bac52389a699de31c6c30c7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(MethodDescription target)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4f732e9eadb0469472d5ee6a40a7a4c157b57b52",
        "previous_commit": "796c694d3f9270b5e163d762f39ab7ba50b2df90",
        "date": 1691668560,
        "releases": {
            "previous": "4f732e9eadb0469472d5ee6a40a7a4c157b57b52",
            "next": "4f732e9eadb0469472d5ee6a40a7a4c157b57b52"
        },
        "commit_message": "Remove remaining threadlocals for loom support (#3286)\n\n* Replaced signature parser ThreadLocal with pool\r\n\r\n* Replaced transactions metrics labels ThreadLocal with transaction field\r\n\r\n* Removed OkHttp cached StringBuilder\r\n\r\n* updated changelog\r\n\r\n* Remove unnecessary setLength call",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4f732e9eadb0469472d5ee6a40a7a4c157b57b52": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.trackMetrics()"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/internal/db/signature/SignatureParser.java": [
                    "public void co.elastic.apm.agent.sdk.internal.db.signature.SignatureParser.querySignature(String query, StringBuilder signature, @Nullable StringBuilder dbLink, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttpClientHelper.java": [
                    "public static CharSequence co.elastic.apm.agent.okhttp.OkHttpClientHelper.computeHostName(@Nullable String originalHostName)"
                ]
            },
            "796c694d3f9270b5e163d762f39ab7ba50b2df90": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.trackMetrics()"
                ],
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/internal/db/signature/SignatureParser.java": [
                    "public void co.elastic.apm.agent.sdk.internal.db.signature.SignatureParser.querySignature(String query, StringBuilder signature, @Nullable StringBuilder dbLink, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttpClientHelper.java": [
                    "public static CharSequence co.elastic.apm.agent.okhttp.OkHttpClientHelper.computeHostName(@Nullable String originalHostName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c71292b64a1c2d19fc9cf483bf6bd17a6ff0e517",
        "previous_commit": "913fd0c225c4ab06dd04e3ba97cf366badf3fe38",
        "date": 1522744228,
        "releases": {
            "previous": "c71292b64a1c2d19fc9cf483bf6bd17a6ff0e517",
            "next": "c71292b64a1c2d19fc9cf483bf6bd17a6ff0e517"
        },
        "commit_message": "Add documentation (#45)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c71292b64a1c2d19fc9cf483bf6bd17a6ff0e517": {
                "apm-agent-api/src/main/java/co/elastic/apm/api/ElasticApm.java": [
                    "public Span co.elastic.apm.api.ElasticApm.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/api/TracerRegisterer.java": [
                    "public static void co.elastic.apm.api.TracerRegisterer.register(ElasticApmTracer tracer)",
                    "public static void co.elastic.apm.api.TracerRegisterer.unregister()"
                ]
            },
            "913fd0c225c4ab06dd04e3ba97cf366badf3fe38": {
                "apm-agent-api/src/main/java/co/elastic/apm/api/ElasticApm.java": [
                    "public Span co.elastic.apm.api.ElasticApm.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/api/TracerRegisterer.java": [
                    "public static void co.elastic.apm.api.TracerRegisterer.register(ElasticApmTracer tracer)",
                    "public static void co.elastic.apm.api.TracerRegisterer.unregister()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2df88dce0507a3a98e0105f9f514beae3cf8cb8e",
        "previous_commit": "2a5aa02af2e97c66c8625862bcfb309373410ff0",
        "date": 1655129849,
        "releases": {
            "previous": "2df88dce0507a3a98e0105f9f514beae3cf8cb8e",
            "next": "2df88dce0507a3a98e0105f9f514beae3cf8cb8e"
        },
        "commit_message": "JAX-WS @WebMethod is optional (#2667)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2df88dce0507a3a98e0105f9f514beae3cf8cb8e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/MethodHierarchyMatcher.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.MethodHierarchyMatcher.matches(MethodDescription targetMethod)"
                ],
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature)",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.getMethodMatcher()"
                ]
            },
            "2a5aa02af2e97c66c8625862bcfb309373410ff0": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/MethodHierarchyMatcher.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.MethodHierarchyMatcher.matches(MethodDescription targetMethod)"
                ],
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature)",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "edb5f87bb9ca778e77712d721636f4d9aaed939b",
        "previous_commit": "d910788e30343d25be35468f863bbf4ef192f053",
        "date": 1549296718,
        "releases": {
            "previous": "edb5f87bb9ca778e77712d721636f4d9aaed939b",
            "next": "edb5f87bb9ca778e77712d721636f4d9aaed939b"
        },
        "commit_message": "Adding configurable method-name blacklist for trace_methods (#476)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "edb5f87bb9ca778e77712d721636f4d9aaed939b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription target)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/TraceMethodInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.bci.methodmatching.TraceMethodInstrumentation.getMethodMatcher()"
                ]
            },
            "d910788e30343d25be35468f863bbf4ef192f053": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription target)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/TraceMethodInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.bci.methodmatching.TraceMethodInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "731636b4c3351cb6932747839141425624986dd2",
        "previous_commit": "ee6c990a616b71f3ad6d02286c9cbd93bee00f0f",
        "date": 1560258867,
        "releases": {
            "previous": "731636b4c3351cb6932747839141425624986dd2",
            "next": "731636b4c3351cb6932747839141425624986dd2"
        },
        "commit_message": "Disable metrics when active=false (#653)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "731636b4c3351cb6932747839141425624986dd2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.run()",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.scheduleMetricReporting(final MetricRegistry metricRegistry, long intervalMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.agent.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ]
            },
            "ee6c990a616b71f3ad6d02286c9cbd93bee00f0f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.agent.report.ApmServerReporter.run()",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.scheduleMetricReporting(final MetricRegistry metricRegistry, long intervalMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.agent.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "bd83104b179f0dfea2eaa573eb944b7ab2444f3f",
        "previous_commit": "9f380148571418d472b374db397f2b2623f2917b",
        "date": 1519036500,
        "releases": {
            "previous": "bd83104b179f0dfea2eaa573eb944b7ab2444f3f",
            "next": "bd83104b179f0dfea2eaa573eb944b7ab2444f3f"
        },
        "commit_message": "Add Reporter benchmarks\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "bd83104b179f0dfea2eaa573eb944b7ab2444f3f": {
                "apm-agent-core/src/main/java/co/elastic/apm/instrumentation/servletapi/ApmFilter.java": [
                    "public void co.elastic.apm.instrumentation.servletapi.ApmFilter.init(FilterConfig filterConfig)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/Reporter.java": [
                    "public void co.elastic.apm.report.Reporter.report(Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEventHandler.java": [
                    "private void co.elastic.apm.report.ReportingEventHandler.flush()"
                ]
            },
            "9f380148571418d472b374db397f2b2623f2917b": {
                "apm-agent-core/src/main/java/co/elastic/apm/instrumentation/servletapi/ApmFilter.java": [
                    "public void co.elastic.apm.instrumentation.servletapi.ApmFilter.init(FilterConfig filterConfig)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/Reporter.java": [
                    "public void co.elastic.apm.report.Reporter.report(Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEventHandler.java": [
                    "private void co.elastic.apm.report.ReportingEventHandler.flush()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "8fb72568e8783089ad6889e4c42b46865fddb016",
        "previous_commit": "ae57423b8dba1b8661344a3c2f43efa85e9fc658",
        "date": 1551784182,
        "releases": {
            "previous": "8fb72568e8783089ad6889e4c42b46865fddb016",
            "next": "8fb72568e8783089ad6889e4c42b46865fddb016"
        },
        "commit_message": "Consistently rename tags to labels in DslJsonSerializer (#511)\n\nAvoid allocation of tags iterator if there are no tags",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8fb72568e8783089ad6889e4c42b46865fddb016": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeContext(final TransactionContext context)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeMetricSet(MetricSet metricSet, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            },
            "ae57423b8dba1b8661344a3c2f43efa85e9fc658": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)",
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeContext(final TransactionContext context)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeMetricSet(MetricSet metricSet, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "135c52e497698294bd77515d45a1f06c77782103",
        "previous_commit": "ed8849f01642ad958f0d82ade676feccba34a64b",
        "date": 1587133645,
        "releases": {
            "previous": "135c52e497698294bd77515d45a1f06c77782103",
            "next": "135c52e497698294bd77515d45a1f06c77782103"
        },
        "commit_message": "Start DB, jsf and ES spans even if transaction is not sampled (#1143)\n\ncloses #1111",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "135c52e497698294bd77515d45a1f06c77782103": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.es.restclient.ElasticsearchRestClientInstrumentationHelperImpl.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.createJdbcSpan(@Nullable String sql, Object statement, @Nullable TraceContextHolder<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static Span co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ]
            },
            "ed8849f01642ad958f0d82ade676feccba34a64b": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.es.restclient.ElasticsearchRestClientInstrumentationHelperImpl.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.createJdbcSpan(@Nullable String sql, Object statement, @Nullable TraceContextHolder<?> parent, boolean preparedStatement)"
                ],
                "apm-agent-plugins/apm-kafka-plugin/apm-kafka-base-plugin/src/main/java/co/elastic/apm/agent/kafka/KafkaConsumerInstrumentation.java": [
                    "public static Span co.elastic.apm.agent.kafka.KafkaConsumerInstrumentation.pollStart()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4d490fe0b7eb9adb6b6dd118017f41cfdcb63141",
        "previous_commit": "33d8f230cf6be688dd07be853c2ae57da1b53b50",
        "date": 1532017435,
        "releases": {
            "previous": "4d490fe0b7eb9adb6b6dd118017f41cfdcb63141",
            "next": "4d490fe0b7eb9adb6b6dd118017f41cfdcb63141"
        },
        "commit_message": "Prevent StackOverflowErrors in JDBC instrumentation\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4d490fe0b7eb9adb6b6dd118017f41cfdcb63141": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/JdbcHelper.java": [
                    "Span co.elastic.apm.jdbc.JdbcHelper.createJdbcSpan(@Nullable String sql, Connection connection, @Nullable AbstractSpan<?> parent)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public static void co.elastic.apm.jdbc.PreparedStatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Span span, @Advice.Thrown SQLException e)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Span span, @Advice.Thrown SQLException e)"
                ]
            },
            "33d8f230cf6be688dd07be853c2ae57da1b53b50": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/JdbcHelper.java": [
                    "Span co.elastic.apm.jdbc.JdbcHelper.createJdbcSpan(@Nullable String sql, Connection connection, @Nullable AbstractSpan<?> parent)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public static void co.elastic.apm.jdbc.PreparedStatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Span span, @Advice.Thrown SQLException e)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.jdbc.StatementInstrumentation.onAfterExecute(@Advice.Enter @Nullable Span span, @Advice.Thrown SQLException e)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f38dacf9953cae0365fd3213525ef2e07110b024",
        "previous_commit": "07a10acde418c9e33a149e71730d9fb2c8cb6f2d",
        "date": 1552557584,
        "releases": {
            "previous": "f38dacf9953cae0365fd3213525ef2e07110b024",
            "next": "f38dacf9953cae0365fd3213525ef2e07110b024"
        },
        "commit_message": "Channelling span creation through a common path (#525)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f38dacf9953cae0365fd3213525ef2e07110b024": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <T> Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext)",
                    "public Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(AbstractSpan<?> parent, long epochMicros)",
                    "public <T> Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros)"
                ]
            },
            "07a10acde418c9e33a149e71730d9fb2c8cb6f2d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <T> Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext)",
                    "public Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(AbstractSpan<?> parent, long epochMicros)",
                    "public <T> Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7edd59862f7a01264c001ebd5122fa9b2051739b",
        "previous_commit": "c8a7fa49cd6f62613c1df1dd9cddf9c8eb0abb80",
        "date": 1612689390,
        "releases": {
            "previous": "7edd59862f7a01264c001ebd5122fa9b2051739b",
            "next": "7edd59862f7a01264c001ebd5122fa9b2051739b"
        },
        "commit_message": "Server url config (#1650)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7edd59862f7a01264c001ebd5122fa9b2051739b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public void co.elastic.apm.agent.report.ApmServerClient.onChange(ConfigurationOption<?> configurationOption, List<URL> oldValue, List<URL> newValue)",
                    "public void co.elastic.apm.agent.report.ApmServerClient.start(List<URL> shuffledUrls)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterConfiguration.java": [
                    "public List<URL> co.elastic.apm.agent.report.ReporterConfiguration.getServerUrls()"
                ]
            },
            "c8a7fa49cd6f62613c1df1dd9cddf9c8eb0abb80": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public void co.elastic.apm.agent.report.ApmServerClient.onChange(ConfigurationOption<?> configurationOption, List<URL> oldValue, List<URL> newValue)",
                    "public void co.elastic.apm.agent.report.ApmServerClient.start(List<URL> shuffledUrls)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterConfiguration.java": [
                    "public List<URL> co.elastic.apm.agent.report.ReporterConfiguration.getServerUrls()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e3135256bfbd07adbd1eb8aefca118683934b0ad",
        "previous_commit": "3f21b03f8bb90312292397d54b58f517e27ae61b",
        "date": 1647272943,
        "releases": {
            "previous": "e3135256bfbd07adbd1eb8aefca118683934b0ad",
            "next": "e3135256bfbd07adbd1eb8aefca118683934b0ad"
        },
        "commit_message": "Added support for collecting statistics about dropped exit spans (#2505)\n\n* Collect statistics for dropped spans\r\n\r\n* Added #2505 to the changelog\r\n\r\n* Update apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java\r\n\r\nCo-authored-by: jackshirazi <jacks@fasterj.com>\r\n\r\n* Try to create less garbage\r\n\r\n* Review by @jackshirazi\r\n\r\n* increase readability\r\n\r\n* Enforce the dropped spans limit when serializing the transaction\r\n\r\nCo-authored-by: jackshirazi <jacks@fasterj.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e3135256bfbd07adbd1eb8aefca118683934b0ad": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ]
            },
            "3f21b03f8bb90312292397d54b58f517e27ae61b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7f62bf127c34bf877cd0e53d741c9175bbb83147",
        "previous_commit": "63707919b26d5dbc8ec4d9a37659213bfb8c8264",
        "date": 1616007900,
        "releases": {
            "previous": "7f62bf127c34bf877cd0e53d741c9175bbb83147",
            "next": "7f62bf127c34bf877cd0e53d741c9175bbb83147"
        },
        "commit_message": "Dynamic logger ecs reconfig (#1261)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7f62bf127c34bf877cd0e53d741c9175bbb83147": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdvice(Class<?> adviceClass)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public void co.elastic.apm.agent.logging.LoggingConfiguration.assertValid(Boolean value)",
                    "public boolean co.elastic.apm.agent.logging.LoggingConfiguration.isLogCorrelationEnabled()"
                ]
            },
            "63707919b26d5dbc8ec4d9a37659213bfb8c8264": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdvice(Class<?> adviceClass)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public void co.elastic.apm.agent.logging.LoggingConfiguration.assertValid(Boolean value)",
                    "public boolean co.elastic.apm.agent.logging.LoggingConfiguration.isLogCorrelationEnabled()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a4b4fcb37e5e8c70f88122867b97b9f1216a1313",
        "previous_commit": "d8b583f30c6b406ba8f81e63f0ce71af22dc2469",
        "date": 1537510798,
        "releases": {
            "previous": "a4b4fcb37e5e8c70f88122867b97b9f1216a1313",
            "next": "a4b4fcb37e5e8c70f88122867b97b9f1216a1313"
        },
        "commit_message": "Add http url to span context (#218)\n\n* Adding HTTP Context Type\r\n\r\n* Unit tests\r\n\r\n* Handling null URI\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a4b4fcb37e5e8c70f88122867b97b9f1216a1313": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/SpanContext.java": [
                    "public boolean co.elastic.apm.impl.context.SpanContext.hasContent()",
                    "public void co.elastic.apm.impl.context.SpanContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)"
                ]
            },
            "d8b583f30c6b406ba8f81e63f0ce71af22dc2469": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/SpanContext.java": [
                    "public boolean co.elastic.apm.impl.context.SpanContext.hasContent()",
                    "public void co.elastic.apm.impl.context.SpanContext.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "fa172d44d01a3e963a9b651a0fd1c53ea475ba66",
        "previous_commit": "b1306272914708abf8a2880ad468db33ca9ecf59",
        "date": 1644325224,
        "releases": {
            "previous": "fa172d44d01a3e963a9b651a0fd1c53ea475ba66",
            "next": "fa172d44d01a3e963a9b651a0fd1c53ea475ba66"
        },
        "commit_message": "add start.async property for startup tuning (#2454)\n\n* add start.async property for startup tuning\r\n\r\n* add changelog, version introduced, and fix typo",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "fa172d44d01a3e963a9b651a0fd1c53ea475ba66": {
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.premain.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)",
                    "private static void co.elastic.apm.agent.premain.AgentMain.delayAndInitAgentAsync(final String agentArguments, final Instrumentation instrumentation, final boolean premain, final long delayAgentInitMs)",
                    "public void co.elastic.apm.agent.premain.AgentMain.run()"
                ]
            },
            "b1306272914708abf8a2880ad468db33ca9ecf59": {
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.premain.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)",
                    "private static void co.elastic.apm.agent.premain.AgentMain.delayAndInitAgentAsync(final String agentArguments, final Instrumentation instrumentation, final boolean premain, final long delayAgentInitMs)",
                    "public void co.elastic.apm.agent.premain.AgentMain.run()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "eecbd08d26d0b85d5a1b104f378e053b0e3f6732",
        "previous_commit": "ae6fc4a1952e97671a9ca6d312f28240725261c6",
        "date": 1618930704,
        "releases": {
            "previous": "eecbd08d26d0b85d5a1b104f378e053b0e3f6732",
            "next": "eecbd08d26d0b85d5a1b104f378e053b0e3f6732"
        },
        "commit_message": "Avoid stack frame re-computation + prevent indirect classloading (#1758)\n\n* remove hybrid to avoid classloading\r\n* avoid stack frame re-computation with >= java7\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "eecbd08d26d0b85d5a1b104f378e053b0e3f6732": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/PatchBytecodeVersionTo51Transformer.java": [
                    "public DynamicType.Builder<?> co.elastic.apm.agent.bci.bytebuddy.PatchBytecodeVersionTo51Transformer.transform(DynamicType.Builder<?> builder, TypeDescription typeDescription, ClassLoader classLoader, JavaModule javaModule)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public static void co.elastic.apm.agent.util.ExecutorUtils.shutdownAndWaitTermination(ExecutorService executor)"
                ]
            },
            "ae6fc4a1952e97671a9ca6d312f28240725261c6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/PatchBytecodeVersionTo51Transformer.java": [
                    "public DynamicType.Builder<?> co.elastic.apm.agent.bci.bytebuddy.PatchBytecodeVersionTo51Transformer.transform(DynamicType.Builder<?> builder, TypeDescription typeDescription, ClassLoader classLoader, JavaModule javaModule)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public static void co.elastic.apm.agent.util.ExecutorUtils.shutdownAndWaitTermination(ExecutorService executor)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "56f986ca38bdfbc03bf97070cc40547f715defd9",
        "previous_commit": "d81ce1138c69dfb5ea833d1f5c60bdd411579118",
        "date": 1651501143,
        "releases": {
            "previous": "56f986ca38bdfbc03bf97070cc40547f715defd9",
            "next": "56f986ca38bdfbc03bf97070cc40547f715defd9"
        },
        "commit_message": "Set service.version in ECS-reformatting (#2603)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "56f986ca38bdfbc03bf97070cc40547f715defd9": {
                "apm-agent-plugins/apm-logging-plugin/apm-log4j1-plugin/src/main/java/co/elastic/apm/agent/log4j1/reformatting/Log4J1EcsReformattingHelper.java": [
                    "protected Layout co.elastic.apm.agent.log4j1.reformatting.Log4J1EcsReformattingHelper.createEcsFormatter(String eventDataset, @Nullable String serviceName, @Nullable String serviceVersion, @Nullable String serviceNodeName, @Nullable Map<String, String> additionalFields, Layout originalFormatter)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/reformatting/Log4J2EcsReformattingHelper.java": [
                    "protected Layout<? extends Serializable> co.elastic.apm.agent.log4j2.reformatting.Log4J2EcsReformattingHelper.createEcsFormatter(String eventDataset, @Nullable String serviceName, @Nullable String serviceVersion, @Nullable String serviceNodeName, @Nullable Map<String, String> additionalFields, Layout<? extends Serializable> originalFormatter)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logback-plugin/apm-logback-plugin-impl/src/main/java/co/elastic/apm/agent/logback/reformatting/LogbackEcsReformattingHelper.java": [
                    "protected Encoder<ILoggingEvent> co.elastic.apm.agent.logback.reformatting.LogbackEcsReformattingHelper.createEcsFormatter(String eventDataset, @Nullable String serviceName, @Nullable String serviceVersion, @Nullable String serviceNodeName, @Nullable Map<String, String> additionalFields, Encoder<ILoggingEvent> originalFormatter)"
                ]
            },
            "d81ce1138c69dfb5ea833d1f5c60bdd411579118": {
                "apm-agent-plugins/apm-logging-plugin/apm-log4j1-plugin/src/main/java/co/elastic/apm/agent/log4j1/reformatting/Log4J1EcsReformattingHelper.java": [
                    "protected Layout co.elastic.apm.agent.log4j1.reformatting.Log4J1EcsReformattingHelper.createEcsFormatter(String eventDataset, @Nullable String serviceName, @Nullable String serviceNodeName, @Nullable Map<String, String> additionalFields, Layout originalFormatter)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/reformatting/Log4J2EcsReformattingHelper.java": [
                    "protected Layout<? extends Serializable> co.elastic.apm.agent.log4j2.reformatting.Log4J2EcsReformattingHelper.createEcsFormatter(String eventDataset, @Nullable String serviceName, @Nullable String serviceNodeName, @Nullable Map<String, String> additionalFields, Layout<? extends Serializable> originalFormatter)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logback-plugin/apm-logback-plugin-impl/src/main/java/co/elastic/apm/agent/logback/reformatting/LogbackEcsReformattingHelper.java": [
                    "protected Encoder<ILoggingEvent> co.elastic.apm.agent.logback.reformatting.LogbackEcsReformattingHelper.createEcsFormatter(String eventDataset, @Nullable String serviceName, @Nullable String serviceNodeName, @Nullable Map<String, String> additionalFields, Encoder<ILoggingEvent> originalFormatter)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "337f17440a67de0326e093d4a3e944d498c96491",
        "previous_commit": "e4c504300c236a23fcace1fe15bf31445348e0dc",
        "date": 1699026656,
        "releases": {
            "previous": "337f17440a67de0326e093d4a3e944d498c96491",
            "next": "337f17440a67de0326e093d4a3e944d498c96491"
        },
        "commit_message": "Implement context_propagation_only setting (#3358)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "337f17440a67de0326e093d4a3e944d498c96491": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "private <E> boolean co.elastic.apm.agent.report.ApmServerReporter.tryAddEventToRingBuffer(E event, EventTranslatorOneArg<ReportingEvent, E> eventTranslator, ReportingEvent.ReportingEventType targetType)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.reportPartialTransaction(Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.agent.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, ApmServerClient apmServerClient, DslJsonSerializer payloadSerializer, ReporterMonitor monitor, ObjectPoolFactory poolFactory)"
                ]
            },
            "e4c504300c236a23fcace1fe15bf31445348e0dc": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerReporter.java": [
                    "private <E> boolean co.elastic.apm.agent.report.ApmServerReporter.tryAddEventToRingBuffer(E event, EventTranslatorOneArg<ReportingEvent, E> eventTranslator, ReportingEvent.ReportingEventType targetType)",
                    "public void co.elastic.apm.agent.report.ApmServerReporter.reportPartialTransaction(Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.agent.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, ApmServerClient apmServerClient, DslJsonSerializer payloadSerializer, ReporterMonitor monitor, ObjectPoolFactory poolFactory)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a77cb2a09d1194f4177e6fde9b645efc52d22e45",
        "previous_commit": "10035290ba83774a1931c151e79a02da0503a11c",
        "date": 1549551156,
        "releases": {
            "previous": "a77cb2a09d1194f4177e6fde9b645efc52d22e45",
            "next": "a77cb2a09d1194f4177e6fde9b645efc52d22e45"
        },
        "commit_message": "Add support for JBoss EAP (#481)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a77cb2a09d1194f4177e6fde9b645efc52d22e45": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ApmAsyncListener.java": [
                    "public void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.onTimeout(AsyncEvent event)",
                    "public void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.onError(AsyncEvent event)"
                ],
                "integration-tests/simple-webapp/src/main/java/co/elastic/webapp/HttpUrlConnectionTestServlet.java": [
                    "protected void co.elastic.webapp.HttpUrlConnectionTestServlet.doGet(HttpServletRequest req, HttpServletResponse resp)"
                ]
            },
            "10035290ba83774a1931c151e79a02da0503a11c": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ApmAsyncListener.java": [
                    "public void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.onTimeout(AsyncEvent event)",
                    "public void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.onError(AsyncEvent event)"
                ],
                "integration-tests/simple-webapp/src/main/java/co/elastic/webapp/HttpUrlConnectionTestServlet.java": [
                    "protected void co.elastic.webapp.HttpUrlConnectionTestServlet.doGet(HttpServletRequest req, HttpServletResponse resp)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f8d6ec3c0938f9187fe0b38459c13e360bfbb46b",
        "previous_commit": "aa5e40647643805c3ed509b465d496a260004501",
        "date": 1651159222,
        "releases": {
            "previous": "f8d6ec3c0938f9187fe0b38459c13e360bfbb46b",
            "next": "f8d6ec3c0938f9187fe0b38459c13e360bfbb46b"
        },
        "commit_message": "Vertx avoid wrapping (#2564)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f8d6ec3c0938f9187fe0b38459c13e360bfbb46b": {
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebHelper.java": [
                    "protected void co.elastic.apm.agent.vertx.AbstractVertxWebHelper.setRouteBasedTransactionName(Transaction transaction, RoutingContext routingContext)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx3-plugin/src/main/java/co/elastic/apm/agent/vertx/v3/web/WebHelper.java": [
                    "public Transaction co.elastic.apm.agent.vertx.v3.web.WebHelper.getTransactionForRequest(HttpServerRequest request)",
                    "public Transaction co.elastic.apm.agent.vertx.v3.web.WebHelper.startOrGetTransaction(HttpServerRequest httpServerRequest)"
                ]
            },
            "aa5e40647643805c3ed509b465d496a260004501": {
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebHelper.java": [
                    "protected void co.elastic.apm.agent.vertx.AbstractVertxWebHelper.setRouteBasedTransactionName(Transaction transaction, RoutingContext routingContext)"
                ],
                "apm-agent-plugins/apm-vertx/apm-vertx3-plugin/src/main/java/co/elastic/apm/agent/vertx/v3/web/WebHelper.java": [
                    "public Transaction co.elastic.apm.agent.vertx.v3.web.WebHelper.getTransactionForRequest(HttpServerRequest request)",
                    "public Transaction co.elastic.apm.agent.vertx.v3.web.WebHelper.startOrGetTransaction(HttpServerRequest httpServerRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e9525aadcfee43faaf575a46c857341602513d73",
        "previous_commit": "2ddd4cdd0d0755749961eb9c337372d0a1f94f9b",
        "date": 1643793807,
        "releases": {
            "previous": "e9525aadcfee43faaf575a46c857341602513d73",
            "next": "e9525aadcfee43faaf575a46c857341602513d73"
        },
        "commit_message": "Service name discovery based on webapp manifest (#2434)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e9525aadcfee43faaf575a46c857341602513d73": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServiceInfo.java": [
                    "public static ServiceInfo co.elastic.apm.agent.configuration.ServiceInfo.autoDetect(Properties properties)",
                    "private static ServiceInfo co.elastic.apm.agent.configuration.ServiceInfo.createFromSunJavaCommand(@Nullable String command)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            },
            "2ddd4cdd0d0755749961eb9c337372d0a1f94f9b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServiceInfo.java": [
                    "public static ServiceInfo co.elastic.apm.agent.configuration.ServiceInfo.autoDetect(Properties properties)",
                    "private static ServiceInfo co.elastic.apm.agent.configuration.ServiceInfo.createFromSunJavaCommand(@Nullable String command)"
                ],
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "245ac0658728969749b20d4183903d0a5ae6fa3f",
        "previous_commit": "db5fe0030d89e08308ee87a69aed9136f0b39d64",
        "date": 1562142465,
        "releases": {
            "previous": "245ac0658728969749b20d4183903d0a5ae6fa3f",
            "next": "245ac0658728969749b20d4183903d0a5ae6fa3f"
        },
        "commit_message": "Use @javax.ws.rs.Path value as transaction name (#620)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "245ac0658728969749b20d4183903d0a5ae6fa3f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(MethodDescription target)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getMethodMatcher()"
                ]
            },
            "db5fe0030d89e08308ee87a69aed9136f0b39d64": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(MethodDescription target)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4ddcfc6d084c584232251b49c9d63c697cab2563",
        "previous_commit": "481ee2536d79b6b54fb85d74fbae6c9d8112b15b",
        "date": 1694602120,
        "releases": {
            "previous": "4ddcfc6d084c584232251b49c9d63c697cab2563",
            "next": "4ddcfc6d084c584232251b49c9d63c697cab2563"
        },
        "commit_message": "Moves ServiceInfo to tracer module and reduce dependency exposure to core module of plugins. (#3272)\n\n* Move ServiceInfo to tracer-api within custom tracer submodule.\r\n\r\n* Restore package structure and split test for ServiceInfo.",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4ddcfc6d084c584232251b49c9d63c697cab2563": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "private LayoutComponentBuilder co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.createLayout(ConfigurationBuilder<BuiltConfiguration> builder, LogFormat logFormat)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletServiceNameHelper.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.servlet.ServletServiceNameHelper.determineServiceName(ServletContextAdapter<ServletContext> adapter, @Nullable ServletContext servletContext, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-spring-webmvc/apm-spring-webmvc-spring5/src/main/java/co/elastic/apm/agent/springwebmvc/AbstractSpringServiceNameInstrumentation.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.springwebmvc.AbstractSpringServiceNameInstrumentation.detectSpringServiceName(ServletContextAdapter<ServletContext> adapter, WebApplicationContext applicationContext, @Nullable ServletContext servletContext)"
                ]
            },
            "481ee2536d79b6b54fb85d74fbae6c9d8112b15b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "private LayoutComponentBuilder co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.createLayout(ConfigurationBuilder<BuiltConfiguration> builder, LogFormat logFormat)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletServiceNameHelper.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.servlet.ServletServiceNameHelper.determineServiceName(ServletContextAdapter<ServletContext> adapter, @Nullable ServletContext servletContext, Tracer tracer)"
                ],
                "apm-agent-plugins/apm-spring-webmvc/apm-spring-webmvc-spring5/src/main/java/co/elastic/apm/agent/springwebmvc/AbstractSpringServiceNameInstrumentation.java": [
                    "public static <ServletContext> void co.elastic.apm.agent.springwebmvc.AbstractSpringServiceNameInstrumentation.detectSpringServiceName(ServletContextAdapter<ServletContext> adapter, WebApplicationContext applicationContext, @Nullable ServletContext servletContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4f7a6e21061b5bb7e730f2ece78e26ebe21f4178",
        "previous_commit": "5afd454b84fd88614ec559892f55ff5f557af799",
        "date": 1585641658,
        "releases": {
            "previous": "4f7a6e21061b5bb7e730f2ece78e26ebe21f4178",
            "next": "4f7a6e21061b5bb7e730f2ece78e26ebe21f4178"
        },
        "commit_message": "Not overriding status code for non-core-Servlet Exceptions (#1103)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4f7a6e21061b5bb7e730f2ece78e26ebe21f4178": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, boolean overrideStatusCodeOnThrowable, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader, boolean deactivate)",
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.doOnAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, boolean overrideStatusCodeOnThrowable, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ApmAsyncListener.java": [
                    "private void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.endTransaction(AsyncEvent event)"
                ]
            },
            "5afd454b84fd88614ec559892f55ff5f557af799": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.doOnAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)",
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader, boolean deactivate)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ApmAsyncListener.java": [
                    "private void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.endTransaction(AsyncEvent event)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "aaccd273c241a4b22da6d4bdb3e09cf5ed8bf37b",
        "previous_commit": "659570d660b30627b3716669c1f9a623d7539288",
        "date": 1553773088,
        "releases": {
            "previous": "aaccd273c241a4b22da6d4bdb3e09cf5ed8bf37b",
            "next": "aaccd273c241a4b22da6d4bdb3e09cf5ed8bf37b"
        },
        "commit_message": "Adding configuration for class loading matching and logging class source (#548)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "aaccd273c241a4b22da6d4bdb3e09cf5ed8bf37b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "private static boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.canLoadClass(@Nullable ClassLoader target, String className)"
                ]
            },
            "659570d660b30627b3716669c1f9a623d7539288": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "private static boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.canLoadClass(@Nullable ClassLoader target, String className)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4d32c876719069fb01c0dbd24317dc458179cd42",
        "previous_commit": "7265fe94af0e7e75ad5a4721e8a6d87217a68b18",
        "date": 1524635513,
        "releases": {
            "previous": "4d32c876719069fb01c0dbd24317dc458179cd42",
            "next": "4d32c876719069fb01c0dbd24317dc458179cd42"
        },
        "commit_message": "Limit size of string values in JSON\n\n(closes #23)\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4d32c876719069fb01c0dbd24317dc458179cd42": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "void co.elastic.apm.report.serialize.DslJsonSerializer.writeField(final String fieldName, final StringBuilder value)",
                    "void co.elastic.apm.report.serialize.DslJsonSerializer.writeField(final String fieldName, @Nullable final String value)",
                    "void co.elastic.apm.report.serialize.DslJsonSerializer.writeLastField(final String fieldName, @Nullable final String value)"
                ]
            },
            "7265fe94af0e7e75ad5a4721e8a6d87217a68b18": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.writeField(final String fieldName, @Nullable final String value)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.writeField(final String fieldName, final StringBuilder value)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.writeLastField(final String fieldName, @Nullable final String value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3d284af3db0c68d5124f26d1dfac5826058202a8",
        "previous_commit": "483c2efff33d76d74b8f8065eb6d7d9996f381cc",
        "date": 1654677805,
        "releases": {
            "previous": "3d284af3db0c68d5124f26d1dfac5826058202a8",
            "next": "3d284af3db0c68d5124f26d1dfac5826058202a8"
        },
        "commit_message": "Promote some features to GA (#2653)\n\n* document attach API as GA\r\n\r\n* make cli attach GA\r\n\r\n* make dubbo plugin GA\r\n\r\n* promote use_path_as_transaction_name to GA\r\n\r\n* promote JDK http server to GA\r\n\r\n* GA in supp. tech. for dubbo + circuit breaker\r\n\r\n* make OTel bridge as GA\r\n\r\n* update changelog\r\n\r\n* improve changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3d284af3db0c68d5124f26d1dfac5826058202a8": {
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/AbstractDubboInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.dubbo.AbstractDubboInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-jdk-httpserver-plugin/src/main/java/co/elastic/apm/agent/httpserver/JdkHttpServerInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.httpserver.JdkHttpServerInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/AbstractOpenTelemetryInstrumentation.java": [
                    "public final Collection<String> co.elastic.apm.agent.opentelemetry.AbstractOpenTelemetryInstrumentation.getInstrumentationGroupNames()"
                ]
            },
            "483c2efff33d76d74b8f8065eb6d7d9996f381cc": {
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/AbstractDubboInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.dubbo.AbstractDubboInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-jdk-httpserver-plugin/src/main/java/co/elastic/apm/agent/httpserver/JdkHttpServerInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.httpserver.JdkHttpServerInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/AbstractOpenTelemetryInstrumentation.java": [
                    "public final Collection<String> co.elastic.apm.agent.opentelemetry.AbstractOpenTelemetryInstrumentation.getInstrumentationGroupNames()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3c4f6e0c1dc9e5e863e4a8621f36586cd6f7c6b2",
        "previous_commit": "7d2c0aae6171667a3afbe5ddb0d9ef077415ad6c",
        "date": 1587644468,
        "releases": {
            "previous": "3c4f6e0c1dc9e5e863e4a8621f36586cd6f7c6b2",
            "next": "3c4f6e0c1dc9e5e863e4a8621f36586cd6f7c6b2"
        },
        "commit_message": "TLS v1.3 Fallback for JDK bug (#1149)\n\nAdd fallback for TLS v1.3\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3c4f6e0c1dc9e5e863e4a8621f36586cd6f7c6b2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequestToUrl(URL url)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.agent.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, ApmServerClient apmServerClient, MetaData metaData)",
                    "private ReportingEventHandler co.elastic.apm.agent.report.ReporterFactory.getReportingEventHandler(ConfigurationRegistry configurationRegistry, ReporterConfiguration reporterConfiguration, MetaData metaData, ApmServerClient apmServerClient)"
                ]
            },
            "7d2c0aae6171667a3afbe5ddb0d9ef077415ad6c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequestToUrl(URL url)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.agent.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, ApmServerClient apmServerClient, MetaData metaData)",
                    "private ReportingEventHandler co.elastic.apm.agent.report.ReporterFactory.getReportingEventHandler(ConfigurationRegistry configurationRegistry, ReporterConfiguration reporterConfiguration, MetaData metaData, ApmServerClient apmServerClient)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b336370f70cc7b3262eca5a18963cfceb2de522c",
        "previous_commit": "e0a54c21e3ce5606353dcf237e154b27ff7f5bb5",
        "date": 1684943385,
        "releases": {
            "previous": "b336370f70cc7b3262eca5a18963cfceb2de522c",
            "next": "b336370f70cc7b3262eca5a18963cfceb2de522c"
        },
        "commit_message": "Extract configuration from core module to API (#3122)\n\n* Move configuration infrastructure to tracer module.\r\n\r\n* Move configurations that are exclusively used by plugins.\r\n\r\n* Mirror configurations that are used by both core and plugins via interfaces.\r\n\r\n* Mirror serverless configuration.\r\n\r\n* Fix documentation and add licence headers.\r\n\r\n* Add missing configuration discovery and switch order of configuration type processing.\r\n\r\n* single dependency for stagemonitor config\r\n\r\n* remove useless and javadoc-only imports\r\n\r\n---------\r\n\r\nCo-authored-by: Sylvain Juge <763082+SylvainJuge@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b336370f70cc7b3262eca5a18963cfceb2de522c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <T> T co.elastic.apm.agent.impl.ElasticApmTracer.getConfig(Class<T> configProvider)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/MetaData.java": [
                    "public static MetaDataFuture co.elastic.apm.agent.impl.metadata.MetaData.create(ConfigurationRegistry configurationRegistry, @Nullable String ephemeralId)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/ServiceFactory.java": [
                    "public Service co.elastic.apm.agent.impl.metadata.ServiceFactory.createService(CoreConfiguration coreConfiguration, String ephemeralId, boolean runsOnAwsLambda)"
                ]
            },
            "e0a54c21e3ce5606353dcf237e154b27ff7f5bb5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <T> T co.elastic.apm.agent.impl.ElasticApmTracer.getConfig(Class<T> configProvider)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/MetaData.java": [
                    "public static MetaDataFuture co.elastic.apm.agent.impl.metadata.MetaData.create(ConfigurationRegistry configurationRegistry, @Nullable String ephemeralId)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/ServiceFactory.java": [
                    "public Service co.elastic.apm.agent.impl.metadata.ServiceFactory.createService(CoreConfiguration coreConfiguration, String ephemeralId, ServerlessConfiguration serverlessConfiguration)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d44b3849dbcbe6e37f9358fb1604be81171a5359",
        "previous_commit": "37694432e86757abdf15046e6db21c802c689534",
        "date": 1585727435,
        "releases": {
            "previous": "d44b3849dbcbe6e37f9358fb1604be81171a5359",
            "next": "d44b3849dbcbe6e37f9358fb1604be81171a5359"
        },
        "commit_message": "Fix span sub-type missing in breakdown metrics (#1113)\n\nfix missing sub-type in equals/hashcode + tests\r\nas a bonus span subtype wasn't being reset properly\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d44b3849dbcbe6e37f9358fb1604be81171a5359": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.trackMetrics()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/Labels.java": [
                    "public void co.elastic.apm.agent.metrics.Mutable.resetState()",
                    "public boolean co.elastic.apm.agent.metrics.AbstractBase.equals(Object o)"
                ]
            },
            "37694432e86757abdf15046e6db21c802c689534": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.trackMetrics()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/Labels.java": [
                    "public void co.elastic.apm.agent.metrics.Mutable.resetState()",
                    "public boolean co.elastic.apm.agent.metrics.AbstractBase.equals(Object o)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ee6c990a616b71f3ad6d02286c9cbd93bee00f0f",
        "previous_commit": "0b319795865438037fa09c83bdee0c0b9ab31e9b",
        "date": 1560254177,
        "releases": {
            "previous": "ee6c990a616b71f3ad6d02286c9cbd93bee00f0f",
            "next": "ee6c990a616b71f3ad6d02286c9cbd93bee00f0f"
        },
        "commit_message": "Fix implementation version discovery of encoded jar files (#658)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ee6c990a616b71f3ad6d02286c9cbd93bee00f0f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(@Nullable ProtectionDomain protectionDomain)",
                    "private static @Nullable Version co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.readImplementationVersionFromManifest(@Nullable ProtectionDomain protectionDomain)",
                    "public static ElementMatcher.Junction<ProtectionDomain> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.implementationVersionLte(final String version)"
                ]
            },
            "0b319795865438037fa09c83bdee0c0b9ab31e9b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.matches(@Nullable ProtectionDomain protectionDomain)",
                    "private static @Nullable Version co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.readImplementationVersionFromManifest(@Nullable ProtectionDomain protectionDomain)",
                    "public static ElementMatcher.Junction<ProtectionDomain> co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.implementationVersionLte(final String version)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3752548664bcd88bd8ee65e798688d089e5f8fee",
        "previous_commit": "2f5ede27853b57e307a3bb6795a854d931b6071c",
        "date": 1637852418,
        "releases": {
            "previous": "3752548664bcd88bd8ee65e798688d089e5f8fee",
            "next": "3752548664bcd88bd8ee65e798688d089e5f8fee"
        },
        "commit_message": "Only remove domain when FQDN is expected (#2286)\n\n* Only remove domain when FQDN is expected\r\n\r\n* ensure that host name is properly normalized\r\n\r\n* add PR to changelog\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>\r\nCo-authored-by: jackshirazi <jacks@fasterj.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3752548664bcd88bd8ee65e798688d089e5f8fee": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/SystemInfo.java": [
                    "private static String co.elastic.apm.agent.impl.metadata.SystemInfo.executeHostnameDiscoveryCommand(List<String> cmd, long timeoutMillis)",
                    "static String co.elastic.apm.agent.impl.metadata.SystemInfo.fallbackHostnameDiscovery(boolean isWindows)",
                    "static String co.elastic.apm.agent.impl.metadata.SystemInfo.discoverHostname(boolean isWindows, long timeoutMillis)"
                ]
            },
            "2f5ede27853b57e307a3bb6795a854d931b6071c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/SystemInfo.java": [
                    "private static String co.elastic.apm.agent.impl.metadata.SystemInfo.executeHostnameDiscoveryCommand(List<String> cmd, long timeoutMillis)",
                    "static String co.elastic.apm.agent.impl.metadata.SystemInfo.fallbackHostnameDiscovery(boolean isWindows)",
                    "static String co.elastic.apm.agent.impl.metadata.SystemInfo.discoverHostname(boolean isWindows, long timeoutMillis)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "da06dd51a271656ff43ae2a2af131ab16fb7ea75",
        "previous_commit": "feebf1a35da3a71360c5826653bff60675c5b286",
        "date": 1605025558,
        "releases": {
            "previous": "da06dd51a271656ff43ae2a2af131ab16fb7ea75",
            "next": "da06dd51a271656ff43ae2a2af131ab16fb7ea75"
        },
        "commit_message": "Excluding Spring-JMS specific Runnable from the concurrent plugin (#1496)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "da06dd51a271656ff43ae2a2af131ab16fb7ea75": {
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "public static <T> Callable<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Callable<T> callable, Tracer tracer)",
                    "public static Runnable co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Runnable runnable, Tracer tracer)",
                    "public static <T> ForkJoinTask<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable ForkJoinTask<T> task, Tracer tracer)"
                ]
            },
            "feebf1a35da3a71360c5826653bff60675c5b286": {
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "public static <T> Callable<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Callable<T> callable, Tracer tracer)",
                    "public static Runnable co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable Runnable runnable, Tracer tracer)",
                    "public static <T> ForkJoinTask<T> co.elastic.apm.agent.concurrent.JavaConcurrent.withContext(@Nullable ForkJoinTask<T> task, Tracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1c5934de039088cb9ba8f9e9593ca1dbcc952104",
        "previous_commit": "c61a301536d71076f55e0d929ecbf47e3f04feb6",
        "date": 1641395972,
        "releases": {
            "previous": "1c5934de039088cb9ba8f9e9593ca1dbcc952104",
            "next": "1c5934de039088cb9ba8f9e9593ca1dbcc952104"
        },
        "commit_message": "Use emulated attach as fallback (#2385)\n\n* use emulated attach as fallback on attach itself\r\n\r\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1c5934de039088cb9ba8f9e9593ca1dbcc952104": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration, File agentJarFile)",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, String agentArgs)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticAttachmentProvider.java": [
                    "private synchronized static void co.elastic.apm.attach.ElasticAttachmentProvider.init()"
                ]
            },
            "c61a301536d71076f55e0d929ecbf47e3f04feb6": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration, File agentJarFile)",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, String agentArgs)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticAttachmentProvider.java": [
                    "private synchronized static void co.elastic.apm.attach.ElasticAttachmentProvider.init()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "98a8aad12dd973126c96c174947af3ef40084031",
        "previous_commit": "fbc4cde3722938a06e5b728e5f1cbb8d5eee406d",
        "date": 1604927425,
        "releases": {
            "previous": "98a8aad12dd973126c96c174947af3ef40084031",
            "next": "98a8aad12dd973126c96c174947af3ef40084031"
        },
        "commit_message": "Using type pool cache only when applying instrumentation for the entire JVM (#1484)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "98a8aad12dd973126c96c174947af3ef40084031": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.initAgentBuilder(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, final Logger logger, final AgentBuilder.DescriptionStrategy descriptionStrategy, final boolean premain, final boolean useTypePoolCache)"
                ]
            },
            "fbc4cde3722938a06e5b728e5f1cbb8d5eee406d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.initAgentBuilder(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, final Logger logger, final AgentBuilder.DescriptionStrategy descriptionStrategy, final boolean premain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "46625833729eeded7fd1572a26dc21e536273518",
        "previous_commit": "58cf9f3abcc1257e18a9869bb101588fc5361dbd",
        "date": 1672585934,
        "releases": {
            "previous": "46625833729eeded7fd1572a26dc21e536273518",
            "next": "46625833729eeded7fd1572a26dc21e536273518"
        },
        "commit_message": "Windows tests (#2941)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "46625833729eeded7fd1572a26dc21e536273518": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "private void co.elastic.apm.agent.report.AbstractIntakeApiHandler.onRequestError(Integer responseCode, long bytesWritten, InputStream inputStream, @Nullable IOException e)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.startRequest(String endpoint)",
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.run()"
                ]
            },
            "58cf9f3abcc1257e18a9869bb101588fc5361dbd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "private void co.elastic.apm.agent.report.AbstractIntakeApiHandler.onRequestError(Integer responseCode, long bytesWritten, InputStream inputStream, @Nullable IOException e)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.startRequest(String endpoint)",
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.run()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f86507304b4cb86c96a96f99ee1aa727e7211b3b",
        "previous_commit": "7a8077b23d6a1fc202b03ae34f4df92901de54d1",
        "date": 1585308253,
        "releases": {
            "previous": "f86507304b4cb86c96a96f99ee1aa727e7211b3b",
            "next": "f86507304b4cb86c96a96f99ee1aa727e7211b3b"
        },
        "commit_message": "Rename active to recording (#1101)\n\nFirst part of #1086",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f86507304b4cb86c96a96f99ee1aa727e7211b3b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.start(List<LifecycleListener> lifecycleListeners)",
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.onStressRelieved()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ConfigurationRegistry co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry(List<ConfigurationSource> configSources)"
                ]
            },
            "7a8077b23d6a1fc202b03ae34f4df92901de54d1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.start(List<LifecycleListener> lifecycleListeners)",
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.onStressRelieved()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ConfigurationRegistry co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getDefaultConfigurationRegistry(List<ConfigurationSource> configSources)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "078da74c8109a3a58bcdba20f3d28f392da489ce",
        "previous_commit": "44ed8c2bec08da24283a645b5f76a81f6a035646",
        "date": 1677077396,
        "releases": {
            "previous": "078da74c8109a3a58bcdba20f3d28f392da489ce",
            "next": "078da74c8109a3a58bcdba20f3d28f392da489ce"
        },
        "commit_message": "Add Activation method for telemetry on how the agent was started (#2926)\n\n* Add Activation method for telemetry on how the agent was started\r\n\r\n* fix NPE from test mode or not yet initialized agent\r\n\r\n* add integration tests\r\n\r\n* fix cyclic dependency\r\n\r\n* fix cyclic dependency 2nd try\r\n\r\n* ignore slim jars\r\n\r\n* parallelize the tests (they're mostly just waiting for the metadata)\r\n\r\n* cache the type\r\n\r\n* cache the type (forgot to add)\r\n\r\n* refactor\r\n\r\n* refactor to pass tests\r\n\r\n* fix doc typo\r\n\r\n* add env setup test\r\n\r\n* fix test expecting main but now run in a thread pool (as parallel testing enabled)\r\n\r\n* fix test to expect current thread name\r\n\r\n* fix another test parallelization thread name changes\r\n\r\n* jul logging test needs fixing for thread name checking\r\n\r\n* add changelog entry\r\n\r\n* add aws lambda explicit activation",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "078da74c8109a3a58bcdba20f3d28f392da489ce": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "private boolean co.elastic.apm.attach.AgentAttacher.attach(JvmInfo jvmInfo)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration, File agentJarFile)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeAgent(final Agent agent, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ]
            },
            "44ed8c2bec08da24283a645b5f76a81f6a035646": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "private boolean co.elastic.apm.attach.AgentAttacher.attach(JvmInfo jvmInfo)"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration, File agentJarFile)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeAgent(final Agent agent, final StringBuilder replaceBuilder, final JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ddb8c690c0eff5b1f4bf989560ffe5ef4c169d59",
        "previous_commit": "c3233260f7cef434562240d6d6f234521678049f",
        "date": 1647857595,
        "releases": {
            "previous": "ddb8c690c0eff5b1f4bf989560ffe5ef4c169d59",
            "next": "ddb8c690c0eff5b1f4bf989560ffe5ef4c169d59"
        },
        "commit_message": "OpenTelemetry bridge (#1631)\n\n* Fist working draft\r\n\r\n* Lazily parse tracestate\r\n\r\n* Use built-in Context\r\n\r\n* Translate OTel attributes to intake API\r\n\r\n* Refine instrumentations\r\n\r\n* Mark as experimental\r\n\r\n* Add enable_experimental_instrumentations option\r\n\r\n* polishing\r\n\r\n* Extract advice to separate class\r\n\r\n* more polishing\r\n\r\n* Map OTel semantic convention attributes to data model\r\n\r\n* Mark spans non-discardable on context propagation\r\n\r\n* Remove construction of URL fields that are filled on APM Server\r\n\r\n* Add license headers\r\n\r\n* Revert \"Remove construction of URL fields that are filled on APM Server\"\r\n\r\nThis reverts commit 56594eb5b68b4b5010e1271e16f6086d4366b228.\r\n\r\n* Map destination details of external spans\r\n\r\n* Avoid calling method that's @since Java 9\r\n\r\n* Fix packaging and shading\r\n\r\n* Add docs\r\n\r\n* Add changelog\r\n\r\n* Document when OTel bridge has been added\r\n\r\n* Update to OTel 0.15.0 and test older versions too\r\n\r\nAlso makes sure that only versions starting with 1.14.0 are instrumented\r\n\r\n* Implement review suggestions\r\n\r\n* Bubble up operation modes to apis.asciidoc\r\n\r\n* Log warning once if unsupported APIs are used\r\n\r\n* Be more clear about what is and what's not supported\r\n\r\n* Update and require OTel 0.16.0\r\n\r\n* Remove smurf naming convention\r\n\r\n* Set outcome\r\n\r\n* Update to otel 1.0.0\r\n\r\n* fix advice class names\r\n\r\n* fix url test\r\n\r\n* post-merge update\r\n\r\n* add missing ivy test dependency\r\n\r\n* test versions 1.0.x->1.5.0\r\n\r\n* add few tests for coverage\r\n\r\n* fix doc release version\r\n\r\n* update docs\r\n\r\n* introduce ElasticContext to rule them all\r\n\r\n* bridge otel root context\r\n\r\n* code cleanup\r\n\r\n* code cleanup + update test to 1.6.0\r\n\r\n* add missing license header\r\n\r\n* minor tweaks\r\n\r\n* fix doc update test fail msg\r\n\r\n* add span kind + wip on shared spec\r\n\r\n* add wip gherkin spec\r\n\r\n* add missing file headers\r\n\r\n* wip http + db span mapping\r\n\r\n* finalize 1st tep of bridge\r\n\r\n* minor cleanup\r\n\r\n* replace 'custom' with 'unknown' for bridge\r\n\r\n* update json spec for span type/subtype\r\n\r\n* Use AssignReturned annotations\r\n\r\n* Fix parent project version\r\n\r\n* wip main cucumber tasks\r\n\r\n* infer on otel span end + basic outcome mapping\r\n\r\n* pom cleanup\r\n\r\n* code cleanup\r\n\r\n* set outcome for otel spans\r\n\r\n* fix tests\r\n\r\n* do not infer outcome from lack of exception\r\n\r\n* fix documentation\r\n\r\n* fix/cleanup documentation\r\n\r\n* update changelog\r\n\r\n* fix sdk logger change\r\n\r\n* add latest versions for test coverage\r\n\r\n* update generated doc\r\n\r\n* compile agent sdk for java 7\r\n\r\n* fix doc links\r\n\r\n* Apply suggestions from code review (docs links)\r\n\r\nCo-authored-by: Brandon Morelli <bmorelli25@gmail.com>\r\n\r\n* aim for release in 1.30.0\r\n\r\n* add missing otel attributes & kind serialization\r\n\r\n* prevent NPE when Context.root() is not called first\r\n\r\n* move to a single module for opentelemetry\r\n\r\n* move to dedicated sub-module for opentelemetry\r\n\r\n* capture OTel API version when possible\r\n\r\n* minimize changelog diff\r\n\r\n* clarify some comments/doc\r\n\r\n* properly reformat\r\n\r\n* minor fix to otel mvn dependencies\r\n\r\n* remove unused context propagator\r\n\r\n* bump version to 1.30.0\r\n\r\n* prevent multiple root contexts\r\n\r\n* fix pebkc\r\n\r\n* set implicit active parent only at startSpan\r\n\r\n* fix docs (attempt for menu)\r\n\r\n* fix API docs menu integration\r\n\r\n* trim whitespace\r\n\r\n* fix links to public-api\r\n\r\n* fix generated doc\r\n\r\n* doc: try removing float blocks\r\n\r\n* fix API menu\r\n\r\n* fix new module version\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>\r\nCo-authored-by: SylvainJuge <syl20j@gmail.com>\r\nCo-authored-by: Brandon Morelli <bmorelli25@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ddb8c690c0eff5b1f4bf989560ffe5ef4c169d59": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()",
                    "public AbstractSpan<?> co.elastic.apm.agent.impl.ElasticApmTracer.getActive()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            },
            "c3233260f7cef434562240d6d6f234521678049f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()",
                    "public AbstractSpan<?> co.elastic.apm.agent.impl.ElasticApmTracer.getActive()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6432a430aeea16b0d39d52d7bc622f5b00e5582d",
        "previous_commit": "21159a5fac9c21c6af7e9000f3964c92e5beb5c6",
        "date": 1529689583,
        "releases": {
            "previous": "6432a430aeea16b0d39d52d7bc622f5b00e5582d",
            "next": "6432a430aeea16b0d39d52d7bc622f5b00e5582d"
        },
        "commit_message": "Add support for WebSphere (#104)\n\nIncludes integration tests for WebSphere 18.0 and 8.5.5,\r\nrunning on IBM J9 VM 8",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6432a430aeea16b0d39d52d7bc622f5b00e5582d": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)",
                    "public boolean co.elastic.apm.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.servlet.ServletInstrumentation.getTypeMatcher()"
                ]
            },
            "21159a5fac9c21c6af7e9000f3964c92e5beb5c6": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)",
                    "public boolean co.elastic.apm.bci.ElasticApmAgent.matches(TypeDescription typeDescription, ClassLoader classLoader, JavaModule module, Class<?> classBeingRedefined, ProtectionDomain protectionDomain)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.servlet.ServletInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "dfff0aa59c7d2a84a88bd705b7c995df7ad36fe2",
        "previous_commit": "c2b1ba408d3810e112dc61174309c19babc1b7ac",
        "date": 1571748546,
        "releases": {
            "previous": "dfff0aa59c7d2a84a88bd705b7c995df7ad36fe2",
            "next": "dfff0aa59c7d2a84a88bd705b7c995df7ad36fe2"
        },
        "commit_message": "Add ElasticApmAttacher.attach(String classpathLocation) (#892)\n\nAlso, clarify that config_file can't be on the classpath",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "dfff0aa59c7d2a84a88bd705b7c995df7ad36fe2": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach()",
                    "private static Map<String, String> co.elastic.apm.attach.ElasticApmAttacher.loadProperties(String propertiesLocation)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private List<ConfigurationSource> co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getConfigSources(@Nullable String agentArguments)"
                ]
            },
            "c2b1ba408d3810e112dc61174309c19babc1b7ac": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static Map<String, String> co.elastic.apm.attach.ElasticApmAttacher.loadProperties()",
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private List<ConfigurationSource> co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getConfigSources(@Nullable String agentArguments)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "69b64f64c0e4c230d2de456dde100a70fbf08e52",
        "previous_commit": "b9be1ea78ec31f9fa1ca8876bdbac27706a49688",
        "date": 1636495559,
        "releases": {
            "previous": "69b64f64c0e4c230d2de456dde100a70fbf08e52",
            "next": "69b64f64c0e4c230d2de456dde100a70fbf08e52"
        },
        "commit_message": "added support of jakartaee to jaxws plugin (#2247)\n\n* added support of jakartaee to jaxws plugin\r\n\r\n* replaced named with namedOneOf. Added entry to changelog\r\n\r\n* added common AbstractJaxWsInstrumentationTest\r\n\r\n* make test class abstract\r\n\r\n* added creating test jar",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "69b64f64c0e4c230d2de456dde100a70fbf08e52": {
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.getClassLoaderMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.getMethodMatcher()"
                ]
            },
            "b9be1ea78ec31f9fa1ca8876bdbac27706a49688": {
                "apm-agent-plugins/apm-jaxws-plugin/src/main/java/co/elastic/apm/agent/jaxws/JaxWsTransactionNameInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.getClassLoaderMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jaxws.JaxWsTransactionNameInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c401e5f56033dc2902f350332c9209468264dca1",
        "previous_commit": "72895b0b18a17fcb7a833c0a8d65261e2ced0db7",
        "date": 1629647392,
        "releases": {
            "previous": "c401e5f56033dc2902f350332c9209468264dca1",
            "next": "c401e5f56033dc2902f350332c9209468264dca1"
        },
        "commit_message": "Downloading agent and verifying PGP signature (#1959)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c401e5f56033dc2902f350332c9209468264dca1": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "public static void co.elastic.apm.attach.AgentAttacher.main(String[] args)",
                    "static Arguments co.elastic.apm.attach.AgentAttacher.parse(String... args)",
                    "static void co.elastic.apm.attach.AgentAttacher.printHelp(PrintStream out)"
                ]
            },
            "72895b0b18a17fcb7a833c0a8d65261e2ced0db7": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "public static void co.elastic.apm.attach.AgentAttacher.main(String[] args)",
                    "static Arguments co.elastic.apm.attach.AgentAttacher.parse(String... args)",
                    "static void co.elastic.apm.attach.AgentAttacher.printHelp(PrintStream out)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0c95ed7faa390d1089e552d98b43b664990ea0a9",
        "previous_commit": "1b19484ed5a32f3561273ac7ae8eb14ec4a2924b",
        "date": 1580307681,
        "releases": {
            "previous": "0c95ed7faa390d1089e552d98b43b664990ea0a9",
            "next": "0c95ed7faa390d1089e552d98b43b664990ea0a9"
        },
        "commit_message": "Reduce startup costs for AsyncHttpClient instrumentation (#985)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0c95ed7faa390d1089e552d98b43b664990ea0a9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()"
                ],
                "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.asynchttpclient.AbstractAsyncHttpClientInstrumentation.getTypeMatcher()"
                ]
            },
            "1b19484ed5a32f3561273ac7ae8eb14ec4a2924b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)",
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()"
                ],
                "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.asynchttpclient.AbstractAsyncHttpClientInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "eab300beb6d4f8aad4dd88634bb99458244430c6",
        "previous_commit": "32bd4271961ee415b14362e91e92c2d13a0fa460",
        "date": 1633941907,
        "releases": {
            "previous": "eab300beb6d4f8aad4dd88634bb99458244430c6",
            "next": "eab300beb6d4f8aad4dd88634bb99458244430c6"
        },
        "commit_message": "Switching to use SpanConcurrentMap in the concurrency plugin (#2173)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "eab300beb6d4f8aad4dd88634bb99458244430c6": {
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "private static void co.elastic.apm.agent.concurrent.JavaConcurrent.removeContext(Object o)",
                    "public static AbstractSpan<?> co.elastic.apm.agent.concurrent.JavaConcurrent.restoreContext(Object o, Tracer tracer)",
                    "private static void co.elastic.apm.agent.concurrent.JavaConcurrent.captureContext(Object task, AbstractSpan<?> active)"
                ]
            },
            "32bd4271961ee415b14362e91e92c2d13a0fa460": {
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/JavaConcurrent.java": [
                    "private static void co.elastic.apm.agent.concurrent.JavaConcurrent.removeContext(Object o)",
                    "public static AbstractSpan<?> co.elastic.apm.agent.concurrent.JavaConcurrent.restoreContext(Object o, Tracer tracer)",
                    "private static void co.elastic.apm.agent.concurrent.JavaConcurrent.captureContext(Object task, AbstractSpan<?> active)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "59bebbec54899d72a2db91bf90758e9fceecfa52",
        "previous_commit": "1b7e4615df104bd8dbfe00c4d6420c3605977a9e",
        "date": 1690375321,
        "releases": {
            "previous": "59bebbec54899d72a2db91bf90758e9fceecfa52",
            "next": "59bebbec54899d72a2db91bf90758e9fceecfa52"
        },
        "commit_message": "Attempt to fix reference counting issues in ES client instrumentation (#3256)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "59bebbec54899d72a2db91bf90758e9fceecfa52": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ResponseListenerWrapper.java": [
                    "ResponseListenerWrapper co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.withClientSpan(ResponseListener delegate, Span<?> span)",
                    "public void co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.resetState()",
                    "ResponseListenerWrapper co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.withContextPropagation(ResponseListener delegate, AbstractSpan<?> context)"
                ]
            },
            "1b7e4615df104bd8dbfe00c4d6420c3605977a9e": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ResponseListenerWrapper.java": [
                    "ResponseListenerWrapper co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.withClientSpan(ResponseListener delegate, Span<?> span)",
                    "public void co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.resetState()",
                    "ResponseListenerWrapper co.elastic.apm.agent.esrestclient.ResponseListenerWrapper.withContextPropagation(ResponseListener delegate, AbstractSpan<?> context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d10db0ca04d31e1cd9891eb694b0c49c5b535028",
        "previous_commit": "448227912fb4848bb0b5c1b222a57a75a5061c1e",
        "date": 1603099577,
        "releases": {
            "previous": "d10db0ca04d31e1cd9891eb694b0c49c5b535028",
            "next": "d10db0ca04d31e1cd9891eb694b0c49c5b535028"
        },
        "commit_message": "Disable the agent when -XX:+UseG1GC is used on Java 7 (#1440)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d10db0ca04d31e1cd9891eb694b0c49c5b535028": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.bci.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "void co.elastic.apm.agent.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private boolean co.elastic.apm.agent.impl.ElasticApmTracer.shouldDelayOnPremain()"
                ]
            },
            "448227912fb4848bb0b5c1b222a57a75a5061c1e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.bci.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "void co.elastic.apm.agent.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private boolean co.elastic.apm.agent.impl.ElasticApmTracer.shouldDelayOnPremain()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "cb07ab53a5aecabd9e834f405392c70dc27d0f0c",
        "previous_commit": "17802519a4dd8e606093eaa8fff04ab92554b21c",
        "date": 1634554564,
        "releases": {
            "previous": "cb07ab53a5aecabd9e834f405392c70dc27d0f0c",
            "next": "cb07ab53a5aecabd9e834f405392c70dc27d0f0c"
        },
        "commit_message": "Replace `@AssignTo` with Byte Buddy's `@Advice.AssignReturned` (#2171)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "cb07ab53a5aecabd9e834f405392c70dc27d0f0c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.initAgentBuilder(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdvice(ElasticApmInstrumentation instrumentation)",
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ]
            },
            "17802519a4dd8e606093eaa8fff04ab92554b21c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.initAgentBuilder(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)",
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdvice(ElasticApmInstrumentation instrumentation)",
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "274b42cdeb33689a225d312692c272dc2ef93350",
        "previous_commit": "d1536647758621bc7323299f64ebea70d6bb8be3",
        "date": 1526320139,
        "releases": {
            "previous": "274b42cdeb33689a225d312692c272dc2ef93350",
            "next": "274b42cdeb33689a225d312692c272dc2ef93350"
        },
        "commit_message": "Remove for each with indexed for loops to avoid iterator allocations\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "274b42cdeb33689a225d312692c272dc2ef93350": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.recycle(Transaction transaction)",
                    "private void co.elastic.apm.impl.ElasticApmTracer.recycle(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/processor/ProcessorEventHandler.java": [
                    "public void co.elastic.apm.report.processor.ProcessorEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            },
            "d1536647758621bc7323299f64ebea70d6bb8be3": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.recycle(Transaction transaction)",
                    "private void co.elastic.apm.impl.ElasticApmTracer.recycle(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/processor/ProcessorEventHandler.java": [
                    "public void co.elastic.apm.report.processor.ProcessorEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e708fee8553c5d9e17d527d7dccac33419a13822",
        "previous_commit": "96c5ec6c54f5e1deb82a2e4e200d21e1db6560f7",
        "date": 1636371633,
        "releases": {
            "previous": "e708fee8553c5d9e17d527d7dccac33419a13822",
            "next": "e708fee8553c5d9e17d527d7dccac33419a13822"
        },
        "commit_message": "Add the (current) transaction name to the error object (#2235)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e708fee8553c5d9e17d527d7dccac33419a13822": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.agent.impl.error.ErrorCapture.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeErrorTransactionInfo(ErrorCapture.TransactionInfo errorTransactionInfo)"
                ]
            },
            "96c5ec6c54f5e1deb82a2e4e200d21e1db6560f7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.agent.impl.error.ErrorCapture.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeErrorTransactionInfo(ErrorCapture.TransactionInfo errorTransactionInfo)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "97fa3539a63dafb1e663f2b039499b79a263b181",
        "previous_commit": "61e5456ab32ff9b77b3bda334d2f498e9137d527",
        "date": 1539584706,
        "releases": {
            "previous": "97fa3539a63dafb1e663f2b039499b79a263b181",
            "next": "97fa3539a63dafb1e663f2b039499b79a263b181"
        },
        "commit_message": "Update TraceContext (#234)\n\n- only use recorded flag\r\n- use lower-case header name\r\n- try to parse unknown versions according to spec\r\n- Test against w3c test data\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "97fa3539a63dafb1e663f2b039499b79a263b181": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.impl.transaction.TraceContext.asRootSpan(Sampler sampler)",
                    "private byte co.elastic.apm.impl.transaction.TraceContext.getTraceOptions(String traceParent)",
                    "public boolean co.elastic.apm.impl.transaction.TraceContext.asChildOf(String traceParentHeader)"
                ]
            },
            "61e5456ab32ff9b77b3bda334d2f498e9137d527": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.impl.transaction.TraceContext.asRootSpan(Sampler sampler)",
                    "private byte co.elastic.apm.impl.transaction.TraceContext.getTraceOptions(String traceParent)",
                    "public boolean co.elastic.apm.impl.transaction.TraceContext.asChildOf(String traceParentHeader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0a3bafa72c7050d1ca2c5da7999c6ddcd24f7a5a",
        "previous_commit": "707982892b4f5511abdcea0c0f7214942ad09204",
        "date": 1525118454,
        "releases": {
            "previous": "0a3bafa72c7050d1ca2c5da7999c6ddcd24f7a5a",
            "next": "0a3bafa72c7050d1ca2c5da7999c6ddcd24f7a5a"
        },
        "commit_message": "Add testcontainers based integration test (#57)\n\ncloses #20",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0a3bafa72c7050d1ca2c5da7999c6ddcd24f7a5a": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.report.ApmServerReporter.report(ErrorCapture error)",
                    "public void co.elastic.apm.report.ApmServerReporter.report(Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            },
            "707982892b4f5511abdcea0c0f7214942ad09204": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerReporter.java": [
                    "public void co.elastic.apm.report.ApmServerReporter.report(ErrorCapture error)",
                    "public void co.elastic.apm.report.ApmServerReporter.report(Transaction transaction)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3f81f6f2e30ce5b61ce4a6af1c24949236393f86",
        "previous_commit": "080ff4181f29c6225491a9e62bc9316882aee353",
        "date": 1636378276,
        "releases": {
            "previous": "3f81f6f2e30ce5b61ce4a6af1c24949236393f86",
            "next": "3f81f6f2e30ce5b61ce4a6af1c24949236393f86"
        },
        "commit_message": "No Content-Encoding when disabling compression for localhost (#2238)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3f81f6f2e30ce5b61ce4a6af1c24949236393f86": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)",
                    "public void co.elastic.apm.agent.report.AbstractIntakeApiHandler.endRequest()",
                    "protected boolean co.elastic.apm.agent.report.AbstractIntakeApiHandler.shouldEndRequest()"
                ]
            },
            "080ff4181f29c6225491a9e62bc9316882aee353": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)",
                    "public void co.elastic.apm.agent.report.AbstractIntakeApiHandler.endRequest()",
                    "protected boolean co.elastic.apm.agent.report.AbstractIntakeApiHandler.shouldEndRequest()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9de14aec5823cbf648a3ee463c2f8c19422da86d",
        "previous_commit": "919eb307b1eab9a0d7b8e7fe6c780cb6b24f43f2",
        "date": 1598263453,
        "releases": {
            "previous": "9de14aec5823cbf648a3ee463c2f8c19422da86d",
            "next": "9de14aec5823cbf648a3ee463c2f8c19422da86d"
        },
        "commit_message": "fix broken path to 'jps' thanks to symlinks to a JRE (#1352)\n\nFix and test to make sure 'jps' is properly found",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9de14aec5823cbf648a3ee463c2f8c19422da86d": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/JvmDiscoverer.java": [
                    "private static Process runJps()"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "public static void co.elastic.apm.attach.RemoteAttacher.main(String[] args)"
                ]
            },
            "919eb307b1eab9a0d7b8e7fe6c780cb6b24f43f2": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/JvmDiscoverer.java": [
                    "private static Process runJps()"
                ],
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/RemoteAttacher.java": [
                    "public static void co.elastic.apm.attach.RemoteAttacher.main(String[] args)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "99b4a3c226ac4c923badd7e246fdeb4e6c6c32f4",
        "previous_commit": "37b3b7affb7bb855164142828d41f5d6315b827c",
        "date": 1537256842,
        "releases": {
            "previous": "99b4a3c226ac4c923badd7e246fdeb4e6c6c32f4",
            "next": "99b4a3c226ac4c923badd7e246fdeb4e6c6c32f4"
        },
        "commit_message": "Avoid recycling transactions twice (#205)\n\ncloses #178",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "99b4a3c226ac4c923badd7e246fdeb4e6c6c32f4": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)"
                ]
            },
            "37b3b7affb7bb855164142828d41f5d6315b827c": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6cdd4de3756c82a99f3afb559a00357945ab562e",
        "previous_commit": "4047c750da91c452d4762f2342da380af0953411",
        "date": 1519927508,
        "releases": {
            "previous": "6cdd4de3756c82a99f3afb559a00357945ab562e",
            "next": "6cdd4de3756c82a99f3afb559a00357945ab562e"
        },
        "commit_message": "Use PotentiallyMultiValuedMap for headers and cookies\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6cdd4de3756c82a99f3afb559a00357945ab562e": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)",
                    "private void co.elastic.apm.servlet.ApmFilter.fillResponse(Response response, HttpServletResponse httpServletResponse)"
                ]
            },
            "4047c750da91c452d4762f2342da380af0953411": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)",
                    "private void co.elastic.apm.servlet.ApmFilter.fillResponse(Response response, HttpServletResponse httpServletResponse)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "31951f695f0d476960fd35cc32136f2c818306ab",
        "previous_commit": "14117139e9893a0d1e11975c7ea219399274e8c2",
        "date": 1617091216,
        "releases": {
            "previous": "31951f695f0d476960fd35cc32136f2c818306ab",
            "next": "31951f695f0d476960fd35cc32136f2c818306ab"
        },
        "commit_message": "Eliminate log4j shaders dependency in slf4j (#1723)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "31951f695f0d476960fd35cc32136f2c818306ab": {
                "apm-agent-plugins/apm-log-shader-plugin/apm-log4j1-plugin/src/main/java/co/elastic/apm/agent/log4j1/Log4j1LogShadingHelper.java": [
                    "protected WriterAppender co.elastic.apm.agent.log4j1.Log4j1LogShadingHelper.createAndConfigureAppender(WriterAppender originalAppender, String appenderName)"
                ],
                "apm-agent-plugins/apm-log-shader-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/Log4j2LogShadingHelper.java": [
                    "protected AbstractOutputStreamAppender<?> co.elastic.apm.agent.log4j2.Log4j2LogShadingHelper.createAndConfigureAppender(AbstractOutputStreamAppender<?> originalAppender, String appenderName)"
                ]
            },
            "14117139e9893a0d1e11975c7ea219399274e8c2": {
                "apm-agent-plugins/apm-log-shader-plugin/apm-log4j1-plugin/src/main/java/co/elastic/apm/agent/log4j1/Log4j1LogShadingHelper.java": [
                    "protected WriterAppender co.elastic.apm.agent.log4j1.Log4j1LogShadingHelper.createAndConfigureAppender(WriterAppender originalAppender, String appenderName)"
                ],
                "apm-agent-plugins/apm-log-shader-plugin/apm-log4j2-plugin/src/main/java/co/elastic/apm/agent/log4j2/Log4j2LogShadingHelper.java": [
                    "protected AbstractOutputStreamAppender<?> co.elastic.apm.agent.log4j2.Log4j2LogShadingHelper.createAndConfigureAppender(AbstractOutputStreamAppender<?> originalAppender, String appenderName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c943c27b9e3864b06d5a1853b45b0341386d4db9",
        "previous_commit": "4a4eab6a5f66b3315389c42810d66778fa03381d",
        "date": 1643702864,
        "releases": {
            "previous": "c943c27b9e3864b06d5a1853b45b0341386d4db9",
            "next": "c943c27b9e3864b06d5a1853b45b0341386d4db9"
        },
        "commit_message": "Always use JDK default URL handler (#2429)\n\n* Always use JDK default URL handler\r\n\r\n* avoid test side-effects through instrumentation\r\n\r\n* ensure cloud provider is safe to use\r\n\r\n* update changelog\r\n\r\n* fallback to original URL for safety",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c943c27b9e3864b06d5a1853b45b0341386d4db9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/CloudMetadataProvider.java": [
                    "private static String co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.executeRequest(String url, String method, @Nullable Map<String, String> headers, int queryTimeoutMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private void co.elastic.apm.agent.report.ApmServerClient.setServerUrls(List<URL> serverUrls)"
                ]
            },
            "4a4eab6a5f66b3315389c42810d66778fa03381d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/CloudMetadataProvider.java": [
                    "private static String co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.executeRequest(String url, String method, @Nullable Map<String, String> headers, int queryTimeoutMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private void co.elastic.apm.agent.report.ApmServerClient.setServerUrls(List<URL> serverUrls)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f3ee22ab465fb641e6c8d4802bfbc71e065eda7b",
        "previous_commit": "544e3e719585a1aa8b18afe092baa77847db6ff4",
        "date": 1586442627,
        "releases": {
            "previous": "f3ee22ab465fb641e6c8d4802bfbc71e065eda7b",
            "next": "f3ee22ab465fb641e6c8d4802bfbc71e065eda7b"
        },
        "commit_message": "Fix circuit breaker flaky test (race condition) (#1126)\n\n* fix flaky test (tricky race condition)",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f3ee22ab465fb641e6c8d4802bfbc71e065eda7b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.onStressDetected()",
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.onStressRelieved()"
                ]
            },
            "544e3e719585a1aa8b18afe092baa77847db6ff4": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.onStressDetected()",
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.onStressRelieved()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "863822f8aa1fb1a08c7b1fce2fdcf3bc32baf6bb",
        "previous_commit": "8d31b40e4101cb5c80603d42b98a45befe94faf8",
        "date": 1545315106,
        "releases": {
            "previous": "863822f8aa1fb1a08c7b1fce2fdcf3bc32baf6bb",
            "next": "863822f8aa1fb1a08c7b1fce2fdcf3bc32baf6bb"
        },
        "commit_message": "Find docker id - reformat (#368)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "863822f8aa1fb1a08c7b1fce2fdcf3bc32baf6bb": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "public static SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.create()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSystem(final SystemInfo system)"
                ]
            },
            "8d31b40e4101cb5c80603d42b98a45befe94faf8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "public static SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.create()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSystem(final SystemInfo system)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "56cc3b856609ce48aaf10003e22588b2c1da7875",
        "previous_commit": "95a84c6272e0253cd578d65ebf3f452b6b4d4a85",
        "date": 1610011052,
        "releases": {
            "previous": "56cc3b856609ce48aaf10003e22588b2c1da7875",
            "next": "56cc3b856609ce48aaf10003e22588b2c1da7875"
        },
        "commit_message": "null-safe weak set/map + detached thread local (#1597)\n\n* add null-safe weak map\r\n* add null-safe weak set\r\n* use null-safe weak maps/sets when possible\r\n* prevent npe with threadlocal",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "56cc3b856609ce48aaf10003e22588b2c1da7875": {
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/weakmap/WeakMapSupplier.java": [
                    "public static <K, V> WeakConcurrentMap<K, V> co.elastic.apm.agent.sdk.weakmap.WeakMapSupplier.createMap()",
                    "public static <V> WeakConcurrentSet<V> co.elastic.apm.agent.sdk.weakmap.WeakMapSupplier.createSet()"
                ]
            },
            "95a84c6272e0253cd578d65ebf3f452b6b4d4a85": {
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/weakmap/WeakMapSupplier.java": [
                    "public static <K, V> WeakConcurrentMap<K, V> co.elastic.apm.agent.sdk.weakmap.WeakMapSupplier.createMap()",
                    "public static <V> WeakConcurrentSet<V> co.elastic.apm.agent.sdk.weakmap.WeakMapSupplier.createSet()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "743596504801af1e195c145673b8a73b1ea01789",
        "previous_commit": "01a9453e9304000f35d41b482996d91a3db6d42b",
        "date": 1654153763,
        "releases": {
            "previous": "743596504801af1e195c145673b8a73b1ea01789",
            "next": "743596504801af1e195c145673b8a73b1ea01789"
        },
        "commit_message": "parse db name from JDBC string (#2642)\n\n* fix missing @Nullable on connection db name\r\n\r\n* refactor jdbc url parsing\r\n\r\n* wip + refactor\r\n\r\n* db name parsing for default case\r\n\r\n* migrate mysql parsing\r\n\r\n* finish refactor\r\n\r\n* start parsing db name + db2\r\n\r\n* make it work for derby\r\n\r\n* sql server is a breeze\r\n\r\n* make it work of h2\r\n\r\n* postgresql\r\n\r\n* wip, it's getting closer\r\n\r\n* fix the general case with properties\r\n\r\n* wip: make it work for db2\r\n\r\n* cover corner case for Oracle\r\n\r\n* tackle mysql & mariadb\r\n\r\n* get db name for Oracle\r\n\r\n* fix test + CL loading\r\n\r\n* fix jdbc integration tests\r\n\r\n* prevently return for parsing errors\r\n\r\n* minor cleanup\r\n\r\n* make oracle instance name case-sensitive\r\n\r\n* normalize IPv6 addresses\r\n\r\n* lower-case db host name\r\n\r\n* update changelog\r\n\r\n* document potential misleading behavior for db name\r\n\r\n* document change as potentially breaking change\r\n\r\n* fix test for mssql",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "743596504801af1e195c145673b8a73b1ea01789": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/ConnectionMetaData.java": [
                    "static int co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.toNumericPort(String url, String portString)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "private ConnectionMetaData co.elastic.apm.agent.jdbc.helper.JdbcHelper.getConnectionMetaData(@Nullable Connection connection)"
                ]
            },
            "01a9453e9304000f35d41b482996d91a3db6d42b": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/ConnectionMetaData.java": [
                    "static int co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.toNumericPort(String url, String portString)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "private ConnectionMetaData co.elastic.apm.agent.jdbc.helper.JdbcHelper.getConnectionMetaData(@Nullable Connection connection)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b12e374e294ad256c3e32bf513934d874f11656f",
        "previous_commit": "bc6193fa577307196ab85668c561422ff37d9fe6",
        "date": 1609132385,
        "releases": {
            "previous": "b12e374e294ad256c3e32bf513934d874f11656f",
            "next": "b12e374e294ad256c3e32bf513934d874f11656f"
        },
        "commit_message": "Using body buffer only if writing to it is finished (#1579)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b12e374e294ad256c3e32bf513934d874f11656f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java": [
                    "public void co.elastic.apm.agent.impl.context.Request.copyFrom(Request other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeRequest(final Request request)"
                ]
            },
            "bc6193fa577307196ab85668c561422ff37d9fe6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java": [
                    "public void co.elastic.apm.agent.impl.context.Request.copyFrom(Request other)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeRequest(final Request request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ac924e0bdadd3f1a21e1d4b508d8717956a4b3ec",
        "previous_commit": "505a0bfaf3b04a4d639100bb91b388f7732e58aa",
        "date": 1540280447,
        "releases": {
            "previous": "ac924e0bdadd3f1a21e1d4b508d8717956a4b3ec",
            "next": "ac924e0bdadd3f1a21e1d4b508d8717956a4b3ec"
        },
        "commit_message": "Fix timestamps of errors\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ac924e0bdadd3f1a21e1d4b508d8717956a4b3ec": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(@Nullable Throwable e)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> active)"
                ]
            },
            "505a0bfaf3b04a4d639100bb91b388f7732e58aa": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(@Nullable Throwable e)",
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochTimestampMillis, @Nullable Throwable e, @Nullable AbstractSpan<?> active)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e90298ffe2b8dbab64f0ec7bdf16f52671603e01",
        "previous_commit": "539dcb23a4d93da9ca3be6a03c63e3bbdd3caaec",
        "date": 1619192678,
        "releases": {
            "previous": "e90298ffe2b8dbab64f0ec7bdf16f52671603e01",
            "next": "e90298ffe2b8dbab64f0ec7bdf16f52671603e01"
        },
        "commit_message": "Remove single-package plugin restriction (#1780)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e90298ffe2b8dbab64f0ec7bdf16f52671603e01": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdvice(Class<?> adviceClass)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "private static List<String> co.elastic.apm.agent.bci.IndyBootstrap.getClassNamesFromBundledPlugin(String adviceClassName, ClassLoader adviceClassLoader)"
                ]
            },
            "539dcb23a4d93da9ca3be6a03c63e3bbdd3caaec": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdvice(Class<?> adviceClass)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "private static List<String> co.elastic.apm.agent.bci.IndyBootstrap.getClassNamesFromBundledPlugin(String adviceClassName, ClassLoader adviceClassLoader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c076bb1278d36707e79c6c64b18f877ff1c4b2e4",
        "previous_commit": "94ba232720631d3c372c598a6772e874c4243025",
        "date": 1657187139,
        "releases": {
            "previous": "c076bb1278d36707e79c6c64b18f877ff1c4b2e4",
            "next": "c076bb1278d36707e79c6c64b18f877ff1c4b2e4"
        },
        "commit_message": "Add transaction_name_groups config (#2676)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c076bb1278d36707e79c6c64b18f877ff1c4b2e4": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.onTransactionStart(boolean startedAsChild, long epochMicros, Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/matcher/WildcardMatcher.java": [
                    "public static WildcardMatcher co.elastic.apm.agent.matcher.WildcardMatcher.anyMatch(List<WildcardMatcher> matchers, @Nullable CharSequence s)"
                ]
            },
            "94ba232720631d3c372c598a6772e874c4243025": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.onTransactionStart(boolean startedAsChild, long epochMicros, Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/matcher/WildcardMatcher.java": [
                    "public static WildcardMatcher co.elastic.apm.agent.matcher.WildcardMatcher.anyMatch(List<WildcardMatcher> matchers, @Nullable CharSequence s)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3a2163e17f50f57a6f59041a451488f36cdeb844",
        "previous_commit": "ca96d4e7b4bdf199f6459dce5fa4ed0db6d6e8fe",
        "date": 1692954551,
        "releases": {
            "previous": "3a2163e17f50f57a6f59041a451488f36cdeb844",
            "next": "3a2163e17f50f57a6f59041a451488f36cdeb844"
        },
        "commit_message": "Fix invalid currentTransaction() logic (#3294)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3a2163e17f50f57a6f59041a451488f36cdeb844": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ActiveStack.java": [
                    "boolean co.elastic.apm.agent.impl.ActiveStack.activate(ElasticContext<?> context, List<ActivationListener> activationListeners)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()"
                ]
            },
            "ca96d4e7b4bdf199f6459dce5fa4ed0db6d6e8fe": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ActiveStack.java": [
                    "boolean co.elastic.apm.agent.impl.ActiveStack.activate(ElasticContext<?> context, List<ActivationListener> activationListeners)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f98c48dfe9e647cf11efa5fe7dda531a28967dcf",
        "previous_commit": "fa6fed17951019a87fa7328249286485e5563f88",
        "date": 1704724160,
        "releases": {
            "previous": "f98c48dfe9e647cf11efa5fe7dda531a28967dcf",
            "next": "f98c48dfe9e647cf11efa5fe7dda531a28967dcf"
        },
        "commit_message": "fix span stacktrace capture (#3474)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f98c48dfe9e647cf11efa5fe7dda531a28967dcf": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private void co.elastic.apm.agent.impl.ElasticApmTracer.reportSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()"
                ]
            },
            "fa6fed17951019a87fa7328249286485e5563f88": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private void co.elastic.apm.agent.impl.ElasticApmTracer.reportSpan(Span span)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c1fe9a2f0ee187ceb7c8cc2ef375b9c9881d50f5",
        "previous_commit": "b86b7b67a9a0aa4e233bffa6cb4a69af1bb43b7d",
        "date": 1592979577,
        "releases": {
            "previous": "c1fe9a2f0ee187ceb7c8cc2ef375b9c9881d50f5",
            "next": "c1fe9a2f0ee187ceb7c8cc2ef375b9c9881d50f5"
        },
        "commit_message": "Fixing NPE related to addition of framework version (#1249)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c1fe9a2f0ee187ceb7c8cc2ef375b9c9881d50f5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/ServiceFactory.java": [
                    "private String co.elastic.apm.agent.impl.payload.ServiceFactory.getAgentVersion()"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature, @JaxRsPath @Nullable String pathAnnotationValue)"
                ]
            },
            "b86b7b67a9a0aa4e233bffa6cb4a69af1bb43b7d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/ServiceFactory.java": [
                    "private String co.elastic.apm.agent.impl.payload.ServiceFactory.getAgentVersion()"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature, @JaxRsPath @Nullable String pathAnnotationValue)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b03881fb01e9e8cabdbdba55ac7b782970704fd7",
        "previous_commit": "ca79b0d55db3250a4295170bf21597777850ff3d",
        "date": 1599485788,
        "releases": {
            "previous": "b03881fb01e9e8cabdbdba55ac7b782970704fd7",
            "next": "b03881fb01e9e8cabdbdba55ac7b782970704fd7"
        },
        "commit_message": "Sampling profiler - fixing a file handle leak and adding analysis config (#1387)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b03881fb01e9e8cabdbdba55ac7b782970704fd7": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "private synchronized void co.elastic.apm.agent.profiler.SamplingProfiler.createFilesIfRequired()",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.run()"
                ]
            },
            "ca79b0d55db3250a4295170bf21597777850ff3d": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "private synchronized void co.elastic.apm.agent.profiler.SamplingProfiler.createFilesIfRequired()",
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.run()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "46e3a293bc302c475b4063fd08d51f554c763c1e",
        "previous_commit": "e90298ffe2b8dbab64f0ec7bdf16f52671603e01",
        "date": 1619361262,
        "releases": {
            "previous": "46e3a293bc302c475b4063fd08d51f554c763c1e",
            "next": "46e3a293bc302c475b4063fd08d51f554c763c1e"
        },
        "commit_message": "relativize method adds / to path(ZipPath implementation of Path inter\u2026 (#1785)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "46e3a293bc302c475b4063fd08d51f554c763c1e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PackageScanner.java": [
                    "public FileVisitResult co.elastic.apm.agent.util.PackageScanner.visitFile(Path file, BasicFileAttributes attrs)",
                    "private static List<String> co.elastic.apm.agent.util.PackageScanner.listClassNames(final String basePackage, final Path basePath)"
                ]
            },
            "e90298ffe2b8dbab64f0ec7bdf16f52671603e01": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PackageScanner.java": [
                    "public FileVisitResult co.elastic.apm.agent.util.PackageScanner.visitFile(Path file, BasicFileAttributes attrs)",
                    "private static List<String> co.elastic.apm.agent.util.PackageScanner.listClassNames(final String basePackage, final Path basePath)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "796c694d3f9270b5e163d762f39ab7ba50b2df90",
        "previous_commit": "0f29fac55461cd1b0386046f03edb08c007832ba",
        "date": 1691656528,
        "releases": {
            "previous": "796c694d3f9270b5e163d762f39ab7ba50b2df90",
            "next": "796c694d3f9270b5e163d762f39ab7ba50b2df90"
        },
        "commit_message": "Exclude virtual threads from inferred spans feature (#3244)\n\n\r\n---------\r\n\r\nCo-authored-by: SylvainJuge <763082+SylvainJuge@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "796c694d3f9270b5e163d762f39ab7ba50b2df90": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/ProfilingActivationListener.java": [
                    "public void co.elastic.apm.agent.profiler.ProfilingActivationListener.beforeActivate(AbstractSpan<?> context)",
                    "public void co.elastic.apm.agent.profiler.ProfilingActivationListener.afterDeactivate(AbstractSpan<?> deactivatedContext)"
                ]
            },
            "0f29fac55461cd1b0386046f03edb08c007832ba": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/ProfilingActivationListener.java": [
                    "public void co.elastic.apm.agent.profiler.ProfilingActivationListener.beforeActivate(AbstractSpan<?> context)",
                    "public void co.elastic.apm.agent.profiler.ProfilingActivationListener.afterDeactivate(AbstractSpan<?> deactivatedContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1dabfb91caa869d58f5c0b47dd86375268df82cb",
        "previous_commit": "896548bc8f92a86b4443b4e4ae0bb608ace368b8",
        "date": 1621537292,
        "releases": {
            "previous": "1dabfb91caa869d58f5c0b47dd86375268df82cb",
            "next": "1dabfb91caa869d58f5c0b47dd86375268df82cb"
        },
        "commit_message": "Fix runtime attach for current user (#1819)\n\n* runtime attach should always allow current user\r\n\r\n* further improve sudo if required\r\n\r\n* update changelog\r\n\r\n* do not inherit IO when fetching properties",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1dabfb91caa869d58f5c0b47dd86375268df82cb": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/UserRegistry.java": [
                    "public ProcessBuilder co.elastic.apm.attach.UserRegistry.runAs(List<String> cmd)",
                    "private static boolean co.elastic.apm.attach.UserRegistry.canSwitchToUser(String user)"
                ]
            },
            "896548bc8f92a86b4443b4e4ae0bb608ace368b8": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/UserRegistry.java": [
                    "public ProcessBuilder co.elastic.apm.attach.UserRegistry.runAs(List<String> cmd)",
                    "private static boolean co.elastic.apm.attach.UserRegistry.canSwitchToUser(String user)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c249918b7befa6bd84a19614986fea5bab506890",
        "previous_commit": "5ad5b53282fe98965822241bd13304d62abe3b33",
        "date": 1630001406,
        "releases": {
            "previous": "c249918b7befa6bd84a19614986fea5bab506890",
            "next": "c249918b7befa6bd84a19614986fea5bab506890"
        },
        "commit_message": "Migrate Dubbo to indy plugin (#2087)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c249918b7befa6bd84a19614986fea5bab506890": {
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/helper/DubboTraceHelper.java": [
                    "public static Span co.elastic.apm.agent.dubbo.helper.DubboTraceHelper.createConsumerSpan(ElasticApmTracer tracer, Class<?> apiClass, String methodName, InetSocketAddress remoteAddress)",
                    "public static void co.elastic.apm.agent.dubbo.helper.DubboTraceHelper.fillTransaction(Transaction transaction, Class<?> apiClass, String methodName)"
                ]
            },
            "5ad5b53282fe98965822241bd13304d62abe3b33": {
                "apm-agent-plugins/apm-dubbo-plugin/src/main/java/co/elastic/apm/agent/dubbo/helper/DubboTraceHelper.java": [
                    "public static Span co.elastic.apm.agent.dubbo.helper.DubboTraceHelper.createConsumerSpan(ElasticApmTracer tracer, Class<?> apiClass, String methodName, InetSocketAddress remoteAddress)",
                    "public static void co.elastic.apm.agent.dubbo.helper.DubboTraceHelper.fillTransaction(Transaction transaction, Class<?> apiClass, String methodName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "700b9e66f62d6dd643a2ccb4c39335771b1bdab5",
        "previous_commit": "bc4c85c59c14dcb06559e87db27cb7f52275d808",
        "date": 1553177142,
        "releases": {
            "previous": "700b9e66f62d6dd643a2ccb4c39335771b1bdab5",
            "next": "700b9e66f62d6dd643a2ccb4c39335771b1bdab5"
        },
        "commit_message": "Allow setting manual start and end timestamps (#541)\n\ncloses #236",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "700b9e66f62d6dd643a2ccb4c39335771b1bdab5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public <T> Span co.elastic.apm.agent.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public <T> Transaction co.elastic.apm.agent.impl.transaction.Transaction.start(TraceContext.ChildContextCreator<T> childContextCreator, @Nullable T parent, long epochMicros, Sampler sampler)"
                ]
            },
            "bc4c85c59c14dcb06559e87db27cb7f52275d808": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public <T> Span co.elastic.apm.agent.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public <T> Transaction co.elastic.apm.agent.impl.transaction.Transaction.start(TraceContext.ChildContextCreator<T> childContextCreator, @Nullable T parent, long epochMicros, Sampler sampler)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "38e92dcea93852eeed2cf800ed97718fd8f2273f",
        "previous_commit": "d54da1603adc446ba8dff9fd827f6126369e4aa9",
        "date": 1569838221,
        "releases": {
            "previous": "38e92dcea93852eeed2cf800ed97718fd8f2273f",
            "next": "38e92dcea93852eeed2cf800ed97718fd8f2273f"
        },
        "commit_message": "Use temp properties file instead of providing agent arguments (#865)\n\ncloses #864",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "38e92dcea93852eeed2cf800ed97718fd8f2273f": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(Map<String, String> configuration)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private List<ConfigurationSource> co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getConfigSources(@Nullable String agentArguments)"
                ]
            },
            "d54da1603adc446ba8dff9fd827f6126369e4aa9": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(Map<String, String> configuration)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private List<ConfigurationSource> co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getConfigSources(@Nullable String agentArguments)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3356cb69a5393a24cdc0b5f0057621502abd012d",
        "previous_commit": "620a47fe45b0db7e71e97d4cbccee50f308deff7",
        "date": 1566886165,
        "releases": {
            "previous": "3356cb69a5393a24cdc0b5f0057621502abd012d",
            "next": "3356cb69a5393a24cdc0b5f0057621502abd012d"
        },
        "commit_message": "Allow manual setting of hostname (#815)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3356cb69a5393a24cdc0b5f0057621502abd012d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/MetaData.java": [
                    "public static MetaData co.elastic.apm.agent.impl.MetaData.create(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "public static SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.create()"
                ]
            },
            "620a47fe45b0db7e71e97d4cbccee50f308deff7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/MetaData.java": [
                    "public static MetaData co.elastic.apm.agent.impl.MetaData.create(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "public static SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.create()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9017aa93867579c3f47c6f68be27887e34e0dabd",
        "previous_commit": "f254571a8310e05624b32d303bf962c00e598d99",
        "date": 1548769390,
        "releases": {
            "previous": "9017aa93867579c3f47c6f68be27887e34e0dabd",
            "next": "9017aa93867579c3f47c6f68be27887e34e0dabd"
        },
        "commit_message": "ExecutorService instrumentation (#430)\n\ncloses #145",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9017aa93867579c3f47c6f68be27887e34e0dabd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Runnable co.elastic.apm.agent.impl.ElasticApmTracer.wrapRunnable(Runnable delegate, AbstractSpan<?> span)"
                ]
            },
            "f254571a8310e05624b32d303bf962c00e598d99": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Runnable co.elastic.apm.agent.impl.ElasticApmTracer.wrapRunnable(Runnable delegate, AbstractSpan<?> span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "35ebe46b409311843bebba0a87045746f09471e8",
        "previous_commit": "1d25192479bd840a785837176f7d45ac3b199a70",
        "date": 1544697764,
        "releases": {
            "previous": "35ebe46b409311843bebba0a87045746f09471e8",
            "next": "35ebe46b409311843bebba0a87045746f09471e8"
        },
        "commit_message": "Add capture_headers option (#306)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "35ebe46b409311843bebba0a87045746f09471e8": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ApmAsyncListener.java": [
                    "private void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.endTransaction(AsyncEvent event)"
                ]
            },
            "1d25192479bd840a785837176f7d45ac3b199a70": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ApmAsyncListener.java": [
                    "private void co.elastic.apm.agent.servlet.helper.ApmAsyncListener.endTransaction(AsyncEvent event)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3d9b6f86c3a6d79f34cdb285331a3297112eb4fb",
        "previous_commit": "acf494923fe9e2346876313990565d41fe2aa502",
        "date": 1530440303,
        "releases": {
            "previous": "3d9b6f86c3a6d79f34cdb285331a3297112eb4fb",
            "next": "3d9b6f86c3a6d79f34cdb285331a3297112eb4fb"
        },
        "commit_message": "Replace GzipSink with DeflateOutputStream\n\n- Add Reporter#getReported\n- Fix benachmarking with JDBC mock (still not enabled by default)\n- Remove Moshi JSON benchmarks\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3d9b6f86c3a6d79f34cdb285331a3297112eb4fb": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)"
                ]
            },
            "acf494923fe9e2346876313990565d41fe2aa502": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "23df38d8f32eb84b02cb49610159f1855dbb98a8",
        "previous_commit": "bd83104b179f0dfea2eaa573eb944b7ab2444f3f",
        "date": 1519036500,
        "releases": {
            "previous": "23df38d8f32eb84b02cb49610159f1855dbb98a8",
            "next": "23df38d8f32eb84b02cb49610159f1855dbb98a8"
        },
        "commit_message": "Moshi JSON serializer benchmark\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "23df38d8f32eb84b02cb49610159f1855dbb98a8": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(Payload payload)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)"
                ]
            },
            "bd83104b179f0dfea2eaa573eb944b7ab2444f3f": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(Payload payload)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": false
        }
    },
    {
        "commit": "78629b419d35568ef2a1046b1f8e65c42d012b4a",
        "previous_commit": "6ad3e3ad8809beb213f83e497446227d5fa84494",
        "date": 1519202067,
        "releases": {
            "previous": "78629b419d35568ef2a1046b1f8e65c42d012b4a",
            "next": "78629b419d35568ef2a1046b1f8e65c42d012b4a"
        },
        "commit_message": "Track dropped transactions\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "78629b419d35568ef2a1046b1f8e65c42d012b4a": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final TransactionPayload payload)"
                ]
            },
            "6ad3e3ad8809beb213f83e497446227d5fa84494": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final TransactionPayload payload)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "55ad185755813358fc92fa436e7515b4a49104f7",
        "previous_commit": "c30b5a0f380e3d9854863ff5dfb1d3a46abb3cbd",
        "date": 1639571512,
        "releases": {
            "previous": "55ad185755813358fc92fa436e7515b4a49104f7",
            "next": "55ad185755813358fc92fa436e7515b4a49104f7"
        },
        "commit_message": "Fix J9 Module (#2341)\n\n* create agent boostrap module\n\n* remove previous dispatcher + setter\n\n* use new bootstrap module\n\n* simplify test\n\n* use single version of antrun plugin\n\n* update comment in OpenJ9 tests\n\n* fix java7 compatibility\n\n* fix minor details\n\n* update changelog\n\n* add comments to clarify bootstrap class inj.\n\n* check-in packaged resources + more doc comments",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "55ad185755813358fc92fa436e7515b4a49104f7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "static void co.elastic.apm.agent.bci.IndyBootstrap.setJavaBaseModule(Class<?> targetClass)",
                    "private static Class<?> co.elastic.apm.agent.bci.IndyBootstrap.initIndyBootstrap(final Logger logger)"
                ]
            },
            "c30b5a0f380e3d9854863ff5dfb1d3a46abb3cbd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "static void co.elastic.apm.agent.bci.IndyBootstrap.setJavaBaseModule(Class<?> targetClass)",
                    "private static Class<?> co.elastic.apm.agent.bci.IndyBootstrap.initIndyBootstrap(final Logger logger)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "190da128fee8f8fa6d69c746cf58ae1a18b04833",
        "previous_commit": "303e875e87ccb9ba46fd57cb208af784363b6e49",
        "date": 1521450616,
        "releases": {
            "previous": "190da128fee8f8fa6d69c746cf58ae1a18b04833",
            "next": "190da128fee8f8fa6d69c746cf58ae1a18b04833"
        },
        "commit_message": "Don't create JDBC spans for non sampled transactions\n\nrelates to #4\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "190da128fee8f8fa6d69c746cf58ae1a18b04833": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/ApmJdbcEventListener.java": [
                    "public void co.elastic.apm.jdbc.ApmJdbcEventListener.onAfterAnyExecute(StatementInformation statementInformation, long timeElapsedNanos, SQLException e)",
                    "public void co.elastic.apm.jdbc.ApmJdbcEventListener.onBeforeAnyExecute(StatementInformation statementInformation)"
                ]
            },
            "303e875e87ccb9ba46fd57cb208af784363b6e49": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/ApmJdbcEventListener.java": [
                    "public void co.elastic.apm.jdbc.ApmJdbcEventListener.onAfterAnyExecute(StatementInformation statementInformation, long timeElapsedNanos, SQLException e)",
                    "public void co.elastic.apm.jdbc.ApmJdbcEventListener.onBeforeAnyExecute(StatementInformation statementInformation)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d7431a8627b8cf0ed1bd88fc8d3e77e8f48a9940",
        "previous_commit": "ed52be3745a5a486875dd18ea35d1f9da974fb3f",
        "date": 1521710833,
        "releases": {
            "previous": "d7431a8627b8cf0ed1bd88fc8d3e77e8f48a9940",
            "next": "d7431a8627b8cf0ed1bd88fc8d3e77e8f48a9940"
        },
        "commit_message": "Test Url#hashCode and toString\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d7431a8627b8cf0ed1bd88fc8d3e77e8f48a9940": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/Url.java": [
                    "public int co.elastic.apm.impl.context.Url.hashCode()",
                    "public String co.elastic.apm.impl.context.Url.toString()"
                ]
            },
            "ed52be3745a5a486875dd18ea35d1f9da974fb3f": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/Url.java": [
                    "public int co.elastic.apm.impl.context.Url.hashCode()",
                    "public String co.elastic.apm.impl.context.Url.toString()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1109642fc896e83e840f21ce1beb276685709a7f",
        "previous_commit": "4fb39284494f05825afdb91ca52729d170c854d4",
        "date": 1551691394,
        "releases": {
            "previous": "1109642fc896e83e840f21ce1beb276685709a7f",
            "next": "1109642fc896e83e840f21ce1beb276685709a7f"
        },
        "commit_message": "Fix metrics NaN issue (#501)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1109642fc896e83e840f21ce1beb276685709a7f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeSamples(Map<String, DoubleSupplier> samples, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeSample(String key, double value, JsonWriter jw)"
                ]
            },
            "4fb39284494f05825afdb91ca52729d170c854d4": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeSamples(Map<String, DoubleSupplier> samples, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeSample(String key, double value, JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "497e29f11e5a5f1e02b8204dae9075ea74e941c9",
        "previous_commit": "d3912b7f7b9240c21033df75a5a3b4c2bb20baba",
        "date": 1547803749,
        "releases": {
            "previous": "497e29f11e5a5f1e02b8204dae9075ea74e941c9",
            "next": "497e29f11e5a5f1e02b8204dae9075ea74e941c9"
        },
        "commit_message": "Add support for synchronous OkHttp calls (#419)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "497e29f11e5a5f1e02b8204dae9075ea74e941c9": {
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/http/client/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(TraceContextHolder<?> parent, String method, @Nullable URI uri, String hostName, String spanType)",
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(TraceContextHolder<?> parent, String method, @Nullable String uri, String hostName, String spanType)"
                ]
            },
            "d3912b7f7b9240c21033df75a5a3b4c2bb20baba": {
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/http/client/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(TraceContextHolder<?> parent, String method, @Nullable URI uri, String hostName, String spanType)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b589b4a91db2043905e56485c08ea347bbd7a578",
        "previous_commit": "65ed34d2b1e2cb225b6bfab332b3a1f2904c073c",
        "date": 1669988410,
        "releases": {
            "previous": "b589b4a91db2043905e56485c08ea347bbd7a578",
            "next": "b589b4a91db2043905e56485c08ea347bbd7a578"
        },
        "commit_message": "Add support for histograms to micrometer (#2895)\n\n* Add support for histograms to micrometer\r\n\r\n* refactor for cleaner implementation\r\n\r\n* Update apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java\r\n\r\nCo-authored-by: Jonas Kunz <Jonas.Kunz@gmx.net>\r\n\r\n* fix docs\r\n\r\nCo-authored-by: Jonas Kunz <Jonas.Kunz@gmx.net>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b589b4a91db2043905e56485c08ea347bbd7a578": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "boolean co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeValueStart(String key, String suffix, JsonWriter jw, StringBuilder replaceBuilder, boolean dedotMetricName)"
                ]
            },
            "65ed34d2b1e2cb225b6bfab332b3a1f2904c073c": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "boolean co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)",
                    "private static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeValueStart(String key, String suffix, JsonWriter jw, StringBuilder replaceBuilder, boolean dedotMetricName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "93779a8ac57c3fac61a873cd77fa79417db87e08",
        "previous_commit": "036cfa476e840ebae52c57c55a9b965b40cc4691",
        "date": 1543230201,
        "releases": {
            "previous": "93779a8ac57c3fac61a873cd77fa79417db87e08",
            "next": "93779a8ac57c3fac61a873cd77fa79417db87e08"
        },
        "commit_message": "Handling cases where APM server URL contains path (#343)\n\n* Handling cases where APM server URL contains path\r\n\r\n* Handling cases where APM server URL contains path\r\n\r\n* space deletion 1\r\n\r\nCo-Authored-By: eyalkoren <41850454+eyalkoren@users.noreply.github.com>\r\n\r\n* space deletion 2\r\n\r\nCo-Authored-By: eyalkoren <41850454+eyalkoren@users.noreply.github.com>\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "93779a8ac57c3fac61a873cd77fa79417db87e08": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.report.IntakeV2ReportingEventHandler.onConnectionError(@Nullable Integer responseCode, long droppedEvents, long reportedEvents)",
                    "private HttpURLConnection co.elastic.apm.report.IntakeV2ReportingEventHandler.startRequest()"
                ]
            },
            "036cfa476e840ebae52c57c55a9b965b40cc4691": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.report.IntakeV2ReportingEventHandler.onConnectionError(@Nullable Integer responseCode, long droppedEvents, long reportedEvents)",
                    "private HttpURLConnection co.elastic.apm.report.IntakeV2ReportingEventHandler.startRequest()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ff7fa6fe715605332fb1acd9ff5841c8466a9da3",
        "previous_commit": "cd4077f4661b2a0dc0720ba9993b0cc29d506a4c",
        "date": 1716816357,
        "releases": {
            "previous": "ff7fa6fe715605332fb1acd9ff5841c8466a9da3",
            "next": "ff7fa6fe715605332fb1acd9ff5841c8466a9da3"
        },
        "commit_message": "more stack frames for thread dump (#3644)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ff7fa6fe715605332fb1acd9ff5841c8466a9da3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ThreadDump.java": [
                    "public void co.elastic.apm.agent.util.ThreadDump.run()",
                    "public void co.elastic.apm.agent.util.ThreadDump.start(Tracer tracer)"
                ]
            },
            "cd4077f4661b2a0dc0720ba9993b0cc29d506a4c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ThreadDump.java": [
                    "public void co.elastic.apm.agent.util.ThreadDump.run()",
                    "public void co.elastic.apm.agent.util.ThreadDump.start(Tracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "59da6eed0e26f522dab56da5cd3e948f6f40412c",
        "previous_commit": "fd60ac88328807b4dbb9e0b09ec52383634d6906",
        "date": 1701090722,
        "releases": {
            "previous": "59da6eed0e26f522dab56da5cd3e948f6f40412c",
            "next": "59da6eed0e26f522dab56da5cd3e948f6f40412c"
        },
        "commit_message": "Added support for opentelemetry WithSpan annotation (#3406)\n\n\r\n\r\n---------\r\n\r\nCo-authored-by: SylvainJuge <763082+SylvainJuge@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "59da6eed0e26f522dab56da5cd3e948f6f40412c": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/AbstractOpenTelemetryInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.opentelemetry.AbstractOpenTelemetryInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpanBuilder.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.tracing.OTelSpanBuilder.startSpan()"
                ]
            },
            "fd60ac88328807b4dbb9e0b09ec52383634d6906": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/AbstractOpenTelemetryInstrumentation.java": [
                    "public final Collection<String> co.elastic.apm.agent.opentelemetry.AbstractOpenTelemetryInstrumentation.getInstrumentationGroupNames()"
                ],
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpanBuilder.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.tracing.OTelSpanBuilder.startSpan()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f47ca26bad8a3550bd7cd131ac9048a28e808b22",
        "previous_commit": "75b50b1c90a44967dff6c1faea3631747528163a",
        "date": 1558702992,
        "releases": {
            "previous": "f47ca26bad8a3550bd7cd131ac9048a28e808b22",
            "next": "f47ca26bad8a3550bd7cd131ac9048a28e808b22"
        },
        "commit_message": "Add support for global labels (#543)\n\ncloses #507",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f47ca26bad8a3550bd7cd131ac9048a28e808b22": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "private ReportingEventHandler co.elastic.apm.agent.report.ReporterFactory.getReportingEventHandler(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion, ReporterConfiguration reporterConfiguration)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMetaDataNdJson(MetaData metaData)"
                ]
            },
            "75b50b1c90a44967dff6c1faea3631747528163a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ReporterFactory.java": [
                    "private ReportingEventHandler co.elastic.apm.agent.report.ReporterFactory.getReportingEventHandler(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion, ReporterConfiguration reporterConfiguration)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeMetaDataNdJson(MetaData metaData)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5ff60c3456af6d11d5695415dac165be883bbeb4",
        "previous_commit": "10321803028c87f504cb390473ea75c4ac35d99d",
        "date": 1519311815,
        "releases": {
            "previous": "5ff60c3456af6d11d5695415dac165be883bbeb4",
            "next": "5ff60c3456af6d11d5695415dac165be883bbeb4"
        },
        "commit_message": "Add first draft for JDBC monitoring\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5ff60c3456af6d11d5695415dac165be883bbeb4": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Span.java": [
                    "public void co.elastic.apm.impl.Span.end()"
                ]
            },
            "10321803028c87f504cb390473ea75c4ac35d99d": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public Span co.elastic.apm.impl.ElasticApmTracer.startSpan()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/Span.java": [
                    "public void co.elastic.apm.impl.Span.end()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "cbc2bc89344412fc63cbfd61036cbf989230cd9b",
        "previous_commit": "e390674d7a8e7788758c7bdf9279308b3b0bf593",
        "date": 1662049692,
        "releases": {
            "previous": "cbc2bc89344412fc63cbfd61036cbf989230cd9b",
            "next": "cbc2bc89344412fc63cbfd61036cbf989230cd9b"
        },
        "commit_message": "Ignore few other agents (#2766)\n\n* ignore appdynamics agent\n\n* ignore appD + other agents CLs\n\n* expand a few other APMs while we are at it\n\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "cbc2bc89344412fc63cbfd61036cbf989230cd9b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, final Logger logger, final AgentBuilder.DescriptionStrategy descriptionStrategy, final boolean premain, final boolean useTypePoolCache)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ClassLoaderNameMatcher.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.ClassLoaderNameMatcher.matches(ClassLoader target)"
                ]
            },
            "e390674d7a8e7788758c7bdf9279308b3b0bf593": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, final Logger logger, final AgentBuilder.DescriptionStrategy descriptionStrategy, final boolean premain, final boolean useTypePoolCache)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ClassLoaderNameMatcher.java": [
                    "public boolean co.elastic.apm.agent.bci.bytebuddy.ClassLoaderNameMatcher.matches(ClassLoader target)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d4dfc55b4d77c9b0dca84f4ad3e9c71c840d42ae",
        "previous_commit": "ab404f617e747faa340cb459f846cc5007a09165",
        "date": 1530867964,
        "releases": {
            "previous": "d4dfc55b4d77c9b0dca84f4ad3e9c71c840d42ae",
            "next": "d4dfc55b4d77c9b0dca84f4ad3e9c71c840d42ae"
        },
        "commit_message": "Make sure to close output stream\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d4dfc55b4d77c9b0dca84f4ad3e9c71c840d42ae": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)"
                ]
            },
            "ab404f617e747faa340cb459f846cc5007a09165": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1ca0be8da43984959c71ad17ce203a37a7ba9b9e",
        "previous_commit": "dbc4eb74d531108773cfad68f921e17e1aa47bed",
        "date": 1556008970,
        "releases": {
            "previous": "1ca0be8da43984959c71ad17ce203a37a7ba9b9e",
            "next": "1ca0be8da43984959c71ad17ce203a37a7ba9b9e"
        },
        "commit_message": "Fix transaction name for non-sampled transactions (#597)\n\nfixes #581",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1ca0be8da43984959c71ad17ce203a37a7ba9b9e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.agent.impl.transaction.Transaction.withName(@Nullable String name)",
                    "public Transaction co.elastic.apm.agent.impl.transaction.Transaction.withResult(@Nullable String result)"
                ]
            },
            "dbc4eb74d531108773cfad68f921e17e1aa47bed": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.agent.impl.transaction.Transaction.withName(@Nullable String name)",
                    "public Transaction co.elastic.apm.agent.impl.transaction.Transaction.withResult(@Nullable String result)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7d480a9d95feef77e4da908b8e66746ae02e7239",
        "previous_commit": "9183a213cc463b4f9b90fd0393b710a9fe0168c8",
        "date": 1571160641,
        "releases": {
            "previous": "7d480a9d95feef77e4da908b8e66746ae02e7239",
            "next": "7d480a9d95feef77e4da908b8e66746ae02e7239"
        },
        "commit_message": "JMS changing polling logic (#816)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7d480a9d95feef77e4da908b8e66746ae02e7239": {
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/BaseJmsInstrumentation.java": [
                    "private synchronized static void co.elastic.apm.agent.jms.BaseJmsInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ]
            },
            "9183a213cc463b4f9b90fd0393b710a9fe0168c8": {
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/BaseJmsInstrumentation.java": [
                    "private synchronized static void co.elastic.apm.agent.jms.BaseJmsInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4ec14dd1a0c5dc84b5711ce8ce8a0c492111fbca",
        "previous_commit": "15c0cfc5bdfe3a8bf2090d96d8ff8451bcd4ee36",
        "date": 1634127823,
        "releases": {
            "previous": "4ec14dd1a0c5dc84b5711ce8ce8a0c492111fbca",
            "next": "4ec14dd1a0c5dc84b5711ce8ce8a0c492111fbca"
        },
        "commit_message": "Shade byte-buddy in attacher jar (#2116)\n\n* shade bytebuddy in attacher jar\r\n\r\n* add indirection to avoid direct dependency on bb\r\n\r\n* ensure single version of byte-buddy-dep too\r\n\r\n* add runtime attach tests\r\n\r\n* add missing copyright notices\r\n\r\n* update changelog\r\n\r\n* fix maven parent/child relationship\r\n\r\n* only redirect IO for debug to prevent maven issues\r\n\r\n* add few tweaks to make it work on Windows",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4ec14dd1a0c5dc84b5711ce8ce8a0c492111fbca": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/GetAgentProperties.java": [
                    "public static Properties co.elastic.apm.attach.GetAgentProperties.getAgentAndSystemProperties(String pid, UserRegistry.User user)",
                    "public static void co.elastic.apm.attach.GetAgentProperties.main(String[] args)"
                ]
            },
            "15c0cfc5bdfe3a8bf2090d96d8ff8451bcd4ee36": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/GetAgentProperties.java": [
                    "public static Properties co.elastic.apm.attach.GetAgentProperties.getAgentAndSystemProperties(String pid, UserRegistry.User user)",
                    "public static void co.elastic.apm.attach.GetAgentProperties.main(String[] args)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f36bfef51a4d2360d52fccb9d771f2ef1ba9521d",
        "previous_commit": "ebb3d9da3d8b274f2f26a1bbb7fd9594fed1ac97",
        "date": 1564646087,
        "releases": {
            "previous": "f36bfef51a4d2360d52fccb9d771f2ef1ba9521d",
            "next": "f36bfef51a4d2360d52fccb9d771f2ef1ba9521d"
        },
        "commit_message": "Fix 6.x APM Server version parsing (#761)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f36bfef51a4d2360d52fccb9d771f2ef1ba9521d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.withConnection(HttpURLConnection connection)",
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.call()"
                ]
            },
            "ebb3d9da3d8b274f2f26a1bbb7fd9594fed1ac97": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.withConnection(HttpURLConnection connection)",
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.call()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "44ed8c2bec08da24283a645b5f76a81f6a035646",
        "previous_commit": "435e1d366db7c6a09ae1d0035d2981a2e1f86d9a",
        "date": 1676983219,
        "releases": {
            "previous": "44ed8c2bec08da24283a645b5f76a81f6a035646",
            "next": "44ed8c2bec08da24283a645b5f76a81f6a035646"
        },
        "commit_message": "Unnest exceptions before filtering (#3025)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "44ed8c2bec08da24283a645b5f76a81f6a035646": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.agent.impl.error.ErrorCapture.setException(Throwable e)"
                ]
            },
            "435e1d366db7c6a09ae1d0035d2981a2e1f86d9a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.agent.impl.error.ErrorCapture.setException(Throwable e)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d35aeac22221768252bb8d0947caa50e0b4ced40",
        "previous_commit": "ba6adb517d862c9d96550b7c51a58b02c9c91a95",
        "date": 1520832752,
        "releases": {
            "previous": "d35aeac22221768252bb8d0947caa50e0b4ced40",
            "next": "d35aeac22221768252bb8d0947caa50e0b4ced40"
        },
        "commit_message": "Add value type for TransactionId\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d35aeac22221768252bb8d0947caa50e0b4ced40": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(ElasticApmTracer tracer, long startTimestampNanos, boolean sampled)"
                ]
            },
            "ba6adb517d862c9d96550b7c51a58b02c9c91a95": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()",
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(ElasticApmTracer tracer, long startTimestampNanos, boolean sampled)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "abba3ebeaf1b239e09827ab23bed774792015f20",
        "previous_commit": "935c73367b596d9b41ca86817e1a5fdd21f45d6f",
        "date": 1577599675,
        "releases": {
            "previous": "abba3ebeaf1b239e09827ab23bed774792015f20",
            "next": "abba3ebeaf1b239e09827ab23bed774792015f20"
        },
        "commit_message": "Added error instrumentation for log4j loggers. (#919)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "abba3ebeaf1b239e09827ab23bed774792015f20": {
                "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/Slf4jLoggingInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.error.logging.Slf4jLoggingInstrumentation.getInstrumentationGroupNames()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.error.logging.Slf4jLoggingInstrumentation.getTypeMatcher()"
                ]
            },
            "935c73367b596d9b41ca86817e1a5fdd21f45d6f": {
                "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/Slf4jLoggingInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.error.logging.Slf4jLoggingInstrumentation.getInstrumentationGroupNames()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.error.logging.Slf4jLoggingInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "eb349d37c5e614e6156c356e881197abeed32658",
        "previous_commit": "d1aaa52c14ce66924cddce185e99a7d6025748dc",
        "date": 1701772511,
        "releases": {
            "previous": "eb349d37c5e614e6156c356e881197abeed32658",
            "next": "eb349d37c5e614e6156c356e881197abeed32658"
        },
        "commit_message": "Apachehttpclient v5 (#3419)\n\n* added apachehttpclient common module\n\n* added apachehttpclient5 sync instrumentation\n\n* added apachehttpclient async impl, covered with tests\n\n* added comments for apache http client works with urlpath that contains userinfo\n\n* set isTestHttpCallWithUserInfoEnabled with false value in ApacheHttpClientInstrumentationTest 5\n\n* handled case with recycling when client closed before executing\n\n* added httpclient5 plugin to agent builds pom. Run tests, generated license headers\n\n* added entry to changelog\n\n* updated supported technologies\n\n* added comment\n\n* added test that checks feignClient\n\n* minor polish\n\n* updated configuration.asciidoc\n\n* minor polish according to the review comments\n\n* updated failedWithoutException call for apachehttpclient 5. recycle AsyncRequestProducerWrapper in case when delegate is not null. Added tests that breaks behavior when asyncClientHelper.recycle(this); called multiple times when delegate is already null in ASyncRequestProductWrapper\n\n* updated docs\n\n* renamed class names for consistency\n\n* fixes according to comments\n\n* wrapped with try/finally block. removed static import\n\n---------\n\nCo-authored-by: mergify[bot] <37929162+mergify[bot]@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "eb349d37c5e614e6156c356e881197abeed32658": {
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/ApacheHttpAsyncClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.ApacheHttpAsyncClientInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object[] enter, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/ApacheHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.ApacheHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable CloseableHttpResponse response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ]
            },
            "d1aaa52c14ce66924cddce185e99a7d6025748dc": {
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/ApacheHttpAsyncClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.ApacheHttpAsyncClientInstrumentation.onAfterExecute(@Advice.Enter @Nullable Object[] enter, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient4-plugin/src/main/java/co/elastic/apm/agent/httpclient/v4/ApacheHttpClientInstrumentation.java": [
                    "public static void co.elastic.apm.agent.httpclient.v4.ApacheHttpClientInstrumentation.onAfterExecute(@Advice.Return @Nullable CloseableHttpResponse response, @Advice.Enter @Nullable Object spanObj, @Advice.Thrown @Nullable Throwable t)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "21f161f666a914fa5755361571135062c6789424",
        "previous_commit": "113167e11243dc72917ca863982123c4d715da1f",
        "date": 1564133142,
        "releases": {
            "previous": "21f161f666a914fa5755361571135062c6789424",
            "next": "21f161f666a914fa5755361571135062c6789424"
        },
        "commit_message": "Add feature flag for remote config (#739)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "21f161f666a914fa5755361571135062c6789424": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "private String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.tryFetchConfig(ConfigurationRegistry configurationRegistry, HttpURLConnection connection)",
                    "String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.fetchConfig(final ConfigurationRegistry configurationRegistry)"
                ]
            },
            "113167e11243dc72917ca863982123c4d715da1f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "private String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.tryFetchConfig(ConfigurationRegistry configurationRegistry, HttpURLConnection connection)",
                    "String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.fetchConfig(final ConfigurationRegistry configurationRegistry)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "642e13c6b4ae5041033872beda4157aedb4af613",
        "previous_commit": "c6b1397428050d8677b4cb3242a103c3067c410a",
        "date": 1606306313,
        "releases": {
            "previous": "642e13c6b4ae5041033872beda4157aedb4af613",
            "next": "642e13c6b4ae5041033872beda4157aedb4af613"
        },
        "commit_message": "Send error.transaction_id and error.parent_id only if there is trace_id (#1537)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "642e13c6b4ae5041033872beda4157aedb4af613": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/error/ErrorCapture.java": [
                    "public ErrorCapture co.elastic.apm.agent.impl.error.ErrorCapture.asChildOf(AbstractSpan<?> parent)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTraceContext(TraceContext traceContext, boolean serializeTransactionId)"
                ]
            },
            "c6b1397428050d8677b4cb3242a103c3067c410a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/error/ErrorCapture.java": [
                    "public ErrorCapture co.elastic.apm.agent.impl.error.ErrorCapture.asChildOf(AbstractSpan<?> parent)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTraceContext(TraceContext traceContext, boolean serializeTransactionId)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "243f2cdb6efd5602c1c0fe9a12ab23c119cbc5f8",
        "previous_commit": "d471f1ee638fa323c49a304defffb0f68e8d8400",
        "date": 1666874688,
        "releases": {
            "previous": "243f2cdb6efd5602c1c0fe9a12ab23c119cbc5f8",
            "next": "243f2cdb6efd5602c1c0fe9a12ab23c119cbc5f8"
        },
        "commit_message": "Capture Elasticsearch cluster name (#2796)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "243f2cdb6efd5602c1c0fe9a12ab23c119cbc5f8": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static File co.elastic.apm.attach.ElasticApmAttacher.getAgentJarFile()"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public void co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.finishClientSpan(@Nullable Response response, Span span, @Nullable Throwable t)"
                ]
            },
            "d471f1ee638fa323c49a304defffb0f68e8d8400": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static File co.elastic.apm.attach.ElasticApmAttacher.getAgentJarFile()"
                ],
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public void co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.finishClientSpan(@Nullable Response response, Span span, @Nullable Throwable t)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7430c127c4792c89162a558ac544894f4b82e6d6",
        "previous_commit": "2d28d00626db9b41b28a2bab08875853329426e4",
        "date": 1590765687,
        "releases": {
            "previous": "7430c127c4792c89162a558ac544894f4b82e6d6",
            "next": "7430c127c4792c89162a558ac544894f4b82e6d6"
        },
        "commit_message": "Make exportResourceToTemp safe to execute with concurrently running JVMs #1207)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7430c127c4792c89162a558ac544894f4b82e6d6": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static File co.elastic.apm.attach.ElasticApmAttacher.getAgentJarFile()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/IOUtils.java": [
                    "public static synchronized File co.elastic.apm.agent.util.IOUtils.exportResourceToTemp(String resource, String tempFileNamePrefix, String tempFileNameExtension)"
                ]
            },
            "2d28d00626db9b41b28a2bab08875853329426e4": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static File co.elastic.apm.attach.ElasticApmAttacher.getAgentJarFile()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/IOUtils.java": [
                    "public static File co.elastic.apm.agent.util.IOUtils.exportResourceToTemp(String resource, String tempFileNamePrefix, String tempFileNameExtension)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0a61bca5212db049fb55b2a1040ae131a0751106",
        "previous_commit": "9044b56c4ec66d5e5329008556117f636af77f73",
        "date": 1643220148,
        "releases": {
            "previous": "0a61bca5212db049fb55b2a1040ae131a0751106",
            "next": "0a61bca5212db049fb55b2a1040ae131a0751106"
        },
        "commit_message": "Use Implementation-Version as default service version if it is available (#1922)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0a61bca5212db049fb55b2a1040ae131a0751106": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.overrideServiceNameForClassLoader(@Nullable ClassLoader classLoader, @Nullable String serviceName)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "private LayoutComponentBuilder co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.createLayout(ConfigurationBuilder<BuiltConfiguration> builder, LogFormat logFormat)"
                ]
            },
            "9044b56c4ec66d5e5329008556117f636af77f73": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.overrideServiceNameForClassLoader(@Nullable ClassLoader classLoader, @Nullable String serviceName)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "private LayoutComponentBuilder co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.createLayout(ConfigurationBuilder<BuiltConfiguration> builder, LogFormat logFormat)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "948d80e7888eb805956a4859591560c5b08dba41",
        "previous_commit": "a3c4568198f4b126887f7e1bb3df123133d36522",
        "date": 1612273801,
        "releases": {
            "previous": "948d80e7888eb805956a4859591560c5b08dba41",
            "next": "948d80e7888eb805956a4859591560c5b08dba41"
        },
        "commit_message": "Fallback to TLS and quietly catch initialization error (#1633)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "948d80e7888eb805956a4859591560c5b08dba41": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ssl/SslUtils.java": [
                    "private static SSLSocketFactory co.elastic.apm.agent.report.ssl.SslUtils.createSocketFactory(TrustManager[] trustAllCerts)",
                    "public static SSLSocketFactory co.elastic.apm.agent.report.ssl.SslUtils.getSSLSocketFactory(boolean validateCertificates)"
                ]
            },
            "a3c4568198f4b126887f7e1bb3df123133d36522": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ssl/SslUtils.java": [
                    "private static SSLSocketFactory co.elastic.apm.agent.report.ssl.SslUtils.createSocketFactory(TrustManager[] trustAllCerts)",
                    "public static SSLSocketFactory co.elastic.apm.agent.report.ssl.SslUtils.getSSLSocketFactory(boolean validateCertificates)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7e8a280a425615a1e6aa19782f69152bb43f55ba",
        "previous_commit": "e59fbe1b2bbe3dcd66aa14a7272dd41564b98227",
        "date": 1543233445,
        "releases": {
            "previous": "7e8a280a425615a1e6aa19782f69152bb43f55ba",
            "next": "7e8a280a425615a1e6aa19782f69152bb43f55ba"
        },
        "commit_message": "Omit instrumenting classes version pre Java 5 (#320)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7e8a280a425615a1e6aa19782f69152bb43f55ba": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/bci/bytebuddy/ErrorLoggingListener.java": [
                    "public void co.elastic.apm.bci.bytebuddy.ErrorLoggingListener.onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable)"
                ]
            },
            "e59fbe1b2bbe3dcd66aa14a7272dd41564b98227": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/bci/bytebuddy/ErrorLoggingListener.java": [
                    "public void co.elastic.apm.bci.bytebuddy.ErrorLoggingListener.onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "879c39ac9561a4e2b8990c95622602445b8ed4e4",
        "previous_commit": "6e51281877d70ef7e99b75a59fbe728d6c85e7b5",
        "date": 1548839538,
        "releases": {
            "previous": "879c39ac9561a4e2b8990c95622602445b8ed4e4",
            "next": "879c39ac9561a4e2b8990c95622602445b8ed4e4"
        },
        "commit_message": "Fix currentTransaction and scope stack clearing\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "879c39ac9561a4e2b8990c95622602445b8ed4e4": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(TraceContextHolder<?> holder)"
                ]
            },
            "6e51281877d70ef7e99b75a59fbe728d6c85e7b5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()",
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.deactivate(TraceContextHolder<?> holder)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4a066bdd0dec80a822ee9d70312f7161f32a64a1",
        "previous_commit": "c8cf440c47f60f5b140bb0fdae56e5973d0af7c7",
        "date": 1524473617,
        "releases": {
            "previous": "4a066bdd0dec80a822ee9d70312f7161f32a64a1",
            "next": "4a066bdd0dec80a822ee9d70312f7161f32a64a1"
        },
        "commit_message": "Rename TracerRegisterer to TracerRegistrar\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4a066bdd0dec80a822ee9d70312f7161f32a64a1": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.register()",
                    "public static void co.elastic.apm.impl.ElasticApmTracer.unregister()"
                ]
            },
            "c8cf440c47f60f5b140bb0fdae56e5973d0af7c7": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.register()",
                    "public static void co.elastic.apm.impl.ElasticApmTracer.unregister()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "979489041b13d014fbe1cf6caab708ec9805e02a",
        "previous_commit": "d4812a446caccf67f449649e96361f5b5f23a64d",
        "date": 1639899611,
        "releases": {
            "previous": "979489041b13d014fbe1cf6caab708ec9805e02a",
            "next": "979489041b13d014fbe1cf6caab708ec9805e02a"
        },
        "commit_message": "Only use `Connection#getCatalog` if it is supported by the JDBC driver (#2340)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "979489041b13d014fbe1cf6caab708ec9805e02a": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcGlobalState.java": [
                    "public static void co.elastic.apm.agent.jdbc.helper.JdbcGlobalState.clearInternalStorage()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "private ConnectionMetaData co.elastic.apm.agent.jdbc.helper.JdbcHelper.getConnectionMetaData(@Nullable Connection connection)"
                ]
            },
            "d4812a446caccf67f449649e96361f5b5f23a64d": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcGlobalState.java": [
                    "public static void co.elastic.apm.agent.jdbc.helper.JdbcGlobalState.clearInternalStorage()"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "private ConnectionMetaData co.elastic.apm.agent.jdbc.helper.JdbcHelper.getConnectionMetaData(@Nullable Connection connection)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "080ff4181f29c6225491a9e62bc9316882aee353",
        "previous_commit": "e8e4876b8ec40220ef91f88cf0d6e4fb4de05754",
        "date": 1636373915,
        "releases": {
            "previous": "080ff4181f29c6225491a9e62bc9316882aee353",
            "next": "080ff4181f29c6225491a9e62bc9316882aee353"
        },
        "commit_message": "Report the JVM/JMX metrics for each service name (#2233)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "080ff4181f29c6225491a9e62bc9316882aee353": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistryReporter.java": [
                    "public void co.elastic.apm.agent.report.serialize.MetricRegistryReporter.report(Map<? extends Labels, MetricSet> metricSets)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "private static boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serialize(MetricSet metricSet, long epochMicros, String serviceName, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            },
            "e8e4876b8ec40220ef91f88cf0d6e4fb4de05754": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistryReporter.java": [
                    "public void co.elastic.apm.agent.report.serialize.MetricRegistryReporter.report(Map<? extends Labels, MetricSet> metricSets)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "private static boolean co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serialize(MetricSet metricSet, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e30c77ddd6ca119602bd236ea27777f9274dd239",
        "previous_commit": "78305a6f0d775c8606eeb0405da76571c8c31307",
        "date": 1675243664,
        "releases": {
            "previous": "e30c77ddd6ca119602bd236ea27777f9274dd239",
            "next": "e30c77ddd6ca119602bd236ea27777f9274dd239"
        },
        "commit_message": "Adding the ability to disable TraceContext header injection (#2996)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e30c77ddd6ca119602bd236ea27777f9274dd239": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "<C> boolean co.elastic.apm.agent.impl.transaction.TraceContext.propagateTraceContext(C carrier, BinaryHeaderSetter<C> headerSetter)",
                    "<C> void co.elastic.apm.agent.impl.transaction.TraceContext.propagateTraceContext(C carrier, TextHeaderSetter<C> headerSetter)"
                ]
            },
            "78305a6f0d775c8606eeb0405da76571c8c31307": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "<C> boolean co.elastic.apm.agent.impl.transaction.TraceContext.propagateTraceContext(C carrier, BinaryHeaderSetter<C> headerSetter)",
                    "<C> void co.elastic.apm.agent.impl.transaction.TraceContext.propagateTraceContext(C carrier, TextHeaderSetter<C> headerSetter)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ec59030e7bf44244aebe6c897de868deca2d9d7a",
        "previous_commit": "367353e9d4ece029e2dc9c3decff50c0dd4f7d5a",
        "date": 1539622813,
        "releases": {
            "previous": "ec59030e7bf44244aebe6c897de868deca2d9d7a",
            "next": "ec59030e7bf44244aebe6c897de868deca2d9d7a"
        },
        "commit_message": "Reset TraceContext in AbstractSpan#resetState\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ec59030e7bf44244aebe6c897de868deca2d9d7a": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()"
                ]
            },
            "367353e9d4ece029e2dc9c3decff50c0dd4f7d5a": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3a14c5c511aa6bfbda87b77017703b1c6b8d5e56",
        "previous_commit": "cca3f700ca6dabd13eb393af3d308e6288113bb0",
        "date": 1540305845,
        "releases": {
            "previous": "3a14c5c511aa6bfbda87b77017703b1c6b8d5e56",
            "next": "3a14c5c511aa6bfbda87b77017703b1c6b8d5e56"
        },
        "commit_message": "Keeping PreparedStatements in a WeakHashMap until GCed (#250)\n\n* Keeping PreparedStatements in a WeakHashMap until GCed\r\n\r\n* Adding checkerframework - a Guava dependency\r\n\r\n* Changing Guava dependency and setting concurrency level\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3a14c5c511aa6bfbda87b77017703b1c6b8d5e56": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/ConnectionInstrumentation.java": [
                    "public static String co.elastic.apm.jdbc.ConnectionInstrumentation.getSqlForStatement(Object statement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public static Span co.elastic.apm.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ]
            },
            "cca3f700ca6dabd13eb393af3d308e6288113bb0": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/ConnectionInstrumentation.java": [
                    "public static String co.elastic.apm.jdbc.ConnectionInstrumentation.getSqlForStatement(Object statement)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public static Span co.elastic.apm.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "16194061a859e9d0569a29e9cc18f1b047de9228",
        "previous_commit": "ca5864467f2ca57d9c3d0d25879b56f1adca5bd2",
        "date": 1659013143,
        "releases": {
            "previous": "16194061a859e9d0569a29e9cc18f1b047de9228",
            "next": "16194061a859e9d0569a29e9cc18f1b047de9228"
        },
        "commit_message": "Implement otel spanlinks api (#2685)\n\n* add EOL table\r\n\r\n* implementing span links in the OTel bridge\r\n\r\n* added OTEL span links to CHANGELOG\r\n\r\n* added OTEL span links to CHANGELOG\r\n\r\n* removing branch leak commit from this branch\r\n\r\n* cleaner implementation\r\n\r\n* delete useless comment\r\n\r\n* delete useless variable\r\n\r\n* fix wrong changelog merge\r\n\r\n* hold OTel SpanContexts instead of Elastic TraceContexts\r\n\r\n* adding attributes to links is not yet supported",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "16194061a859e9d0569a29e9cc18f1b047de9228": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelSpanBuilder.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.sdk.OTelSpanBuilder.startSpan()",
                    "public SpanBuilder co.elastic.apm.agent.opentelemetry.sdk.OTelSpanBuilder.addLink(SpanContext spanContext)"
                ]
            },
            "ca5864467f2ca57d9c3d0d25879b56f1adca5bd2": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelSpanBuilder.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.sdk.OTelSpanBuilder.startSpan()",
                    "public SpanBuilder co.elastic.apm.agent.opentelemetry.sdk.OTelSpanBuilder.addLink(SpanContext spanContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "cc5bd65389c4ca904180676d1803aae7c442f6ea",
        "previous_commit": "beedd2e5d70d824ca2a6e6b486e5f19ee98bc3a3",
        "date": 1598453548,
        "releases": {
            "previous": "cc5bd65389c4ca904180676d1803aae7c442f6ea",
            "next": "cc5bd65389c4ca904180676d1803aae7c442f6ea"
        },
        "commit_message": "added HttpClient java11 instrumentation for sync requests (#1307)\n\n* add HttpClient java11 instrumentation for sync/async requests\r\n\r\nCo-authored-by: kananindzya <kananindzya@gmail.com>\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "cc5bd65389c4ca904180676d1803aae7c442f6ea": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DependencyInjectingServiceLoader.java": [
                    "private T co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.instantiate(ClassLoader classLoader, String implementation)",
                    "private void co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.instantiate(ClassLoader classLoader, Set<String> implementations)"
                ]
            },
            "beedd2e5d70d824ca2a6e6b486e5f19ee98bc3a3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DependencyInjectingServiceLoader.java": [
                    "private T co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.instantiate(ClassLoader classLoader, String implementation)",
                    "private void co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.instantiate(ClassLoader classLoader, Set<String> implementations)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b062cfa9a71cd9c12731fa5b601b69ba8ba69f26",
        "previous_commit": "4ebdda9eae5d594fc9624d06c898ee4bf1463374",
        "date": 1570454457,
        "releases": {
            "previous": "b062cfa9a71cd9c12731fa5b601b69ba8ba69f26",
            "next": "b062cfa9a71cd9c12731fa5b601b69ba8ba69f26"
        },
        "commit_message": "Add service.node.configured_name (#872)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b062cfa9a71cd9c12731fa5b601b69ba8ba69f26": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/ServiceFactory.java": [
                    "public Service co.elastic.apm.agent.impl.payload.ServiceFactory.createService(CoreConfiguration coreConfiguration, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeService(final Service service)"
                ]
            },
            "4ebdda9eae5d594fc9624d06c898ee4bf1463374": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/ServiceFactory.java": [
                    "public Service co.elastic.apm.agent.impl.payload.ServiceFactory.createService(CoreConfiguration coreConfiguration, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeService(final Service service)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5bae49e6180ea6e2547d441b86b2f635572e352d",
        "previous_commit": "3fde2a9dd3d435d930e5acddd7afd15495c29103",
        "date": 1598950143,
        "releases": {
            "previous": "5bae49e6180ea6e2547d441b86b2f635572e352d",
            "next": "5bae49e6180ea6e2547d441b86b2f635572e352d"
        },
        "commit_message": "Migrate Apache HttpClient plugin to indy plugin (#1349)\n\n* Migrate Apache HttpClient plugin to indy plugin\r\n\r\n* Avoid CNFE by moving helper to advice class\r\n\r\n* Avoid resolving TypeDescriptions when validating advice methods\r\n\r\n* Make helper private",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5bae49e6180ea6e2547d441b86b2f635572e352d": {
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/helper/ApacheHttpAsyncClientHelper.java": [
                    "public FutureCallbackWrapper<?> co.elastic.apm.agent.httpclient.helper.ApacheHttpAsyncClientHelper.createInstance()",
                    "public HttpAsyncRequestProducerWrapper co.elastic.apm.agent.httpclient.helper.ApacheHttpAsyncClientHelper.createInstance()"
                ]
            },
            "3fde2a9dd3d435d930e5acddd7afd15495c29103": {
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/helper/ApacheHttpAsyncClientHelper.java": [
                    "public FutureCallbackWrapper<?> co.elastic.apm.agent.httpclient.helper.ApacheHttpAsyncClientHelperImpl.createInstance()",
                    "public HttpAsyncRequestProducerWrapper co.elastic.apm.agent.httpclient.helper.ApacheHttpAsyncClientHelperImpl.createInstance()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3b767e62edbbec250ad6e845cdd7b1632a9e728b",
        "previous_commit": "180769b85989c565030610577c3c114283b92b8b",
        "date": 1661442075,
        "releases": {
            "previous": "3b767e62edbbec250ad6e845cdd7b1632a9e728b",
            "next": "3b767e62edbbec250ad6e845cdd7b1632a9e728b"
        },
        "commit_message": "Weblogic empty servlet path fallback (#2748)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3b767e62edbbec250ad6e845cdd7b1632a9e728b": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> void co.elastic.apm.agent.servlet.ServletApiAdvice.onExitServlet( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest, Object servletResponse, @Nullable Object transactionOrScopeOrSpan, @Nullable Throwable t, Object thiz)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, boolean overrideStatusCodeOnThrowable, String method, @Nullable Map<String, String[]> parameterMap, @Nullable String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader, boolean deactivate)"
                ]
            },
            "180769b85989c565030610577c3c114283b92b8b": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> void co.elastic.apm.agent.servlet.ServletApiAdvice.onExitServlet( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest, Object servletResponse, @Nullable Object transactionOrScopeOrSpan, @Nullable Throwable t, Object thiz)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, boolean overrideStatusCodeOnThrowable, String method, @Nullable Map<String, String[]> parameterMap, @Nullable String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader, boolean deactivate)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a0754fdc6e18d729153a2bd1440f932ebbcdfe56",
        "previous_commit": "915b929b06bb68a648f3a35a5a5667b08304b2e6",
        "date": 1545207545,
        "releases": {
            "previous": "a0754fdc6e18d729153a2bd1440f932ebbcdfe56",
            "next": "a0754fdc6e18d729153a2bd1440f932ebbcdfe56"
        },
        "commit_message": "Wrap Runnable in AsyncContext.start (#388)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a0754fdc6e18d729153a2bd1440f932ebbcdfe56": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "public Class<?> co.elastic.apm.agent.servlet.AsyncInstrumentation.getAdviceClass()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.AsyncInstrumentation.getMethodMatcher()"
                ]
            },
            "915b929b06bb68a648f3a35a5a5667b08304b2e6": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java": [
                    "public Class<?> co.elastic.apm.agent.servlet.AsyncInstrumentation.getAdviceClass()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.servlet.AsyncInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2e68d577b26bfdf4025a2dd1b9163693ad044712",
        "previous_commit": "e2ef2453c8a560922dfaabfaf9f9dbd0d3032337",
        "date": 1649162374,
        "releases": {
            "previous": "2e68d577b26bfdf4025a2dd1b9163693ad044712",
            "next": "2e68d577b26bfdf4025a2dd1b9163693ad044712"
        },
        "commit_message": "fix premature recycling (#2552)\n\n* fix premature recycling\r\n\r\n* apply the more granular decrement described in the comments (fixes the breaks)\r\n\r\n* fix build break",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2e68d577b26bfdf4025a2dd1b9163693ad044712": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()",
                    "public void co.elastic.apm.agent.impl.transaction.Span.beforeEnd(long epochMicros)"
                ]
            },
            "e2ef2453c8a560922dfaabfaf9f9dbd0d3032337": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()",
                    "public void co.elastic.apm.agent.impl.transaction.Span.beforeEnd(long epochMicros)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ecec05d039e3fd6ff04e005e34438c1e50d5f818",
        "previous_commit": "03ef30516b12796ffd05b9d42e1848378f1017fb",
        "date": 1685954496,
        "releases": {
            "previous": "ecec05d039e3fd6ff04e005e34438c1e50d5f818",
            "next": "ecec05d039e3fd6ff04e005e34438c1e50d5f818"
        },
        "commit_message": "Factor out reference counting to explicit API (#3081)\n\n\r\n---------\r\n\r\nCo-authored-by: Jonas Kunz <jonas.kunz@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ecec05d039e3fd6ff04e005e34438c1e50d5f818": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.cancelCall(ClientCall<?, ?> clientCall, @Nullable Throwable cause)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessHelper.java": [
                    "void co.elastic.apm.agent.process.ProcessHelper.doStartProcess(@Nonnull AbstractSpan<?> parentContext, @Nonnull Process process, @Nonnull String processName)"
                ]
            },
            "03ef30516b12796ffd05b9d42e1848378f1017fb": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.cancelCall(ClientCall<?, ?> clientCall, @Nullable Throwable cause)"
                ],
                "apm-agent-plugins/apm-process-plugin/src/main/java/co/elastic/apm/agent/process/ProcessHelper.java": [
                    "void co.elastic.apm.agent.process.ProcessHelper.doStartProcess(@Nonnull AbstractSpan<?> parentContext, @Nonnull Process process, @Nonnull String processName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9af11ba1388e3163fe99c0d152744de64758c897",
        "previous_commit": "d499e81b6268475471575cf620df3830a421db21",
        "date": 1537271517,
        "releases": {
            "previous": "9af11ba1388e3163fe99c0d152744de64758c897",
            "next": "9af11ba1388e3163fe99c0d152744de64758c897"
        },
        "commit_message": "Unnest exception types matching *Nested*Exception by default (#207)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9af11ba1388e3163fe99c0d152744de64758c897": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.setException(Throwable e)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeStackTraceArrayElements(StackTraceElement[] stacktrace)"
                ]
            },
            "d499e81b6268475471575cf620df3830a421db21": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.setException(Throwable e)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeStackTraceArrayElements(StackTraceElement[] stacktrace)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9c751f90d7fa5720721daf9a44983964f8e65a90",
        "previous_commit": "e6dcd0431b8ab22e870d4fdc8703e1fdbe3e5e5e",
        "date": 1680779913,
        "releases": {
            "previous": "9c751f90d7fa5720721daf9a44983964f8e65a90",
            "next": "9c751f90d7fa5720721daf9a44983964f8e65a90"
        },
        "commit_message": "Security manager test & fix (#3077)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9c751f90d7fa5720721daf9a44983964f8e65a90": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PrivilegedActionUtils.java": [
                    "public String co.elastic.apm.agent.util.PrivilegedActionUtils.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/UrlConnectionUtils.java": [
                    "private static void co.elastic.apm.agent.util.UrlConnectionUtils.debugPrintProxySettings(URL url)"
                ]
            },
            "e6dcd0431b8ab22e870d4fdc8703e1fdbe3e5e5e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PrivilegedActionUtils.java": [
                    "public String co.elastic.apm.agent.util.PrivilegedActionUtils.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/UrlConnectionUtils.java": [
                    "private static void co.elastic.apm.agent.util.UrlConnectionUtils.debugPrintProxySettings(URL url)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "32639e63f94fb70d08871eb864b09c9a9e2808d7",
        "previous_commit": "4b706969c348b0a3a8ea47fc983592eb0211e6e2",
        "date": 1565606314,
        "releases": {
            "previous": "32639e63f94fb70d08871eb864b09c9a9e2808d7",
            "next": "32639e63f94fb70d08871eb864b09c9a9e2808d7"
        },
        "commit_message": "Support open tracing 0.33 (#773)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "32639e63f94fb70d08871eb864b09c9a9e2808d7": {
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/SpanContextInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.opentracing.impl.SpanContextInstrumentation.getMethodMatcher()"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScopeManager.java": [
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.active()"
                ]
            },
            "4b706969c348b0a3a8ea47fc983592eb0211e6e2": {
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/SpanContextInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.opentracing.impl.SpanContextInstrumentation.getMethodMatcher()"
                ],
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmScopeManager.java": [
                    "public ApmScope co.elastic.apm.opentracing.ApmScopeManager.active()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2037e9360f0615841ef9483500b354e27bb43b25",
        "previous_commit": "9cd614ac23af586decb4894e138281945d85561c",
        "date": 1531992976,
        "releases": {
            "previous": "2037e9360f0615841ef9483500b354e27bb43b25",
            "next": "2037e9360f0615841ef9483500b354e27bb43b25"
        },
        "commit_message": "Create spans from transaction fix tests\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2037e9360f0615841ef9483500b354e27bb43b25": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.end(long nanoTime, boolean releaseActiveTransaction)",
                    "public Span co.elastic.apm.impl.transaction.Transaction.createSpan()"
                ]
            },
            "9cd614ac23af586decb4894e138281945d85561c": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.end(long nanoTime, boolean releaseActiveTransaction)",
                    "public Span co.elastic.apm.impl.transaction.Transaction.createSpan()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e135e99dd01b95ed3524062443b8f2aee20154bb",
        "previous_commit": "d89d4003c1483ea7f972eac56b2aedb45ed6f40d",
        "date": 1535724444,
        "releases": {
            "previous": "e135e99dd01b95ed3524062443b8f2aee20154bb",
            "next": "e135e99dd01b95ed3524062443b8f2aee20154bb"
        },
        "commit_message": "Fix DslJsonSerializer#fix(Long)StringValue\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e135e99dd01b95ed3524062443b8f2aee20154bb": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.writeLongStringValue(String value)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.writeStringValue(String value)"
                ]
            },
            "d89d4003c1483ea7f972eac56b2aedb45ed6f40d": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.writeLongStringValue(String value)",
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.writeStringValue(String value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a6b37589ff310ca7965ba64c3d4248a30b5af8de",
        "previous_commit": "54c1fcef3c3e6ad67b14be892e85d0310bc2e707",
        "date": 1530523923,
        "releases": {
            "previous": "a6b37589ff310ca7965ba64c3d4248a30b5af8de",
            "next": "a6b37589ff310ca7965ba64c3d4248a30b5af8de"
        },
        "commit_message": "Make sure the error context is always set (#114)\n\nPreviously, most of the transaction context was set after the execution of a request.\r\nWhen capturing an exception, the transaction context is copied over at its current state.\r\nThat means when the user captures an exception, the transaction context is not yet\r\npopulated and therefore, the Error context is empty.\r\n\r\nThis changes the initialization of the transaction context so that it is set\r\nbefore the request starts.\r\n\r\nThat way, we can be sure that the Error context is always set",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a6b37589ff310ca7965ba64c3d4248a30b5af8de": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochTimestampMillis, @Nullable Exception e)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransactionReference(ErrorCapture errorCapture)"
                ]
            },
            "54c1fcef3c3e6ad67b14be892e85d0310bc2e707": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(long epochTimestampMillis, @Nullable Exception e)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransactionReference(ErrorCapture errorCapture)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "557f1c7173db15321cefd310b4c0fec7b685f4dc",
        "previous_commit": "078da74c8109a3a58bcdba20f3d28f392da489ce",
        "date": 1677087155,
        "releases": {
            "previous": "557f1c7173db15321cefd310b4c0fec7b685f4dc",
            "next": "557f1c7173db15321cefd310b4c0fec7b685f4dc"
        },
        "commit_message": "make the Agent.activationMethod field immutable (#3032)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "557f1c7173db15321cefd310b4c0fec7b685f4dc": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/Agent.java": [
                    "public String co.elastic.apm.agent.impl.metadata.Agent.getActivationMethod()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/ServiceFactory.java": [
                    "public Service co.elastic.apm.agent.impl.metadata.ServiceFactory.createService(CoreConfiguration coreConfiguration, String ephemeralId, ServerlessConfiguration serverlessConfiguration)"
                ]
            },
            "078da74c8109a3a58bcdba20f3d28f392da489ce": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/Agent.java": [
                    "public String co.elastic.apm.agent.impl.metadata.Agent.getActivationMethod()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/ServiceFactory.java": [
                    "public Service co.elastic.apm.agent.impl.metadata.ServiceFactory.createService(CoreConfiguration coreConfiguration, String ephemeralId, ServerlessConfiguration serverlessConfiguration)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ba301b577c6a7b66f261e5382ef3870e8e25d803",
        "previous_commit": "9ba84947eda5259eaf7d872ec195eec43e1a1649",
        "date": 1613989713,
        "releases": {
            "previous": "ba301b577c6a7b66f261e5382ef3870e8e25d803",
            "next": "ba301b577c6a7b66f261e5382ef3870e8e25d803"
        },
        "commit_message": "Add support for OkHttp 4.4+ (#1672)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ba301b577c6a7b66f261e5382ef3870e8e25d803": {
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttp3ClientAsyncInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.okhttp.OkHttp3ClientAsyncInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttp3ClientInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.okhttp.OkHttp3ClientInstrumentation.getTypeMatcher()"
                ]
            },
            "9ba84947eda5259eaf7d872ec195eec43e1a1649": {
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttp3ClientAsyncInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.okhttp.OkHttp3ClientAsyncInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-okhttp-plugin/src/main/java/co/elastic/apm/agent/okhttp/OkHttp3ClientInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.okhttp.OkHttp3ClientInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a5a37a13b7d9bca55fd5780fd850d4029d3153d6",
        "previous_commit": "2d0c5cc8185fafaa7c45abbffbb5a208cc64ba8e",
        "date": 1625476617,
        "releases": {
            "previous": "a5a37a13b7d9bca55fd5780fd850d4029d3153d6",
            "next": "a5a37a13b7d9bca55fd5780fd850d4029d3153d6"
        },
        "commit_message": "JBoss JMX notification work-around (#1895)\n\nextend work-around to 'jboss.as' + 'jboss.as.expr'",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a5a37a13b7d9bca55fd5780fd850d4029d3153d6": {
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.registerMBeanNotificationListener(final MBeanServer server)",
                    "private boolean co.elastic.apm.agent.jmx.JmxMetricTracker.matchesJbossStatisticsPool(ObjectName beanName, ObjectName metricName, MBeanServer server)"
                ]
            },
            "2d0c5cc8185fafaa7c45abbffbb5a208cc64ba8e": {
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private void co.elastic.apm.agent.jmx.JmxMetricTracker.registerMBeanNotificationListener(final MBeanServer server)",
                    "private boolean co.elastic.apm.agent.jmx.JmxMetricTracker.matchesJbossStatisticsPool(ObjectName beanName, ObjectName metricName, MBeanServer server)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "08ae2ad984ef1213aaaa865ef338e6de764315ef",
        "previous_commit": "a4f8fcff6c9e13fada92c7e8a6e0da817196d2ec",
        "date": 1542125622,
        "releases": {
            "previous": "08ae2ad984ef1213aaaa865ef338e6de764315ef",
            "next": "08ae2ad984ef1213aaaa865ef338e6de764315ef"
        },
        "commit_message": "Reduce allocations by not calling request.getRequestURL()\n\nRe-construct the full url like tomcat does.\nCalling request.getRequestURL() would always allocate memory.\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "08ae2ad984ef1213aaaa865ef338e6de764315ef": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.servlet.ServletTransactionHelper.fillRequest(Request request, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr)",
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.fillRequestContext(Transaction transaction, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr)"
                ]
            },
            "a4f8fcff6c9e13fada92c7e8a6e0da817196d2ec": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.servlet.ServletTransactionHelper.fillRequest(Request request, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr, StringBuffer requestURL)",
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.fillRequestContext(Transaction transaction, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr, StringBuffer requestURL)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4319f9989c3537062b438fcaac58a303558ddb20",
        "previous_commit": "06bb4661b610da5792cb6f82c49412b2fa444371",
        "date": 1585237420,
        "releases": {
            "previous": "4319f9989c3537062b438fcaac58a303558ddb20",
            "next": "4319f9989c3537062b438fcaac58a303558ddb20"
        },
        "commit_message": "Hanlde corner cases for empty or null service name (#1097)\n\n* test fo a few corner cases for default service_name",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4319f9989c3537062b438fcaac58a303558ddb20": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServiceNameUtil.java": [
                    "static String co.elastic.apm.agent.configuration.ServiceNameUtil.getDefaultServiceName()",
                    "private static String co.elastic.apm.agent.configuration.ServiceNameUtil.parseJarCommand(String command)"
                ]
            },
            "06bb4661b610da5792cb6f82c49412b2fa444371": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServiceNameUtil.java": [
                    "static String co.elastic.apm.agent.configuration.ServiceNameUtil.getDefaultServiceName()",
                    "private static String co.elastic.apm.agent.configuration.ServiceNameUtil.parseJarCommand(String command)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a8db8c8662dbaa07dc8533171afff9385ce2fe1c",
        "previous_commit": "0c95ed7faa390d1089e552d98b43b664990ea0a9",
        "date": 1580893912,
        "releases": {
            "previous": "a8db8c8662dbaa07dc8533171afff9385ce2fe1c",
            "next": "a8db8c8662dbaa07dc8533171afff9385ce2fe1c"
        },
        "commit_message": "Fix JDBC non-supported getUpdateCount (#1008)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a8db8c8662dbaa07dc8533171afff9385ce2fe1c": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.This Statement statement, @Advice.Enter @Nullable Span span, @Advice.Thrown @Nullable Throwable t)",
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.This Statement statement, @Advice.Enter @Nullable Span span, @Advice.Thrown Throwable t)"
                ]
            },
            "0c95ed7faa390d1089e552d98b43b664990ea0a9": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.This Statement statement, @Advice.Enter @Nullable Span span, @Advice.Thrown @Nullable Throwable t)",
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.This Statement statement, @Advice.Enter @Nullable Span span, @Advice.Thrown Throwable t)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b38dfee9a9365c3a5a406aeaa390b9974f843f38",
        "previous_commit": "e0df4be896284e84b0616f56f0a5f259c296528c",
        "date": 1693496991,
        "releases": {
            "previous": "b38dfee9a9365c3a5a406aeaa390b9974f843f38",
            "next": "b38dfee9a9365c3a5a406aeaa390b9974f843f38"
        },
        "commit_message": "fix empty histograms from micrometer being sent to the server (#3304)\n\n* fix empty histograms from micrometer being sent to the server\r\n\r\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b38dfee9a9365c3a5a406aeaa390b9974f843f38": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "private static boolean co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeDistributionSummary(JsonWriter jw, HistogramSnapshot histogramSnapshot, Meter.Id id, long count, double totalAmount, boolean hasValue, StringBuilder replaceBuilder, boolean dedotMetricName)",
                    "private static boolean co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeTimer(JsonWriter jw, HistogramSnapshot histogramSnapshot, Meter.Id id, long count, double totalTime, boolean hasValue, StringBuilder replaceBuilder, boolean dedotMetricName)"
                ]
            },
            "e0df4be896284e84b0616f56f0a5f259c296528c": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "private static boolean co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeDistributionSummary(JsonWriter jw, HistogramSnapshot histogramSnapshot, Meter.Id id, long count, double totalAmount, boolean hasValue, StringBuilder replaceBuilder, boolean dedotMetricName)",
                    "private static boolean co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeTimer(JsonWriter jw, HistogramSnapshot histogramSnapshot, Meter.Id id, long count, double totalTime, boolean hasValue, StringBuilder replaceBuilder, boolean dedotMetricName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "beb27dfb2004f464c3bfaba6f185a6354da90cf8",
        "previous_commit": "2259495d153766fe36aa2833a0455394b2fadbb8",
        "date": 1602427427,
        "releases": {
            "previous": "beb27dfb2004f464c3bfaba6f185a6354da90cf8",
            "next": "beb27dfb2004f464c3bfaba6f185a6354da90cf8"
        },
        "commit_message": "Implementing log_level configuration spec (#1431)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "beb27dfb2004f464c3bfaba6f185a6354da90cf8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "public Configuration co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.getConfiguration()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public void co.elastic.apm.agent.logging.LoggingConfiguration.onChange(ConfigurationOption<?> configurationOption, LogLevel oldValue, LogLevel newValue)"
                ]
            },
            "2259495d153766fe36aa2833a0455394b2fadbb8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "public Configuration co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.getConfiguration()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public void co.elastic.apm.agent.logging.LoggingConfiguration.onChange(ConfigurationOption<?> configurationOption, LogLevel oldValue, LogLevel newValue)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "42a99c2d67e862d5c2bf6abdb7544fb9317df59f",
        "previous_commit": "849260bd7da746d2a5a590fc7c0e68cbfb520539",
        "date": 1587028091,
        "releases": {
            "previous": "42a99c2d67e862d5c2bf6abdb7544fb9317df59f",
            "next": "42a99c2d67e862d5c2bf6abdb7544fb9317df59f"
        },
        "commit_message": "Avoid side-effects of calling Statement.getUpdateCount (#1139)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "42a99c2d67e862d5c2bf6abdb7544fb9317df59f": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.This Statement statement, @Advice.Enter @Nullable Span span, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "public void co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.clearInternalStorage()"
                ]
            },
            "849260bd7da746d2a5a590fc7c0e68cbfb520539": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.This Statement statement, @Advice.Enter @Nullable Span span, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "public void co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.clearInternalStorage()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c339b002ddc60cdd4aee2f7ba823cf814d8658a7",
        "previous_commit": "b3297f72d2824b1869e651a0f8a3a3c970dbb657",
        "date": 1714638065,
        "releases": {
            "previous": "c339b002ddc60cdd4aee2f7ba823cf814d8658a7",
            "next": "c339b002ddc60cdd4aee2f7ba823cf814d8658a7"
        },
        "commit_message": "Universal Profiling integration: open socket for communication (#3602)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c339b002ddc60cdd4aee2f7ba823cf814d8658a7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/universalprofiling/UniversalProfilingIntegration.java": [
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.start(ElasticApmTracer tracer)",
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.stop()"
                ]
            },
            "b3297f72d2824b1869e651a0f8a3a3c970dbb657": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/universalprofiling/UniversalProfilingIntegration.java": [
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.start(ElasticApmTracer tracer)",
                    "public void co.elastic.apm.agent.universalprofiling.UniversalProfilingIntegration.stop()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a5b983a10b25e6189a1419df75a9513fadb6c97e",
        "previous_commit": "789e23b7150991f8e53a62cb9caee26669d4ca5f",
        "date": 1692023904,
        "releases": {
            "previous": "a5b983a10b25e6189a1419df75a9513fadb6c97e",
            "next": "a5b983a10b25e6189a1419df75a9513fadb6c97e"
        },
        "commit_message": "Add baggage as labels to error captures (#3289)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a5b983a10b25e6189a1419df75a9513fadb6c97e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureAndReportException(@Nullable Throwable e, ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/error/LoggerErrorHelper.java": [
                    "public Object co.elastic.apm.agent.loginstr.error.LoggerErrorHelper.enter(@Nullable Throwable exception, Class<?> originClass)"
                ]
            },
            "789e23b7150991f8e53a62cb9caee26669d4ca5f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureAndReportException(@Nullable Throwable e, ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/error/LoggerErrorHelper.java": [
                    "public Object co.elastic.apm.agent.loginstr.error.LoggerErrorHelper.enter(@Nullable Throwable exception, Class<?> originClass)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f8420e622c99ca6bdca94b24f1c2ca6e885f100f",
        "previous_commit": "cea4237ed21084241a684b93578e725305630368",
        "date": 1601973658,
        "releases": {
            "previous": "f8420e622c99ca6bdca94b24f1c2ca6e885f100f",
            "next": "f8420e622c99ca6bdca94b24f1c2ca6e885f100f"
        },
        "commit_message": "Adding trace-level log info to HTTP spans (#1425)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f8420e622c99ca6bdca94b24f1c2ca6e885f100f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "<C> void co.elastic.apm.agent.impl.transaction.TraceContext.propagateTraceContext(C carrier, TextHeaderSetter<C> headerSetter)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/http/client/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(AbstractSpan<?> parent, String method, @Nullable String uri, String scheme, CharSequence hostName, int port)"
                ]
            },
            "cea4237ed21084241a684b93578e725305630368": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "<C> void co.elastic.apm.agent.impl.transaction.TraceContext.propagateTraceContext(C carrier, TextHeaderSetter<C> headerSetter)"
                ],
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/http/client/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(AbstractSpan<?> parent, String method, @Nullable String uri, String scheme, CharSequence hostName, int port)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "58332d48d3fde769426f9ee47653734a939b2fbc",
        "previous_commit": "43e8158d7308106ba9ec2235161ffc4b02b17ed9",
        "date": 1669894755,
        "releases": {
            "previous": "58332d48d3fde769426f9ee47653734a939b2fbc",
            "next": "58332d48d3fde769426f9ee47653734a939b2fbc"
        },
        "commit_message": "Fix NPE in spring-mvc (#2896)\n\n* fix NPE when bean view name is null\n\n* minor cleanup\n\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "58332d48d3fde769426f9ee47653734a939b2fbc": {
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/ViewRenderInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.springwebmvc.ViewRenderInstrumentation.getInstrumentationGroupNames()",
                    "public static Object co.elastic.apm.agent.springwebmvc.ViewRenderInstrumentation.beforeExecute(@Advice.This Object thiz)"
                ]
            },
            "43e8158d7308106ba9ec2235161ffc4b02b17ed9": {
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/ViewRenderInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.springwebmvc.ViewRenderInstrumentation.getInstrumentationGroupNames()",
                    "public static Object co.elastic.apm.agent.springwebmvc.ViewRenderInstrumentation.beforeExecute(@Advice.This @Nullable Object thiz)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c1898f336e9b085c723403adff5a20f327b7d700",
        "previous_commit": "d7751ba07a6910b6ba7d11dff6ca8f19966f7fe7",
        "date": 1638979160,
        "releases": {
            "previous": "c1898f336e9b085c723403adff5a20f327b7d700",
            "next": "c1898f336e9b085c723403adff5a20f327b7d700"
        },
        "commit_message": "Switching to use Span concurrent map in Scala plugin (#2323)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c1898f336e9b085c723403adff5a20f327b7d700": {
                "apm-agent-plugins/apm-scala-concurrent-plugin/src/main/java/co/elastic/apm/agent/scalaconcurrent/FutureInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.scalaconcurrent.FutureInstrumentation.onEnter(@Advice.This Object thiz)",
                    "public static void co.elastic.apm.agent.scalaconcurrent.FutureInstrumentation.onExit(@Advice.This Object thiz)"
                ]
            },
            "d7751ba07a6910b6ba7d11dff6ca8f19966f7fe7": {
                "apm-agent-plugins/apm-scala-concurrent-plugin/src/main/java/co/elastic/apm/agent/scalaconcurrent/FutureInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.scalaconcurrent.FutureInstrumentation.onEnter(@Advice.This Object thiz)",
                    "public static void co.elastic.apm.agent.scalaconcurrent.FutureInstrumentation.onExit(@Advice.This Object thiz)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "313b6e3b6b9ec44af8c1154d07615c444022bee1",
        "previous_commit": "82efe3f5599fe5373d11f6f758e835a73d090af6",
        "date": 1541435869,
        "releases": {
            "previous": "313b6e3b6b9ec44af8c1154d07615c444022bee1",
            "next": "313b6e3b6b9ec44af8c1154d07615c444022bee1"
        },
        "commit_message": "Fix clock problem with OT API\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "313b6e3b6b9ec44af8c1154d07615c444022bee1": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public <T> Span co.elastic.apm.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext)",
                    "public <T> Span co.elastic.apm.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros, boolean dropped)"
                ]
            },
            "82efe3f5599fe5373d11f6f758e835a73d090af6": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public <T> Span co.elastic.apm.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext)",
                    "public <T> Span co.elastic.apm.impl.transaction.Span.start(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros, boolean dropped)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "967b0c624a72efa03fd8616da6d3cf5d94930c3e",
        "previous_commit": "73962e6789ac459f15564712ebb5399b3757d7c3",
        "date": 1588858282,
        "releases": {
            "previous": "967b0c624a72efa03fd8616da6d3cf5d94930c3e",
            "next": "967b0c624a72efa03fd8616da6d3cf5d94930c3e"
        },
        "commit_message": "Adding support for new Atlassian OSGi config (#1168)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "967b0c624a72efa03fd8616da6d3cf5d94930c3e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/OsgiBootDelegationEnabler.java": [
                    "public void co.elastic.apm.agent.bci.OsgiBootDelegationEnabler.start(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/CoreConfiguration.java": [
                    "public @Nullable String co.elastic.apm.agent.configuration.CoreConfiguration.getPackagesToAppendToBootdelegationProperty()"
                ]
            },
            "73962e6789ac459f15564712ebb5399b3757d7c3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/OsgiBootDelegationEnabler.java": [
                    "public void co.elastic.apm.agent.bci.OsgiBootDelegationEnabler.start(ElasticApmTracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/CoreConfiguration.java": [
                    "public @Nullable String co.elastic.apm.agent.configuration.CoreConfiguration.getPackagesToAppendToBootdelegationProperty()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3bc87a0c47afd3f0c1f8b16e599f6efe57083cee",
        "previous_commit": "5ecf4e8a79727254e75d56a86ef8a3dc6a2b6998",
        "date": 1604064311,
        "releases": {
            "previous": "3bc87a0c47afd3f0c1f8b16e599f6efe57083cee",
            "next": "3bc87a0c47afd3f0c1f8b16e599f6efe57083cee"
        },
        "commit_message": "Properly disable agent on startup (#1463)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3bc87a0c47afd3f0c1f8b16e599f6efe57083cee": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ]
            },
            "5ecf4e8a79727254e75d56a86ef8a3dc6a2b6998": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b258d29cceb5656793019724efb535a5d88cc9f5",
        "previous_commit": "fe81eda8322df957b4eb9399468e5061653100f8",
        "date": 1571928929,
        "releases": {
            "previous": "b258d29cceb5656793019724efb535a5d88cc9f5",
            "next": "b258d29cceb5656793019724efb535a5d88cc9f5"
        },
        "commit_message": "Report affected rows for DML statements (#883)\n\nImplement & test capture of affected rows for JDBC statements",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b258d29cceb5656793019724efb535a5d88cc9f5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Db.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Db.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeDbContext(final Db db)"
                ]
            },
            "fe81eda8322df957b4eb9399468e5061653100f8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Db.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Db.resetState()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeDbContext(final Db db)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "fb6873d9b0bd8c049be54c20f877174f83225496",
        "previous_commit": "85db7cee48140c51ee3e18a8129d5a1adda29297",
        "date": 1523024178,
        "releases": {
            "previous": "fb6873d9b0bd8c049be54c20f877174f83225496",
            "next": "fb6873d9b0bd8c049be54c20f877174f83225496"
        },
        "commit_message": "Fix transaction recoring in case of a ServletException\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "fb6873d9b0bd8c049be54c20f877174f83225496": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)",
                    "void co.elastic.apm.servlet.ApmFilter.captureTransaction(ServletRequest request, ServletResponse response, FilterChain filterChain)"
                ]
            },
            "85db7cee48140c51ee3e18a8129d5a1adda29297": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)",
                    "void co.elastic.apm.servlet.ApmFilter.captureTransaction(ServletRequest request, ServletResponse response, FilterChain filterChain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "246bbd27c7697b639e8830fa25f7f9007f4e1de9",
        "previous_commit": "46b943b8c7950c823aab60233a2e60dc356d790d",
        "date": 1520880762,
        "releases": {
            "previous": "246bbd27c7697b639e8830fa25f7f9007f4e1de9",
            "next": "246bbd27c7697b639e8830fa25f7f9007f4e1de9"
        },
        "commit_message": "Create a value type for SpanId\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "246bbd27c7697b639e8830fa25f7f9007f4e1de9": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, Span span, long nanoTime, boolean dropped)",
                    "public void co.elastic.apm.impl.transaction.Span.resetState()"
                ]
            },
            "46b943b8c7950c823aab60233a2e60dc356d790d": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, Span span, long nanoTime, boolean dropped)",
                    "public void co.elastic.apm.impl.transaction.Span.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "565c2e8074b89e3d06d17714e9d9982e3ab80f55",
        "previous_commit": "7e1b6672b4acaf6b1e0979c45f5991f94b8e0139",
        "date": 1662547750,
        "releases": {
            "previous": "565c2e8074b89e3d06d17714e9d9982e3ab80f55",
            "next": "565c2e8074b89e3d06d17714e9d9982e3ab80f55"
        },
        "commit_message": "implementation for Trace Continuation Strategy (#2760)\n\n* implementation for Trace Continuation Strategy\r\n\r\n* update CHANGELOG for Trace Continuation Strategy\r\n\r\n* regenerate docs\r\n\r\n* Update apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* includesVendor -> includesElasticVendor\r\n\r\n* Update apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/CoreConfiguration.java\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* Update CHANGELOG.asciidoc\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* update generated doc\r\n\r\n* move implementation to start() and change other start to startRoot\r\n\r\n* Generics improvements\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\nCo-authored-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "565c2e8074b89e3d06d17714e9d9982e3ab80f55": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public <T, A extends HeaderGetter<?, T>> Transaction co.elastic.apm.agent.impl.transaction.Transaction.start(TraceContext.ChildContextCreatorTwoArg<T, A> childContextCreator, @Nullable T parent, A arg, long epochMicros, Sampler sampler)"
                ]
            },
            "7e1b6672b4acaf6b1e0979c45f5991f94b8e0139": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.startRootTransaction(Sampler sampler, long epochMicros, @Nullable ClassLoader initiatingClassLoader)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public <T, A> Transaction co.elastic.apm.agent.impl.transaction.Transaction.start(TraceContext.ChildContextCreatorTwoArg<T, A> childContextCreator, @Nullable T parent, A arg, long epochMicros, Sampler sampler)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "695913ea11e4b381f32ac50daed83b7ba9478899",
        "previous_commit": "eb3742de0279e2f53dc51665e712b12e2d1feb91",
        "date": 1540994124,
        "releases": {
            "previous": "695913ea11e4b381f32ac50daed83b7ba9478899",
            "next": "695913ea11e4b381f32ac50daed83b7ba9478899"
        },
        "commit_message": "Log warnings when the connected APM Server verison is not supported (#271)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "695913ea11e4b381f32ac50daed83b7ba9478899": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHealthChecker.java": [
                    "public void co.elastic.apm.report.ApmServerHealthChecker.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.report.IntakeV2ReportingEventHandler.onConnectionError(@Nullable Integer responseCode, long droppedEvents, long reportedEvents)"
                ]
            },
            "eb3742de0279e2f53dc51665e712b12e2d1feb91": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHealthChecker.java": [
                    "public void co.elastic.apm.report.ApmServerHealthChecker.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private void co.elastic.apm.report.IntakeV2ReportingEventHandler.onConnectionError(@Nullable Integer responseCode, long droppedEvents, long reportedEvents)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "21d64124fa20cd0aa18bd6932d08eb9d33a313b3",
        "previous_commit": "42c42d52ad23d0a6d2e35c0746ff4bc82b0b4dd5",
        "date": 1554825363,
        "releases": {
            "previous": "21d64124fa20cd0aa18bd6932d08eb9d33a313b3",
            "next": "21d64124fa20cd0aa18bd6932d08eb9d33a313b3"
        },
        "commit_message": "Add support for WebLogic (#555)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "21d64124fa20cd0aa18bd6932d08eb9d33a313b3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServiceNameUtil.java": [
                    "private static String co.elastic.apm.agent.configuration.ServiceNameUtil.getSpecialServiceName(String command)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)"
                ]
            },
            "42c42d52ad23d0a6d2e35c0746ff4bc82b0b4dd5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServiceNameUtil.java": [
                    "private static String co.elastic.apm.agent.configuration.ServiceNameUtil.getSpecialServiceName(String command)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8237da90b6692ec179d6ce07d6a602e1cc4e8172",
        "previous_commit": "6ea644050e2e4dece55bc382eaf43543aa8df504",
        "date": 1525688367,
        "releases": {
            "previous": "8237da90b6692ec179d6ce07d6a602e1cc4e8172",
            "next": "8237da90b6692ec179d6ce07d6a602e1cc4e8172"
        },
        "commit_message": "Use java.lang.ThreadLocal instead of DetachedThreadLocal (#78)\n\nAs DetachedThreadLocals allocate objects on each lookup",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8237da90b6692ec179d6ce07d6a602e1cc4e8172": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.releaseActiveTransaction()",
                    "public void co.elastic.apm.impl.ElasticApmTracer.releaseActiveSpan()"
                ]
            },
            "6ea644050e2e4dece55bc382eaf43543aa8df504": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.releaseActiveTransaction()",
                    "public void co.elastic.apm.impl.ElasticApmTracer.releaseActiveSpan()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "00c1f350376b76740444a986e07f6deb15513e60",
        "previous_commit": "d15260d5c95572b9f4b71ac3a93082bbf8fead33",
        "date": 1707210254,
        "releases": {
            "previous": "00c1f350376b76740444a986e07f6deb15513e60",
            "next": "00c1f350376b76740444a986e07f6deb15513e60"
        },
        "commit_message": "Fix agent downloader with new signing key for 1.46.0 (#3513)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "00c1f350376b76740444a986e07f6deb15513e60": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentDownloader.java": [
                    "void co.elastic.apm.attach.AgentDownloader.verifyPgpSignature(final Path agentJarFile, final String mavenAgentUrlString)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/bouncycastle/BouncyCastleVerifier.java": [
                    "public boolean co.elastic.apm.attach.bouncycastle.BouncyCastleVerifier.verifyPgpSignature(InputStream toVerify, InputStream expectedPgpSignature, InputStream rawPublicKey, String keyID)"
                ]
            },
            "d15260d5c95572b9f4b71ac3a93082bbf8fead33": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentDownloader.java": [
                    "void co.elastic.apm.attach.AgentDownloader.verifyPgpSignature(final Path agentJarFile, final String mavenAgentUrlString)"
                ],
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/bouncycastle/BouncyCastleVerifier.java": [
                    "public boolean co.elastic.apm.attach.bouncycastle.BouncyCastleVerifier.verifyPgpSignature(InputStream toVerify, InputStream expectedPgpSignature, InputStream rawPublicKey, String keyID)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2f5ede27853b57e307a3bb6795a854d931b6071c",
        "previous_commit": "cb52ed2f278f7d1db1699a7ca4357fc4d978307a",
        "date": 1637767652,
        "releases": {
            "previous": "2f5ede27853b57e307a3bb6795a854d931b6071c",
            "next": "2f5ede27853b57e307a3bb6795a854d931b6071c"
        },
        "commit_message": "Register and schedule Micrometer MeterRegistry when Meters are registered (#2255)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2f5ede27853b57e307a3bb6795a854d931b6071c": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.micrometer.MicrometerInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.micrometer.MicrometerInstrumentation.getTypeMatcher()"
                ]
            },
            "cb52ed2f278f7d1db1699a7ca4357fc4d978307a": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.micrometer.MicrometerInstrumentation.getMethodMatcher()",
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.micrometer.MicrometerInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5b5060a4c14d45c6bb339423acc65b4d50a5119f",
        "previous_commit": "ab41de5b0b20bf8f9bb9b881e95824a41dc99a1b",
        "date": 1619077641,
        "releases": {
            "previous": "5b5060a4c14d45c6bb339423acc65b4d50a5119f",
            "next": "5b5060a4c14d45c6bb339423acc65b4d50a5119f"
        },
        "commit_message": "fixes with tests on windows (#1671)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5b5060a4c14d45c6bb339423acc65b4d50a5119f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PackageScanner.java": [
                    "public FileVisitResult co.elastic.apm.agent.util.PackageScanner.visitFile(Path file, BasicFileAttributes attrs)",
                    "private static List<String> co.elastic.apm.agent.util.PackageScanner.listClassNames(final String basePackage, final Path basePath)"
                ]
            },
            "ab41de5b0b20bf8f9bb9b881e95824a41dc99a1b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PackageScanner.java": [
                    "public FileVisitResult co.elastic.apm.agent.util.PackageScanner.visitFile(Path file, BasicFileAttributes attrs)",
                    "private static List<String> co.elastic.apm.agent.util.PackageScanner.listClassNames(final String basePackage, final Path basePath)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "37d2c5472dd112ce9ce951cfb600fcc4a78a7a56",
        "previous_commit": "281fe932cc3ffb3617f963674d609df69b832267",
        "date": 1565851543,
        "releases": {
            "previous": "37d2c5472dd112ce9ce951cfb600fcc4a78a7a56",
            "next": "37d2c5472dd112ce9ce951cfb600fcc4a78a7a56"
        },
        "commit_message": "Support annotation matching for TraceMethodInstrumentation (#771)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "37d2c5472dd112ce9ce951cfb600fcc4a78a7a56": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/MethodMatcher.java": [
                    "public static MethodMatcher co.elastic.apm.agent.bci.methodmatching.MethodMatcher.of(String methodMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/TraceMethodInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.bci.methodmatching.TraceMethodInstrumentation.getTypeMatcher()"
                ]
            },
            "281fe932cc3ffb3617f963674d609df69b832267": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/MethodMatcher.java": [
                    "public static MethodMatcher co.elastic.apm.agent.bci.methodmatching.MethodMatcher.of(String methodMatcher)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/TraceMethodInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.bci.methodmatching.TraceMethodInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2aacd8d9497eb3078026e65eadb2d4edf3c57d5f",
        "previous_commit": "503379cd23c641f3db77ae5c38273dcfa5eab61d",
        "date": 1657548390,
        "releases": {
            "previous": "2aacd8d9497eb3078026e65eadb2d4edf3c57d5f",
            "next": "2aacd8d9497eb3078026e65eadb2d4edf3c57d5f"
        },
        "commit_message": "Debug/fix reactor instrumentation side-effects (#2708)\n\n* try defensive approach\r\n\r\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2aacd8d9497eb3078026e65eadb2d4edf3c57d5f": {
                "apm-agent-plugins/apm-reactor-plugin/src/main/java/co/elastic/apm/agent/reactor/TracedSubscriber.java": [
                    "private static <X> Function<? super Publisher<X>, ? extends Publisher<X>> co.elastic.apm.agent.reactor.TracedSubscriber<T>.wrapOperators(final Tracer tracer)",
                    "public CoreSubscriber<? super X> co.elastic.apm.agent.reactor.TracedSubscriber<T>.apply(Publisher publisher, CoreSubscriber<? super X> subscriber)"
                ]
            },
            "503379cd23c641f3db77ae5c38273dcfa5eab61d": {
                "apm-agent-plugins/apm-reactor-plugin/src/main/java/co/elastic/apm/agent/reactor/TracedSubscriber.java": [
                    "private static <X> Function<? super Publisher<X>, ? extends Publisher<X>> co.elastic.apm.agent.reactor.TracedSubscriber<T>.wrapOperators(final Tracer tracer)",
                    "public CoreSubscriber<? super X> co.elastic.apm.agent.reactor.TracedSubscriber<T>.apply(Publisher publisher, CoreSubscriber<? super X> subscriber)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "37b3b7affb7bb855164142828d41f5d6315b827c",
        "previous_commit": "8d926b111d2f96c2125b2e84d3c155067573a67d",
        "date": 1537249425,
        "releases": {
            "previous": "37b3b7affb7bb855164142828d41f5d6315b827c",
            "next": "37b3b7affb7bb855164142828d41f5d6315b827c"
        },
        "commit_message": "Move tags element to be nested under Context rather than Db (#204)\n\n* Move tags element to be nested under Context rather than Db\r\n\r\n* just for updating branch\r\n\r\n* applying-review-notes\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "37b3b7affb7bb855164142828d41f5d6315b827c": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/SpanContext.java": [
                    "public boolean co.elastic.apm.impl.context.SpanContext.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)"
                ]
            },
            "8d926b111d2f96c2125b2e84d3c155067573a67d": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/context/SpanContext.java": [
                    "public boolean co.elastic.apm.impl.context.SpanContext.hasContent()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1e5777a66bcc773e055eed4eb1055cfbe483ae51",
        "previous_commit": "05f6c536de4e6c16896aa708f2f37b34e70f4148",
        "date": 1556287346,
        "releases": {
            "previous": "1e5777a66bcc773e055eed4eb1055cfbe483ae51",
            "next": "1e5777a66bcc773e055eed4eb1055cfbe483ae51"
        },
        "commit_message": "Excluded proxy classes in JaxRs and Executor instrumentation (#613)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1e5777a66bcc773e055eed4eb1055cfbe483ae51": {
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/ExecutorInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getTypeMatcher()"
                ]
            },
            "05f6c536de4e6c16896aa708f2f37b34e70f4148": {
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/ExecutorInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6580ae662e43e64baa84f2e7592181d31ffa8351",
        "previous_commit": "c46b17b9fe3d419a60b9c1371adcad10e3d6c82b",
        "date": 1689173434,
        "releases": {
            "previous": "6580ae662e43e64baa84f2e7592181d31ffa8351",
            "next": "6580ae662e43e64baa84f2e7592181d31ffa8351"
        },
        "commit_message": "Fix empty context activation behaviour (#3227)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6580ae662e43e64baa84f2e7592181d31ffa8351": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ActiveStack.java": [
                    "public ElasticContext<?> co.elastic.apm.agent.impl.ActiveStack.currentContext()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "protected ActiveStack co.elastic.apm.agent.impl.ElasticApmTracer.initialValue()"
                ]
            },
            "c46b17b9fe3d419a60b9c1371adcad10e3d6c82b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ActiveStack.java": [
                    "public ElasticContext<?> co.elastic.apm.agent.impl.ActiveStack.currentContext()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "protected ActiveStack co.elastic.apm.agent.impl.ElasticApmTracer.initialValue()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d81bb51c8c241cf40bca5404b2fda685a6874f62",
        "previous_commit": "c839d590998268c194fa249c84e6e5acc1ad239d",
        "date": 1691582535,
        "releases": {
            "previous": "d81bb51c8c241cf40bca5404b2fda685a6874f62",
            "next": "d81bb51c8c241cf40bca5404b2fda685a6874f62"
        },
        "commit_message": "Fix JVM memory metrics regression (#3279)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d81bb51c8c241cf40bca5404b2fda685a6874f62": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/JvmMemoryMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.JvmMemoryMetrics.bindTo(final MetricRegistry registry)",
                    "public double co.elastic.apm.agent.metrics.builtin.JvmMemoryMetrics.get()"
                ]
            },
            "c839d590998268c194fa249c84e6e5acc1ad239d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/JvmMemoryMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.JvmMemoryMetrics.bindTo(final MetricRegistry registry)",
                    "public double co.elastic.apm.agent.metrics.builtin.JvmMemoryMetrics.get()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2f2d27ddf03f0c334a773a76fd48a6a47c8afbe1",
        "previous_commit": "9af48ddcfb0f40bf49e32285d34a175e66d8aeac",
        "date": 1594211754,
        "releases": {
            "previous": "2f2d27ddf03f0c334a773a76fd48a6a47c8afbe1",
            "next": "2f2d27ddf03f0c334a773a76fd48a6a47c8afbe1"
        },
        "commit_message": "Avoid ThreadLocal leak in CallDepth (#1273)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2f2d27ddf03f0c334a773a76fd48a6a47c8afbe1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/CallDepth.java": [
                    "public int co.elastic.apm.agent.util.CallDepth.increment()",
                    "public int co.elastic.apm.agent.util.CallDepth.decrement()"
                ]
            },
            "9af48ddcfb0f40bf49e32285d34a175e66d8aeac": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/CallDepth.java": [
                    "public int co.elastic.apm.agent.util.CallDepth.increment()",
                    "public int co.elastic.apm.agent.util.CallDepth.decrement()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2b57f064a79cf825ef271aaf69935398a2b205c4",
        "previous_commit": "2e620b05eb5b67eefe7d60723b66bd05bc9b5d36",
        "date": 1527057711,
        "releases": {
            "previous": "2b57f064a79cf825ef271aaf69935398a2b205c4",
            "next": "2b57f064a79cf825ef271aaf69935398a2b205c4"
        },
        "commit_message": "Remove manual instrumentation (#88)\n\n* Remove ApmFilter\r\n* Remove manual spring instrumentation\r\n* Remove manual JDBC instrumentation with p6spy\r\n* Adjust documentation to javaagent\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2b57f064a79cf825ef271aaf69935398a2b205c4": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public void co.elastic.apm.jdbc.PreparedStatementInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/StatementInstrumentation.java": [
                    "public void co.elastic.apm.jdbc.StatementInstrumentation.init(ElasticApmTracer tracer)"
                ]
            },
            "2e620b05eb5b67eefe7d60723b66bd05bc9b5d36": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/PreparedStatementInstrumentation.java": [
                    "public void co.elastic.apm.jdbc.PreparedStatementInstrumentation.init(ElasticApmTracer tracer)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/StatementInstrumentation.java": [
                    "public void co.elastic.apm.jdbc.StatementInstrumentation.init(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2b273d79a71bc259294ebf1464e576069f4cc104",
        "previous_commit": "fb8eec30bfa529e73dac3651b79489ead8ce88de",
        "date": 1549292871,
        "releases": {
            "previous": "2b273d79a71bc259294ebf1464e576069f4cc104",
            "next": "2b273d79a71bc259294ebf1464e576069f4cc104"
        },
        "commit_message": "Fix currentTransaction (#475)\n\nThe assumption that the transaction is always the bottom\r\nof the activation stack is wrong\r\n\r\nAlso fixes Tomcat 7 integration test",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2b273d79a71bc259294ebf1464e576069f4cc104": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Runnable co.elastic.apm.agent.impl.ElasticApmTracer.wrapRunnable(Runnable delegate, TraceContext traceContext)",
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()"
                ]
            },
            "fb8eec30bfa529e73dac3651b79489ead8ce88de": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Runnable co.elastic.apm.agent.impl.ElasticApmTracer.wrapRunnable(Runnable delegate, TraceContext traceContext)",
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f706adc330776bdc315de34c8c7393dcead25d95",
        "previous_commit": "56afb3d86527170c152a7dcca94e9c3e5e80a460",
        "date": 1519919916,
        "releases": {
            "previous": "f706adc330776bdc315de34c8c7393dcead25d95",
            "next": "f706adc330776bdc315de34c8c7393dcead25d95"
        },
        "commit_message": "Set gzip compression level to 3 out of 9\n\nThis is the default value beats uses\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f706adc330776bdc315de34c8c7393dcead25d95": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final TransactionPayload payload)"
                ]
            },
            "56afb3d86527170c152a7dcca94e9c3e5e80a460": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.writeTo(BufferedSink sink)",
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final TransactionPayload payload)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a13845d31fa2bba01d954a272ea8bccc24d228ad",
        "previous_commit": "b242cc6e8685e2f6195c56dd13e38bdfd050eaa1",
        "date": 1678117140,
        "releases": {
            "previous": "a13845d31fa2bba01d954a272ea8bccc24d228ad",
            "next": "a13845d31fa2bba01d954a272ea8bccc24d228ad"
        },
        "commit_message": "Add tests for Security Manager (#2539)\n\n* create container for simple test apps\r\n\r\n* refactor ServiceIT + test security manager warn\r\n\r\n* reproduce one issue with SecurityManager\r\n\r\n* wip : add remote debug + better tmp files\r\n\r\n* make agent work better with security manager\r\n\r\n* make test pass again\r\n\r\n* rename test\r\n\r\n* add convenient remote debug for JVM in containers",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a13845d31fa2bba01d954a272ea8bccc24d228ad": {
                "apm-agent-common/src/main/java/co/elastic/apm/agent/common/util/SystemStandardOutputLogger.java": [
                    "private static boolean co.elastic.apm.agent.common.util.SystemStandardOutputLogger.isDisabledThroughConfiguration()",
                    "public Boolean co.elastic.apm.agent.common.util.SystemStandardOutputLogger.run()"
                ]
            },
            "b242cc6e8685e2f6195c56dd13e38bdfd050eaa1": {
                "apm-agent-common/src/main/java/co/elastic/apm/agent/common/util/SystemStandardOutputLogger.java": [
                    "private static boolean co.elastic.apm.agent.common.util.SystemStandardOutputLogger.isDisabledThroughConfiguration()",
                    "public Boolean co.elastic.apm.agent.common.util.SystemStandardOutputLogger.run()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "acc0bdab9fbcd9e13ac5737761b5631ee73cadc9",
        "previous_commit": "42a99c2d67e862d5c2bf6abdb7544fb9317df59f",
        "date": 1587117164,
        "releases": {
            "previous": "acc0bdab9fbcd9e13ac5737761b5631ee73cadc9",
            "next": "acc0bdab9fbcd9e13ac5737761b5631ee73cadc9"
        },
        "commit_message": "Fix request body recycling (#1145)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "acc0bdab9fbcd9e13ac5737761b5631ee73cadc9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java": [
                    "public void co.elastic.apm.agent.impl.context.Request.resetState()",
                    "public void co.elastic.apm.agent.impl.context.Request.copyFrom(Request other)"
                ]
            },
            "42a99c2d67e862d5c2bf6abdb7544fb9317df59f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java": [
                    "public void co.elastic.apm.agent.impl.context.Request.resetState()",
                    "public void co.elastic.apm.agent.impl.context.Request.copyFrom(Request other)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "408489e89964222557fa907be57df1efab8ccfbd",
        "previous_commit": "0c1742419a386e04ffbf1f6b4e2006e6d01e9085",
        "date": 1565254094,
        "releases": {
            "previous": "408489e89964222557fa907be57df1efab8ccfbd",
            "next": "408489e89964222557fa907be57df1efab8ccfbd"
        },
        "commit_message": "Disabling Log correlation when agent is inactive (#787)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "408489e89964222557fa907be57df1efab8ccfbd": {
                "apm-agent-plugins/apm-slf4j-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java": [
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.afterDeactivate(TraceContextHolder<?> deactivatedContext)",
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.beforeActivate(TraceContextHolder<?> context)"
                ]
            },
            "0c1742419a386e04ffbf1f6b4e2006e6d01e9085": {
                "apm-agent-plugins/apm-slf4j-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java": [
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.afterDeactivate(TraceContextHolder<?> deactivatedContext)",
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.beforeActivate(TraceContextHolder<?> context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "77fc599fdb7df5a00dcae87b583d26a356c2efe5",
        "previous_commit": "acd372de2724a51692a6a495e64ed2444f464548",
        "date": 1594102236,
        "releases": {
            "previous": "77fc599fdb7df5a00dcae87b583d26a356c2efe5",
            "next": "77fc599fdb7df5a00dcae87b583d26a356c2efe5"
        },
        "commit_message": "Issue 575 heap pool memory metrics (#1228)\n\nadd heap memory pools metrics\r\n\r\nCo-authored-by: kananindzya <kananindzya@gmail.com>\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "77fc599fdb7df5a00dcae87b583d26a356c2efe5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/JvmMemoryMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.JvmMemoryMetrics.bindTo(final MetricRegistry registry)",
                    "public double co.elastic.apm.agent.metrics.builtin.JvmMemoryMetrics.get()"
                ]
            },
            "acd372de2724a51692a6a495e64ed2444f464548": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/JvmMemoryMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.JvmMemoryMetrics.bindTo(final MetricRegistry registry)",
                    "public double co.elastic.apm.agent.metrics.builtin.JvmMemoryMetrics.get()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "097a2aa9fa21a79a198e0b6977b0b9ce78d8b446",
        "previous_commit": "3c1c89b388de99d2a05cdc7eb306f3455757fc6b",
        "date": 1670410629,
        "releases": {
            "previous": "097a2aa9fa21a79a198e0b6977b0b9ce78d8b446",
            "next": "097a2aa9fa21a79a198e0b6977b0b9ce78d8b446"
        },
        "commit_message": "Change to DEBUG (from INFO) 'Not re-registering MeterRegistry ...' (#2914)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "097a2aa9fa21a79a198e0b6977b0b9ce78d8b446": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMetricsReporter.java": [
                    "public void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.addConfig(final MeterRegistry meterRegistry, final SimpleConfig config)",
                    "void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.registerMeterRegistry(MeterRegistry meterRegistry)"
                ]
            },
            "3c1c89b388de99d2a05cdc7eb306f3455757fc6b": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMetricsReporter.java": [
                    "public void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.addConfig(final MeterRegistry meterRegistry, final SimpleConfig config)",
                    "void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.registerMeterRegistry(MeterRegistry meterRegistry)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "be93978c17099eb6bdab8dc64c4b96b44748ce6b",
        "previous_commit": "eebaa2747d2595606ec2bd9b358f85b24a2aebaf",
        "date": 1677595846,
        "releases": {
            "previous": "be93978c17099eb6bdab8dc64c4b96b44748ce6b",
            "next": "be93978c17099eb6bdab8dc64c4b96b44748ce6b"
        },
        "commit_message": "Added OpenTelemetry Metrics API bridge and instrumentation (#3014)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "be93978c17099eb6bdab8dc64c4b96b44748ce6b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/classloading/IndyPluginClassLoader.java": [
                    "private static ClassLoader co.elastic.apm.agent.bci.classloading.IndyPluginClassLoader.getParent(@Nullable ClassLoader targetClassLoader, ClassLoader agentClassLoader)"
                ],
                "integration-tests/external-plugin-otel-test/external-plugin-otel-test-plugin1/src/main/java/co/elastic/apm/sample/plugin1/CreateTransactionInstrumentation.java": [
                    "public static Object co.elastic.apm.sample.plugin1.CreateTransactionInstrumentation.onEnter()"
                ]
            },
            "eebaa2747d2595606ec2bd9b358f85b24a2aebaf": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/classloading/IndyPluginClassLoader.java": [
                    "private static ClassLoader co.elastic.apm.agent.bci.classloading.IndyPluginClassLoader.getParent(@Nullable ClassLoader targetClassLoader, ClassLoader agentClassLoader)"
                ],
                "integration-tests/external-plugin-otel-test/external-plugin-otel-test-plugin1/src/main/java/co/elastic/apm/sample/plugin1/CreateTransactionInstrumentation.java": [
                    "public static Object co.elastic.apm.sample.plugin1.CreateTransactionInstrumentation.onEnter()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0445d0335de877d06fd6f4113afd51cdddd2e42a",
        "previous_commit": "3a14c5c511aa6bfbda87b77017703b1c6b8d5e56",
        "date": 1540310863,
        "releases": {
            "previous": "0445d0335de877d06fd6f4113afd51cdddd2e42a",
            "next": "0445d0335de877d06fd6f4113afd51cdddd2e42a"
        },
        "commit_message": "Make sure the disruptor events are reset (#255)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0445d0335de877d06fd6f4113afd51cdddd2e42a": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEvent.java": [
                    "public void co.elastic.apm.report.ReportingEvent.resetState()"
                ]
            },
            "3a14c5c511aa6bfbda87b77017703b1c6b8d5e56": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.IntakeV2ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEvent.java": [
                    "public void co.elastic.apm.report.ReportingEvent.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3793e3c45b96c61b9b68033d4d3c9b1c387800d6",
        "previous_commit": "27f0a99fbf8f3bafc4a4a9c892872e8906913004",
        "date": 1548055936,
        "releases": {
            "previous": "3793e3c45b96c61b9b68033d4d3c9b1c387800d6",
            "next": "3793e3c45b96c61b9b68033d4d3c9b1c387800d6"
        },
        "commit_message": "Don't trace proxies and type initializers for trace_methods (#432)\n\nAlso clarify documentation that package matching is recursive",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3793e3c45b96c61b9b68033d4d3c9b1c387800d6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/TraceMethodInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.bci.methodmatching.TraceMethodInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.bci.methodmatching.TraceMethodInstrumentation.getMethodMatcher()"
                ]
            },
            "27f0a99fbf8f3bafc4a4a9c892872e8906913004": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/TraceMethodInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.bci.methodmatching.TraceMethodInstrumentation.getTypeMatcher()",
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.bci.methodmatching.TraceMethodInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0c690978ef7506465a299ab0d3ff81d1d414e450",
        "previous_commit": "a67d352da9d251e35f25473be4c3df520da29128",
        "date": 1618401583,
        "releases": {
            "previous": "0c690978ef7506465a299ab0d3ff81d1d414e450",
            "next": "0c690978ef7506465a299ab0d3ff81d1d414e450"
        },
        "commit_message": "Migrate jaxrs plugin to indy (#1374)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0c690978ef7506465a299ab0d3ff81d1d414e450": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyPluginClassLoaderFactory.java": [
                    "public synchronized static ClassLoader co.elastic.apm.agent.bci.IndyPluginClassLoaderFactory.getOrCreatePluginClassLoader(@Nullable ClassLoader targetClassLoader, List<String> classesToInject, ClassLoader agentClassLoader, ClassFileLocator classFileLocator, ElementMatcher<? super TypeDescription> exclusionMatcher)"
                ]
            },
            "a67d352da9d251e35f25473be4c3df520da29128": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyPluginClassLoaderFactory.java": [
                    "public synchronized static ClassLoader co.elastic.apm.agent.bci.IndyPluginClassLoaderFactory.getOrCreatePluginClassLoader(@Nullable ClassLoader targetClassLoader, List<String> classesToInject, ClassLoader agentClassLoader, ClassFileLocator classFileLocator, ElementMatcher<? super TypeDescription> exclusionMatcher)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "be2352b0129a849d61f3298aa391c9c2a0069a02",
        "previous_commit": "e9525aadcfee43faaf575a46c857341602513d73",
        "date": 1643808756,
        "releases": {
            "previous": "be2352b0129a849d61f3298aa391c9c2a0069a02",
            "next": "be2352b0129a849d61f3298aa391c9c2a0069a02"
        },
        "commit_message": "Revert \"Always use JDK default URL handler (#2429)\"\n\nThis reverts commit c943c27b9e3864b06d5a1853b45b0341386d4db9.\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "be2352b0129a849d61f3298aa391c9c2a0069a02": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/CloudMetadataProvider.java": [
                    "private static String co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.executeRequest(String url, String method, @Nullable Map<String, String> headers, int queryTimeoutMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private void co.elastic.apm.agent.report.ApmServerClient.setServerUrls(List<URL> serverUrls)"
                ]
            },
            "e9525aadcfee43faaf575a46c857341602513d73": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/CloudMetadataProvider.java": [
                    "private static String co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.executeRequest(String url, String method, @Nullable Map<String, String> headers, int queryTimeoutMs)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private void co.elastic.apm.agent.report.ApmServerClient.setServerUrls(List<URL> serverUrls)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5684e98d5b2dcab125c74815bd6a9325560d46e9",
        "previous_commit": "10ee22038d398b28ca82e6901eff13d312cff430",
        "date": 1564407970,
        "releases": {
            "previous": "5684e98d5b2dcab125c74815bd6a9325560d46e9",
            "next": "5684e98d5b2dcab125c74815bd6a9325560d46e9"
        },
        "commit_message": "Automatic instrumentation should not override manual results (#752)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5684e98d5b2dcab125c74815bd6a9325560d46e9": {
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.agent.opentracing.impl.ApmSpanInstrumentation.handleSpecialTransactionTag(Transaction transaction, String key, Object value)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.doOnAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)"
                ]
            },
            "10ee22038d398b28ca82e6901eff13d312cff430": {
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.agent.opentracing.impl.ApmSpanInstrumentation.handleSpecialTransactionTag(Transaction transaction, String key, Object value)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.doOnAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a7e1c25af8813c81f0593b196dcf96eb54a6cfe8",
        "previous_commit": "7205a17d37ec3691db661dde17f7ae6e3e1b81ef",
        "date": 1613395704,
        "releases": {
            "previous": "a7e1c25af8813c81f0593b196dcf96eb54a6cfe8",
            "next": "a7e1c25af8813c81f0593b196dcf96eb54a6cfe8"
        },
        "commit_message": "Flush metrics on shutdown (#1658)\n\nthis is especially important for counters as the counts that were accumulated between the last report and the shutdown would otherwise get lost",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a7e1c25af8813c81f0593b196dcf96eb54a6cfe8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.stop()"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.stop()"
                ]
            },
            "7205a17d37ec3691db661dde17f7ae6e3e1b81ef": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.stop()"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.stop()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1c6a841f54cf5ff5ca401d0be6fa9cc80e842857",
        "previous_commit": "7637d933f3db37dba101fd3592d3bc1d529436c6",
        "date": 1675774626,
        "releases": {
            "previous": "1c6a841f54cf5ff5ca401d0be6fa9cc80e842857",
            "next": "1c6a841f54cf5ff5ca401d0be6fa9cc80e842857"
        },
        "commit_message": "Fix incorrect parent/child relationship in inferred span (#2686)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1c6a841f54cf5ff5ca401d0be6fa9cc80e842857": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "protected Span co.elastic.apm.agent.profiler.CallTree.asSpan(Root root, TraceContext parentContext)",
                    "public void co.elastic.apm.agent.profiler.CallTree.addStackTrace(ElasticApmTracer tracer, List<StackFrame> stackTrace, long nanoTime, ObjectPool<CallTree> callTreePool, long minDurationNs)"
                ]
            },
            "7637d933f3db37dba101fd3592d3bc1d529436c6": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "protected Span co.elastic.apm.agent.profiler.CallTree.asSpan(Root root, TraceContext parentContext)",
                    "public void co.elastic.apm.agent.profiler.CallTree.addStackTrace(ElasticApmTracer tracer, List<StackFrame> stackTrace, long nanoTime, ObjectPool<CallTree> callTreePool, long minDurationNs)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "05efbe97a7aa65ac5128c93b4ee64b4bdbfa5af0",
        "previous_commit": "12ca9877c58494989d09b9ee232fbaa080f05ea2",
        "date": 1678453528,
        "releases": {
            "previous": "05efbe97a7aa65ac5128c93b4ee64b4bdbfa5af0",
            "next": "05efbe97a7aa65ac5128c93b4ee64b4bdbfa5af0"
        },
        "commit_message": "Introduce tracer API within isolated module. (#3043)\n\n* Introduce minimal, zero-dependency tracer API within isolated module.\r\n\r\n* Update CHANGELOG.asciidoc\r\n\r\nCo-authored-by: SylvainJuge <syl20j@gmail.com>\r\n\r\n* Replace Outcome interface with outcome enumeration.\r\n\r\n* Throw exception on asking for configuration that is not available.\r\n\r\n* test non-null configuration\r\n\r\n* Correct import symbols for open tracing bridge test.\r\n\r\n---------\r\n\r\nCo-authored-by: SylvainJuge <syl20j@gmail.com>\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "05efbe97a7aa65ac5128c93b4ee64b4bdbfa5af0": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <T> T co.elastic.apm.agent.impl.ElasticApmTracer.getConfig(Class<T> configProvider)",
                    "public Scope co.elastic.apm.agent.impl.ElasticApmTracer.activateInScope(final ElasticContext<?> context)"
                ]
            },
            "12ca9877c58494989d09b9ee232fbaa080f05ea2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Scope co.elastic.apm.agent.impl.ElasticApmTracer.activateInScope(final ElasticContext<?> context)",
                    "public <T extends ConfigurationOptionProvider> T co.elastic.apm.agent.impl.ElasticApmTracer.getConfig(Class<T> configProvider)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "168b714a98338c47b4500c7ce0f60c77a6c6fc35",
        "previous_commit": "1da38e642e779f515aa862f2bfc46d4398549050",
        "date": 1632997121,
        "releases": {
            "previous": "168b714a98338c47b4500c7ce0f60c77a6c6fc35",
            "next": "168b714a98338c47b4500c7ce0f60c77a6c6fc35"
        },
        "commit_message": "Fix concurrency issues with ensureInstrumented (#2150)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "168b714a98338c47b4500c7ce0f60c77a6c6fc35": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "private static Set<Collection<Class<? extends ElasticApmInstrumentation>>> co.elastic.apm.agent.bci.ElasticApmAgent.getOrCreate(Class<?> classToInstrument)"
                ]
            },
            "1da38e642e779f515aa862f2bfc46d4398549050": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)",
                    "private static Set<Collection<Class<? extends ElasticApmInstrumentation>>> co.elastic.apm.agent.bci.ElasticApmAgent.getOrCreate(Class<?> classToInstrument)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "34869923bd9ce92005844b09e59c3e7290733623",
        "previous_commit": "979489041b13d014fbe1cf6caab708ec9805e02a",
        "date": 1639974542,
        "releases": {
            "previous": "34869923bd9ce92005844b09e59c3e7290733623",
            "next": "34869923bd9ce92005844b09e59c3e7290733623"
        },
        "commit_message": "Attacher CLI docs and logging changes (#2310)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "34869923bd9ce92005844b09e59c3e7290733623": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "static Arguments co.elastic.apm.attach.AgentAttacher.parse(String... args)",
                    "private void co.elastic.apm.attach.AgentAttacher.onJvmStart(JvmInfo jvmInfo, DiscoveryRules discoveryRules)"
                ]
            },
            "979489041b13d014fbe1cf6caab708ec9805e02a": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "static Arguments co.elastic.apm.attach.AgentAttacher.parse(String... args)",
                    "private void co.elastic.apm.attach.AgentAttacher.onJvmStart(JvmInfo jvmInfo, DiscoveryRules discoveryRules)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6ad3e3ad8809beb213f83e497446227d5fa84494",
        "previous_commit": "f9f361493926366e374b07e850af7811b8311566",
        "date": 1519202042,
        "releases": {
            "previous": "6ad3e3ad8809beb213f83e497446227d5fa84494",
            "next": "6ad3e3ad8809beb213f83e497446227d5fa84494"
        },
        "commit_message": "Make RegexValidator null safe\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6ad3e3ad8809beb213f83e497446227d5fa84494": {
                "apm-agent-core/src/main/java/co/elastic/apm/configuration/validation/RegexValidator.java": [
                    "public static RegexValidator co.elastic.apm.configuration.validation.RegexValidator.of(String regex)",
                    "public void co.elastic.apm.configuration.validation.RegexValidator.assertValid(String value)"
                ]
            },
            "f9f361493926366e374b07e850af7811b8311566": {
                "apm-agent-core/src/main/java/co/elastic/apm/configuration/validation/RegexValidator.java": [
                    "public static RegexValidator co.elastic.apm.configuration.validation.RegexValidator.of(String regex)",
                    "public void co.elastic.apm.configuration.validation.RegexValidator.assertValid(String value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d151527baeb10f2519bce2bb899d2f23c1d863c7",
        "previous_commit": "a3ef2a7db48bbd92aab4e3a174ae9c6e1c0e24ea",
        "date": 1638857731,
        "releases": {
            "previous": "d151527baeb10f2519bce2bb899d2f23c1d863c7",
            "next": "d151527baeb10f2519bce2bb899d2f23c1d863c7"
        },
        "commit_message": "Fix APM Server version parsing (#2313)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d151527baeb10f2519bce2bb899d2f23c1d863c7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.withConnection(HttpURLConnection connection)",
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.call()"
                ]
            },
            "a3ef2a7db48bbd92aab4e3a174ae9c6e1c0e24ea": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.withConnection(HttpURLConnection connection)",
                    "public Version co.elastic.apm.agent.report.ApmServerHealthChecker.call()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e1438b6cd80eb238e59929e8f175526c4c435355",
        "previous_commit": "8068c1ff86420c7f296f680f6e5281d796f0313e",
        "date": 1597924276,
        "releases": {
            "previous": "e1438b6cd80eb238e59929e8f175526c4c435355",
            "next": "e1438b6cd80eb238e59929e8f175526c4c435355"
        },
        "commit_message": "Avoid resolving TypeDescriptions when validating advice methods\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e1438b6cd80eb238e59929e8f175526c4c435355": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdvice(Class<?> adviceClass)",
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdviceReturnAndParameterTypes(MethodDescription.InDefinedShape advice)"
                ]
            },
            "8068c1ff86420c7f296f680f6e5281d796f0313e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdvice(Class<?> adviceClass)",
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdviceReturnAndParameterTypes(MethodDescription.InDefinedShape advice)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5f3a4f951388cb27c0adfdbfbc9451b804d2b306",
        "previous_commit": "110da2a856a650225ed548af2563798cd23a7870",
        "date": 1587392926,
        "releases": {
            "previous": "5f3a4f951388cb27c0adfdbfbc9451b804d2b306",
            "next": "5f3a4f951388cb27c0adfdbfbc9451b804d2b306"
        },
        "commit_message": "Remove calls to Statement.getUpdateCount (#1147)\n\nRemove calls to getUpdateCount",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5f3a4f951388cb27c0adfdbfbc9451b804d2b306": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.This Statement statement, @Advice.Enter @Nullable Span span, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "public void co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.clearInternalStorage()"
                ]
            },
            "110da2a856a650225ed548af2563798cd23a7870": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static void co.elastic.apm.agent.jdbc.StatementInstrumentation.onAfterExecute(@Advice.This Statement statement, @Advice.Enter @Nullable Span span, @Advice.Thrown @Nullable Throwable t)"
                ],
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "public void co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.clearInternalStorage()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "38eebc516d90ece0b8c2da9850ffdc9758253faa",
        "previous_commit": "dcae0ff7cfe9c1ccce11b0a4102dbab4b7c8f8be",
        "date": 1541489245,
        "releases": {
            "previous": "38eebc516d90ece0b8c2da9850ffdc9758253faa",
            "next": "38eebc516d90ece0b8c2da9850ffdc9758253faa"
        },
        "commit_message": "Change APM Server check from OkHttp to URLConnection (#284)\n\ncloses #272",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "38eebc516d90ece0b8c2da9850ffdc9758253faa": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHealthChecker.java": [
                    "public void co.elastic.apm.report.ApmServerHealthChecker.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ]
            },
            "dcae0ff7cfe9c1ccce11b0a4102dbab4b7c8f8be": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHealthChecker.java": [
                    "public void co.elastic.apm.report.ApmServerHealthChecker.run()"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "public Reporter co.elastic.apm.report.ReporterFactory.createReporter(ConfigurationRegistry configurationRegistry, @Nullable String frameworkName, @Nullable String frameworkVersion)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "87dc99a5d00ba2a187e0a0e04569810b6014f4a9",
        "previous_commit": "3f81f6f2e30ce5b61ce4a6af1c24949236393f86",
        "date": 1636398323,
        "releases": {
            "previous": "87dc99a5d00ba2a187e0a0e04569810b6014f4a9",
            "next": "87dc99a5d00ba2a187e0a0e04569810b6014f4a9"
        },
        "commit_message": "Refactor ResourceExtractionUtil to use NIO (#2240)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "87dc99a5d00ba2a187e0a0e04569810b6014f4a9": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static File co.elastic.apm.attach.ElasticApmAttacher.getAgentJarFile()"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java": [
                    "private static void co.elastic.apm.agent.profiler.asyncprofiler.AsyncProfiler.loadNativeLibrary(String libraryDirectory)"
                ]
            },
            "3f81f6f2e30ce5b61ce4a6af1c24949236393f86": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static File co.elastic.apm.attach.ElasticApmAttacher.getAgentJarFile()"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java": [
                    "private static void co.elastic.apm.agent.profiler.asyncprofiler.AsyncProfiler.loadNativeLibrary(String libraryDirectory)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c609815ea80cc56733e638df8c97cd20249dad4d",
        "previous_commit": "883b6564b12fadfd5463af10a45192e00df18b17",
        "date": 1601452372,
        "releases": {
            "previous": "c609815ea80cc56733e638df8c97cd20249dad4d",
            "next": "c609815ea80cc56733e638df8c97cd20249dad4d"
        },
        "commit_message": "Enabling disabled_metrics config for Micrometer (#1421)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c609815ea80cc56733e638df8c97cd20249dad4d": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMetricsReporter.java": [
                    "public void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.run()",
                    "public void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.accept(Meter meter)"
                ]
            },
            "883b6564b12fadfd5463af10a45192e00df18b17": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMetricsReporter.java": [
                    "public void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.run()",
                    "public void co.elastic.apm.agent.micrometer.MicrometerMetricsReporter.accept(Meter meter)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "bc90b354227a7cfecd022fd33ac9f4ec0619dcd6",
        "previous_commit": "7a6b7c238a70f075793b89811e7dc244a4885033",
        "date": 1532340307,
        "releases": {
            "previous": "bc90b354227a7cfecd022fd33ac9f4ec0619dcd6",
            "next": "bc90b354227a7cfecd022fd33ac9f4ec0619dcd6"
        },
        "commit_message": "Add AbstractSpan#captureException (#135)\n\nLinking an exception to a Transaction or Span should be explicit\r\ninstead of implicitly linking it to the active span.\r\n\r\n`ElasticApm.captureException` is deprecated now.\r\nUse `ElasticApm.currentSpan().captureException(exception)` instead.",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "bc90b354227a7cfecd022fd33ac9f4ec0619dcd6": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(@Nullable Throwable e)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Exception exception, boolean committed, int status, String method, Map<String, String[]> parameterMap)"
                ]
            },
            "7a6b7c238a70f075793b89811e7dc244a4885033": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(@Nullable Throwable e)"
                ],
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Exception exception, boolean committed, int status, String method, Map<String, String[]> parameterMap)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f49486c5fa62f77700bb1df87e4941681742e318",
        "previous_commit": "8a8ac964371424e9cb82035e9557f3796bf296be",
        "date": 1588254246,
        "releases": {
            "previous": "f49486c5fa62f77700bb1df87e4941681742e318",
            "next": "f49486c5fa62f77700bb1df87e4941681742e318"
        },
        "commit_message": "Add log level `OFF` (#1160)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f49486c5fa62f77700bb1df87e4941681742e318": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "private static void co.elastic.apm.agent.logging.LoggingConfiguration.setLogLevel(@Nullable String level)",
                    "public static void co.elastic.apm.agent.logging.LoggingConfiguration.init(List<ConfigurationSource> sources)"
                ]
            },
            "8a8ac964371424e9cb82035e9557f3796bf296be": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "private static void co.elastic.apm.agent.logging.LoggingConfiguration.setLogLevel(@Nullable String level)",
                    "public static void co.elastic.apm.agent.logging.LoggingConfiguration.init(List<ConfigurationSource> sources)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9a4e4aff0eef05b483a525714d38a914286c7651",
        "previous_commit": "c49d8b1c07b1deddc55ea30cad37323f7768ca4c",
        "date": 1635195098,
        "releases": {
            "previous": "9a4e4aff0eef05b483a525714d38a914286c7651",
            "next": "9a4e4aff0eef05b483a525714d38a914286c7651"
        },
        "commit_message": "Fix Webflux/Reactor regression in 1.26.0 (#2207)\n\n* fix missing module + class cast exception\r\n\r\n* prevent NPE\r\n\r\n* add packaging test to ensure that all plugins are properly added as dependencies of apm-agent module\r\n\r\n* reorder file once we've checked it\r\n\r\n* fix readme + header\r\n\r\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9a4e4aff0eef05b483a525714d38a914286c7651": {
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "private static void co.elastic.apm.agent.springwebflux.WebfluxHelper.fillRequest(Transaction transaction, ServerWebExchange exchange)",
                    "private static <T> Mono<T> co.elastic.apm.agent.springwebflux.WebfluxHelper.doWrap(Mono<T> mono, final Transaction transaction, final ServerWebExchange exchange, final String description)"
                ]
            },
            "c49d8b1c07b1deddc55ea30cad37323f7768ca4c": {
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "private static void co.elastic.apm.agent.springwebflux.WebfluxHelper.fillRequest(Transaction transaction, ServerWebExchange exchange)",
                    "private static <T> Mono<T> co.elastic.apm.agent.springwebflux.WebfluxHelper.doWrap(Mono<T> mono, final Transaction transaction, final ServerWebExchange exchange, final String description)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b869f096d01bcef69bd63c9af2d2600c259a07ac",
        "previous_commit": "d2918bb0d41fbf14c48e7aed64e11a41fdfa544e",
        "date": 1521352180,
        "releases": {
            "previous": "b869f096d01bcef69bd63c9af2d2600c259a07ac",
            "next": "b869f096d01bcef69bd63c9af2d2600c259a07ac"
        },
        "commit_message": "Use NullAway to prevent NPEs\n\n(closes #7)\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b869f096d01bcef69bd63c9af2d2600c259a07ac": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/ProcessFactory.java": [
                    "public ProcessInfo co.elastic.apm.impl.payload.ForJava9CompatibleVM.getProcessInformation()",
                    "public ProcessInfo getProcessInformation()"
                ]
            },
            "d2918bb0d41fbf14c48e7aed64e11a41fdfa544e": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/ProcessFactory.java": [
                    "public ProcessInfo co.elastic.apm.impl.payload.ForJava9CompatibleVM.getProcessInformation()",
                    "public ProcessInfo getProcessInformation()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1cbed060b6fcd2bdd3f77f93264f7123b012085f",
        "previous_commit": "ea984c7e342c6177ef0a35749d4c77c2d507c1e9",
        "date": 1606245559,
        "releases": {
            "previous": "1cbed060b6fcd2bdd3f77f93264f7123b012085f",
            "next": "1cbed060b6fcd2bdd3f77f93264f7123b012085f"
        },
        "commit_message": "remove useless allocation in TraceState.copyOf() (#1508)\n\n* use full header to minimize allocation",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1cbed060b6fcd2bdd3f77f93264f7123b012085f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asRootSpan(Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceState.copyFrom(TraceState other)"
                ]
            },
            "ea984c7e342c6177ef0a35749d4c77c2d507c1e9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asRootSpan(Sampler sampler)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceState.copyFrom(TraceState other)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d5aa4772c6cfa7b4c1fe40558415fd3d73959f6c",
        "previous_commit": "aa4dfd877816f0593601e5070b1bac218c48de69",
        "date": 1622109121,
        "releases": {
            "previous": "d5aa4772c6cfa7b4c1fe40558415fd3d73959f6c",
            "next": "d5aa4772c6cfa7b4c1fe40558415fd3d73959f6c"
        },
        "commit_message": "Check minimal JFR size before parsing (#1827)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d5aa4772c6cfa7b4c1fe40558415fd3d73959f6c": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java": [
                    "public static AsyncProfiler co.elastic.apm.agent.profiler.asyncprofiler.AsyncProfiler.getInstance(String profilerLibDirectory)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/JfrParser.java": [
                    "public void co.elastic.apm.agent.profiler.asyncprofiler.JfrParser.parse(File file, List<WildcardMatcher> excludedClasses, List<WildcardMatcher> includedClasses)"
                ]
            },
            "aa4dfd877816f0593601e5070b1bac218c48de69": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java": [
                    "public static AsyncProfiler co.elastic.apm.agent.profiler.asyncprofiler.AsyncProfiler.getInstance(String profilerLibDirectory)"
                ],
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/JfrParser.java": [
                    "public void co.elastic.apm.agent.profiler.asyncprofiler.JfrParser.parse(File file, List<WildcardMatcher> excludedClasses, List<WildcardMatcher> includedClasses)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a9005e1a1b5bedaf50db5192cfbadd770e4dfe16",
        "previous_commit": "b09e71180b1c92117eec0d5f52e08fa4f8180679",
        "date": 1583776909,
        "releases": {
            "previous": "a9005e1a1b5bedaf50db5192cfbadd770e4dfe16",
            "next": "a9005e1a1b5bedaf50db5192cfbadd770e4dfe16"
        },
        "commit_message": "added preventing the shade plugin from relocating org.slf4j.Logger to *.shaded.slf4j.Logger  (#1049)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a9005e1a1b5bedaf50db5192cfbadd770e4dfe16": {
                "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/Log4jLoggingInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.error.logging.Log4jLoggingInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/Slf4jLoggingInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.error.logging.Slf4jLoggingInstrumentation.getTypeMatcher()"
                ]
            },
            "b09e71180b1c92117eec0d5f52e08fa4f8180679": {
                "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/Log4jLoggingInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.error.logging.Log4jLoggingInstrumentation.getTypeMatcher()"
                ],
                "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/Slf4jLoggingInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.error.logging.Slf4jLoggingInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "817a36d96e43fffb53414cb5d0c673d4606a7a67",
        "previous_commit": "44da292583abedc19ba466d5ef29a251302e7008",
        "date": 1551270652,
        "releases": {
            "previous": "817a36d96e43fffb53414cb5d0c673d4606a7a67",
            "next": "817a36d96e43fffb53414cb5d0c673d4606a7a67"
        },
        "commit_message": "Enable class hierarchy scan for JAX-RS @Path annotation (#493)\n\nCan be disabled via enable_jaxrs_annotation_inheritance=false to improve startup performance",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "817a36d96e43fffb53414cb5d0c673d4606a7a67": {
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getTypeMatcher()",
                    "public void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.init(ElasticApmTracer tracer)"
                ]
            },
            "44da292583abedc19ba466d5ef29a251302e7008": {
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getTypeMatcher()",
                    "public void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.init(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "46b943b8c7950c823aab60233a2e60dc356d790d",
        "previous_commit": "c3d25c51018a566b3314192d7c6db5fafc46d3a8",
        "date": 1520877419,
        "releases": {
            "previous": "46b943b8c7950c823aab60233a2e60dc356d790d",
            "next": "46b943b8c7950c823aab60233a2e60dc356d790d"
        },
        "commit_message": "Proper registration of a statically available tracer\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "46b943b8c7950c823aab60233a2e60dc356d790d": {
                "apm-agent-api/src/main/java/co/elastic/apm/api/ElasticApm.java": [
                    "void co.elastic.apm.api.ElasticApm.register(Tracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.register()"
                ]
            },
            "c3d25c51018a566b3314192d7c6db5fafc46d3a8": {
                "apm-agent-api/src/main/java/co/elastic/apm/api/ElasticApm.java": [
                    "public static void co.elastic.apm.api.ElasticApm.register(Tracer tracer)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.register()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "836d29c8ce75a8685d314d94e9c47c23d847a510",
        "previous_commit": "12cef73ad70c1c3490beb8e5728184cc78288630",
        "date": 1538637920,
        "releases": {
            "previous": "836d29c8ce75a8685d314d94e9c47c23d847a510",
            "next": "836d29c8ce75a8685d314d94e9c47c23d847a510"
        },
        "commit_message": "Re-use User-Agent across calls\n\neach call to getUserAgent() causes disk I/O\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "836d29c8ce75a8685d314d94e9c47c23d847a510": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "OkHttpClient co.elastic.apm.report.ReporterFactory.getOkHttpClient(ReporterConfiguration reporterConfiguration)",
                    "public Response co.elastic.apm.report.ReporterFactory.intercept(Chain chain)"
                ]
            },
            "12cef73ad70c1c3490beb8e5728184cc78288630": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReporterFactory.java": [
                    "OkHttpClient co.elastic.apm.report.ReporterFactory.getOkHttpClient(ReporterConfiguration reporterConfiguration)",
                    "public Response co.elastic.apm.report.ReporterFactory.intercept(Chain chain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f7ab87dc5251a4f47bfd57992c2ff0527a053ccb",
        "previous_commit": "2f74b21657763c1035dd74563e99acf3f1409641",
        "date": 1589885573,
        "releases": {
            "previous": "f7ab87dc5251a4f47bfd57992c2ff0527a053ccb",
            "next": "f7ab87dc5251a4f47bfd57992c2ff0527a053ccb"
        },
        "commit_message": "Adding class exclusion from instrumentation config (#1187)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f7ab87dc5251a4f47bfd57992c2ff0527a053ccb": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription target)"
                ]
            },
            "2f74b21657763c1035dd74563e99acf3f1409641": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)",
                    "public boolean co.elastic.apm.agent.bci.ElasticApmAgent.matches(TypeDescription target)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d38fd8f8c022c5d7074870911d3c758eaf7af8a6",
        "previous_commit": "83167b5d3f319e719539e902e755f0046e9120e7",
        "date": 1522133582,
        "releases": {
            "previous": "d38fd8f8c022c5d7074870911d3c758eaf7af8a6",
            "next": "d38fd8f8c022c5d7074870911d3c758eaf7af8a6"
        },
        "commit_message": "Use sequential Span ids\n\nAPM server currently can't cope with Span ids > 1,000,000\nSo instead of setting it to a random long, use a transaction-\nscoped counter to assign sequential span ids\n\nsee https://github.com/elastic/apm-server/issues/775\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d38fd8f8c022c5d7074870911d3c758eaf7af8a6": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span span, long nanoTime, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()"
                ]
            },
            "83167b5d3f319e719539e902e755f0046e9120e7": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(ElasticApmTracer tracer, Transaction transaction, @Nullable Span span, long nanoTime, boolean dropped)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6d48460895845a86413680a561aca9f8aed991bb",
        "previous_commit": "cb07ab53a5aecabd9e834f405392c70dc27d0f0c",
        "date": 1634564253,
        "releases": {
            "previous": "6d48460895845a86413680a561aca9f8aed991bb",
            "next": "6d48460895845a86413680a561aca9f8aed991bb"
        },
        "commit_message": "Drop transaction metrics (#2194)\n\ntransaction.duration.sum.us, transaction.duration.count and transaction.breakdown.count should no longer be recorded",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6d48460895845a86413680a561aca9f8aed991bb": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.trackMetrics()"
                ]
            },
            "cb07ab53a5aecabd9e834f405392c70dc27d0f0c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "private void co.elastic.apm.agent.impl.transaction.Transaction.trackMetrics()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f17e701a0acf2355ed2afe6f8257453ca3563d60",
        "previous_commit": "7c63ade90ec53806c4f5037271657eb6f0205039",
        "date": 1718038492,
        "releases": {
            "previous": "f17e701a0acf2355ed2afe6f8257453ca3563d60",
            "next": "f17e701a0acf2355ed2afe6f8257453ca3563d60"
        },
        "commit_message": "Warn unexpected SpanContext in otel span link (#3672)\n\n* add warning with non elastic spancontext\n\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f17e701a0acf2355ed2afe6f8257453ca3563d60": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpanBuilder.java": [
                    "public SpanBuilder co.elastic.apm.agent.opentelemetry.tracing.OTelSpanBuilder.addLink(SpanContext spanContext)"
                ]
            },
            "7c63ade90ec53806c4f5037271657eb6f0205039": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpanBuilder.java": [
                    "public SpanBuilder co.elastic.apm.agent.opentelemetry.tracing.OTelSpanBuilder.addLink(SpanContext spanContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3c5a14c77100561413914ce3e4c3ae03a9f4c8b1",
        "previous_commit": "81688c7f993bd460f87d6aa3ccfe18f39f393ffc",
        "date": 1608140307,
        "releases": {
            "previous": "3c5a14c77100561413914ce3e4c3ae03a9f4c8b1",
            "next": "3c5a14c77100561413914ce3e4c3ae03a9f4c8b1"
        },
        "commit_message": "Fix serializing all stack trace frames (#1571)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3c5a14c77100561413914ce3e4c3ae03a9f4c8b1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStackTraceArrayElements(StackTraceElement[] stacktrace)"
                ]
            },
            "81688c7f993bd460f87d6aa3ccfe18f39f393ffc": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStackTraceArrayElements(StackTraceElement[] stacktrace)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c99e0826f0127defd73069513003599e1500d259",
        "previous_commit": "2870994fd95d8e84362e108f41dffac337f299db",
        "date": 1584262721,
        "releases": {
            "previous": "c99e0826f0127defd73069513003599e1500d259",
            "next": "c99e0826f0127defd73069513003599e1500d259"
        },
        "commit_message": "Enhance JDBC connection string parsing for multiple hosts (#1082)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c99e0826f0127defd73069513003599e1500d259": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/ConnectionMetaData.java": [
                    "public static ConnectionMetaData co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.create(String connectionUrl, String user)"
                ]
            },
            "2870994fd95d8e84362e108f41dffac337f299db": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/ConnectionMetaData.java": [
                    "public static ConnectionMetaData co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.create(String connectionUrl, String user)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b2fe33ae13b19133d933185aa60783063757cd4f",
        "previous_commit": "f446eab1d22f1f188bef250b6ef694a64f4e0b71",
        "date": 1553001198,
        "releases": {
            "previous": "b2fe33ae13b19133d933185aa60783063757cd4f",
            "next": "b2fe33ae13b19133d933185aa60783063757cd4f"
        },
        "commit_message": "Override span.id instead of removing and adding (#530)\n\nEach remove or add operation results in duplicating the MDC map\r\nTherefore, this change minimizes allocations while retaining the same semantics",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b2fe33ae13b19133d933185aa60783063757cd4f": {
                "apm-agent-plugins/apm-slf4j-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java": [
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.afterDeactivate()"
                ]
            },
            "f446eab1d22f1f188bef250b6ef694a64f4e0b71": {
                "apm-agent-plugins/apm-slf4j-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java": [
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.afterDeactivate()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4976576c591e3699dfc271ca7a1ede9d463060aa",
        "previous_commit": "166401cd8270f128dcd69598157d140a01075f92",
        "date": 1690363043,
        "releases": {
            "previous": "4976576c591e3699dfc271ca7a1ede9d463060aa",
            "next": "4976576c591e3699dfc271ca7a1ede9d463060aa"
        },
        "commit_message": "add trace level logs for span compressed spans (#3228)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4976576c591e3699dfc271ca7a1ede9d463060aa": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()"
                ]
            },
            "166401cd8270f128dcd69598157d140a01075f92": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ce271a8d1288160dd7ca96ea8f4c69924f4740b1",
        "previous_commit": "cb34d608ab876432b8a077cbb2d43decc7428584",
        "date": 1641733639,
        "releases": {
            "previous": "ce271a8d1288160dd7ca96ea8f4c69924f4740b1",
            "next": "ce271a8d1288160dd7ca96ea8f4c69924f4740b1"
        },
        "commit_message": "Fix dynamic log_level configuration (#2384)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ce271a8d1288160dd7ca96ea8f4c69924f4740b1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "private static void co.elastic.apm.agent.logging.LoggingConfiguration.setLogLevel(@Nullable LogLevel level)"
                ]
            },
            "cb34d608ab876432b8a077cbb2d43decc7428584": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "private static void co.elastic.apm.agent.logging.LoggingConfiguration.setLogLevel(@Nullable LogLevel level)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "39e6a418df8a5899de909bdf2a66b3434e1be5f3",
        "previous_commit": "a41d73e157d7c6bd7813d6e95ff3cca5806b7cfe",
        "date": 1554975913,
        "releases": {
            "previous": "39e6a418df8a5899de909bdf2a66b3434e1be5f3",
            "next": "39e6a418df8a5899de909bdf2a66b3434e1be5f3"
        },
        "commit_message": "Fixing Byte Buddy resolving error (#576)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "39e6a418df8a5899de909bdf2a66b3434e1be5f3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration)"
                ]
            },
            "a41d73e157d7c6bd7813d6e95ff3cca5806b7cfe": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4dab33c620ed943589f4a8047d4e6f51853eb902",
        "previous_commit": "7f8f6a216e8ea42041a389a8e424e4eb2fe6ee9c",
        "date": 1568094268,
        "releases": {
            "previous": "4dab33c620ed943589f4a8047d4e6f51853eb902",
            "next": "4dab33c620ed943589f4a8047d4e6f51853eb902"
        },
        "commit_message": "Do not throw Exception from remote config poller with empty server_urls (#830)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4dab33c620ed943589f4a8047d4e6f51853eb902": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public <V> V co.elastic.apm.agent.report.ApmServerClient.execute(String path, ConnectionHandler<V> connectionHandler)"
                ]
            },
            "7f8f6a216e8ea42041a389a8e424e4eb2fe6ee9c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "public <V> V co.elastic.apm.agent.report.ApmServerClient.execute(String path, ConnectionHandler<V> connectionHandler)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d35839a8410e6c66f578190a2ccc5644876aad91",
        "previous_commit": "929805204301eb596751a69bd76db83562c9a45c",
        "date": 1535634081,
        "releases": {
            "previous": "d35839a8410e6c66f578190a2ccc5644876aad91",
            "next": "d35839a8410e6c66f578190a2ccc5644876aad91"
        },
        "commit_message": "Always serialize span count\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d35839a8410e6c66f578190a2ccc5644876aad91": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ]
            },
            "929805204301eb596751a69bd76db83562c9a45c": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "883b6564b12fadfd5463af10a45192e00df18b17",
        "previous_commit": "2d2057ffdcd4439d6ff7d78c6ec3cf4ff5d5073c",
        "date": 1601451851,
        "releases": {
            "previous": "883b6564b12fadfd5463af10a45192e00df18b17",
            "next": "883b6564b12fadfd5463af10a45192e00df18b17"
        },
        "commit_message": "fix micrometer invalid double values (#1419)\n\n* fix micrometer invalid double values",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "883b6564b12fadfd5463af10a45192e00df18b17": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            },
            "2d2057ffdcd4439d6ff7d78c6ec3cf4ff5d5073c": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6c878089d54eac85b21ef652b23947cc4a30a3e6",
        "previous_commit": "06ff9a7b9928b001171902b0e8c6ba90a50d8a12",
        "date": 1538725604,
        "releases": {
            "previous": "6c878089d54eac85b21ef652b23947cc4a30a3e6",
            "next": "6c878089d54eac85b21ef652b23947cc4a30a3e6"
        },
        "commit_message": "Update Byte Buddy to 1.9.0\n\ncloses #230\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6c878089d54eac85b21ef652b23947cc4a30a3e6": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ]
            },
            "06ff9a7b9928b001171902b0e8c6ba90a50d8a12": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation advice)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6335ba8b18edf98577cad55350f2af1e09a30984",
        "previous_commit": "2e3dfdc2de9bc5fa02f066e13d93cdcb46eeaa00",
        "date": 1666177078,
        "releases": {
            "previous": "6335ba8b18edf98577cad55350f2af1e09a30984",
            "next": "6335ba8b18edf98577cad55350f2af1e09a30984"
        },
        "commit_message": "Remove log shipper plugin (#2848)\n\n* remove log-shipper plugin\n\n* fix missing header\n\n* remove unused config option\n\n* remove non-relevant tests\n\n* update changelog\n\n* Update CHANGELOG.asciidoc\n\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\n\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6335ba8b18edf98577cad55350f2af1e09a30984": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "private List<AppenderComponentBuilder> co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.createAppenders(ConfigurationBuilder<BuiltConfiguration> builder)"
                ]
            },
            "2e3dfdc2de9bc5fa02f066e13d93cdcb46eeaa00": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "private List<AppenderComponentBuilder> co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.createAppenders(ConfigurationBuilder<BuiltConfiguration> builder)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "44da292583abedc19ba466d5ef29a251302e7008",
        "previous_commit": "d5a86e393d7553ea4620f46c6e3a0c410209caad",
        "date": 1550674874,
        "releases": {
            "previous": "44da292583abedc19ba466d5ef29a251302e7008",
            "next": "44da292583abedc19ba466d5ef29a251302e7008"
        },
        "commit_message": "Stabilizing ScopeManagementTest (#495)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "44da292583abedc19ba466d5ef29a251302e7008": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private void co.elastic.apm.agent.impl.ElasticApmTracer.assertIsActive(Object span, @Nullable Object currentlyActive)"
                ]
            },
            "d5a86e393d7553ea4620f46c6e3a0c410209caad": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private void co.elastic.apm.agent.impl.ElasticApmTracer.assertIsActive(Object span, @Nullable Object currentlyActive)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "35f13a95fef02f3daf8d9c1c2bf26b7cc8027218",
        "previous_commit": "ed3480abd5de58c9d12fc2500b1b06389c1dafec",
        "date": 1563283569,
        "releases": {
            "previous": "35f13a95fef02f3daf8d9c1c2bf26b7cc8027218",
            "next": "35f13a95fef02f3daf8d9c1c2bf26b7cc8027218"
        },
        "commit_message": "Adding debug logging for reason not capturing request body (#706)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "35f13a95fef02f3daf8d9c1c2bf26b7cc8027218": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.startCaptureBody(Transaction transaction, String method, @Nullable String contentTypeHeader)"
                ]
            },
            "ed3480abd5de58c9d12fc2500b1b06389c1dafec": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.startCaptureBody(Transaction transaction, String method, @Nullable String contentTypeHeader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "cfc4c917bf3cc7d20193ef03bb3ce24365a385e2",
        "previous_commit": "19c0d5534483248799013760313070e7c2966c09",
        "date": 1533716668,
        "releases": {
            "previous": "cfc4c917bf3cc7d20193ef03bb3ce24365a385e2",
            "next": "cfc4c917bf3cc7d20193ef03bb3ce24365a385e2"
        },
        "commit_message": "Fix double-checked locking in HelperClassManager (#154)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "cfc4c917bf3cc7d20193ef03bb3ce24365a385e2": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/HelperClassManager.java": [
                    "public T co.elastic.apm.bci.ForSingleClassLoader<T>.getForClassLoaderOfClass(Class<?> classOfTargetClassLoader)"
                ]
            },
            "19c0d5534483248799013760313070e7c2966c09": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/HelperClassManager.java": [
                    "public T co.elastic.apm.bci.ForSingleClassLoader<T>.getForClassLoaderOfClass(Class<?> classOfTargetClassLoader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d1536647758621bc7323299f64ebea70d6bb8be3",
        "previous_commit": "a3ba319da425c2eed7c58ac4249f2b0daba7df0f",
        "date": 1526283181,
        "releases": {
            "previous": "d1536647758621bc7323299f64ebea70d6bb8be3",
            "next": "d1536647758621bc7323299f64ebea70d6bb8be3"
        },
        "commit_message": "Spring instrumentation (#82)\n\nAdds an advice which automatically sets the transaction name according\r\nto the handler",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d1536647758621bc7323299f64ebea70d6bb8be3": {
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/spring/webmvc/ApmHandlerInterceptor.java": [
                    "public boolean co.elastic.apm.spring.webmvc.ApmHandlerInterceptor.preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)"
                ]
            },
            "a3ba319da425c2eed7c58ac4249f2b0daba7df0f": {
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/spring/webmvc/ApmHandlerInterceptor.java": [
                    "public boolean co.elastic.apm.spring.webmvc.ApmHandlerInterceptor.preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5fcba1047ae2ccff77d0ddb139143c2f6c8bd166",
        "previous_commit": "4f4b1c71af89fb4fd3e839b8329034e50563b1f8",
        "date": 1698140223,
        "releases": {
            "previous": "5fcba1047ae2ccff77d0ddb139143c2f6c8bd166",
            "next": "5fcba1047ae2ccff77d0ddb139143c2f6c8bd166"
        },
        "commit_message": "added capturing s3 otel attributes from lamba S3Event (#3364)\n\n* added capturing s3 otel attributes from lamba S3Event\n\n* added entry to changelog\n\n* minor polish",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5fcba1047ae2ccff77d0ddb139143c2f6c8bd166": {
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/S3TransactionHelper.java": [
                    "protected void co.elastic.apm.agent.awslambda.helper.S3TransactionHelper.setTransactionTriggerData(Transaction transaction, S3Event s3Event)"
                ]
            },
            "4f4b1c71af89fb4fd3e839b8329034e50563b1f8": {
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/S3TransactionHelper.java": [
                    "protected void co.elastic.apm.agent.awslambda.helper.S3TransactionHelper.setTransactionTriggerData(Transaction transaction, S3Event s3Event)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2e317e8bb8aeb443462b68a9f6532bf4cc788c16",
        "previous_commit": "4f7a6e21061b5bb7e730f2ece78e26ebe21f4178",
        "date": 1585653207,
        "releases": {
            "previous": "2e317e8bb8aeb443462b68a9f6532bf4cc788c16",
            "next": "2e317e8bb8aeb443462b68a9f6532bf4cc788c16"
        },
        "commit_message": "Exclude Quartz 1 from instrumentation (#1108)\n\nTo avoid IncompatibleClassChangeError: Found class org.quartz.JobExecutionContext, but interface was expected",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2e317e8bb8aeb443462b68a9f6532bf4cc788c16": {
                "apm-agent-plugins/apm-quartz-job-plugin/src/main/java/co/elastic/apm/agent/quartz/job/JobTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.quartz.job.JobTransactionNameInstrumentation.getMethodMatcher()"
                ]
            },
            "4f7a6e21061b5bb7e730f2ece78e26ebe21f4178": {
                "apm-agent-plugins/apm-quartz-job-plugin/src/main/java/co/elastic/apm/agent/quartz/job/JobTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.quartz.job.JobTransactionNameInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e9aacfdd2551dd52baae5881079c8597ea3d8cca",
        "previous_commit": "ee024d289a1523a57754c86a9bb1dc7f11b42532",
        "date": 1662978289,
        "releases": {
            "previous": "e9aacfdd2551dd52baae5881079c8597ea3d8cca",
            "next": "e9aacfdd2551dd52baae5881079c8597ea3d8cca"
        },
        "commit_message": "Fixing AWS Fargate container ID parsing (#2772)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e9aacfdd2551dd52baae5881079c8597ea3d8cca": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.metadata.SystemInfo.parseContainerId(String line)"
                ]
            },
            "ee024d289a1523a57754c86a9bb1dc7f11b42532": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.metadata.SystemInfo.parseContainerId(String line)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6187c818510882be756326c27bd095b8ae7a1563",
        "previous_commit": "b73f0346fb84b1e90dc52dde0966e136c4a3afbb",
        "date": 1532415451,
        "releases": {
            "previous": "6187c818510882be756326c27bd095b8ae7a1563",
            "next": "6187c818510882be756326c27bd095b8ae7a1563"
        },
        "commit_message": "Add support for async servlet requests\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6187c818510882be756326c27bd095b8ae7a1563": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletApiAdvice.java": [
                    "static void co.elastic.apm.servlet.ServletApiAdvice.init(ElasticApmTracer tracer)"
                ]
            },
            "b73f0346fb84b1e90dc52dde0966e136c4a3afbb": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletApiAdvice.java": [
                    "static void co.elastic.apm.servlet.ServletApiAdvice.init(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b8d4ee1e7de5420caab010cda5e50314e1522367",
        "previous_commit": "3dc03c15079772be6644ae100e31440f6b4adb07",
        "date": 1559630099,
        "releases": {
            "previous": "b8d4ee1e7de5420caab010cda5e50314e1522367",
            "next": "b8d4ee1e7de5420caab010cda5e50314e1522367"
        },
        "commit_message": "Allow log_file to be a relative path (#651)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b8d4ee1e7de5420caab010cda5e50314e1522367": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "static String co.elastic.apm.agent.logging.LoggingConfiguration.getActualLogFile(@Nullable String agentHome, String logFile)"
                ]
            },
            "3dc03c15079772be6644ae100e31440f6b4adb07": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "private static String co.elastic.apm.agent.logging.LoggingConfiguration.getActualLogFile(@Nullable String agentHome, String logFile)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "db97e7e8d79d966fe821f9d5ea2fb4f30a78fab5",
        "previous_commit": "1bb6bf5afef744560ffddad350c3dd30737cbefe",
        "date": 1642435539,
        "releases": {
            "previous": "db97e7e8d79d966fe821f9d5ea2fb4f30a78fab5",
            "next": "db97e7e8d79d966fe821f9d5ea2fb4f30a78fab5"
        },
        "commit_message": "Make `mvn test` pass on Apple silicon (M1) (#2392)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "db97e7e8d79d966fe821f9d5ea2fb4f30a78fab5": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java": [
                    "static String co.elastic.apm.agent.profiler.asyncprofiler.AsyncProfiler.getLibraryFileName()"
                ]
            },
            "1bb6bf5afef744560ffddad350c3dd30737cbefe": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java": [
                    "static String co.elastic.apm.agent.profiler.asyncprofiler.AsyncProfiler.getLibraryFileName()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "02da44abb35627aba5f7d5e194cfa2e88cc66cce",
        "previous_commit": "6236fd2f1f76b91b390c372b27f57338c4bf2c02",
        "date": 1526371005,
        "releases": {
            "previous": "02da44abb35627aba5f7d5e194cfa2e88cc66cce",
            "next": "02da44abb35627aba5f7d5e194cfa2e88cc66cce"
        },
        "commit_message": "JDBC instrumentation (#84)\n\ncloses #35",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "02da44abb35627aba5f7d5e194cfa2e88cc66cce": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/ApmJdbcEventListener.java": [
                    "public void co.elastic.apm.jdbc.ApmJdbcEventListener.onBeforeAnyExecute(StatementInformation statementInformation)"
                ]
            },
            "6236fd2f1f76b91b390c372b27f57338c4bf2c02": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/jdbc/ApmJdbcEventListener.java": [
                    "public void co.elastic.apm.jdbc.ApmJdbcEventListener.onBeforeAnyExecute(StatementInformation statementInformation)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1f1857b02849bedb248c813848ed59bcdca40d3c",
        "previous_commit": "b14f6588f6c639de29cc19c9df8731ac494a185d",
        "date": 1714657002,
        "releases": {
            "previous": "1f1857b02849bedb248c813848ed59bcdca40d3c",
            "next": "1f1857b02849bedb248c813848ed59bcdca40d3c"
        },
        "commit_message": "Universal profiling integration: Added serialization of stacktrace IDs as profiler_stack_trace_ids otel attributes (#3607)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1f1857b02849bedb248c813848ed59bcdca40d3c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ]
            },
            "b14f6588f6c639de29cc19c9df8731ac494a185d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "44bdf966aa94cc9692d57b4de9f83dbf679aee0d",
        "previous_commit": "2e54f567a923c3c08e9b513079ebc3dffa79c659",
        "date": 1519205544,
        "releases": {
            "previous": "44bdf966aa94cc9692d57b4de9f83dbf679aee0d",
            "next": "44bdf966aa94cc9692d57b4de9f83dbf679aee0d"
        },
        "commit_message": "Test ApmFilter with MockReporter\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "44bdf966aa94cc9692d57b4de9f83dbf679aee0d": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private Reporter co.elastic.apm.impl.ElasticApmTracer.createReporter(CoreConfiguration coreConfiguration, ReporterConfiguration reporterConfiguration, String frameworkName, String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/Reporter.java": []
            },
            "2e54f567a923c3c08e9b513079ebc3dffa79c659": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private Reporter co.elastic.apm.impl.ElasticApmTracer.createReporter(CoreConfiguration coreConfiguration, ReporterConfiguration reporterConfiguration, String frameworkName, String frameworkVersion)"
                ],
                "apm-agent-core/src/main/java/co/elastic/apm/report/Reporter.java": [
                    "public void co.elastic.apm.report.Reporter.report(Transaction transaction)",
                    "public int co.elastic.apm.report.Reporter.getDropped()",
                    "public void co.elastic.apm.report.Reporter.close()",
                    "public void co.elastic.apm.report.Reporter.scheduleFlush()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6f9a879631793d544f23dc37699732294b2d3e98",
        "previous_commit": "2bd8547573d7b5a46b3af1e3c4602e4fa5db9f5c",
        "date": 1688379102,
        "releases": {
            "previous": "6f9a879631793d544f23dc37699732294b2d3e98",
            "next": "6f9a879631793d544f23dc37699732294b2d3e98"
        },
        "commit_message": "Don't shutdown the logging configuration when running from test (#3215)\n\n* Don't shutdown the logging configuration when running from test\r\n\r\n* just use assertionsEnabled\r\n\r\n* also revert instanceof branch\r\n\r\n* Update apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6f9a879631793d544f23dc37699732294b2d3e98": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.stop()"
                ]
            },
            "2bd8547573d7b5a46b3af1e3c4602e4fa5db9f5c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.stop()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9575d839280b71e6ef771be45e5436d241b68c04",
        "previous_commit": "fa8427ea351fdff72e736b3a8651ed359b6fd97c",
        "date": 1674495305,
        "releases": {
            "previous": "9575d839280b71e6ef771be45e5436d241b68c04",
            "next": "9575d839280b71e6ef771be45e5436d241b68c04"
        },
        "commit_message": "Fix instrumentation for WebFlux with Spring 6.x (#2936)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9575d839280b71e6ef771be45e5436d241b68c04": {
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "private static void co.elastic.apm.agent.springwebflux.WebfluxHelper.fillResponse(Transaction transaction, ServerWebExchange exchange)"
                ]
            },
            "fa8427ea351fdff72e736b3a8651ed359b6fd97c": {
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "private static void co.elastic.apm.agent.springwebflux.WebfluxHelper.fillResponse(Transaction transaction, ServerWebExchange exchange)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "446eabae5d2e1b7532a4082adba42954b739436a",
        "previous_commit": "4c6effc2b5000773c18e6523f50bd7700f8db153",
        "date": 1534768097,
        "releases": {
            "previous": "446eabae5d2e1b7532a4082adba42954b739436a",
            "next": "446eabae5d2e1b7532a4082adba42954b739436a"
        },
        "commit_message": "remove double check and synchronization (#171)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "446eabae5d2e1b7532a4082adba42954b739436a": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmInstrumentation.java": [
                    "static void co.elastic.apm.bci.ElasticApmInstrumentation.staticInit(ElasticApmTracer tracer)"
                ]
            },
            "4c6effc2b5000773c18e6523f50bd7700f8db153": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmInstrumentation.java": [
                    "static void co.elastic.apm.bci.ElasticApmInstrumentation.staticInit(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "fbb5d684ee8567f405aaf2305ad04c4a02cfdf06",
        "previous_commit": "b0c6af7a9819f1608fdf8ca1e551a4b766b59761",
        "date": 1723122379,
        "releases": {
            "previous": "fbb5d684ee8567f405aaf2305ad04c4a02cfdf06",
            "next": "fbb5d684ee8567f405aaf2305ad04c4a02cfdf06"
        },
        "commit_message": "Fixed BodyCaptureImpl recycling (#3734)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "fbb5d684ee8567f405aaf2305ad04c4a02cfdf06": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/BodyCaptureImpl.java": [
                    "public void co.elastic.apm.agent.impl.context.BodyCaptureImpl.resetState()"
                ]
            },
            "b0c6af7a9819f1608fdf8ca1e551a4b766b59761": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/BodyCaptureImpl.java": [
                    "public void co.elastic.apm.agent.impl.context.BodyCaptureImpl.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c2be6d3446d77a370028b8ead4a313b52dcadbb9",
        "previous_commit": "e4a02a0449d7f2b110fb4d9712514831fd4b7c06",
        "date": 1639656026,
        "releases": {
            "previous": "c2be6d3446d77a370028b8ead4a313b52dcadbb9",
            "next": "c2be6d3446d77a370028b8ead4a313b52dcadbb9"
        },
        "commit_message": "Fixing log4j configuration initialization (#2343)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c2be6d3446d77a370028b8ead4a313b52dcadbb9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public static void co.elastic.apm.agent.logging.LoggingConfiguration.init(List<ConfigurationSource> sources, String ephemeralId)"
                ]
            },
            "e4a02a0449d7f2b110fb4d9712514831fd4b7c06": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public static void co.elastic.apm.agent.logging.LoggingConfiguration.init(List<ConfigurationSource> sources, String ephemeralId)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3239daaaa363b9eb3e27793aff52cea46b46d98e",
        "previous_commit": "9e1b1cee7a93c9077def32d49a9c9462a32258e4",
        "date": 1617715643,
        "releases": {
            "previous": "3239daaaa363b9eb3e27793aff52cea46b46d98e",
            "next": "3239daaaa363b9eb3e27793aff52cea46b46d98e"
        },
        "commit_message": "Added Support for JBoss Logging to the log correlation plugin (#1737)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3239daaaa363b9eb3e27793aff52cea46b46d98e": {
                "apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/mdc/MdcActivationListener.java": [
                    "public MethodHandle co.elastic.apm.agent.mdc.MdcActivationListener.get(ClassLoader classLoader)"
                ]
            },
            "9e1b1cee7a93c9077def32d49a9c9462a32258e4": {
                "apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/mdc/MdcActivationListener.java": [
                    "public MethodHandle co.elastic.apm.agent.mdc.MdcActivationListener.get(ClassLoader classLoader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8f6f5daa58a07441faea3f40ba440d82031dc8b6",
        "previous_commit": "bc909e64cd15b63b207087b946b22a7b7d01045c",
        "date": 1543942217,
        "releases": {
            "previous": "8f6f5daa58a07441faea3f40ba440d82031dc8b6",
            "next": "8f6f5daa58a07441faea3f40ba440d82031dc8b6"
        },
        "commit_message": "Remove incubating label from Apache HttpClient instrumentation (#358)\n\nmaking it active by default",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8f6f5daa58a07441faea3f40ba440d82031dc8b6": {
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/httpclient/ApacheHttpClientInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.httpclient.ApacheHttpClientInstrumentation.getInstrumentationGroupNames()"
                ]
            },
            "bc909e64cd15b63b207087b946b22a7b7d01045c": {
                "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/httpclient/ApacheHttpClientInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.httpclient.ApacheHttpClientInstrumentation.getInstrumentationGroupNames()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "00d0da029c941b1d99e151558499069bf58194e5",
        "previous_commit": "35f13a95fef02f3daf8d9c1c2bf26b7cc8027218",
        "date": 1563288077,
        "releases": {
            "previous": "00d0da029c941b1d99e151558499069bf58194e5",
            "next": "00d0da029c941b1d99e151558499069bf58194e5"
        },
        "commit_message": "Refactor reference counting (#728)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "00d0da029c941b1d99e151558499069bf58194e5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.decrementReferences()"
                ]
            },
            "35f13a95fef02f3daf8d9c1c2bf26b7cc8027218": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.decrementReferences()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e9119905941075f3c9543a35e134e7e55015f7e2",
        "previous_commit": "46135ec6b4a794e95a82cecd7408db3877c6e80d",
        "date": 1593070138,
        "releases": {
            "previous": "e9119905941075f3c9543a35e134e7e55015f7e2",
            "next": "e9119905941075f3c9543a35e134e7e55015f7e2"
        },
        "commit_message": "Only capture errors if recording (#1252)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e9119905941075f3c9543a35e134e7e55015f7e2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ]
            },
            "46135ec6b4a794e95a82cecd7408db3877c6e80d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "decd5c56a274a58e7cd5b03dd8e3cdfa8c6e3b6a",
        "previous_commit": "228ff56eab5c9c98d2ea3bf6a0b96fa9465a0844",
        "date": 1647605733,
        "releases": {
            "previous": "decd5c56a274a58e7cd5b03dd8e3cdfa8c6e3b6a",
            "next": "decd5c56a274a58e7cd5b03dd8e3cdfa8c6e3b6a"
        },
        "commit_message": "Respect `transaction_ignore_urls` and `transaction_ignore_user_agents` when creating transactions in the spring webflux instrumentation (#2515)\n\n* Respect `transaction_ignore_urls` and `transaction_ignore_user_agents` when creating transactions in the spring webflux instrumentation\r\n\r\n* Added #2515 to the changelog\r\n\r\n* minor code changes\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "decd5c56a274a58e7cd5b03dd8e3cdfa8c6e3b6a": {
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "public static Transaction co.elastic.apm.agent.springwebflux.WebfluxHelper.getOrCreateTransaction(Tracer tracer, ServerWebExchange exchange)"
                ]
            },
            "228ff56eab5c9c98d2ea3bf6a0b96fa9465a0844": {
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/WebfluxHelper.java": [
                    "public static Transaction co.elastic.apm.agent.springwebflux.WebfluxHelper.getOrCreateTransaction(Tracer tracer, ServerWebExchange exchange)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "15b547a9f64f82e46a88684e9de111f72660d45a",
        "previous_commit": "5fd874d7c59c820b6b19115e3080d34202ebf4bf",
        "date": 1563874630,
        "releases": {
            "previous": "15b547a9f64f82e46a88684e9de111f72660d45a",
            "next": "15b547a9f64f82e46a88684e9de111f72660d45a"
        },
        "commit_message": "Resetting TraceContext#transactionId and making ApmSpan#dispatcher volatile (#738)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "15b547a9f64f82e46a88684e9de111f72660d45a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ]
            },
            "5fd874d7c59c820b6b19115e3080d34202ebf4bf": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ed102c0c4af815ea0b0a1556049cc30f5006330a",
        "previous_commit": "edb717691058ac37b4722f2ed26170b6f7dbd595",
        "date": 1601369989,
        "releases": {
            "previous": "ed102c0c4af815ea0b0a1556049cc30f5006330a",
            "next": "ed102c0c4af815ea0b0a1556049cc30f5006330a"
        },
        "commit_message": "Catch HttpUrlConnection Already Connected error (#1416)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ed102c0c4af815ea0b0a1556049cc30f5006330a": {
                "apm-agent-plugins/apm-urlconnection-plugin/src/main/java/co/elastic/apm/agent/urlconnection/UrlConnectionPropertyAccessor.java": [
                    "public void co.elastic.apm.agent.urlconnection.UrlConnectionPropertyAccessor.setHeader(String headerName, String headerValue, HttpURLConnection urlConnection)"
                ]
            },
            "edb717691058ac37b4722f2ed26170b6f7dbd595": {
                "apm-agent-plugins/apm-urlconnection-plugin/src/main/java/co/elastic/apm/agent/urlconnection/UrlConnectionPropertyAccessor.java": [
                    "public void co.elastic.apm.agent.urlconnection.UrlConnectionPropertyAccessor.setHeader(String headerName, String headerValue, HttpURLConnection urlConnection)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7b8c58427464f954f5224a2120257660b1fc6340",
        "previous_commit": "410c13299a0f1919b3f3a41df4ca876c46227bb4",
        "date": 1600964854,
        "releases": {
            "previous": "7b8c58427464f954f5224a2120257660b1fc6340",
            "next": "7b8c58427464f954f5224a2120257660b1fc6340"
        },
        "commit_message": "Relaxing k8s pod discovery pattern some more (#1418)\n\n* Relaxing k8s pod discovery pattern some more",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7b8c58427464f954f5224a2120257660b1fc6340": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.parseContainerId(String line)"
                ]
            },
            "410c13299a0f1919b3f3a41df4ca876c46227bb4": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.parseContainerId(String line)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d7751ba07a6910b6ba7d11dff6ca8f19966f7fe7",
        "previous_commit": "fc62321e623a0253c463d5575d460b1cf3856747",
        "date": 1638959124,
        "releases": {
            "previous": "d7751ba07a6910b6ba7d11dff6ca8f19966f7fe7",
            "next": "d7751ba07a6910b6ba7d11dff6ca8f19966f7fe7"
        },
        "commit_message": "Switch to using Span concurrent weak map in Vert.x 3 (#2322)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d7751ba07a6910b6ba7d11dff6ca8f19966f7fe7": {
                "apm-agent-plugins/apm-vertx/apm-vertx3-plugin/src/main/java/co/elastic/apm/agent/vertx/v3/web/http1/HttpServerRequestImplEndInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.vertx.v3.web.http1.HttpServerRequestImplEndInstrumentation.getMethodMatcher()"
                ]
            },
            "fc62321e623a0253c463d5575d460b1cf3856747": {
                "apm-agent-plugins/apm-vertx/apm-vertx3-plugin/src/main/java/co/elastic/apm/agent/vertx/v3/web/http1/HttpServerRequestImplEndInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.vertx.v3.web.http1.HttpServerRequestImplEndInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "40773036faab70828c16aa0f8da3d39a3c56430a",
        "previous_commit": "b9e6d92e62b7e734826d076bc5aa527b2cdaec8a",
        "date": 1611681201,
        "releases": {
            "previous": "40773036faab70828c16aa0f8da3d39a3c56430a",
            "next": "40773036faab70828c16aa0f8da3d39a3c56430a"
        },
        "commit_message": "Adding ability to delay agent initialization on startup (#1594)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "40773036faab70828c16aa0f8da3d39a3c56430a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.start(boolean premain)"
                ]
            },
            "b9e6d92e62b7e734826d076bc5aa527b2cdaec8a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.start(boolean premain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "35493e3ea7cf9d8120dffb1853b7f95292d68e2b",
        "previous_commit": "6a65248f0dd1db8e9a0224925d88d02c1a8b560b",
        "date": 1570710260,
        "releases": {
            "previous": "35493e3ea7cf9d8120dffb1853b7f95292d68e2b",
            "next": "35493e3ea7cf9d8120dffb1853b7f95292d68e2b"
        },
        "commit_message": "Report exception cause to backend (#878)\n\n* add exception cause reporting\r\n\r\n* improve JSON serialization tests\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "35493e3ea7cf9d8120dffb1853b7f95292d68e2b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeException(@Nullable Throwable exception)"
                ]
            },
            "6a65248f0dd1db8e9a0224925d88d02c1a8b560b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeException(@Nullable Throwable exception)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "036512b29181d7efc74ba59bcf50372bffe7a68e",
        "previous_commit": "17276f62cd44d923b73f00f1f59dc01f74f4e697",
        "date": 1632223049,
        "releases": {
            "previous": "036512b29181d7efc74ba59bcf50372bffe7a68e",
            "next": "036512b29181d7efc74ba59bcf50372bffe7a68e"
        },
        "commit_message": "Improved capturing of logged exceptions when using Log4j2 (#2139)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "036512b29181d7efc74ba59bcf50372bffe7a68e": {
                "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/errorlogging/AbstractLoggerErrorCapturingInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.errorlogging.AbstractLoggerErrorCapturingInstrumentation.getMethodMatcher()"
                ]
            },
            "17276f62cd44d923b73f00f1f59dc01f74f4e697": {
                "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/errorlogging/AbstractLoggerErrorCapturingInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.errorlogging.AbstractLoggerErrorCapturingInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "639cfac43f9d2ad3022d6d50da384ca8d46d09e9",
        "previous_commit": "a5b983a10b25e6189a1419df75a9513fadb6c97e",
        "date": 1692094773,
        "releases": {
            "previous": "639cfac43f9d2ad3022d6d50da384ca8d46d09e9",
            "next": "639cfac43f9d2ad3022d6d50da384ca8d46d09e9"
        },
        "commit_message": "Do not serialize composite span attributes for count less than 2 (#3293)\n\n* Do not serialize composite span attributes for count less than 2\r\n\r\n* Added changelog\r\n\r\n* Add and fix test",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "639cfac43f9d2ad3022d6d50da384ca8d46d09e9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            },
            "a5b983a10b25e6189a1419df75a9513fadb6c97e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "12ca9877c58494989d09b9ee232fbaa080f05ea2",
        "previous_commit": "9c4e9351dd39b4413b2fb4990a73d91674201838",
        "date": 1678359623,
        "releases": {
            "previous": "12ca9877c58494989d09b9ee232fbaa080f05ea2",
            "next": "12ca9877c58494989d09b9ee232fbaa080f05ea2"
        },
        "commit_message": "Capture exit spans with annotations (#3046)\n\n* allow to capture exit spans with annotations\n\n* update doc\n\n* update changelog\n\n* provide default value when using older API\n\n* isExit rename + add @Traced + more tests + avoid NPE\n\n* fix changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "12ca9877c58494989d09b9ee232fbaa080f05ea2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/AnnotationValueOffsetMappingFactory.java": [
                    "public Object co.elastic.apm.agent.bci.bytebuddy.AnnotationValueOffsetMappingFactory.getDefaultValue()"
                ]
            },
            "9c4e9351dd39b4413b2fb4990a73d91674201838": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/AnnotationValueOffsetMappingFactory.java": [
                    "public Object co.elastic.apm.agent.bci.bytebuddy.AnnotationValueOffsetMappingFactory.getDefaultValue()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c8601026db1b785866f47a0803832d9f1a76103e",
        "previous_commit": "883786121b5dcdfd7aed68cae0fcc9a4a1ca9e3c",
        "date": 1643283259,
        "releases": {
            "previous": "c8601026db1b785866f47a0803832d9f1a76103e",
            "next": "c8601026db1b785866f47a0803832d9f1a76103e"
        },
        "commit_message": "Avoid eager initialization of JMX on Weblogic (#2420)\n\n* do not create platform mbean server on WL\r\n\r\n* add 'weblogic.home' in the heuristic for safety\r\n\r\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c8601026db1b785866f47a0803832d9f1a76103e": {
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private synchronized void co.elastic.apm.agent.jmx.JmxMetricTracker.tryInit()"
                ]
            },
            "883786121b5dcdfd7aed68cae0fcc9a4a1ca9e3c": {
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private synchronized void co.elastic.apm.agent.jmx.JmxMetricTracker.tryInit()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "870a4fd08f43d22aed169840b9dd72d3ecf9a8f3",
        "previous_commit": "4eafe5f076ba8abb33bd43aed8ef52625be1d8e9",
        "date": 1649345044,
        "releases": {
            "previous": "870a4fd08f43d22aed169840b9dd72d3ecf9a8f3",
            "next": "870a4fd08f43d22aed169840b9dd72d3ecf9a8f3"
        },
        "commit_message": "compression-eligible span must not be buffered on an already ended parent (#2576)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "870a4fd08f43d22aed169840b9dd72d3ecf9a8f3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()"
                ]
            },
            "4eafe5f076ba8abb33bd43aed8ef52625be1d8e9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "696b939b1962f9338d6bc020e45721ac6ddc3b88",
        "previous_commit": "d883321a92c65db59c4411559715ee62b487a2dd",
        "date": 1519036501,
        "releases": {
            "previous": "696b939b1962f9338d6bc020e45721ac6ddc3b88",
            "next": "696b939b1962f9338d6bc020e45721ac6ddc3b88"
        },
        "commit_message": "Add configuration options\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "696b939b1962f9338d6bc020e45721ac6ddc3b88": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.init(FilterConfig filterConfig)"
                ]
            },
            "d883321a92c65db59c4411559715ee62b487a2dd": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.init(FilterConfig filterConfig)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4af1d3e2fb62bc41f66e2ae5d308e4c06842892c",
        "previous_commit": "cfd5c7cee6596e93d765b0fa80eca9a1879ef6a8",
        "date": 1561526571,
        "releases": {
            "previous": "4af1d3e2fb62bc41f66e2ae5d308e4c06842892c",
            "next": "4af1d3e2fb62bc41f66e2ae5d308e4c06842892c"
        },
        "commit_message": "Modifying license file prefix and simplify container ID parsing (#688)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4af1d3e2fb62bc41f66e2ae5d308e4c06842892c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.parseContainerId(String line)"
                ]
            },
            "cfd5c7cee6596e93d765b0fa80eca9a1879ef6a8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.parseContainerId(String line)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "694b1c776113fd8f895841e307bda79a414ea602",
        "previous_commit": "4f388e68cff752fa24e80a089a940aa305d8ab94",
        "date": 1623832113,
        "releases": {
            "previous": "694b1c776113fd8f895841e307bda79a414ea602",
            "next": "694b1c776113fd8f895841e307bda79a414ea602"
        },
        "commit_message": "Adding stack trace to tracer stop invocation (#1852)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "694b1c776113fd8f895841e307bda79a414ea602": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.stop()"
                ]
            },
            "4f388e68cff752fa24e80a089a940aa305d8ab94": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public synchronized void co.elastic.apm.agent.impl.ElasticApmTracer.stop()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3c4a753619c4bb9ec0b2f98bd0a5da3eedeb1f8b",
        "previous_commit": "4858631fb5ddc91569eb31101304c03e52b56c61",
        "date": 1710324156,
        "releases": {
            "previous": "3c4a753619c4bb9ec0b2f98bd0a5da3eedeb1f8b",
            "next": "3c4a753619c4bb9ec0b2f98bd0a5da3eedeb1f8b"
        },
        "commit_message": "differentiate Lambda url from api gateway (#3417)\n\n\r\n---------\r\n\r\nCo-authored-by: Sylvain Juge <763082+SylvainJuge@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3c4a753619c4bb9ec0b2f98bd0a5da3eedeb1f8b": {
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV2TransactionHelper.java": [
                    "protected Transaction co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.doStartTransaction(APIGatewayV2HTTPEvent apiGatewayEvent, Context lambdaContext)"
                ]
            },
            "4858631fb5ddc91569eb31101304c03e52b56c61": {
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/helper/APIGatewayProxyV2TransactionHelper.java": [
                    "protected Transaction<?> co.elastic.apm.agent.awslambda.helper.APIGatewayProxyV2TransactionHelper.doStartTransaction(APIGatewayV2HTTPEvent apiGatewayEvent, Context lambdaContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "044b06835157ed6a80071adad3d2dd23cbefe108",
        "previous_commit": "15f57f4d861bdfa08f200441760edddc4916560f",
        "date": 1563795135,
        "releases": {
            "previous": "044b06835157ed6a80071adad3d2dd23cbefe108",
            "next": "044b06835157ed6a80071adad3d2dd23cbefe108"
        },
        "commit_message": "Only track breakdown metrics if enabled (#737)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "044b06835157ed6a80071adad3d2dd23cbefe108": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Transaction.afterEnd()"
                ]
            },
            "15f57f4d861bdfa08f200441760edddc4916560f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Transaction.afterEnd()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6d991c8d01f882b35bcad9a6d731bd3c3d8619c6",
        "previous_commit": "be20d66da4ead0d46a99888afa75056afb74fc39",
        "date": 1582098033,
        "releases": {
            "previous": "6d991c8d01f882b35bcad9a6d731bd3c3d8619c6",
            "next": "6d991c8d01f882b35bcad9a6d731bd3c3d8619c6"
        },
        "commit_message": "Add instrumentation excludes for common APM vendors (#1038)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6d991c8d01f882b35bcad9a6d731bd3c3d8619c6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy)"
                ]
            },
            "be20d66da4ead0d46a99888afa75056afb74fc39": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9df2b8b009bed5c080ad9aaf25da8a40fabaced4",
        "previous_commit": "349007704a068ab7ca69b4763b7d49bda9410d7c",
        "date": 1557214832,
        "releases": {
            "previous": "9df2b8b009bed5c080ad9aaf25da8a40fabaced4",
            "next": "9df2b8b009bed5c080ad9aaf25da8a40fabaced4"
        },
        "commit_message": "Fix intake v2 trace logging (#616)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9df2b8b009bed5c080ad9aaf25da8a40fabaced4": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.setOutputStream(final OutputStream os)"
                ]
            },
            "349007704a068ab7ca69b4763b7d49bda9410d7c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "public void co.elastic.apm.agent.report.serialize.DslJsonSerializer.setOutputStream(final OutputStream os)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2e1bce7fe994efac07a72dc6162b6824f11ee5bf",
        "previous_commit": "a10ecd4698374bbba39cf72703e6c7290f9f17cb",
        "date": 1712053553,
        "releases": {
            "previous": "2e1bce7fe994efac07a72dc6162b6824f11ee5bf",
            "next": "2e1bce7fe994efac07a72dc6162b6824f11ee5bf"
        },
        "commit_message": "Add exclusion list option for calling DatabaseMetaData.getUserName (#3568)\n\n* use a dummy user for testing\r\n\r\n* exclusion list option for calling getUserName\r\n\r\n* changelog and test break fixed",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2e1bce7fe994efac07a72dc6162b6824f11ee5bf": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "private ConnectionMetaData co.elastic.apm.agent.jdbc.helper.JdbcHelper.getConnectionMetaData(@Nullable Connection connection)"
                ]
            },
            "a10ecd4698374bbba39cf72703e6c7290f9f17cb": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "private ConnectionMetaData co.elastic.apm.agent.jdbc.helper.JdbcHelper.getConnectionMetaData(@Nullable Connection connection)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2ff13a01101bafab36fe0faa8492557d5b8e4947",
        "previous_commit": "887d748f44059cb033b54a4d81d49087e9cb1a9d",
        "date": 1519227747,
        "releases": {
            "previous": "2ff13a01101bafab36fe0faa8492557d5b8e4947",
            "next": "2ff13a01101bafab36fe0faa8492557d5b8e4947"
        },
        "commit_message": "Only set service.framework if info available\n\nWhile the json schema does not allow the framwork name and version\nto be null, it allows framework to be null\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2ff13a01101bafab36fe0faa8492557d5b8e4947": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ServiceFactory.java": [
                    "public Service co.elastic.apm.impl.ServiceFactory.createService(CoreConfiguration coreConfiguration, String frameworkName, String frameworkVersion)"
                ]
            },
            "887d748f44059cb033b54a4d81d49087e9cb1a9d": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ServiceFactory.java": [
                    "public Service co.elastic.apm.impl.ServiceFactory.createService(CoreConfiguration coreConfiguration, String frameworkName, String frameworkVersion)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6d4a28535d822f731a227ec026e597d57629e801",
        "previous_commit": "f7fa06aa87076668fa45c205657b2a93c95f9515",
        "date": 1532417164,
        "releases": {
            "previous": "6d4a28535d822f731a227ec026e597d57629e801",
            "next": "6d4a28535d822f731a227ec026e597d57629e801"
        },
        "commit_message": "Allow instrumentations to have multiple group names\n\nThis, for example, enables to disable only the async part of the\nServlet API to be disabled via `servlet-api-async`, or to disable all\nthe Servlet API instrumentation via `servlet-api`.\n\nDisables `incubating` by default.\nThis allows to release incubating instrumentations without risk but\nmakes it very easy for early adopters to test an incubating\ninstrumentation.\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6d4a28535d822f731a227ec026e597d57629e801": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static boolean co.elastic.apm.bci.ElasticApmAgent.isIncluded(ElasticApmInstrumentation advice, CoreConfiguration coreConfiguration)"
                ]
            },
            "f7fa06aa87076668fa45c205657b2a93c95f9515": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static boolean co.elastic.apm.bci.ElasticApmAgent.isIncluded(ElasticApmInstrumentation advice, CoreConfiguration coreConfiguration)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "453004a190fa27dda983b65cd56fc01a79123b2b",
        "previous_commit": "948d80e7888eb805956a4859591560c5b08dba41",
        "date": 1612335091,
        "releases": {
            "previous": "453004a190fa27dda983b65cd56fc01a79123b2b",
            "next": "453004a190fa27dda983b65cd56fc01a79123b2b"
        },
        "commit_message": "Avoid creating MultipleParentCL with bootstrap CL (#1647)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "453004a190fa27dda983b65cd56fc01a79123b2b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyPluginClassLoaderFactory.java": [
                    "public synchronized static ClassLoader co.elastic.apm.agent.bci.IndyPluginClassLoaderFactory.getOrCreatePluginClassLoader(@Nullable ClassLoader targetClassLoader, List<String> classesToInject, ClassLoader agentClassLoader, ElementMatcher<? super TypeDescription> exclusionMatcher)"
                ]
            },
            "948d80e7888eb805956a4859591560c5b08dba41": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyPluginClassLoaderFactory.java": [
                    "public synchronized static ClassLoader co.elastic.apm.agent.bci.IndyPluginClassLoaderFactory.getOrCreatePluginClassLoader(@Nullable ClassLoader targetClassLoader, List<String> classesToInject, ClassLoader parent, ElementMatcher<? super TypeDescription> exclusionMatcher)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9cd79b24a039ba7cc2fb378fc6d08c881212356c",
        "previous_commit": "8d42d0265c75659df79ac6a2e3b875cb98d06c9d",
        "date": 1653389067,
        "releases": {
            "previous": "9cd79b24a039ba7cc2fb378fc6d08c881212356c",
            "next": "9cd79b24a039ba7cc2fb378fc6d08c881212356c"
        },
        "commit_message": "Non discardable api (#2632)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9cd79b24a039ba7cc2fb378fc6d08c881212356c": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelSpan.java": [
                    "public <T> Span co.elastic.apm.agent.opentelemetry.sdk.OTelSpan.setAttribute(AttributeKey<T> key, @Nonnull T value)"
                ]
            },
            "8d42d0265c75659df79ac6a2e3b875cb98d06c9d": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelSpan.java": [
                    "public <T> Span co.elastic.apm.agent.opentelemetry.sdk.OTelSpan.setAttribute(AttributeKey<T> key, @Nonnull T value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5ff1430a37021be595aca1777914cfb2c3f15a04",
        "previous_commit": "a1272aa2fd259380b232ee4aefef83aecec8a6f0",
        "date": 1700071018,
        "releases": {
            "previous": "5ff1430a37021be595aca1777914cfb2c3f15a04",
            "next": "5ff1430a37021be595aca1777914cfb2c3f15a04"
        },
        "commit_message": "add support for attribute[*] with capture_jmx_metrics (#3376)\n\n* add support for attribute[*] with capture_jmx_metrics\r\n\r\n* fixx doc and remove comment\r\n\r\n* expand wildcard import, refactor wildcard check, format better\r\n\r\n* add changelog entry for attribute[*]\r\n\r\n* fix changelog typo\r\n\r\n* add 'from' version for feature",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5ff1430a37021be595aca1777914cfb2c3f15a04": {
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private static void co.elastic.apm.agent.jmx.JmxMetricTracker.addJmxMetricRegistration(final JmxMetric jmxMetric, List<JmxMetricRegistration> registrations, MBeanServer server)"
                ]
            },
            "a1272aa2fd259380b232ee4aefef83aecec8a6f0": {
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java": [
                    "private static void co.elastic.apm.agent.jmx.JmxMetricTracker.addJmxMetricRegistration(final JmxMetric jmxMetric, List<JmxMetricRegistration> registrations, MBeanServer server)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "06a49034095600f50dde36e3c31e7e5b91b54e05",
        "previous_commit": "ae4fd113677fc22eeaf508b1c3e4e5fe4ed4cc49",
        "date": 1708610480,
        "releases": {
            "previous": "06a49034095600f50dde36e3c31e7e5b91b54e05",
            "next": "06a49034095600f50dde36e3c31e7e5b91b54e05"
        },
        "commit_message": "Use LRU cache for statement parser (#3492)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "06a49034095600f50dde36e3c31e7e5b91b54e05": {
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/internal/db/signature/SignatureParser.java": [
                    "public void co.elastic.apm.agent.sdk.internal.db.signature.SignatureParser.querySignature(String query, StringBuilder signature, @Nullable StringBuilder dbLink, boolean preparedStatement)"
                ]
            },
            "ae4fd113677fc22eeaf508b1c3e4e5fe4ed4cc49": {
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/internal/db/signature/SignatureParser.java": [
                    "public void co.elastic.apm.agent.sdk.internal.db.signature.SignatureParser.querySignature(String query, StringBuilder signature, @Nullable StringBuilder dbLink, boolean preparedStatement)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "60042453353a4a21f6970082e6e4bb60f53c14bc",
        "previous_commit": "c96651b197dc0a737ae33959892bcc28567b6ba0",
        "date": 1626174602,
        "releases": {
            "previous": "60042453353a4a21f6970082e6e4bb60f53c14bc",
            "next": "60042453353a4a21f6970082e6e4bb60f53c14bc"
        },
        "commit_message": "Added support for setting the framework using the public api (#1908) (#1909)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "60042453353a4a21f6970082e6e4bb60f53c14bc": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.setFrameworkName(@Nullable String frameworkName)"
                ]
            },
            "c96651b197dc0a737ae33959892bcc28567b6ba0": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Transaction.setFrameworkName(@Nullable String frameworkName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4992c0255b68f88507935a820908f7fd31f7be67",
        "previous_commit": "9362105bc26cc0e520add5b407ba05218e6985d8",
        "date": 1644392655,
        "releases": {
            "previous": "4992c0255b68f88507935a820908f7fd31f7be67",
            "next": "4992c0255b68f88507935a820908f7fd31f7be67"
        },
        "commit_message": "Fix LinkageError in apm-ecs-logging-plugin (#2458)\n\n* Fixed:\r\njava.lang.IllegalAccessException: no such method: co.elastic.apm.agent.ecs_logging.Log4j2ServiceNameInstrumentation$AdviceClass.onEnter(Builder)void/invokeStatic\r\n\tat java.lang.invoke.MemberName.makeAccessException(MemberName.java:867) ~[?:1.8.0_322]\r\n\tat java.lang.invoke.MemberName$Factory.resolveOrFail(MemberName.java:1003) ~[?:1.8.0_322]\r\n\tat java.lang.invoke.MethodHandles$Lookup.resolveOrFail(MethodHandles.java:1386) ~[?:1.8.0_322]\r\n\tat java.lang.invoke.MethodHandles$Lookup.findStatic(MethodHandles.java:780) ~[?:1.8.0_322]\r\n\tat co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(IndyBootstrap.java:408) [elastic-apm-agent-1.28.5-SNAPSHOT.jar:?]\r\n\tat sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) ~[?:?]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_322]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_322]\r\n\tat java.lang.IndyBootstrapDispatcher.bootstrap(IndyBootstrapDispatcher.java:60) [?:1.8.0_322]\r\n\tat java.lang.invoke.CallSite.makeSite(CallSite.java:310) [?:1.8.0_322]\r\n\tat java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307) [?:1.8.0_322]\r\n\tat java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297) [?:1.8.0_322]\r\n\tat co.elastic.logging.log4j2.EcsLayout$Builder.build(EcsLayout.java:425) [log4j2-ecs-layout-1.3.2.jar:?]\r\n\tat co.elastic.logging.log4j2.EcsLayout$Builder.build(EcsLayout.java:328) [log4j2-ecs-layout-1.3.2.jar:?]\r\n\tat org.apache.logging.log4j.core.config.plugins.util.PluginBuilder.build(PluginBuilder.java:122) [log4j-core-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.core.config.AbstractConfiguration.createPluginObject(AbstractConfiguration.java:1120) [log4j-core-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.core.config.AbstractConfiguration.createConfiguration(AbstractConfiguration.java:1045) [log4j-core-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.core.config.AbstractConfiguration.createConfiguration(AbstractConfiguration.java:1037) [log4j-core-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.core.config.AbstractConfiguration.createConfiguration(AbstractConfiguration.java:1037) [log4j-core-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.core.config.AbstractConfiguration.doConfigure(AbstractConfiguration.java:651) [log4j-core-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.core.config.AbstractConfiguration.initialize(AbstractConfiguration.java:247) [log4j-core-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.core.config.AbstractConfiguration.start(AbstractConfiguration.java:293) [log4j-core-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:626) [log4j-core-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:699) [log4j-core-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:716) [log4j-core-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:270) [log4j-core-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:155) [log4j-core-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:47) [log4j-core-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.LogManager.getContext(LogManager.java:196) [log4j-api-2.17.1.jar:2.17.1]\r\n\tat org.apache.logging.log4j.LogManager.getLogger(LogManager.java:599) [log4j-api-2.17.1.jar:2.17.1]\r\n    ...\r\n\tat java.lang.Thread.run(Thread.java:750) [?:1.8.0_322]\r\nCaused by: java.lang.LinkageError: bad method type alias: (Builder)void not visible from class co.elastic.apm.agent.ecs_logging.Log4j2ServiceNameInstrumentation$AdviceClass\r\n\tat java.lang.invoke.MemberName.checkForTypeAlias(MemberName.java:793) ~[?:1.8.0_322]\r\n\tat java.lang.invoke.MemberName$Factory.resolve(MemberName.java:976) ~[?:1.8.0_322]\r\n\tat java.lang.invoke.MemberName$Factory.resolveOrFail(MemberName.java:1000) ~[?:1.8.0_322]\r\n\t... 47 more\r\n\r\n* Do not try to instrument the bundled `co.elastic.logging.log4j2.EcsLayout$Builder`\r\n\r\n* Fix not loading `org.slf4j*` from the agent class loader",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4992c0255b68f88507935a820908f7fd31f7be67": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/classloading/IndyPluginClassLoader.java": [
                    "private static ClassLoader co.elastic.apm.agent.bci.classloading.IndyPluginClassLoader.getParent(@Nullable ClassLoader targetClassLoader, ClassLoader agentClassLoader)"
                ]
            },
            "9362105bc26cc0e520add5b407ba05218e6985d8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/classloading/IndyPluginClassLoader.java": [
                    "private static ClassLoader co.elastic.apm.agent.bci.classloading.IndyPluginClassLoader.getParent(@Nullable ClassLoader targetClassLoader, ClassLoader agentClassLoader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "721d892447016cbbbc9f0e1e29e27da4f98ab672",
        "previous_commit": "3752548664bcd88bd8ee65e798688d089e5f8fee",
        "date": 1637873135,
        "releases": {
            "previous": "721d892447016cbbbc9f0e1e29e27da4f98ab672",
            "next": "721d892447016cbbbc9f0e1e29e27da4f98ab672"
        },
        "commit_message": "Fix reading agent version (#2289)\n\n* fix reading agent version\r\n\r\n* add few tests on agent packaging\r\n\r\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "721d892447016cbbbc9f0e1e29e27da4f98ab672": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "void co.elastic.apm.agent.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ]
            },
            "3752548664bcd88bd8ee65e798688d089e5f8fee": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "void co.elastic.apm.agent.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "cfe504cbafb029271a8f8ca2938646daba3c81d2",
        "previous_commit": "fff08aebec9f2abf91f816ff63ea854da8b6a42f",
        "date": 1522057830,
        "releases": {
            "previous": "cfe504cbafb029271a8f8ca2938646daba3c81d2",
            "next": "cfe504cbafb029271a8f8ca2938646daba3c81d2"
        },
        "commit_message": "Make ProcessFactory work in JDK < 9 again\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "cfe504cbafb029271a8f8ca2938646daba3c81d2": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/ProcessFactory.java": [
                    "public static ProcessFactory co.elastic.apm.impl.payload.ForJava9CompatibleVM.make()"
                ]
            },
            "fff08aebec9f2abf91f816ff63ea854da8b6a42f": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/ProcessFactory.java": [
                    "public static ProcessFactory co.elastic.apm.impl.payload.ForJava9CompatibleVM.make()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6cef68d2b20e706f862804c42f9fa376c3e43168",
        "previous_commit": "c6ac900c4bbadc1922d880d3195d3379868c986d",
        "date": 1620760883,
        "releases": {
            "previous": "6cef68d2b20e706f862804c42f9fa376c3e43168",
            "next": "6cef68d2b20e706f862804c42f9fa376c3e43168"
        },
        "commit_message": "Changed the log level of the vm arguments as they may contain sensitive data. (#1810)\n\nCo-authored-by: SylvainJuge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6cef68d2b20e706f862804c42f9fa376c3e43168": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "void co.elastic.apm.agent.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ]
            },
            "c6ac900c4bbadc1922d880d3195d3379868c986d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "void co.elastic.apm.agent.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4b9460bd2f2100c68c9306c02a10dfdfdae1e8a3",
        "previous_commit": "53611b389a7b8fabafc654cf155b7e4ceafd3894",
        "date": 1527600129,
        "releases": {
            "previous": "4b9460bd2f2100c68c9306c02a10dfdfdae1e8a3",
            "next": "4b9460bd2f2100c68c9306c02a10dfdfdae1e8a3"
        },
        "commit_message": "Add ability to disable certain instrumentations (#95)\n\ncloses #87",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4b9460bd2f2100c68c9306c02a10dfdfdae1e8a3": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)"
                ]
            },
            "53611b389a7b8fabafc654cf155b7e4ceafd3894": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.bci.ElasticApmAgent.initInstrumentation(ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d61db968c151b1acab77f40a26848bb8a366970a",
        "previous_commit": "d0ef229e10f521b56866c0851a3252256f0c3b47",
        "date": 1654087088,
        "releases": {
            "previous": "d61db968c151b1acab77f40a26848bb8a366970a",
            "next": "d61db968c151b1acab77f40a26848bb8a366970a"
        },
        "commit_message": "oops I forgot otel attributes for transactions (#2657)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d61db968c151b1acab77f40a26848bb8a366970a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ]
            },
            "d0ef229e10f521b56866c0851a3252256f0c3b47": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTransaction(final Transaction transaction)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "aec88b831c3b5ace0e89a8725abf03250595987c",
        "previous_commit": "9e8b64f89057d8cfc248048c1cccb246032955bd",
        "date": 1560409072,
        "releases": {
            "previous": "aec88b831c3b5ace0e89a8725abf03250595987c",
            "next": "aec88b831c3b5ace0e89a8725abf03250595987c"
        },
        "commit_message": "Fix version discovery for URL-encoded jars (#665)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "aec88b831c3b5ace0e89a8725abf03250595987c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "private static @Nullable Version co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.readImplementationVersionFromManifest(@Nullable ProtectionDomain protectionDomain)"
                ]
            },
            "9e8b64f89057d8cfc248048c1cccb246032955bd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "private static @Nullable Version co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.readImplementationVersionFromManifest(@Nullable ProtectionDomain protectionDomain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d073b288eb4901b742b2a8fdbeba5f8298937faf",
        "previous_commit": "9017aa93867579c3f47c6f68be27887e34e0dabd",
        "date": 1548772574,
        "releases": {
            "previous": "d073b288eb4901b742b2a8fdbeba5f8298937faf",
            "next": "d073b288eb4901b742b2a8fdbeba5f8298937faf"
        },
        "commit_message": "Serializing null for non finit metric values (#461)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d073b288eb4901b742b2a8fdbeba5f8298937faf": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeSample(String key, double value, JsonWriter jw)"
                ]
            },
            "9017aa93867579c3f47c6f68be27887e34e0dabd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/MetricRegistrySerializer.java": [
                    "private static void co.elastic.apm.agent.report.serialize.MetricRegistrySerializer.serializeSample(String key, double value, JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "876483e9318d43d8ca85ed4ec3b1019bcac44735",
        "previous_commit": "86f11800159a3e88f695aab27666abbaf5a812ae",
        "date": 1574943974,
        "releases": {
            "previous": "876483e9318d43d8ca85ed4ec3b1019bcac44735",
            "next": "876483e9318d43d8ca85ed4ec3b1019bcac44735"
        },
        "commit_message": "Improve HttpUtils test coverage (initially 'remote config verbose log) (#931)\n\nImprove testing of HttpUtils\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "876483e9318d43d8ca85ed4ec3b1019bcac44735": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/HttpUtils.java": [
                    "public static void co.elastic.apm.agent.report.HttpUtils.consumeAndClose(@Nullable HttpURLConnection connection)"
                ]
            },
            "86f11800159a3e88f695aab27666abbaf5a812ae": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/HttpUtils.java": [
                    "public static void co.elastic.apm.agent.report.HttpUtils.consumeAndClose(@Nullable HttpURLConnection connection)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "47f0b686c3ea7375e6b0dd3bc57792911ad86fac",
        "previous_commit": "5de143707981b2db950120d1519c4327c4aad2da",
        "date": 1544441217,
        "releases": {
            "previous": "47f0b686c3ea7375e6b0dd3bc57792911ad86fac",
            "next": "47f0b686c3ea7375e6b0dd3bc57792911ad86fac"
        },
        "commit_message": "Adding incubating to allowed instrumentation labels mannually (#379)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "47f0b686c3ea7375e6b0dd3bc57792911ad86fac": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/CoreConfiguration.java": [
                    "public static String co.elastic.apm.agent.configuration.CoreConfiguration.getAllInstrumentationGroupNames()"
                ]
            },
            "5de143707981b2db950120d1519c4327c4aad2da": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/CoreConfiguration.java": [
                    "public static String co.elastic.apm.agent.configuration.CoreConfiguration.getAllInstrumentationGroupNames()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "73962e6789ac459f15564712ebb5399b3757d7c3",
        "previous_commit": "ec2b16c6d5453f21de6478ab166443705eb84dc9",
        "date": 1588842296,
        "releases": {
            "previous": "73962e6789ac459f15564712ebb5399b3757d7c3",
            "next": "73962e6789ac459f15564712ebb5399b3757d7c3"
        },
        "commit_message": "Automatic tracing for Jobs defined in quartz-jobs dependency (#1170)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "73962e6789ac459f15564712ebb5399b3757d7c3": {
                "apm-agent-plugins/apm-quartz-job-plugin/src/main/java/co/elastic/apm/agent/quartz/job/JobTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.quartz.job.JobTransactionNameInstrumentation.getTypeMatcher()"
                ]
            },
            "ec2b16c6d5453f21de6478ab166443705eb84dc9": {
                "apm-agent-plugins/apm-quartz-job-plugin/src/main/java/co/elastic/apm/agent/quartz/job/JobTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.quartz.job.JobTransactionNameInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "38150baea843f04edd86611aaed1ab1c3f411a49",
        "previous_commit": "1529c45b7e45168034dac26d3cd6eed140ddac95",
        "date": 1696515255,
        "releases": {
            "previous": "38150baea843f04edd86611aaed1ab1c3f411a49",
            "next": "38150baea843f04edd86611aaed1ab1c3f411a49"
        },
        "commit_message": "captured span.sync attribute for ES restclient spans plugins (#3329)\n\n* captured span.sync attribute for ES restclient spans plugins\r\n\r\n---------\r\n\r\nCo-authored-by: Sylvain Juge <763082+SylvainJuge@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "38150baea843f04edd86611aaed1ab1c3f411a49": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span<?> co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String httpPath, @Nullable HttpEntity httpEntity, boolean isSync)"
                ]
            },
            "1529c45b7e45168034dac26d3cd6eed140ddac95": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span<?> co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String httpPath, @Nullable HttpEntity httpEntity)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5a6f38924b3f9131b8b43f9da2102bfd9d125563",
        "previous_commit": "c0754095ce0bbd648d853b274b033e86a59c67d6",
        "date": 1636666116,
        "releases": {
            "previous": "5a6f38924b3f9131b8b43f9da2102bfd9d125563",
            "next": "5a6f38924b3f9131b8b43f9da2102bfd9d125563"
        },
        "commit_message": "added support to jakartaee for scheduled annotation plugin (#2250)\n\n* added support to jakartaee for scheduled annotation plugin\r\n\r\n* added entry to changelog. updated supported technologies\r\n\r\n* added license headers\r\n\r\n* updated supported techonologies for jax-ws",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5a6f38924b3f9131b8b43f9da2102bfd9d125563": {
                "apm-agent-plugins/apm-scheduled-annotation-plugin/src/main/java/co/elastic/apm/agent/scheduled/ScheduledTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.scheduled.ScheduledTransactionNameInstrumentation.getMethodMatcher()"
                ]
            },
            "c0754095ce0bbd648d853b274b033e86a59c67d6": {
                "apm-agent-plugins/apm-scheduled-annotation-plugin/src/main/java/co/elastic/apm/agent/scheduled/ScheduledTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.scheduled.ScheduledTransactionNameInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d89d4003c1483ea7f972eac56b2aedb45ed6f40d",
        "previous_commit": "d35839a8410e6c66f578190a2ccc5644876aad91",
        "date": 1535716681,
        "releases": {
            "previous": "d89d4003c1483ea7f972eac56b2aedb45ed6f40d",
            "next": "d89d4003c1483ea7f972eac56b2aedb45ed6f40d"
        },
        "commit_message": "Limit SQL statements to 10,000 chars #184\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d89d4003c1483ea7f972eac56b2aedb45ed6f40d": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)"
                ]
            },
            "d35839a8410e6c66f578190a2ccc5644876aad91": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpanContext(SpanContext context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ba6adb517d862c9d96550b7c51a58b02c9c91a95",
        "previous_commit": "14fdb1657cbdd639c41e98b08a3c8b89974c4d34",
        "date": 1520736860,
        "releases": {
            "previous": "ba6adb517d862c9d96550b7c51a58b02c9c91a95",
            "next": "ba6adb517d862c9d96550b7c51a58b02c9c91a95"
        },
        "commit_message": "Add jacoco coverage reports\n\nexecute via mvn clean jacoco:prepare-agent verify jacoco:report\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ba6adb517d862c9d96550b7c51a58b02c9c91a95": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.end(long nanoTime)"
                ]
            },
            "14fdb1657cbdd639c41e98b08a3c8b89974c4d34": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public void co.elastic.apm.impl.transaction.Span.end(long nanoTime)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "72e369e28eee923e94d7abac20fde06bdd95b39d",
        "previous_commit": "5d12fd19823a7b74a3348dcb8178221c0540878d",
        "date": 1584355541,
        "releases": {
            "previous": "72e369e28eee923e94d7abac20fde06bdd95b39d",
            "next": "72e369e28eee923e94d7abac20fde06bdd95b39d"
        },
        "commit_message": "Add API keys support  for backend authentication (#1083)\n\nAdd support for backend authentication with API keys\r\nUsing shared specs in gherkin/cucumber syntax.",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "72e369e28eee923e94d7abac20fde06bdd95b39d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequestToUrl(URL url)"
                ]
            },
            "5d12fd19823a7b74a3348dcb8178221c0540878d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequestToUrl(URL url)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9ba48722880e16ed1846b9678e1a8498a4b99b17",
        "previous_commit": "93e301ed9d98f180967e069c422c3be80b67efc5",
        "date": 1616525816,
        "releases": {
            "previous": "9ba48722880e16ed1846b9678e1a8498a4b99b17",
            "next": "9ba48722880e16ed1846b9678e1a8498a4b99b17"
        },
        "commit_message": "Avoid runtime attach user conflicts (#1704)\n\n* allow multiple users with same agent version",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9ba48722880e16ed1846b9678e1a8498a4b99b17": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static File co.elastic.apm.attach.ElasticApmAttacher.getAgentJarFile()"
                ]
            },
            "93e301ed9d98f180967e069c422c3be80b67efc5": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static File co.elastic.apm.attach.ElasticApmAttacher.getAgentJarFile()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0a94d47b1eed9d10fb3474f35398c7b4edad2a88",
        "previous_commit": "a6219bd1d078822e93c714e6258bdd9f8d5ca1fb",
        "date": 1721216285,
        "releases": {
            "previous": "0a94d47b1eed9d10fb3474f35398c7b4edad2a88",
            "next": "0a94d47b1eed9d10fb3474f35398c7b4edad2a88"
        },
        "commit_message": "z/OS avoids using NOFOLLOW_LINKS (#3722)\n\n* z/OS avoids using NOFOLLOW_LINKS\r\n\r\n* add changelg entry for zos-no-follow-links",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0a94d47b1eed9d10fb3474f35398c7b4edad2a88": {
                "apm-agent-common/src/main/java/co/elastic/apm/agent/common/util/ResourceExtractionUtil.java": [
                    "public static synchronized Path co.elastic.apm.agent.common.util.ResourceExtractionUtil.extractResourceToDirectory(String resource, String prefix, String suffix, Path directory)"
                ]
            },
            "a6219bd1d078822e93c714e6258bdd9f8d5ca1fb": {
                "apm-agent-common/src/main/java/co/elastic/apm/agent/common/util/ResourceExtractionUtil.java": [
                    "public static synchronized Path co.elastic.apm.agent.common.util.ResourceExtractionUtil.extractResourceToDirectory(String resource, String prefix, String suffix, Path directory)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d0e00baf62f7443efa533ee9542c7f55a8c8dcb4",
        "previous_commit": "0c39ed891800dfdfaec6d3b13703b117b009105f",
        "date": 1625626590,
        "releases": {
            "previous": "d0e00baf62f7443efa533ee9542c7f55a8c8dcb4",
            "next": "d0e00baf62f7443efa533ee9542c7f55a8c8dcb4"
        },
        "commit_message": "Auto-inference of destination.service.resource (#1898)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d0e00baf62f7443efa533ee9542c7f55a8c8dcb4": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.beforeEnd(long epochMicros)"
                ]
            },
            "0c39ed891800dfdfaec6d3b13703b117b009105f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Span.beforeEnd(long epochMicros)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "410c13299a0f1919b3f3a41df4ca876c46227bb4",
        "previous_commit": "ba963bf14b7559301f24e88dae244a91235f6cc0",
        "date": 1600861858,
        "releases": {
            "previous": "410c13299a0f1919b3f3a41df4ca876c46227bb4",
            "next": "410c13299a0f1919b3f3a41df4ca876c46227bb4"
        },
        "commit_message": "Sanitize metricset tag keys (#1413)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "410c13299a0f1919b3f3a41df4ca876c46227bb4": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "private static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeTags(List<Tag> tags, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            },
            "ba963bf14b7559301f24e88dae244a91235f6cc0": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "private static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeTags(List<Tag> tags, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e6de679c2a8a1c4a3b0d48cd38f1550fbbbaa06e",
        "previous_commit": "93779a8ac57c3fac61a873cd77fa79417db87e08",
        "date": 1543232088,
        "releases": {
            "previous": "e6de679c2a8a1c4a3b0d48cd38f1550fbbbaa06e",
            "next": "e6de679c2a8a1c4a3b0d48cd38f1550fbbbaa06e"
        },
        "commit_message": "Enable bootdelegation for atlassian products (#345)\n\nsee https://discuss.elastic.co/t/apm-and-jira/158057",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e6de679c2a8a1c4a3b0d48cd38f1550fbbbaa06e": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/OsgiBootDelegationEnabler.java": [
                    "public void co.elastic.apm.bci.OsgiBootDelegationEnabler.start(ElasticApmTracer tracer)"
                ]
            },
            "93779a8ac57c3fac61a873cd77fa79417db87e08": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/OsgiBootDelegationEnabler.java": [
                    "public void co.elastic.apm.bci.OsgiBootDelegationEnabler.start(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0b1441ee17d52066aab34c0c01c01dc504008b7f",
        "previous_commit": "69b64f64c0e4c230d2de456dde100a70fbf08e52",
        "date": 1636533325,
        "releases": {
            "previous": "0b1441ee17d52066aab34c0c01c01dc504008b7f",
            "next": "0b1441ee17d52066aab34c0c01c01dc504008b7f"
        },
        "commit_message": "Fix error transaction name serialization check and add tests (#2246)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0b1441ee17d52066aab34c0c01c01dc504008b7f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeErrorTransactionInfo(ErrorCapture.TransactionInfo errorTransactionInfo)"
                ]
            },
            "69b64f64c0e4c230d2de456dde100a70fbf08e52": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeErrorTransactionInfo(ErrorCapture.TransactionInfo errorTransactionInfo)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3f256a90195b3be5edefaf30b8cdf342430f524c",
        "previous_commit": "38eebc516d90ece0b8c2da9850ffdc9758253faa",
        "date": 1541492785,
        "releases": {
            "previous": "3f256a90195b3be5edefaf30b8cdf342430f524c",
            "next": "3f256a90195b3be5edefaf30b8cdf342430f524c"
        },
        "commit_message": "Use root endpoint for APM Server healthcheck\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3f256a90195b3be5edefaf30b8cdf342430f524c": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHealthChecker.java": [
                    "public void co.elastic.apm.report.ApmServerHealthChecker.run()"
                ]
            },
            "38eebc516d90ece0b8c2da9850ffdc9758253faa": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHealthChecker.java": [
                    "public void co.elastic.apm.report.ApmServerHealthChecker.run()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ca96d4e7b4bdf199f6459dce5fa4ed0db6d6e8fe",
        "previous_commit": "b73166d5b01be69a9bfb4dcaa9706bd207336e3b",
        "date": 1692710415,
        "releases": {
            "previous": "ca96d4e7b4bdf199f6459dce5fa4ed0db6d6e8fe",
            "next": "ca96d4e7b4bdf199f6459dce5fa4ed0db6d6e8fe"
        },
        "commit_message": "add missing 'histogram' type to micrometer (#3290)\n\n* add missing 'histogram' type to micrometer",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ca96d4e7b4bdf199f6459dce5fa4ed0db6d6e8fe": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "private static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeHistogram(Meter.Id id, HistogramSnapshot histogramSnapshot, JsonWriter jw, StringBuilder replaceBuilder, boolean dedotMetricName)"
                ]
            },
            "b73166d5b01be69a9bfb4dcaa9706bd207336e3b": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "private static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeHistogram(Meter.Id id, HistogramSnapshot histogramSnapshot, JsonWriter jw, StringBuilder replaceBuilder, boolean dedotMetricName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d4bf07752967536e0b2d704ffb1b0d66b207afd6",
        "previous_commit": "54a0f46d390d6667d57fe1ef116cba1f32d49718",
        "date": 1589806263,
        "releases": {
            "previous": "d4bf07752967536e0b2d704ffb1b0d66b207afd6",
            "next": "d4bf07752967536e0b2d704ffb1b0d66b207afd6"
        },
        "commit_message": "Logging ByteBuddy type resolution stack trace only on debug level (#1190)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d4bf07752967536e0b2d704ffb1b0d66b207afd6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ErrorLoggingListener.java": [
                    "public void co.elastic.apm.agent.bci.bytebuddy.ErrorLoggingListener.onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable)"
                ]
            },
            "54a0f46d390d6667d57fe1ef116cba1f32d49718": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ErrorLoggingListener.java": [
                    "public void co.elastic.apm.agent.bci.bytebuddy.ErrorLoggingListener.onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4053baf004bb3ce1c4a3943a4a30cda984625bd5",
        "previous_commit": "812d1d97af3f90f8cc3cbee82294c3adc4606ec6",
        "date": 1608649775,
        "releases": {
            "previous": "4053baf004bb3ce1c4a3943a4a30cda984625bd5",
            "next": "4053baf004bb3ce1c4a3943a4a30cda984625bd5"
        },
        "commit_message": "Add RabbitMQ support (#1328)\n\nAdd RabbitMQ support\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4053baf004bb3ce1c4a3943a4a30cda984625bd5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)"
                ]
            },
            "812d1d97af3f90f8cc3cbee82294c3adc4606ec6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.ensureInstrumented(Class<?> classToInstrument, Collection<Class<? extends ElasticApmInstrumentation>> instrumentationClasses)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "548095c7e2fccfeb187a1cedee8348b579476ba3",
        "previous_commit": "7d328022a4b3fe3e7ede19bfad1cd69f9bf738a1",
        "date": 1679563178,
        "releases": {
            "previous": "548095c7e2fccfeb187a1cedee8348b579476ba3",
            "next": "548095c7e2fccfeb187a1cedee8348b579476ba3"
        },
        "commit_message": "set the minimum central configuration retry time to 5 seconds (#3068)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "548095c7e2fccfeb187a1cedee8348b579476ba3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "private void co.elastic.apm.agent.configuration.ApmServerConfigurationSource.pollConfig(ConfigurationRegistry configurationRegistry)"
                ]
            },
            "7d328022a4b3fe3e7ede19bfad1cd69f9bf738a1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "private void co.elastic.apm.agent.configuration.ApmServerConfigurationSource.pollConfig(ConfigurationRegistry configurationRegistry)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "cea4237ed21084241a684b93578e725305630368",
        "previous_commit": "c609815ea80cc56733e638df8c97cd20249dad4d",
        "date": 1601628549,
        "releases": {
            "previous": "cea4237ed21084241a684b93578e725305630368",
            "next": "cea4237ed21084241a684b93578e725305630368"
        },
        "commit_message": "Remove cgroup inactive_file.bytes metric (#1422)\n\nRemove cgroup inactive_file.bytes metric\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "cea4237ed21084241a684b93578e725305630368": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/CGroupMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.CGroupMetrics.bindTo(MetricRegistry metricRegistry)"
                ]
            },
            "c609815ea80cc56733e638df8c97cd20249dad4d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/CGroupMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.CGroupMetrics.bindTo(MetricRegistry metricRegistry)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6d4b20e6c4f2cf71a2fe5d928ed08d57448530c3",
        "previous_commit": "cb509840861471a44c9d7b7203ca6c7b53adba50",
        "date": 1710175304,
        "releases": {
            "previous": "6d4b20e6c4f2cf71a2fe5d928ed08d57448530c3",
            "next": "6d4b20e6c4f2cf71a2fe5d928ed08d57448530c3"
        },
        "commit_message": "Fix inheritance for API annotations (#3551)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6d4b20e6c4f2cf71a2fe5d928ed08d57448530c3": {
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/bytebuddy/AnnotationValueOffsetMappingFactory.java": [
                    "private Object co.elastic.apm.agent.sdk.bytebuddy.AnnotationValueOffsetMappingFactory.getAnnotationValue(MethodDescription instrumentedMethod, AnnotationValueExtractor annotationValueExtractor)"
                ]
            },
            "cb509840861471a44c9d7b7203ca6c7b53adba50": {
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/bytebuddy/AnnotationValueOffsetMappingFactory.java": [
                    "private Object co.elastic.apm.agent.sdk.bytebuddy.AnnotationValueOffsetMappingFactory.getAnnotationValue(MethodDescription instrumentedMethod, AnnotationValueExtractor annotationValueExtractor)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5030aaf3d520dbe9af93298d55a1eb61c5ca4d3b",
        "previous_commit": "6187c818510882be756326c27bd095b8ae7a1563",
        "date": 1532417162,
        "releases": {
            "previous": "5030aaf3d520dbe9af93298d55a1eb61c5ca4d3b",
            "next": "5030aaf3d520dbe9af93298d55a1eb61c5ca4d3b"
        },
        "commit_message": "add tests\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5030aaf3d520dbe9af93298d55a1eb61c5ca4d3b": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/AsyncInstrumentation.java": [
                    "private static void co.elastic.apm.servlet.AsyncInstrumentation.onExitStartAsync(@Advice.Return AsyncContext asyncContext)"
                ]
            },
            "6187c818510882be756326c27bd095b8ae7a1563": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/AsyncInstrumentation.java": [
                    "private static void co.elastic.apm.servlet.AsyncInstrumentation.onExitStartAsync(@Advice.Return AsyncContext asyncContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a1214ac0c77fd3a092e3b8ff48ed573187cf58b0",
        "previous_commit": "eaf52ec7b0041113e439bf54e649f399e1767c0e",
        "date": 1527154607,
        "releases": {
            "previous": "a1214ac0c77fd3a092e3b8ff48ed573187cf58b0",
            "next": "a1214ac0c77fd3a092e3b8ff48ed573187cf58b0"
        },
        "commit_message": "Add transaction_id to spans (#89)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a1214ac0c77fd3a092e3b8ff48ed573187cf58b0": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            },
            "eaf52ec7b0041113e439bf54e649f399e1767c0e": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "30b3e041019be49c1c7eb89560c5e83586a0b8ec",
        "previous_commit": "c5e4cbb0f909361e868ebd8afa280aa52187a8c6",
        "date": 1600238880,
        "releases": {
            "previous": "30b3e041019be49c1c7eb89560c5e83586a0b8ec",
            "next": "30b3e041019be49c1c7eb89560c5e83586a0b8ec"
        },
        "commit_message": "fix #1402 & make sure we proactively avoid it (#1403)\n\n* fix #1402 & make sure we proactively avoid it",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "30b3e041019be49c1c7eb89560c5e83586a0b8ec": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdvice(Class<?> adviceClass)"
                ]
            },
            "c5e4cbb0f909361e868ebd8afa280aa52187a8c6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static void co.elastic.apm.agent.bci.ElasticApmAgent.validateAdvice(Class<?> adviceClass)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "10ee22038d398b28ca82e6901eff13d312cff430",
        "previous_commit": "9515ec757700af2dd31060cade2f226cb9957c76",
        "date": 1564407886,
        "releases": {
            "previous": "10ee22038d398b28ca82e6901eff13d312cff430",
            "next": "10ee22038d398b28ca82e6901eff13d312cff430"
        },
        "commit_message": "Use JSP path name as transaction name (#751)\n\nrather than the name of the generated servlet\r\n\r\ncloses #429",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "10ee22038d398b28ca82e6901eff13d312cff430": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "void co.elastic.apm.agent.servlet.ServletTransactionHelper.applyDefaultTransactionName(String method, String servletPath, @Nullable String pathInfo, Transaction transaction)"
                ]
            },
            "9515ec757700af2dd31060cade2f226cb9957c76": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "void co.elastic.apm.agent.servlet.ServletTransactionHelper.applyDefaultTransactionName(String method, String servletPath, @Nullable String pathInfo, Transaction transaction)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6bdd74effdcc2551fd4d6606fa0225546615628e",
        "previous_commit": "a4f6c1ce8951f53b5b6306ab43b9de4f13cf5ca8",
        "date": 1564407591,
        "releases": {
            "previous": "6bdd74effdcc2551fd4d6606fa0225546615628e",
            "next": "6bdd74effdcc2551fd4d6606fa0225546615628e"
        },
        "commit_message": "Add config_file option (#750)\n\ncloses #701",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6bdd74effdcc2551fd4d6606fa0225546615628e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private List<ConfigurationSource> co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getConfigSources(@Nullable String agentArguments)"
                ]
            },
            "a4f6c1ce8951f53b5b6306ab43b9de4f13cf5ca8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private List<ConfigurationSource> co.elastic.apm.agent.impl.ElasticApmTracerBuilder.getConfigSources(@Nullable String agentArguments)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f50df66082a7b4905b864ecaee34c576e014a62d",
        "previous_commit": "30b3e041019be49c1c7eb89560c5e83586a0b8ec",
        "date": 1600241358,
        "releases": {
            "previous": "f50df66082a7b4905b864ecaee34c576e014a62d",
            "next": "f50df66082a7b4905b864ecaee34c576e014a62d"
        },
        "commit_message": "Eliminate Java-11 HttpClient plugin class version errors (#1397)\n\n* Eliminate Java-11 HttpClient plugin class version errors\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f50df66082a7b4905b864ecaee34c576e014a62d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DependencyInjectingServiceLoader.java": [
                    "private T co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.instantiate(ClassLoader classLoader, String implementation)"
                ]
            },
            "30b3e041019be49c1c7eb89560c5e83586a0b8ec": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DependencyInjectingServiceLoader.java": [
                    "private T co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.instantiate(ClassLoader classLoader, String implementation)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8d926b111d2f96c2125b2e84d3c155067573a67d",
        "previous_commit": "28fcf2dc96d72f543047ad1dcc291bfbe9539bd6",
        "date": 1537178537,
        "releases": {
            "previous": "8d926b111d2f96c2125b2e84d3c155067573a67d",
            "next": "8d926b111d2f96c2125b2e84d3c155067573a67d"
        },
        "commit_message": "Use updated /intake/v2/events url (#201)\n\nsee elastic/apm-server#1360",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8d926b111d2f96c2125b2e84d3c155067573a67d": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private HttpURLConnection co.elastic.apm.report.IntakeV2ReportingEventHandler.startRequest()"
                ]
            },
            "28fcf2dc96d72f543047ad1dcc291bfbe9539bd6": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private HttpURLConnection co.elastic.apm.report.IntakeV2ReportingEventHandler.startRequest()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "35652312be1cbb3d18f739f497b59020f0f81449",
        "previous_commit": "2b095524b9fa61506207442ec7bcbb8c2d2dca85",
        "date": 1552980824,
        "releases": {
            "previous": "35652312be1cbb3d18f739f497b59020f0f81449",
            "next": "35652312be1cbb3d18f739f497b59020f0f81449"
        },
        "commit_message": "Reduce log level for container ID parsing (#532)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "35652312be1cbb3d18f739f497b59020f0f81449": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.parseContainerId(String line)"
                ]
            },
            "2b095524b9fa61506207442ec7bcbb8c2d2dca85": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.parseContainerId(String line)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6a02aeb4a135241530323c709f3595b02106e823",
        "previous_commit": "c3e718a1b991d402f6a66be643ec18fd672f940d",
        "date": 1579764413,
        "releases": {
            "previous": "6a02aeb4a135241530323c709f3595b02106e823",
            "next": "6a02aeb4a135241530323c709f3595b02106e823"
        },
        "commit_message": "JMS fix: transfer header on non-sampled traces (#999)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6a02aeb4a135241530323c709f3595b02106e823": {
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ]
            },
            "c3e718a1b991d402f6a66be643ec18fd672f940d": {
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.startJmsSendSpan(Destination destination, Message message)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0ee5659002be748dff3751ec433c168d2d67c144",
        "previous_commit": "6203d108917b55fdd05c2bd43dfdb138d508b299",
        "date": 1691596652,
        "releases": {
            "previous": "0ee5659002be748dff3751ec433c168d2d67c144",
            "next": "0ee5659002be748dff3751ec433c168d2d67c144"
        },
        "commit_message": "keep EOL in changelog (#3285)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0ee5659002be748dff3751ec433c168d2d67c144": {
                ".ci/ReleaseChangelog.java": [
                    "public static void ReleaseChangelog.main(String[] args)"
                ]
            },
            "6203d108917b55fdd05c2bd43dfdb138d508b299": {
                ".ci/ReleaseChangelog.java": [
                    "public static void ReleaseChangelog.main(String[] args)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "98707982806d720666c57e60f87c54de46220e93",
        "previous_commit": "78808a36a0cc07036337d63b2f45c5b60800fbe9",
        "date": 1603815286,
        "releases": {
            "previous": "98707982806d720666c57e60f87c54de46220e93",
            "next": "98707982806d720666c57e60f87c54de46220e93"
        },
        "commit_message": "Bootstrap lookup fix (#1458)\n\nfixes #1450",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "98707982806d720666c57e60f87c54de46220e93": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ]
            },
            "78808a36a0cc07036337d63b2f45c5b60800fbe9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java": [
                    "public static ConstantCallSite co.elastic.apm.agent.bci.IndyBootstrap.bootstrap(MethodHandles.Lookup lookup, String adviceMethodName, MethodType adviceMethodType, Object... args)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4b69ebf4da3a69ca9af2f873c13853682a077bc2",
        "previous_commit": "251adc9968c719389ea242502e035bd8732e74a1",
        "date": 1649057553,
        "releases": {
            "previous": "4b69ebf4da3a69ca9af2f873c13853682a077bc2",
            "next": "4b69ebf4da3a69ca9af2f873c13853682a077bc2"
        },
        "commit_message": "Fix log4j init with SecurityManager (#2568)\n\n* wrap in doPrivileged for logger init\r\n\r\n* try wrapping at lower level\r\n\r\n* moving back to where it was\r\n\r\n* fix the heuristic to get caller class for log init\r\n\r\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4b69ebf4da3a69ca9af2f873c13853682a077bc2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4jLoggerFactoryBridge.java": [
                    "protected LoggerContext co.elastic.apm.agent.logging.Log4jLoggerFactoryBridge.getContext()"
                ]
            },
            "251adc9968c719389ea242502e035bd8732e74a1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4jLoggerFactoryBridge.java": [
                    "protected LoggerContext co.elastic.apm.agent.logging.Log4jLoggerFactoryBridge.getContext()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "62acdb1f349474ade1fe037e10bfbe803e7ca580",
        "previous_commit": "688d796e269f5a4cb6cbca0ce903560df4b0058a",
        "date": 1557314793,
        "releases": {
            "previous": "62acdb1f349474ade1fe037e10bfbe803e7ca580",
            "next": "62acdb1f349474ade1fe037e10bfbe803e7ca580"
        },
        "commit_message": "Calculate free memory based on /proc/meminfo on Linux (#629)\n\ncloses #570",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "62acdb1f349474ade1fe037e10bfbe803e7ca580": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/SystemMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.SystemMetrics.bindTo(MetricRegistry metricRegistry)"
                ]
            },
            "688d796e269f5a4cb6cbca0ce903560df4b0058a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/SystemMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.SystemMetrics.bindTo(MetricRegistry metricRegistry)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "48d697eb4504b50b9dcb844ed2d9d4ec10a94a10",
        "previous_commit": "369598c8cf3ea9e48441f8d8c25bc5ce853a70c6",
        "date": 1625053144,
        "releases": {
            "previous": "48d697eb4504b50b9dcb844ed2d9d4ec10a94a10",
            "next": "48d697eb4504b50b9dcb844ed2d9d4ec10a94a10"
        },
        "commit_message": "avoid allocation for legacy servers (#1891)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "48d697eb4504b50b9dcb844ed2d9d4ec10a94a10": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeUrl(final Url url)"
                ]
            },
            "369598c8cf3ea9e48441f8d8c25bc5ce853a70c6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeUrl(final Url url)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c18e1f1905f6e9b85ea720fbaf3ba7ae108ef6ff",
        "previous_commit": "189c941c2abad8a40ff9bae91441f9318892053d",
        "date": 1578486184,
        "releases": {
            "previous": "c18e1f1905f6e9b85ea720fbaf3ba7ae108ef6ff",
            "next": "c18e1f1905f6e9b85ea720fbaf3ba7ae108ef6ff"
        },
        "commit_message": "Binary execution support (#903)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c18e1f1905f6e9b85ea720fbaf3ba7ae108ef6ff": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger)"
                ]
            },
            "189c941c2abad8a40ff9bae91441f9318892053d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "133232240d4a7075cc81f0637ae981074a96246c",
        "previous_commit": "845314c22812781bef92f1e5bc8a290f1e27ecf7",
        "date": 1631542385,
        "releases": {
            "previous": "133232240d4a7075cc81f0637ae981074a96246c",
            "next": "133232240d4a7075cc81f0637ae981074a96246c"
        },
        "commit_message": "Fixing GlobalThreadLocal to use per-thread default values (#2118)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "133232240d4a7075cc81f0637ae981074a96246c": {
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/state/GlobalThreadLocal.java": [
                    "protected T co.elastic.apm.agent.sdk.state.GlobalThreadLocal<T>.initialValue(Thread thread)"
                ]
            },
            "845314c22812781bef92f1e5bc8a290f1e27ecf7": {
                "apm-agent-plugin-sdk/src/main/java/co/elastic/apm/agent/sdk/state/GlobalThreadLocal.java": [
                    "protected T co.elastic.apm.agent.sdk.state.GlobalThreadLocal<T>.initialValue(Thread thread)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4fb39284494f05825afdb91ca52729d170c854d4",
        "previous_commit": "39c4d1b1eb83cc7e022bd9717a7633c8fb733558",
        "date": 1551691289,
        "releases": {
            "previous": "4fb39284494f05825afdb91ca52729d170c854d4",
            "next": "4fb39284494f05825afdb91ca52729d170c854d4"
        },
        "commit_message": "Fix ClassCastException on J9 (#506)\n\nfixes #505",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4fb39284494f05825afdb91ca52729d170c854d4": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/JvmGcMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.JvmGcMetrics.bindTo(final MetricRegistry registry)"
                ]
            },
            "39c4d1b1eb83cc7e022bd9717a7633c8fb733558": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/JvmGcMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.JvmGcMetrics.bindTo(final MetricRegistry registry)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f17f7b518dde2e81eeb2ca951087108a10a20d54",
        "previous_commit": "922a58d8b002dcd352125e803800bde96b975318",
        "date": 1522230168,
        "releases": {
            "previous": "f17f7b518dde2e81eeb2ca951087108a10a20d54",
            "next": "f17f7b518dde2e81eeb2ca951087108a10a20d54"
        },
        "commit_message": "Auto-generate configuration documentation\n\nrelates to #34\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f17f7b518dde2e81eeb2ca951087108a10a20d54": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private ConfigurationRegistry co.elastic.apm.impl.ElasticApmTracer.getDefaultConfigurationRegistry()"
                ]
            },
            "922a58d8b002dcd352125e803800bde96b975318": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private ConfigurationRegistry co.elastic.apm.impl.ElasticApmTracer.getDefaultConfigurationRegistry()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "dbb70b411567a4ff49e80b72552956705aa2fef4",
        "previous_commit": "3235db757f1055cc7d40d1c4f6b17b02be8f0667",
        "date": 1520616702,
        "releases": {
            "previous": "dbb70b411567a4ff49e80b72552956705aa2fef4",
            "next": "dbb70b411567a4ff49e80b72552956705aa2fef4"
        },
        "commit_message": "Add Dropped#increment\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "dbb70b411567a4ff49e80b72552956705aa2fef4": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)"
                ]
            },
            "3235db757f1055cc7d40d1c4f6b17b02be8f0667": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "be3870b03e33e670edaaae35ba0f3584ff3984f2",
        "previous_commit": "b6c6436aa1718bda50bcd6f3e8de8feff0e9f33b",
        "date": 1680524207,
        "releases": {
            "previous": "be3870b03e33e670edaaae35ba0f3584ff3984f2",
            "next": "be3870b03e33e670edaaae35ba0f3584ff3984f2"
        },
        "commit_message": "Add option elasticsearch capture body urls (#3091)\n\n* add elasticsearch_capture_body_urls option\r\n\r\n* add version added tag for doc\r\n\r\n* update generated doc\r\n\r\n* add apm-es-restclient-plugin-common dependency to fix PackagingTest failure\r\n\r\n* fix doc break and add changelog\r\n\r\n* Update CHANGELOG.asciidoc\r\n\r\nCo-authored-by: SylvainJuge <syl20j@gmail.com>\r\n\r\n---------\r\n\r\nCo-authored-by: SylvainJuge <syl20j@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "be3870b03e33e670edaaae35ba0f3584ff3984f2": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span<?> co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ]
            },
            "b6c6436aa1718bda50bcd6f3e8de8feff0e9f33b": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span<?> co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "13d3b4fc5ff228be5b537af7fceede3a586deda1",
        "previous_commit": "23b409468756bf9d266404bb1acc9ee2460f11f2",
        "date": 1659969327,
        "releases": {
            "previous": "13d3b4fc5ff228be5b537af7fceede3a586deda1",
            "next": "13d3b4fc5ff228be5b537af7fceede3a586deda1"
        },
        "commit_message": "Enabling agent build and support for Vert.x 4.3.2 (#2700)\n\nfix instrumentation & tests for 4.3.2\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "13d3b4fc5ff228be5b537af7fceede3a586deda1": {
                "apm-agent-plugins/apm-vertx/apm-vertx4-plugin/src/main/java/co/elastic/apm/agent/vertx/v4/EventLoopInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.vertx.v4.EventLoopInstrumentation.getTypeMatcher()"
                ]
            },
            "23b409468756bf9d266404bb1acc9ee2460f11f2": {
                "apm-agent-plugins/apm-vertx/apm-vertx4-plugin/src/main/java/co/elastic/apm/agent/vertx/v4/EventLoopInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.vertx.v4.EventLoopInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2959bf2c4a8cd120d6db800f5b872a1e6c12c51c",
        "previous_commit": "6fa471f64546dcccbc1091710d4464e5afc90c5e",
        "date": 1618595368,
        "releases": {
            "previous": "2959bf2c4a8cd120d6db800f5b872a1e6c12c51c",
            "next": "2959bf2c4a8cd120d6db800f5b872a1e6c12c51c"
        },
        "commit_message": "Fix Micrometer JSON serialization error (#1764)\n\n* fix & test hard to to reproduce JSON serialization error (happens mostly in CI).",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2959bf2c4a8cd120d6db800f5b872a1e6c12c51c": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "public JsonWriter co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serialize(final Map<Meter.Id, Meter> metersById, final long epochMicros)"
                ]
            },
            "6fa471f64546dcccbc1091710d4464e5afc90c5e": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "public JsonWriter co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serialize(final Map<Meter.Id, Meter> metersById, final long epochMicros)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "728f45e05430e81416f37347da423838c0441cee",
        "previous_commit": "3db86de15cd871ba248f383b07752047ff757158",
        "date": 1586353788,
        "releases": {
            "previous": "728f45e05430e81416f37347da423838c0441cee",
            "next": "728f45e05430e81416f37347da423838c0441cee"
        },
        "commit_message": "Fix dynamic instrumentation reconfiguration (#1128)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "728f45e05430e81416f37347da423838c0441cee": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.doReInitInstrumentation(Iterable<ElasticApmInstrumentation> instrumentations)"
                ]
            },
            "3db86de15cd871ba248f383b07752047ff757158": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.doReInitInstrumentation(Iterable<ElasticApmInstrumentation> instrumentations)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9888601afb5fd9a4cdecbffc43a3dc7d0acfba72",
        "previous_commit": "912ad2ce5383cd1f403c079b53b2053537de98d1",
        "date": 1558602015,
        "releases": {
            "previous": "9888601afb5fd9a4cdecbffc43a3dc7d0acfba72",
            "next": "9888601afb5fd9a4cdecbffc43a3dc7d0acfba72"
        },
        "commit_message": "Sanitize URLs of HTTP client spans (#632)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9888601afb5fd9a4cdecbffc43a3dc7d0acfba72": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Http.java": [
                    "public Http co.elastic.apm.agent.impl.transaction.Http.withUrl(@Nullable String url)"
                ]
            },
            "912ad2ce5383cd1f403c079b53b2053537de98d1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Http.java": [
                    "public Http co.elastic.apm.agent.impl.transaction.Http.withUrl(@Nullable String url)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a6773647f2605153a2d1f009fda32798d2b074dd",
        "previous_commit": "65791abdeebc239873e5b6972b68c08e495b05ae",
        "date": 1617097317,
        "releases": {
            "previous": "a6773647f2605153a2d1f009fda32798d2b074dd",
            "next": "a6773647f2605153a2d1f009fda32798d2b074dd"
        },
        "commit_message": "log readonly msg errors only in debug (#1715)\n\n* log readonly msg errors only in debug",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a6773647f2605153a2d1f009fda32798d2b074dd": {
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsMessagePropertyAccessor.java": [
                    "public void co.elastic.apm.agent.jms.JmsMessagePropertyAccessor.setHeader(String headerName, String headerValue, Message message)"
                ]
            },
            "65791abdeebc239873e5b6972b68c08e495b05ae": {
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsMessagePropertyAccessor.java": [
                    "public void co.elastic.apm.agent.jms.JmsMessagePropertyAccessor.setHeader(String headerName, String headerValue, Message message)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8f17345ca724956a567703e332fef9c2a7eddc00",
        "previous_commit": "51af1499f72c5565d29f327fe085129792086903",
        "date": 1606316512,
        "releases": {
            "previous": "8f17345ca724956a567703e332fef9c2a7eddc00",
            "next": "8f17345ca724956a567703e332fef9c2a7eddc00"
        },
        "commit_message": "Fix spring resttemplate 3.0 support (#1524)\n\nfix spring resttemplate incompatibility with early 3.0.0 -> 3.1.1 versions (just ignore them)\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8f17345ca724956a567703e332fef9c2a7eddc00": {
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/http/client/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(AbstractSpan<?> parent, String method, @Nullable String uri, String scheme, CharSequence hostName, int port)"
                ]
            },
            "51af1499f72c5565d29f327fe085129792086903": {
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/http/client/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.http.client.HttpClientHelper.startHttpClientSpan(AbstractSpan<?> parent, String method, @Nullable String uri, String scheme, CharSequence hostName, int port)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "93495c4dff46cf56765048bdb56fe9a6ac9caf24",
        "previous_commit": "6cdd4de3756c82a99f3afb559a00357945ab562e",
        "date": 1519928306,
        "releases": {
            "previous": "93495c4dff46cf56765048bdb56fe9a6ac9caf24",
            "next": "93495c4dff46cf56765048bdb56fe9a6ac9caf24"
        },
        "commit_message": "Make SystemInfo immutable\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "93495c4dff46cf56765048bdb56fe9a6ac9caf24": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private Reporter co.elastic.apm.impl.ElasticApmTracer.createReporter(CoreConfiguration coreConfiguration, ReporterConfiguration reporterConfiguration, String frameworkName, String frameworkVersion)"
                ]
            },
            "6cdd4de3756c82a99f3afb559a00357945ab562e": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "private Reporter co.elastic.apm.impl.ElasticApmTracer.createReporter(CoreConfiguration coreConfiguration, ReporterConfiguration reporterConfiguration, String frameworkName, String frameworkVersion)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c9b527941ebf798815d00b2c2555d53dbe08c6c2",
        "previous_commit": "0c8173eb2921eaedeec357f73b478b31f5e7a28a",
        "date": 1665673964,
        "releases": {
            "previous": "c9b527941ebf798815d00b2c2555d53dbe08c6c2",
            "next": "c9b527941ebf798815d00b2c2555d53dbe08c6c2"
        },
        "commit_message": "ECS reformat support for Tomcat (#2839)\n\n* first working version\n\n* add simple integration test\n\n* wip testing\n\n* disable IT by default to avoid {flaky,slow}ness\n\n* update doc\n\n* reuse common tests + fix one replace bug\n\n* cleanup\n\n* cleanup cleanup\n\n* post-review changes\n\n* update changelog\n\n* update doc\n\n* remove duplication in doc\n\n* cleanup doc again",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c9b527941ebf798815d00b2c2555d53dbe08c6c2": {
                "apm-agent-plugins/apm-logging-plugin/apm-jul-plugin/src/main/java/co/elastic/apm/agent/jul/reformatting/JulEcsReformattingHelper.java": [
                    "static String co.elastic.apm.agent.jul.reformatting.JulEcsReformattingHelper.computeEcsFileHandlerPattern(String pattern, Path originalFilePath, @Nullable String configuredReformattingDir, boolean createDirs)"
                ]
            },
            "0c8173eb2921eaedeec357f73b478b31f5e7a28a": {
                "apm-agent-plugins/apm-logging-plugin/apm-jul-plugin/src/main/java/co/elastic/apm/agent/jul/reformatting/JulEcsReformattingHelper.java": [
                    "static String co.elastic.apm.agent.jul.reformatting.JulEcsReformattingHelper.computeEcsFileHandlerPattern(String pattern, Path originalFilePath, @Nullable String configuredReformattingDir, boolean createDirs)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "448227912fb4848bb0b5c1b222a57a75a5061c1e",
        "previous_commit": "f9b2887b1258f6493495809a70d5673937d1b0a9",
        "date": 1602861854,
        "releases": {
            "previous": "448227912fb4848bb0b5c1b222a57a75a5061c1e",
            "next": "448227912fb4848bb0b5c1b222a57a75a5061c1e"
        },
        "commit_message": "Log VM arguments on startup (#1441)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "448227912fb4848bb0b5c1b222a57a75a5061c1e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "void co.elastic.apm.agent.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ]
            },
            "f9b2887b1258f6493495809a70d5673937d1b0a9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "void co.elastic.apm.agent.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3dc03c15079772be6644ae100e31440f6b4adb07",
        "previous_commit": "c95e5e524db86732f0508632acf8525511d8a54a",
        "date": 1559630072,
        "releases": {
            "previous": "3dc03c15079772be6644ae100e31440f6b4adb07",
            "next": "3dc03c15079772be6644ae100e31440f6b4adb07"
        },
        "commit_message": "Better span names for SQL spans (#633)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3dc03c15079772be6644ae100e31440f6b4adb07": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/PreparedStatementInstrumentation.java": [
                    "public static Span co.elastic.apm.agent.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ]
            },
            "c95e5e524db86732f0508632acf8525511d8a54a": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/PreparedStatementInstrumentation.java": [
                    "public static Span co.elastic.apm.agent.jdbc.PreparedStatementInstrumentation.onBeforeExecute(@Advice.This PreparedStatement statement)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9dc86f0e17c224d72d25388de4480d60105f4bb9",
        "previous_commit": "2d17eb511e69ed4b3155a8c20dfc40bcd084160f",
        "date": 1591715060,
        "releases": {
            "previous": "9dc86f0e17c224d72d25388de4480d60105f4bb9",
            "next": "9dc86f0e17c224d72d25388de4480d60105f4bb9"
        },
        "commit_message": "Add support for Apache Dubbo (#1052)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9dc86f0e17c224d72d25388de4480d60105f4bb9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "private static boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.canLoadClass(@Nullable ClassLoader target, String className)"
                ]
            },
            "2d17eb511e69ed4b3155a8c20dfc40bcd084160f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "private static boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.canLoadClass(@Nullable ClassLoader target, String className)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "683ba6c40d1c43bdd069baefcfefc9cd86f01311",
        "previous_commit": "c94a62ea8d90dec3f0ff2873f1da0577e9a26759",
        "date": 1686668179,
        "releases": {
            "previous": "683ba6c40d1c43bdd069baefcfefc9cd86f01311",
            "next": "683ba6c40d1c43bdd069baefcfefc9cd86f01311"
        },
        "commit_message": "allow bypassing exception details (#3140)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "683ba6c40d1c43bdd069baefcfefc9cd86f01311": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ]
            },
            "c94a62ea8d90dec3f0ff2873f1da0577e9a26759": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable AbstractSpan<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "64eacf31626a899f15475dbfa009e2eeb22cf317",
        "previous_commit": "c71292b64a1c2d19fc9cf483bf6bd17a6ff0e517",
        "date": 1522747052,
        "releases": {
            "previous": "64eacf31626a899f15475dbfa009e2eeb22cf317",
            "next": "64eacf31626a899f15475dbfa009e2eeb22cf317"
        },
        "commit_message": "Add LifecycleListener (#46)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "64eacf31626a899f15475dbfa009e2eeb22cf317": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.destroy()"
                ]
            },
            "c71292b64a1c2d19fc9cf483bf6bd17a6ff0e517": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.destroy()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "129a318b6efc0519139b517a9a5222bcc9f6f534",
        "previous_commit": "08bc842502848170143c8583d0293a3e02627f78",
        "date": 1701878295,
        "releases": {
            "previous": "129a318b6efc0519139b517a9a5222bcc9f6f534",
            "next": "129a318b6efc0519139b517a9a5222bcc9f6f534"
        },
        "commit_message": "Upgrade to OpenTelemetry 1.32.0, add support for bucket boundaries metrics API (#3447)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "129a318b6efc0519139b517a9a5222bcc9f6f534": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-metricsdk-plugin/src/main/java/co/elastic/apm/agent/otelmetricsdk/ElasticOtelMetricsExporter.java": [
                    "public Aggregation co.elastic.apm.agent.otelmetricsdk.ElasticOtelMetricsExporter.getDefaultAggregation(InstrumentType instrumentType)"
                ]
            },
            "08bc842502848170143c8583d0293a3e02627f78": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-metricsdk-plugin/src/main/java/co/elastic/apm/agent/otelmetricsdk/ElasticOtelMetricsExporter.java": [
                    "public Aggregation co.elastic.apm.agent.otelmetricsdk.ElasticOtelMetricsExporter.getDefaultAggregation(InstrumentType instrumentType)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "04ae148b9e1790451cc276f8e077ac166edbfcb1",
        "previous_commit": "d2b19e7727fa9ca9227978f788cade6e237f5a0f",
        "date": 1620203218,
        "releases": {
            "previous": "04ae148b9e1790451cc276f8e077ac166edbfcb1",
            "next": "04ae148b9e1790451cc276f8e077ac166edbfcb1"
        },
        "commit_message": "Vert.x Web instrumentation (#1697)\n\n* Vert.x Web instrumentation\r\n\r\n* Updated version to 1.22\r\n\r\n* Increased timeout for parallel / asnyc transactions test to increase test reliability.\r\n\r\n* code reuse + cleanup\r\n\r\n* avoid 'file-uploads' folder creation\r\n\r\n* inline advices classes when possible\r\n\r\n* avoid '.vertx' cache folder + fix instrumentation\r\n\r\n* move vertx 3.x classes\r\n\r\n* code reformat\r\n\r\n* move things around again\r\n\r\n* move things around + update to latest\r\n\r\n* cleanup\r\n\r\n* start optimize matching\r\n\r\n* fast pre-filter with app packages\r\n\r\n* minor code change\r\n\r\n* remove relying on application packages\r\n\r\n* minor trivial code esthetics\r\n\r\n* Added Vert.x to changelog\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "04ae148b9e1790451cc276f8e077ac166edbfcb1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequestToUrl(URL url)"
                ]
            },
            "d2b19e7727fa9ca9227978f788cade6e237f5a0f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private HttpURLConnection co.elastic.apm.agent.report.ApmServerClient.startRequestToUrl(URL url)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e9b5c779629c63d016bbcba91a71ef4f16d13f26",
        "previous_commit": "f9267ff7fc7df619cb2272b8790fde618055c8f6",
        "date": 1624433078,
        "releases": {
            "previous": "e9b5c779629c63d016bbcba91a71ef4f16d13f26",
            "next": "e9b5c779629c63d016bbcba91a71ef4f16d13f26"
        },
        "commit_message": "Fixes NPE on Webflux headers (#1871)\n\n* code cleanup\n\n* add common test for text headers\n\n* code cleanup\n\n* update changelog\n\n* fix PR reference in changelog\n\n* post review changes",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e9b5c779629c63d016bbcba91a71ef4f16d13f26": {
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/HeaderGetter.java": [
                    "public <S> void co.elastic.apm.agent.springwebflux.HeaderGetter.forEach(String headerName, HttpHeaders carrier, S state, HeaderConsumer<String, S> consumer)"
                ]
            },
            "f9267ff7fc7df619cb2272b8790fde618055c8f6": {
                "apm-agent-plugins/apm-spring-webflux/apm-spring-webflux-plugin/src/main/java/co/elastic/apm/agent/springwebflux/HeaderGetter.java": [
                    "public <S> void co.elastic.apm.agent.springwebflux.HeaderGetter.forEach(String headerName, HttpHeaders carrier, S state, HeaderConsumer<String, S> consumer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0f3fb93d090029689699388b4ba0ba3d064d11e2",
        "previous_commit": "908c06e194ff0fbf3f5be4db09e847c65d4f7e16",
        "date": 1660056904,
        "releases": {
            "previous": "0f3fb93d090029689699388b4ba0ba3d064d11e2",
            "next": "0f3fb93d090029689699388b4ba0ba3d064d11e2"
        },
        "commit_message": "Bump version.byte-buddy from 1.12.12 to 1.12.13 (#2736)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0f3fb93d090029689699388b4ba0ba3d064d11e2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)"
                ]
            },
            "908c06e194ff0fbf3f5be4db09e847c65d4f7e16": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation, final ElementMatcher<? super TypeDescription> typeMatcher)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b1a41729f43377b8cfbed387753ebe4bcc0b405a",
        "previous_commit": "a28d9786f93e1e446ffe3d5d155d5b127eb81881",
        "date": 1716366088,
        "releases": {
            "previous": "b1a41729f43377b8cfbed387753ebe4bcc0b405a",
            "next": "b1a41729f43377b8cfbed387753ebe4bcc0b405a"
        },
        "commit_message": "Exclude new Cisco AppD packages (#3632)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b1a41729f43377b8cfbed387753ebe4bcc0b405a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, final Logger logger, final AgentBuilder.DescriptionStrategy descriptionStrategy, final boolean premain, final boolean useTypePoolCache)"
                ]
            },
            "a28d9786f93e1e446ffe3d5d155d5b127eb81881": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, final Logger logger, final AgentBuilder.DescriptionStrategy descriptionStrategy, final boolean premain, final boolean useTypePoolCache)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "71bbdf7ac53f3c7ac4b809167d514468df9dc3b6",
        "previous_commit": "86184c5440887feb03d69dda41e30dfc4ce78e34",
        "date": 1688995830,
        "releases": {
            "previous": "71bbdf7ac53f3c7ac4b809167d514468df9dc3b6",
            "next": "71bbdf7ac53f3c7ac4b809167d514468df9dc3b6"
        },
        "commit_message": "Ignore gc alloc metrics when unsupported (#3225)\n\n* simply ignore when it's unsupported",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "71bbdf7ac53f3c7ac4b809167d514468df9dc3b6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/JvmGcMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.JvmGcMetrics.bindTo(final MetricRegistry registry)"
                ]
            },
            "86184c5440887feb03d69dda41e30dfc4ce78e34": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/JvmGcMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.JvmGcMetrics.bindTo(final MetricRegistry registry)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "38557dd21d66fd5f3822d4d372ec4a5d40802f38",
        "previous_commit": "30ae8d6a2553e26fed9c0b622ec658967be5e392",
        "date": 1672833464,
        "releases": {
            "previous": "38557dd21d66fd5f3822d4d372ec4a5d40802f38",
            "next": "38557dd21d66fd5f3822d4d372ec4a5d40802f38"
        },
        "commit_message": "Add bootstrap check for JVM tools (#2924)\n\n* add bootstrap check for JVM tools\n\n* enhance heuristic for Java8\n\n* update changelog\n\n* post-review changes + test\n\n* revert to a gentle warning\n\n* fix warning message\n\n* add comment",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "38557dd21d66fd5f3822d4d372ec4a5d40802f38": {
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/BootstrapChecks.java": [
                    "static BootstrapChecks co.elastic.apm.agent.premain.BootstrapChecks.defaults()"
                ]
            },
            "30ae8d6a2553e26fed9c0b622ec658967be5e392": {
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/BootstrapChecks.java": [
                    "static BootstrapChecks co.elastic.apm.agent.premain.BootstrapChecks.defaults()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "eaf52ec7b0041113e439bf54e649f399e1767c0e",
        "previous_commit": "f9d397f0a419a5de6d71414ae3c7cbb83b43f129",
        "date": 1527079488,
        "releases": {
            "previous": "eaf52ec7b0041113e439bf54e649f399e1767c0e",
            "next": "eaf52ec7b0041113e439bf54e649f399e1767c0e"
        },
        "commit_message": "Set correct time on Span#finish in OT bridge\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "eaf52ec7b0041113e439bf54e649f399e1767c0e": {
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpan.java": [
                    "public void co.elastic.apm.opentracing.ApmSpan.finish()"
                ]
            },
            "f9d397f0a419a5de6d71414ae3c7cbb83b43f129": {
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpan.java": [
                    "public void co.elastic.apm.opentracing.ApmSpan.finish()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "71251b5af4e886f125df2d349254dd0d75454498",
        "previous_commit": "246c52db2d3e7f72cb2a39840c3b7d91b4bce959",
        "date": 1647613573,
        "releases": {
            "previous": "71251b5af4e886f125df2d349254dd0d75454498",
            "next": "71251b5af4e886f125df2d349254dd0d75454498"
        },
        "commit_message": "WebSocket requests should be captured with transaction type request (#2501)\n\n* WebSocket requests should be captured with transaction type request\r\n\r\n* Added 2501 to the changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "71251b5af4e886f125df2d349254dd0d75454498": {
                "apm-agent-plugins/apm-jakarta-websocket-plugin/src/main/java/co/elastic/apm/agent/websocket/BaseServerEndpointInstrumentation.java": [
                    "protected static Object co.elastic.apm.agent.websocket.BaseServerEndpointInstrumentation.startTransactionOrSetTransactionName(String signature, String frameworkName, @Nullable String frameworkVersion)"
                ]
            },
            "246c52db2d3e7f72cb2a39840c3b7d91b4bce959": {
                "apm-agent-plugins/apm-jakarta-websocket-plugin/src/main/java/co/elastic/apm/agent/websocket/BaseServerEndpointInstrumentation.java": [
                    "protected static Object co.elastic.apm.agent.websocket.BaseServerEndpointInstrumentation.startTransactionOrSetTransactionName(String signature, String frameworkName, @Nullable String frameworkVersion)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "251adc9968c719389ea242502e035bd8732e74a1",
        "previous_commit": "efeaec60be68418fd1f0dad37ba40df60b3c15a5",
        "date": 1648815870,
        "releases": {
            "previous": "251adc9968c719389ea242502e035bd8732e74a1",
            "next": "251adc9968c719389ea242502e035bd8732e74a1"
        },
        "commit_message": "Fix agent class package definition (#2566)\n\n* fix typo when defining package\r\n\r\n* use method handle for jdk compatibility\r\n\r\n* let's stay positive\r\n\r\n* fix method handle for call to super\r\n\r\n* IBM J9 never disappoints\r\n\r\n* fix method handle\r\n\r\n* post-review changes: simplify & comment for now\r\n\r\n* update changelog\r\n\r\n* cleanup",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "251adc9968c719389ea242502e035bd8732e74a1": {
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/ShadedClassLoader.java": [
                    "private Class<?> co.elastic.apm.agent.premain.ShadedClassLoader.defineClass(String name, byte[] classBytes)"
                ]
            },
            "efeaec60be68418fd1f0dad37ba40df60b3c15a5": {
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/ShadedClassLoader.java": [
                    "private Class<?> co.elastic.apm.agent.premain.ShadedClassLoader.defineClass(String name, byte[] classBytes)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "76c6fec99609cb33e461b6cc890444b6a05d118e",
        "previous_commit": "08eb1d22a2eb4c25046b50faf932b92c7f687be1",
        "date": 1629366939,
        "releases": {
            "previous": "76c6fec99609cb33e461b6cc890444b6a05d118e",
            "next": "76c6fec99609cb33e461b6cc890444b6a05d118e"
        },
        "commit_message": "jdk-httpserver instrumentation is not experimental anymore (#1970)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "76c6fec99609cb33e461b6cc890444b6a05d118e": {
                "apm-agent-plugins/apm-jdk-httpserver-plugin/src/main/java/co/elastic/apm/agent/httpserver/JdkHttpServerInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.httpserver.JdkHttpServerInstrumentation.getInstrumentationGroupNames()"
                ]
            },
            "08eb1d22a2eb4c25046b50faf932b92c7f687be1": {
                "apm-agent-plugins/apm-jdk-httpserver-plugin/src/main/java/co/elastic/apm/agent/httpserver/JdkHttpServerInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.httpserver.JdkHttpServerInstrumentation.getInstrumentationGroupNames()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "dbad280925ea3313a26f97e383d7593a851e2359",
        "previous_commit": "197265ba240e2ffdfedb9d9779400948e99b7566",
        "date": 1519375166,
        "releases": {
            "previous": "dbad280925ea3313a26f97e383d7593a851e2359",
            "next": "dbad280925ea3313a26f97e383d7593a851e2359"
        },
        "commit_message": "Add logger to payload sender\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "dbad280925ea3313a26f97e383d7593a851e2359": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final TransactionPayload payload)"
                ]
            },
            "197265ba240e2ffdfedb9d9779400948e99b7566": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final TransactionPayload payload)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "aa5e40647643805c3ed509b465d496a260004501",
        "previous_commit": "48917f46c4957cdcc26e98006e0364bdcfb63de1",
        "date": 1651156176,
        "releases": {
            "previous": "aa5e40647643805c3ed509b465d496a260004501",
            "next": "aa5e40647643805c3ed509b465d496a260004501"
        },
        "commit_message": "Security Manager log file fallback (#2581)\n\n* add fallback when log not writeable due to SM\r\n\r\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "aa5e40647643805c3ed509b465d496a260004501": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "static String co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.getActualLogFile(@Nullable String agentHome, String logFile)"
                ]
            },
            "48917f46c4957cdcc26e98006e0364bdcfb63de1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "static String co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.getActualLogFile(@Nullable String agentHome, String logFile)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d18438bcebf56926079c56fb982d6bde73347e0d",
        "previous_commit": "9bf9d9740114dd04a8a9e5aac8ae0e6adb2d1d29",
        "date": 1535093183,
        "releases": {
            "previous": "d18438bcebf56926079c56fb982d6bde73347e0d",
            "next": "d18438bcebf56926079c56fb982d6bde73347e0d"
        },
        "commit_message": "Add support for Spring RestTemplate (#169)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d18438bcebf56926079c56fb982d6bde73347e0d": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeException(@Nullable Throwable exception)"
                ]
            },
            "9bf9d9740114dd04a8a9e5aac8ae0e6adb2d1d29": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeException(@Nullable Throwable exception)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2c582e3a68de9665d7e72e42cd01c71188839ff1",
        "previous_commit": "e4cdde0b860ff37ea57e0ca083c62b319c0ee940",
        "date": 1573571405,
        "releases": {
            "previous": "2c582e3a68de9665d7e72e42cd01c71188839ff1",
            "next": "2c582e3a68de9665d7e72e42cd01c71188839ff1"
        },
        "commit_message": "Instrumenting DB2 driver Statement classes based on package name (#926)\n\n\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2c582e3a68de9665d7e72e42cd01c71188839ff1": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.jdbc.StatementInstrumentation.getTypeMatcherPreFilter()"
                ]
            },
            "e4cdde0b860ff37ea57e0ca083c62b319c0ee940": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.jdbc.StatementInstrumentation.getTypeMatcherPreFilter()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "90b143008c9c05e8f5934f5e6f6da403f511ae33",
        "previous_commit": "4ddcfc6d084c584232251b49c9d63c697cab2563",
        "date": 1694616700,
        "releases": {
            "previous": "90b143008c9c05e8f5934f5e6f6da403f511ae33",
            "next": "90b143008c9c05e8f5934f5e6f6da403f511ae33"
        },
        "commit_message": "Fix DB2 jdbc connection instrumentation (#3313)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "90b143008c9c05e8f5934f5e6f6da403f511ae33": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/ConnectionInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.jdbc.ConnectionInstrumentation.getTypeMatcherPreFilter()"
                ]
            },
            "4ddcfc6d084c584232251b49c9d63c697cab2563": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/ConnectionInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.jdbc.ConnectionInstrumentation.getTypeMatcherPreFilter()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b92ab24157a534e7763b0bcdf20bd42c4f6f16e1",
        "previous_commit": "bf1d22922b85d1ff5eb6ad330e9f9901435a7721",
        "date": 1606385013,
        "releases": {
            "previous": "b92ab24157a534e7763b0bcdf20bd42c4f6f16e1",
            "next": "b92ab24157a534e7763b0bcdf20bd42c4f6f16e1"
        },
        "commit_message": "migrate to indy jms plugin (#1394)\n\n* migrate to indy jms plugin\r\n\r\nCo-authored-by: kananindzya <kananindzya@gmail.com>\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b92ab24157a534e7763b0bcdf20bd42c4f6f16e1": {
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public MessageListener co.elastic.apm.agent.jms.JmsInstrumentationHelper.wrapLambda(@Nullable MessageListener listener)"
                ]
            },
            "bf1d22922b85d1ff5eb6ad330e9f9901435a7721": {
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public MessageListener co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.wrapLambda(@Nullable MessageListener listener)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0da9a0da56345e4a18b6cbec1b953ede9dc3ad78",
        "previous_commit": "a0e0abdcbf73b3a1dcc949a92780c9983e55e8ff",
        "date": 1586256228,
        "releases": {
            "previous": "0da9a0da56345e4a18b6cbec1b953ede9dc3ad78",
            "next": "0da9a0da56345e4a18b6cbec1b953ede9dc3ad78"
        },
        "commit_message": "Remove incubating, introduce experimental (#1123)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0da9a0da56345e4a18b6cbec1b953ede9dc3ad78": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static boolean co.elastic.apm.agent.bci.ElasticApmAgent.isIncluded(ElasticApmInstrumentation advice, CoreConfiguration coreConfiguration)"
                ]
            },
            "a0e0abdcbf73b3a1dcc949a92780c9983e55e8ff": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static boolean co.elastic.apm.agent.bci.ElasticApmAgent.isIncluded(ElasticApmInstrumentation advice, CoreConfiguration coreConfiguration)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d0f108afbb461a343fa680c2253f49370dfa6783",
        "previous_commit": "815b2136bcc68561f342d3d233c9c45fcadaef57",
        "date": 1709742804,
        "releases": {
            "previous": "d0f108afbb461a343fa680c2253f49370dfa6783",
            "next": "d0f108afbb461a343fa680c2253f49370dfa6783"
        },
        "commit_message": "Avoid instanceof if redacted exceptions are active (#3553)\n\n* Avoid instanceof if redacted exceptions are active\r\n\r\n* Added changelog\r\n\r\n* Fix test",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d0f108afbb461a343fa680c2253f49370dfa6783": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Throwable co.elastic.apm.agent.impl.ElasticApmTracer.redactExceptionIfRequired(@Nullable Throwable original)"
                ]
            },
            "815b2136bcc68561f342d3d233c9c45fcadaef57": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Throwable co.elastic.apm.agent.impl.ElasticApmTracer.redactExceptionIfRequired(@Nullable Throwable original)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b7524671bedc7b5fb8f07a41b0c7a87d03eab21b",
        "previous_commit": "3a2163e17f50f57a6f59041a451488f36cdeb844",
        "date": 1692979465,
        "releases": {
            "previous": "b7524671bedc7b5fb8f07a41b0c7a87d03eab21b",
            "next": "b7524671bedc7b5fb8f07a41b0c7a87d03eab21b"
        },
        "commit_message": " Enhance/document msg listener heuristic (#3299)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b7524671bedc7b5fb8f07a41b0c7a87d03eab21b": {
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/BaseJmsInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.jms.BaseJmsInstrumentation.getMessageListenerTypeMatcherPreFilter()"
                ]
            },
            "3a2163e17f50f57a6f59041a451488f36cdeb844": {
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/BaseJmsInstrumentation.java": [
                    "public ElementMatcher<? super NamedElement> co.elastic.apm.agent.jms.BaseJmsInstrumentation.getMessageListenerTypeMatcherPreFilter()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3187b4fbbf349041f95080e49b194848b1c33098",
        "previous_commit": "14d1b8af8c6f9a531a2ed785576e68a61da0953e",
        "date": 1648053442,
        "releases": {
            "previous": "3187b4fbbf349041f95080e49b194848b1c33098",
            "next": "3187b4fbbf349041f95080e49b194848b1c33098"
        },
        "commit_message": "Log less frightening message when a plugin's class version is unsupported in the current VM (#2537)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3187b4fbbf349041f95080e49b194848b1c33098": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DependencyInjectingServiceLoader.java": [
                    "private T co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.instantiate(ClassLoader classLoader, String implementation)"
                ]
            },
            "14d1b8af8c6f9a531a2ed785576e68a61da0953e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/DependencyInjectingServiceLoader.java": [
                    "private T co.elastic.apm.agent.util.DependencyInjectingServiceLoader<T>.instantiate(ClassLoader classLoader, String implementation)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b157471603bf2cad54552d9e164d295bd8d06b35",
        "previous_commit": "f359ad0166e9d4fdba5b1544891fadb4dfafed38",
        "date": 1602054562,
        "releases": {
            "previous": "b157471603bf2cad54552d9e164d295bd8d06b35",
            "next": "b157471603bf2cad54552d9e164d295bd8d06b35"
        },
        "commit_message": "Optimize for loop (#1430)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b157471603bf2cad54552d9e164d295bd8d06b35": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static boolean co.elastic.apm.agent.report.serialize.DslJsonSerializer.isExcluded(StackTraceElement stackTraceElement)"
                ]
            },
            "f359ad0166e9d4fdba5b1544891fadb4dfafed38": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static boolean co.elastic.apm.agent.report.serialize.DslJsonSerializer.isExcluded(StackTraceElement stackTraceElement)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "83d3fd4b6d9cba685ae09ce94a49127f68e2fbcd",
        "previous_commit": "dc5e47437df23348b82ade3b66e4f770c8abe7b6",
        "date": 1648737546,
        "releases": {
            "previous": "83d3fd4b6d9cba685ae09ce94a49127f68e2fbcd",
            "next": "83d3fd4b6d9cba685ae09ce94a49127f68e2fbcd"
        },
        "commit_message": "workaround premature recycling (compression related) (#2558)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "83d3fd4b6d9cba685ae09ce94a49127f68e2fbcd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "private boolean co.elastic.apm.agent.impl.transaction.Span.tryToCompressComposite(Span sibling)"
                ]
            },
            "dc5e47437df23348b82ade3b66e4f770c8abe7b6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "private boolean co.elastic.apm.agent.impl.transaction.Span.tryToCompressComposite(Span sibling)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b7eb8a43ab49a6ac0379e5a73bf6e0081364c51c",
        "previous_commit": "190da128fee8f8fa6d69c746cf58ae1a18b04833",
        "date": 1521490586,
        "releases": {
            "previous": "b7eb8a43ab49a6ac0379e5a73bf6e0081364c51c",
            "next": "b7eb8a43ab49a6ac0379e5a73bf6e0081364c51c"
        },
        "commit_message": "Implement verify_server_cert option\n\nrelates to #2\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b7eb8a43ab49a6ac0379e5a73bf6e0081364c51c": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.build()"
                ]
            },
            "190da128fee8f8fa6d69c746cf58ae1a18b04833": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.build()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "969e2e985593b5f475eb60ad1785228794f4956d",
        "previous_commit": "e6e2756b4448ea35a5773d3ef9ada0ff8d3cba3c",
        "date": 1560842732,
        "releases": {
            "previous": "969e2e985593b5f475eb60ad1785228794f4956d",
            "next": "969e2e985593b5f475eb60ad1785228794f4956d"
        },
        "commit_message": "Fix error serialization (#675)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "969e2e985593b5f475eb60ad1785228794f4956d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.hasContent()"
                ]
            },
            "e6e2756b4448ea35a5773d3ef9ada0ff8d3cba3c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.hasContent()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "295a5a7c253667ae9841977eddd35b77675c569e",
        "previous_commit": "5da9133d59ad4a5b9e900b9d48e14d4aafe5632a",
        "date": 1664288169,
        "releases": {
            "previous": "295a5a7c253667ae9841977eddd35b77675c569e",
            "next": "295a5a7c253667ae9841977eddd35b77675c569e"
        },
        "commit_message": "Bump jctools-core from 3.3.0 to 4.0.1 (#2792)\n\n* Bump jctools-core from 3.3.0 to 4.0.1\r\n\r\nBumps [jctools-core](https://github.com/JCTools/JCTools) from 3.3.0 to 4.0.1.\r\n- [Release notes](https://github.com/JCTools/JCTools/releases)\r\n- [Changelog](https://github.com/JCTools/JCTools/blob/master/RELEASE-NOTES.md)\r\n- [Commits](https://github.com/JCTools/JCTools/compare/v3.3.0...v4.0.1)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.jctools:jctools-core\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-major\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\n* refactor for removed classes\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "295a5a7c253667ae9841977eddd35b77675c569e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/objectpool/ObjectPoolFactory.java": [
                    "public <T extends Recyclable> ObjectPool<T> co.elastic.apm.agent.objectpool.ObjectPoolFactory.createRecyclableObjectPool(int maxCapacity, Allocator<T> allocator)"
                ]
            },
            "5da9133d59ad4a5b9e900b9d48e14d4aafe5632a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/objectpool/ObjectPoolFactory.java": [
                    "protected <T extends Recyclable> ObjectPool<T> co.elastic.apm.agent.objectpool.ObjectPoolFactory.createRecyclableObjectPool(int maxCapacity, Allocator<T> allocator)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c547d4d5c344d82079c3ea395597da086afd5d79",
        "previous_commit": "e9119905941075f3c9543a35e134e7e55015f7e2",
        "date": 1593076527,
        "releases": {
            "previous": "c547d4d5c344d82079c3ea395597da086afd5d79",
            "next": "c547d4d5c344d82079c3ea395597da086afd5d79"
        },
        "commit_message": "Capture request body for more Elasticsearch APIs (#1222)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c547d4d5c344d82079c3ea395597da086afd5d79": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.es.restclient.ElasticsearchRestClientInstrumentationHelperImpl.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ]
            },
            "e9119905941075f3c9543a35e134e7e55015f7e2": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java": [
                    "public Span co.elastic.apm.agent.es.restclient.ElasticsearchRestClientInstrumentationHelperImpl.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "42185b707681761bc3e6fea468071a2e9290a53f",
        "previous_commit": "f51f253eb992ff91a015157ebf21233dd89aefc8",
        "date": 1556004951,
        "releases": {
            "previous": "42185b707681761bc3e6fea468071a2e9290a53f",
            "next": "42185b707681761bc3e6fea468071a2e9290a53f"
        },
        "commit_message": "Fix classloader deadlock with FileSystems.getDefault() by preloading (#603)\n\nJDK bug https://bugs.openjdk.java.net/browse/JDK-8194653",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "42185b707681761bc3e6fea468071a2e9290a53f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.bci.AgentMain.init(String agentArguments, Instrumentation instrumentation)"
                ]
            },
            "f51f253eb992ff91a015157ebf21233dd89aefc8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.bci.AgentMain.init(String agentArguments, Instrumentation instrumentation)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "87b4c284bb4a6d5253e273ad55a8ac7c4acabaa6",
        "previous_commit": "91d988e125e2d0060b4f19454f294526a1f37b68",
        "date": 1686142077,
        "releases": {
            "previous": "87b4c284bb4a6d5253e273ad55a8ac7c4acabaa6",
            "next": "87b4c284bb4a6d5253e273ad55a8ac7c4acabaa6"
        },
        "commit_message": "Protect against stackoverflow when printing advice exceptions (#3159)\n\n\r\nCo-authored-by: jackshirazi <jacks@fasterj.com>\r\n\r\n---------\r\n\r\nCo-authored-by: jackshirazi <jacks@fasterj.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "87b4c284bb4a6d5253e273ad55a8ac7c4acabaa6": {
                "apm-agent-bootstrap/src/main/java/bootstrap/dispatcher/IndyBootstrapDispatcher.java": [
                    "public static void bootstrap.dispatcher.IndyBootstrapDispatcher.logAdviceException(Throwable exception)"
                ]
            },
            "91d988e125e2d0060b4f19454f294526a1f37b68": {
                "apm-agent-bootstrap/src/main/java/bootstrap/dispatcher/IndyBootstrapDispatcher.java": [
                    "public static void bootstrap.dispatcher.IndyBootstrapDispatcher.logAdviceException(Throwable exception)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "83c698172889d68b49e25da02e9f4693ae8e367e",
        "previous_commit": "3541ec0fe28649ff6a767bc73ddbcbb3552e9924",
        "date": 1569492985,
        "releases": {
            "previous": "83c698172889d68b49e25da02e9f4693ae8e367e",
            "next": "83c698172889d68b49e25da02e9f4693ae8e367e"
        },
        "commit_message": "Only iterate stack if not empty (#862)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "83c698172889d68b49e25da02e9f4693ae8e367e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()"
                ]
            },
            "3541ec0fe28649ff6a767bc73ddbcbb3552e9924": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "831ab8f805302e3ed92860fb7e6c87423e367a6d",
        "previous_commit": "1ca0be8da43984959c71ad17ce203a37a7ba9b9e",
        "date": 1556009456,
        "releases": {
            "previous": "831ab8f805302e3ed92860fb7e6c87423e367a6d",
            "next": "831ab8f805302e3ed92860fb7e6c87423e367a6d"
        },
        "commit_message": "Fix Manifest version reading error to support jar:file protocol (#601)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "831ab8f805302e3ed92860fb7e6c87423e367a6d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "private static @Nullable Version co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.readImplementationVersionFromManifest(@Nullable ProtectionDomain protectionDomain)"
                ]
            },
            "1ca0be8da43984959c71ad17ce203a37a7ba9b9e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "private static @Nullable Version co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.readImplementationVersionFromManifest(@Nullable ProtectionDomain protectionDomain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "05c135e011ea5290b71ce98457904a8b7661d3c3",
        "previous_commit": "00d0da029c941b1d99e151558499069bf58194e5",
        "date": 1563354706,
        "releases": {
            "previous": "05c135e011ea5290b71ce98457904a8b7661d3c3",
            "next": "05c135e011ea5290b71ce98457904a8b7661d3c3"
        },
        "commit_message": "Parsing container ID in cloud foundry garden (#695)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "05c135e011ea5290b71ce98457904a8b7661d3c3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.parseContainerId(String line)"
                ]
            },
            "00d0da029c941b1d99e151558499069bf58194e5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.parseContainerId(String line)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f51f253eb992ff91a015157ebf21233dd89aefc8",
        "previous_commit": "4b6fe47b57925e27b8cb6d068244a8d9e78475e9",
        "date": 1555507922,
        "releases": {
            "previous": "f51f253eb992ff91a015157ebf21233dd89aefc8",
            "next": "f51f253eb992ff91a015157ebf21233dd89aefc8"
        },
        "commit_message": "Changing Byte Buddy Location Strategy to WEAK (#583)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f51f253eb992ff91a015157ebf21233dd89aefc8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger)"
                ]
            },
            "4b6fe47b57925e27b8cb6d068244a8d9e78475e9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "006b2fbbf328dfe6ae9680d12d16efc96b2c0b1b",
        "previous_commit": "482346ce4fe0f98a7e4367c6758c645f24fed675",
        "date": 1521795399,
        "releases": {
            "previous": "006b2fbbf328dfe6ae9680d12d16efc96b2c0b1b",
            "next": "006b2fbbf328dfe6ae9680d12d16efc96b2c0b1b"
        },
        "commit_message": "Remove boilerplate from model objects\n\nRemoves toString, hashCode and equals methods\nThey where generated by the json schema to pojo converter\nbut are not that useful\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "006b2fbbf328dfe6ae9680d12d16efc96b2c0b1b": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()"
                ]
            },
            "482346ce4fe0f98a7e4367c6758c645f24fed675": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public void co.elastic.apm.impl.transaction.Transaction.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a20664231402d34e1749119408fa25320b1d76ce",
        "previous_commit": "125702d26805fc1dcd2ba2a59235bc74e85343b8",
        "date": 1618849286,
        "releases": {
            "previous": "a20664231402d34e1749119408fa25320b1d76ce",
            "next": "a20664231402d34e1749119408fa25320b1d76ce"
        },
        "commit_message": "There is a javax.ws.rs.PATCH annotation for the PATCH HTTP method since JAX-RS 2.1 (#1766)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a20664231402d34e1749119408fa25320b1d76ce": {
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getMethodMatcher()"
                ]
            },
            "125702d26805fc1dcd2ba2a59235bc74e85343b8": {
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e27e13366324a96fa8dbd0e13c21548b464898f9",
        "previous_commit": "a5f564c752bdf9a0fc0e03375e3f5098325614be",
        "date": 1523005732,
        "releases": {
            "previous": "e27e13366324a96fa8dbd0e13c21548b464898f9",
            "next": "e27e13366324a96fa8dbd0e13c21548b464898f9"
        },
        "commit_message": "Fix potential NPE\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e27e13366324a96fa8dbd0e13c21548b464898f9": {
                "apm-agent-core/src/main/java/co/elastic/apm/matcher/WildcardMatcher.java": [
                    "public static boolean co.elastic.apm.matcher.WildcardMatcher.anyMatch(Collection<WildcardMatcher> matchers, String s)"
                ]
            },
            "a5f564c752bdf9a0fc0e03375e3f5098325614be": {
                "apm-agent-core/src/main/java/co/elastic/apm/matcher/WildcardMatcher.java": [
                    "public static boolean co.elastic.apm.matcher.WildcardMatcher.anyMatch(Collection<WildcardMatcher> matchers, String s)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "482346ce4fe0f98a7e4367c6758c645f24fed675",
        "previous_commit": "d7431a8627b8cf0ed1bd88fc8d3e77e8f48a9940",
        "date": 1521795344,
        "releases": {
            "previous": "482346ce4fe0f98a7e4367c6758c645f24fed675",
            "next": "482346ce4fe0f98a7e4367c6758c645f24fed675"
        },
        "commit_message": "Set Error.id\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "482346ce4fe0f98a7e4367c6758c645f24fed675": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(Exception e)"
                ]
            },
            "d7431a8627b8cf0ed1bd88fc8d3e77e8f48a9940": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.impl.ElasticApmTracer.captureException(Exception e)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3f21b03f8bb90312292397d54b58f517e27ae61b",
        "previous_commit": "dc56c2353c705258987066f86811a1db50aa6dfb",
        "date": 1647270612,
        "releases": {
            "previous": "3f21b03f8bb90312292397d54b58f517e27ae61b",
            "next": "3f21b03f8bb90312292397d54b58f517e27ae61b"
        },
        "commit_message": "Fix classloader for cross-plugin dependencies (#2509)\n\n* minor code cleanup\r\n\r\n* fix dep for spring-mvc > servlet plugin\r\n\r\n* move 'http.client' to 'httpclient' for consistency\r\n\r\n* implement test to prevent similar issue\r\n\r\n* slightly improve test\r\n\r\n* add CL root package customizer for cross deps\r\n\r\n* simplify the http-client case\r\n\r\n* post-review changes + simplify further\r\n\r\n* remove useless class\r\n\r\n* fix changelog duplicated sections\r\n\r\n* add changelog entry",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3f21b03f8bb90312292397d54b58f517e27ae61b": {
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            },
            "dc56c2353c705258987066f86811a1db50aa6dfb": {
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c94a62ea8d90dec3f0ff2873f1da0577e9a26759",
        "previous_commit": "12ad25fca0ba7b487e06c8bfc59e6fedc1e229f1",
        "date": 1686661682,
        "releases": {
            "previous": "c94a62ea8d90dec3f0ff2873f1da0577e9a26759",
            "next": "c94a62ea8d90dec3f0ff2873f1da0577e9a26759"
        },
        "commit_message": "Fix immutable config map for attach (#3170)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c94a62ea8d90dec3f0ff2873f1da0577e9a26759": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration, File agentJarFile)"
                ]
            },
            "12ad25fca0ba7b487e06c8bfc59e6fedc1e229f1": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration, File agentJarFile)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6ee1102d86a980f515aa4bac727ab5b71cef61a1",
        "previous_commit": "bb102ea76137e9627e7716ee9ddf48cf2d3f4413",
        "date": 1659335675,
        "releases": {
            "previous": "6ee1102d86a980f515aa4bac727ab5b71cef61a1",
            "next": "6ee1102d86a980f515aa4bac727ab5b71cef61a1"
        },
        "commit_message": "Adding support for the new mongodb-driver-sync library (#2241)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6ee1102d86a980f515aa4bac727ab5b71cef61a1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "private static Version co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.readImplementationVersionFromManifest(@Nullable ProtectionDomain protectionDomain)"
                ]
            },
            "bb102ea76137e9627e7716ee9ddf48cf2d3f4413": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "private static Version co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.readImplementationVersionFromManifest(@Nullable ProtectionDomain protectionDomain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "eb52808ffbb5ae6a9da1ced2b44ba37e81b1594a",
        "previous_commit": "a20a0acfa57854f180df1dd43dfbc309d437263b",
        "date": 1707312885,
        "releases": {
            "previous": "eb52808ffbb5ae6a9da1ced2b44ba37e81b1594a",
            "next": "eb52808ffbb5ae6a9da1ced2b44ba37e81b1594a"
        },
        "commit_message": "Add ability to change Naming Mode for spring-rabbit-plugin (#3424)\n\n* #3421 extend spring rabbit transactions to use either queue or exchange in the name\r\n\r\n* #3421 tests for naming mode queue\r\n\r\n* #3421 updated CHANGELOG.asciidoc\r\n\r\n* #3421 added tag\r\n\r\nCo-authored-by: Jonas Kunz <Jonas.Kunz@gmx.net>\r\n\r\n* #3421 improved config-option documentation\r\n\r\nCo-authored-by: Jonas Kunz <Jonas.Kunz@gmx.net>\r\n\r\n* #3421 generated documentation\r\n\r\n* Regenerate docs\r\n\r\n---------\r\n\r\nCo-authored-by: Jonas Kunz <Jonas.Kunz@gmx.net>\r\nCo-authored-by: Jonas Kunz <jonas.kunz@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "eb52808ffbb5ae6a9da1ced2b44ba37e81b1594a": {
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/SpringAmqpTransactionHelper.java": [
                    "public Transaction<?> co.elastic.apm.agent.rabbitmq.SpringAmqpTransactionHelper.createTransaction(Message message, String transactionNamePrefix)"
                ]
            },
            "a20a0acfa57854f180df1dd43dfbc309d437263b": {
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/SpringAmqpTransactionHelper.java": [
                    "public Transaction<?> co.elastic.apm.agent.rabbitmq.SpringAmqpTransactionHelper.createTransaction(Message message, String transactionNamePrefix)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8c492ec2510bade9d7a03bd9a04b9afe6170b37e",
        "previous_commit": "a7f7e8a85a786fb24414e3699ba57a736c45859c",
        "date": 1581597717,
        "releases": {
            "previous": "8c492ec2510bade9d7a03bd9a04b9afe6170b37e",
            "next": "8c492ec2510bade9d7a03bd9a04b9afe6170b37e"
        },
        "commit_message": "return error id with captureException in public api (#1015)\n\n* return error id with captureException in public api",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8c492ec2510bade9d7a03bd9a04b9afe6170b37e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public ErrorCapture co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable TraceContextHolder<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ]
            },
            "a7f7e8a85a786fb24414e3699ba57a736c45859c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable TraceContextHolder<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "daa833e9229e0f9136b5746d805a7b2b312191f5",
        "previous_commit": "259cb5a22a46ce62fdba1d0f6e51d07db0620e0b",
        "date": 1648556974,
        "releases": {
            "previous": "daa833e9229e0f9136b5746d805a7b2b312191f5",
            "next": "daa833e9229e0f9136b5746d805a7b2b312191f5"
        },
        "commit_message": "Fixing JakartaInitServiceNameInstrumentation (#2546)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "daa833e9229e0f9136b5746d805a7b2b312191f5": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/servicename/ServletContainerInitializerServiceNameInstrumentation.java": [
                    "public Constants.ServletImpl co.elastic.apm.agent.servlet.servicename.ServletContainerInitializerServiceNameInstrumentation.getImplConstants()"
                ]
            },
            "259cb5a22a46ce62fdba1d0f6e51d07db0620e0b": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/servicename/ServletContainerInitializerServiceNameInstrumentation.java": [
                    "public Constants.ServletImpl co.elastic.apm.agent.servlet.servicename.ServletContainerInitializerServiceNameInstrumentation.getImplConstants()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "849260bd7da746d2a5a590fc7c0e68cbfb520539",
        "previous_commit": "2d30f324f482f8dca568427cb7a1787ee80d9ec4",
        "date": 1587025276,
        "releases": {
            "previous": "849260bd7da746d2a5a590fc7c0e68cbfb520539",
            "next": "849260bd7da746d2a5a590fc7c0e68cbfb520539"
        },
        "commit_message": "Fix WebLogic NPE (#1142)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "849260bd7da746d2a5a590fc7c0e68cbfb520539": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, boolean overrideStatusCodeOnThrowable, String method, @Nullable Map<String, String[]> parameterMap, @Nullable String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader, boolean deactivate)"
                ]
            },
            "2d30f324f482f8dca568427cb7a1787ee80d9ec4": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.agent.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, boolean overrideStatusCodeOnThrowable, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader, boolean deactivate)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "bde5f2d0e953e933efa707aaa841f29bd17472f0",
        "previous_commit": "5893d1202a2f43e8770f5298cda31c66e5336096",
        "date": 1536586856,
        "releases": {
            "previous": "bde5f2d0e953e933efa707aaa841f29bd17472f0",
            "next": "bde5f2d0e953e933efa707aaa841f29bd17472f0"
        },
        "commit_message": "Support deprecated logging.log_file\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "bde5f2d0e953e933efa707aaa841f29bd17472f0": {
                "apm-agent-core/src/main/java/co/elastic/apm/logging/LoggingConfiguration.java": [
                    "public static void co.elastic.apm.logging.LoggingConfiguration.init(List<ConfigurationSource> sources)"
                ]
            },
            "5893d1202a2f43e8770f5298cda31c66e5336096": {
                "apm-agent-core/src/main/java/co/elastic/apm/logging/LoggingConfiguration.java": [
                    "public static void co.elastic.apm.logging.LoggingConfiguration.init(List<ConfigurationSource> sources)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5e994ff5844f4effa2ffad47e183920c606df54f",
        "previous_commit": "d41151bfdb4bb49c6ac4b8f64ad03a59062d59ae",
        "date": 1596553389,
        "releases": {
            "previous": "5e994ff5844f4effa2ffad47e183920c606df54f",
            "next": "5e994ff5844f4effa2ffad47e183920c606df54f"
        },
        "commit_message": "Support early access java version (#1325)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5e994ff5844f4effa2ffad47e183920c606df54f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "static boolean co.elastic.apm.agent.bci.AgentMain.isJavaVersionSupported(String version, String vmName, @Nullable String vmVersion)"
                ]
            },
            "d41151bfdb4bb49c6ac4b8f64ad03a59062d59ae": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "static boolean co.elastic.apm.agent.bci.AgentMain.isJavaVersionSupported(String version, String vmName, @Nullable String vmVersion)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "76a0d5b5cd385838ba8b7171f3b8b388fd68e21d",
        "previous_commit": "e6e77491def25327d5fdd79ac9ac08451eb5599d",
        "date": 1662988563,
        "releases": {
            "previous": "76a0d5b5cd385838ba8b7171f3b8b388fd68e21d",
            "next": "76a0d5b5cd385838ba8b7171f3b8b388fd68e21d"
        },
        "commit_message": "cgroup max memory discovery analysis (#2746)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "76a0d5b5cd385838ba8b7171f3b8b388fd68e21d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/CGroupMetrics.java": [
                    "private File co.elastic.apm.agent.metrics.builtin.CGroupMetrics.getMaxMemoryFile(File maxMemoryFile, String cgroupUnlimitedConstant)"
                ]
            },
            "e6e77491def25327d5fdd79ac9ac08451eb5599d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/CGroupMetrics.java": [
                    "private File co.elastic.apm.agent.metrics.builtin.CGroupMetrics.getMaxMemoryFile(File maxMemoryFile, String cgroupUnlimitedConstant)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "11a2527f660e19b6fc2af6f42303bd15881d113c",
        "previous_commit": "c23467391fc91aff134c01b37b04aaacaea7da2a",
        "date": 1681738276,
        "releases": {
            "previous": "11a2527f660e19b6fc2af6f42303bd15881d113c",
            "next": "11a2527f660e19b6fc2af6f42303bd15881d113c"
        },
        "commit_message": "add warning for snapshot version (#3109)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "11a2527f660e19b6fc2af6f42303bd15881d113c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "void co.elastic.apm.agent.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ]
            },
            "c23467391fc91aff134c01b37b04aaacaea7da2a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "void co.elastic.apm.agent.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e9f9f8eb6a6c2787afd3dd1ffa6c502533b73ab7",
        "previous_commit": "09e3bc76bcb4c8d7ea13483d814afa0f4637b26e",
        "date": 1591201559,
        "releases": {
            "previous": "e9f9f8eb6a6c2787afd3dd1ffa6c502533b73ab7",
            "next": "e9f9f8eb6a6c2787afd3dd1ffa6c502533b73ab7"
        },
        "commit_message": "fix url-encoded java.io.tmpdir property\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e9f9f8eb6a6c2787afd3dd1ffa6c502533b73ab7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/IOUtils.java": [
                    "public static synchronized File co.elastic.apm.agent.util.IOUtils.exportResourceToTemp(String resource, String tempFileNamePrefix, String tempFileNameExtension)"
                ]
            },
            "09e3bc76bcb4c8d7ea13483d814afa0f4637b26e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/IOUtils.java": [
                    "public static synchronized File co.elastic.apm.agent.util.IOUtils.exportResourceToTemp(String resource, String tempFileNamePrefix, String tempFileNameExtension)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "86bfb3b1c5429349d359cde5c5262334b5e39fc7",
        "previous_commit": "1154658477dc4157b5a08f4cea132ee49d92055e",
        "date": 1532693231,
        "releases": {
            "previous": "86bfb3b1c5429349d359cde5c5262334b5e39fc7",
            "next": "86bfb3b1c5429349d359cde5c5262334b5e39fc7"
        },
        "commit_message": "Prevent NPEs when re-adding AsyncListener\n\nAlso add proper brave NOTICE\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "86bfb3b1c5429349d359cde5c5262334b5e39fc7": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/helper/ApmAsyncListener.java": [
                    "public void co.elastic.apm.servlet.helper.ApmAsyncListener.onStartAsync(AsyncEvent event)"
                ]
            },
            "1154658477dc4157b5a08f4cea132ee49d92055e": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/helper/ApmAsyncListener.java": [
                    "public void co.elastic.apm.servlet.helper.ApmAsyncListener.onStartAsync(AsyncEvent event)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "baa4a3bf46dddab97cc341dfd7c2d69464cef0c6",
        "previous_commit": "f7ab87dc5251a4f47bfd57992c2ff0527a053ccb",
        "date": 1589896138,
        "releases": {
            "previous": "baa4a3bf46dddab97cc341dfd7c2d69464cef0c6",
            "next": "baa4a3bf46dddab97cc341dfd7c2d69464cef0c6"
        },
        "commit_message": "Upgrading async profiler version to 1.7.1 and adding safemode config (#1173)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "baa4a3bf46dddab97cc341dfd7c2d69464cef0c6": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.profile(TimeDuration sampleRate, TimeDuration profilingDuration)"
                ]
            },
            "f7ab87dc5251a4f47bfd57992c2ff0527a053ccb": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "private void co.elastic.apm.agent.profiler.SamplingProfiler.profile(TimeDuration sampleRate, TimeDuration profilingDuration)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d4a651f882f561d8a0798a2f405b439d4681e768",
        "previous_commit": "259ebf52dac8ea5136e54b6aecb246b3ffe8fe2c",
        "date": 1689006435,
        "releases": {
            "previous": "d4a651f882f561d8a0798a2f405b439d4681e768",
            "next": "d4a651f882f561d8a0798a2f405b439d4681e768"
        },
        "commit_message": "parse container ID with cgroups v2 (#3199)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d4a651f882f561d8a0798a2f405b439d4681e768": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.metadata.SystemInfo.findContainerDetails()"
                ]
            },
            "259ebf52dac8ea5136e54b6aecb246b3ffe8fe2c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.metadata.SystemInfo.findContainerDetails()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7da2e916d7b2c306ef51413a0c87a18b0366c840",
        "previous_commit": "3db12ba2f4c439f675e904708971f90e6c9cef1b",
        "date": 1540472174,
        "releases": {
            "previous": "7da2e916d7b2c306ef51413a0c87a18b0366c840",
            "next": "7da2e916d7b2c306ef51413a0c87a18b0366c840"
        },
        "commit_message": "Whenever exception!=null && statusCode==200 set to 500 (#259)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7da2e916d7b2c306ef51413a0c87a18b0366c840": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo)"
                ]
            },
            "3db12ba2f4c439f675e904708971f90e6c9cef1b": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Throwable exception, boolean committed, int status, String method, Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "076a95b384924e11f5a071ab8654672747b75c66",
        "previous_commit": "044b06835157ed6a80071adad3d2dd23cbefe108",
        "date": 1563798103,
        "releases": {
            "previous": "076a95b384924e11f5a071ab8654672747b75c66",
            "next": "076a95b384924e11f5a071ab8654672747b75c66"
        },
        "commit_message": "Revert \"Only track breakdown metrics if enabled (#737)\"\n\nThis reverts commit 044b06835157ed6a80071adad3d2dd23cbefe108.\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "076a95b384924e11f5a071ab8654672747b75c66": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Transaction.afterEnd()"
                ]
            },
            "044b06835157ed6a80071adad3d2dd23cbefe108": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Transaction.afterEnd()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a1f1e1882fe52c662cb7e9e042963ab63cc4fdb2",
        "previous_commit": "32f2cf861303d685a719e5f004f64849bd03ce4a",
        "date": 1651820112,
        "releases": {
            "previous": "a1f1e1882fe52c662cb7e9e042963ab63cc4fdb2",
            "next": "a1f1e1882fe52c662cb7e9e042963ab63cc4fdb2"
        },
        "commit_message": "AWS SDK instrumentation for S3 and DynamoDB (#2606)\n\n* AWS SDK instrumentation for S3 and DynamoDB\r\n\r\n* fixed Java 7 compatibility problems\r\n\r\n* added license headers\r\n\r\n* refactored test to use Java 8 Collection utils\r\n\r\n* Update configuration.asciidoc\r\n\r\n* refactored abstract test class for aws sdk\r\n\r\n* Update CHANGELOG.asciidoc to add S3 and DynamoDB",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a1f1e1882fe52c662cb7e9e042963ab63cc4fdb2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            },
            "32f2cf861303d685a719e5f004f64849bd03ce4a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeSpan(final Span span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "bb7d9cd3b8790c680092ed1d15a3c66f6a6be132",
        "previous_commit": "a9c3688ea175f181f8516e45136001060dcdd386",
        "date": 1661430816,
        "releases": {
            "previous": "bb7d9cd3b8790c680092ed1d15a3c66f6a6be132",
            "next": "bb7d9cd3b8790c680092ed1d15a3c66f6a6be132"
        },
        "commit_message": "Fix compressed span NPE (#2755)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "bb7d9cd3b8790c680092ed1d15a3c66f6a6be132": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()"
                ]
            },
            "a9c3688ea175f181f8516e45136001060dcdd386": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "cfe60e16d7e8471a9306a73b60b8ce8506bee1e5",
        "previous_commit": "ead3c2377661897cb043cbc320e5c32196207282",
        "date": 1618830943,
        "releases": {
            "previous": "cfe60e16d7e8471a9306a73b60b8ce8506bee1e5",
            "next": "cfe60e16d7e8471a9306a73b60b8ce8506bee1e5"
        },
        "commit_message": "Fix Micrometer registry serialization error due to failed meter (#1741)\n\n* Fix Micrometer registry serialization error due to failed meter\r\n* Setting Meter CL as context CL when querying\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "cfe60e16d7e8471a9306a73b60b8ce8506bee1e5": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            },
            "ead3c2377661897cb043cbc320e5c32196207282": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2a28fe7f273775022c0465948130eb36d7cf833b",
        "previous_commit": "863822f8aa1fb1a08c7b1fce2fdcf3bc32baf6bb",
        "date": 1545919977,
        "releases": {
            "previous": "2a28fe7f273775022c0465948130eb36d7cf833b",
            "next": "2a28fe7f273775022c0465948130eb36d7cf833b"
        },
        "commit_message": "Casting to parent Buffer (#401)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2a28fe7f273775022c0465948130eb36d7cf833b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Db.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Db.recycle(CharBuffer object)"
                ]
            },
            "863822f8aa1fb1a08c7b1fce2fdcf3bc32baf6bb": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Db.java": [
                    "public void co.elastic.apm.agent.impl.transaction.Db.recycle(CharBuffer object)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8d9a50b70d1bc66ede77a484894462d1f82d1f78",
        "previous_commit": "89a90f5510c27aacd27115fd7015d56e79eee08a",
        "date": 1522941332,
        "releases": {
            "previous": "8d9a50b70d1bc66ede77a484894462d1f82d1f78",
            "next": "8d9a50b70d1bc66ede77a484894462d1f82d1f78"
        },
        "commit_message": "Add ignore_urls configuration option (#48)\n\n* This option allows to configure a list of URL wildcard patterns\r\nwhich should not be traced\r\n* Bonus feature: ignore_user_agents",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8d9a50b70d1bc66ede77a484894462d1f82d1f78": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)"
                ]
            },
            "89a90f5510c27aacd27115fd7015d56e79eee08a": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a41d73e157d7c6bd7813d6e95ff3cca5806b7cfe",
        "previous_commit": "7b6150c7ba0058200878db7f453d07f202e73fd8",
        "date": 1554975439,
        "releases": {
            "previous": "a41d73e157d7c6bd7813d6e95ff3cca5806b7cfe",
            "next": "a41d73e157d7c6bd7813d6e95ff3cca5806b7cfe"
        },
        "commit_message": "Check if class loader can load class via resource lookup (#563)\n\nthis does not actually load the class thus preventing side-effects",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a41d73e157d7c6bd7813d6e95ff3cca5806b7cfe": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "private static boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.canLoadClass(@Nullable ClassLoader target, String className)"
                ]
            },
            "7b6150c7ba0058200878db7f453d07f202e73fd8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/CustomElementMatchers.java": [
                    "private static boolean co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.canLoadClass(@Nullable ClassLoader target, String className)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "485eb00abb1b4fb61650e35bbcc062b72a1be15f",
        "previous_commit": "ffdd4c99561afe605de5f3b460b63c6ea9c5fccc",
        "date": 1720527797,
        "releases": {
            "previous": "485eb00abb1b4fb61650e35bbcc062b72a1be15f",
            "next": "485eb00abb1b4fb61650e35bbcc062b72a1be15f"
        },
        "commit_message": "runtime attach: prevent NPE with null value (#3712)\n\n* runtime attach: prevent NPE with null value\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "485eb00abb1b4fb61650e35bbcc062b72a1be15f": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration, File agentJarFile)"
                ]
            },
            "ffdd4c99561afe605de5f3b460b63c6ea9c5fccc": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach(String pid, Map<String, String> configuration, File agentJarFile)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "30ae8d6a2553e26fed9c0b622ec658967be5e392",
        "previous_commit": "358a598476b7bc66ad9d97277da9971d8c996ac8",
        "date": 1672820120,
        "releases": {
            "previous": "30ae8d6a2553e26fed9c0b622ec658967be5e392",
            "next": "30ae8d6a2553e26fed9c0b622ec658967be5e392"
        },
        "commit_message": "Reference counting for buffered spans (#2865)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "30ae8d6a2553e26fed9c0b622ec658967be5e392": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()"
                ]
            },
            "358a598476b7bc66ad9d97277da9971d8c996ac8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "eca9328c7274e54d80caa4d26212cb9b0046276f",
        "previous_commit": "1bc524af430a5a5b557f1ee12ebc6e3e68d95e5b",
        "date": 1519390731,
        "releases": {
            "previous": "eca9328c7274e54d80caa4d26212cb9b0046276f",
            "next": "eca9328c7274e54d80caa4d26212cb9b0046276f"
        },
        "commit_message": "Add benchmarks for stack trace colelction\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "eca9328c7274e54d80caa4d26212cb9b0046276f": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/stacktrace/StacktraceFactory.java": [
                    "private Stacktrace co.elastic.apm.impl.stacktrace.CurrentThreadStackTraceFactory.getStacktrace(StackTraceElement stackTraceElement)"
                ]
            },
            "1bc524af430a5a5b557f1ee12ebc6e3e68d95e5b": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/stacktrace/StacktraceFactory.java": [
                    "private Stacktrace co.elastic.apm.impl.stacktrace.CurrentThreadStackTraceFactory.getStacktrace(StackTraceElement stackTraceElement)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ca5864467f2ca57d9c3d0d25879b56f1adca5bd2",
        "previous_commit": "69854ad27aa6d2bb4a1bcf20e9ac4de544ce38ae",
        "date": 1659009942,
        "releases": {
            "previous": "ca5864467f2ca57d9c3d0d25879b56f1adca5bd2",
            "next": "ca5864467f2ca57d9c3d0d25879b56f1adca5bd2"
        },
        "commit_message": "also support SIDs when getting instance from Oracle jdbc connections (#2709)\n\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ca5864467f2ca57d9c3d0d25879b56f1adca5bd2": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/ConnectionMetaData.java": [
                    "private void co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.traverseOracleTree(String connectionUrl, TreeNode treeNode, Builder builder)"
                ]
            },
            "69854ad27aa6d2bb4a1bcf20e9ac4de544ce38ae": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/ConnectionMetaData.java": [
                    "private void co.elastic.apm.agent.jdbc.helper.ConnectionMetaData.traverseOracleTree(String connectionUrl, TreeNode treeNode, Builder builder)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3541ec0fe28649ff6a767bc73ddbcbb3552e9924",
        "previous_commit": "06f680d8c48aa2f4f088b7956aaba912654a20e9",
        "date": 1569490361,
        "releases": {
            "previous": "3541ec0fe28649ff6a767bc73ddbcbb3552e9924",
            "next": "3541ec0fe28649ff6a767bc73ddbcbb3552e9924"
        },
        "commit_message": "Enabling Mule4 Instrumentation (#855)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3541ec0fe28649ff6a767bc73ddbcbb3552e9924": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger)"
                ]
            },
            "06f680d8c48aa2f4f088b7956aaba912654a20e9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a76f83c2416584f1ecb997d85ff49a7bf6889faf",
        "previous_commit": "6c878089d54eac85b21ef652b23947cc4a30a3e6",
        "date": 1538809859,
        "releases": {
            "previous": "a76f83c2416584f1ecb997d85ff49a7bf6889faf",
            "next": "a76f83c2416584f1ecb997d85ff49a7bf6889faf"
        },
        "commit_message": "Use proper simple class name for MatcherTimer\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a76f83c2416584f1ecb997d85ff49a7bf6889faf": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/bytebuddy/MatcherTimer.java": [
                    "public String co.elastic.apm.bci.bytebuddy.MatcherTimer.toString()"
                ]
            },
            "6c878089d54eac85b21ef652b23947cc4a30a3e6": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/bytebuddy/MatcherTimer.java": [
                    "public String co.elastic.apm.bci.bytebuddy.MatcherTimer.toString()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "89a6e8914fea0b2e8138ddd9b7f251effa86cb85",
        "previous_commit": "cbc2bc89344412fc63cbfd61036cbf989230cd9b",
        "date": 1662053449,
        "releases": {
            "previous": "89a6e8914fea0b2e8138ddd9b7f251effa86cb85",
            "next": "89a6e8914fea0b2e8138ddd9b7f251effa86cb85"
        },
        "commit_message": "avoid warn enable_log_correlation in remote config (#2765)\n\n* avoid warn enable_log_correlation in remote config\n\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "89a6e8914fea0b2e8138ddd9b7f251effa86cb85": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "private String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.tryFetchConfig(ConfigurationRegistry configurationRegistry, HttpURLConnection connection)"
                ]
            },
            "cbc2bc89344412fc63cbfd61036cbf989230cd9b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ApmServerConfigurationSource.java": [
                    "private String co.elastic.apm.agent.configuration.ApmServerConfigurationSource.tryFetchConfig(ConfigurationRegistry configurationRegistry, HttpURLConnection connection)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "603f6d4a89a1d67aee22175b216d75b2ea291f3c",
        "previous_commit": "9de3c00894d478b9905ac1c9d1a9d2f6761be89f",
        "date": 1521622946,
        "releases": {
            "previous": "603f6d4a89a1d67aee22175b216d75b2ea291f3c",
            "next": "603f6d4a89a1d67aee22175b216d75b2ea291f3c"
        },
        "commit_message": "Set transaction name to method\n\n(closes #22)\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "603f6d4a89a1d67aee22175b216d75b2ea291f3c": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)"
                ]
            },
            "9de3c00894d478b9905ac1c9d1a9d2f6761be89f": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillTransaction(Transaction transaction, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "303305d9f2a848b4f1383d2e5660f5a72bc4c11b",
        "previous_commit": "213d6de3ca251c72f4bc0efe3ead19e04badeece",
        "date": 1593416540,
        "releases": {
            "previous": "303305d9f2a848b4f1383d2e5660f5a72bc4c11b",
            "next": "303305d9f2a848b4f1383d2e5660f5a72bc4c11b"
        },
        "commit_message": "Exclude Contrast Security agent classes from instrumentation (#1257)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "303305d9f2a848b4f1383d2e5660f5a72bc4c11b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)"
                ]
            },
            "213d6de3ca251c72f4bc0efe3ead19e04badeece": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration, Logger logger, AgentBuilder.DescriptionStrategy descriptionStrategy, boolean premain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a28d9786f93e1e446ffe3d5d155d5b127eb81881",
        "previous_commit": "a65bf2e297b372e45b0a6f898464f8a52485c0df",
        "date": 1716364254,
        "releases": {
            "previous": "a28d9786f93e1e446ffe3d5d155d5b127eb81881",
            "next": "a28d9786f93e1e446ffe3d5d155d5b127eb81881"
        },
        "commit_message": "Fix too small activation stack for low transaction_max_spans values (#3643)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a28d9786f93e1e446ffe3d5d155d5b127eb81881": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "protected ActiveStack co.elastic.apm.agent.impl.ElasticApmTracer.initialValue()"
                ]
            },
            "a65bf2e297b372e45b0a6f898464f8a52485c0df": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "protected ActiveStack co.elastic.apm.agent.impl.ElasticApmTracer.initialValue()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7505fdcb730d008ef23b35fc7959875756da1d39",
        "previous_commit": "d2eff9b90b40d7988054db89201909658bbc6bfa",
        "date": 1529997316,
        "releases": {
            "previous": "7505fdcb730d008ef23b35fc7959875756da1d39",
            "next": "7505fdcb730d008ef23b35fc7959875756da1d39"
        },
        "commit_message": "Add agent version to startup logs\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7505fdcb730d008ef23b35fc7959875756da1d39": {
                "apm-agent-core/src/main/java/co/elastic/apm/configuration/StartupInfo.java": [
                    "public void co.elastic.apm.configuration.StartupInfo.start(ElasticApmTracer tracer)"
                ]
            },
            "d2eff9b90b40d7988054db89201909658bbc6bfa": {
                "apm-agent-core/src/main/java/co/elastic/apm/configuration/StartupInfo.java": [
                    "public void co.elastic.apm.configuration.StartupInfo.start(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d7deb461abc729b10aa5f5ddd0c8af79f3e0a7b5",
        "previous_commit": "c7f5107baeb27b94f1a70266c18d486514e3cd58",
        "date": 1543311232,
        "releases": {
            "previous": "d7deb461abc729b10aa5f5ddd0c8af79f3e0a7b5",
            "next": "d7deb461abc729b10aa5f5ddd0c8af79f3e0a7b5"
        },
        "commit_message": "Avoid setting request attributes to reduce allocations (#316)\n\nAdding a request attribute creates a new HashMap$Node which allocates 32b\r\n- Only set transaction request attribute when startAsync is called\r\n- Set excluded as ThreadLocal as opposed to request attribute\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d7deb461abc729b10aa5f5ddd0c8af79f3e0a7b5": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "private boolean co.elastic.apm.servlet.ServletTransactionHelper.isExcluded(String servletPath, String pathInfo, String requestURI, @Nullable String userAgentHeader)"
                ]
            },
            "c7f5107baeb27b94f1a70266c18d486514e3cd58": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "private boolean co.elastic.apm.servlet.ServletTransactionHelper.isExcluded(String servletPath, String pathInfo, String requestURI, @Nullable String userAgentHeader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "82efe3f5599fe5373d11f6f758e835a73d090af6",
        "previous_commit": "279d8b41f2101023d83f80e477e551f5c8e18470",
        "date": 1541428564,
        "releases": {
            "previous": "82efe3f5599fe5373d11f6f758e835a73d090af6",
            "next": "82efe3f5599fe5373d11f6f758e835a73d090af6"
        },
        "commit_message": "Fix transaction id copy (#288)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "82efe3f5599fe5373d11f6f758e835a73d090af6": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.impl.transaction.TraceContext.copyFrom(TraceContext other)"
                ]
            },
            "279d8b41f2101023d83f80e477e551f5c8e18470": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.impl.transaction.TraceContext.copyFrom(TraceContext other)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7e7946fb015e2193c1dcfdeaf065875265e17bb6",
        "previous_commit": "b0003864a0a97e10d0596523899d4c4ca052ac90",
        "date": 1665403944,
        "releases": {
            "previous": "7e7946fb015e2193c1dcfdeaf065875265e17bb6",
            "next": "7e7946fb015e2193c1dcfdeaf065875265e17bb6"
        },
        "commit_message": "Document and test support for Appache HttpClient 4.0 (#2834)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7e7946fb015e2193c1dcfdeaf065875265e17bb6": {
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.httpclient.HttpClientHelper.startHttpClientSpan(AbstractSpan<?> parent, String method, @Nullable String uri, @Nullable String scheme, @Nullable CharSequence hostName, int port)"
                ]
            },
            "b0003864a0a97e10d0596523899d4c4ca052ac90": {
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.httpclient.HttpClientHelper.startHttpClientSpan(AbstractSpan<?> parent, String method, @Nullable String uri, String scheme, CharSequence hostName, int port)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b001ca9cd9a916383ed82b340535a282559584ae",
        "previous_commit": "5c73fc0519c145a3d4fb38c02f456acb1854fe29",
        "date": 1616596613,
        "releases": {
            "previous": "b001ca9cd9a916383ed82b340535a282559584ae",
            "next": "b001ca9cd9a916383ed82b340535a282559584ae"
        },
        "commit_message": "Fix master build and print URL on connection error\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b001ca9cd9a916383ed82b340535a282559584ae": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)"
                ]
            },
            "5c73fc0519c145a3d4fb38c02f456acb1854fe29": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f3390f2fe68c2f6fedd22053576a9b66c4ba5121",
        "previous_commit": "e1935ebc4da40cbc4ee4d3b51a671a78b48b3a77",
        "date": 1646557662,
        "releases": {
            "previous": "f3390f2fe68c2f6fedd22053576a9b66c4ba5121",
            "next": "f3390f2fe68c2f6fedd22053576a9b66c4ba5121"
        },
        "commit_message": "Instrumenting Logback only if both core AND classic classes available (#2486)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f3390f2fe68c2f6fedd22053576a9b66c4ba5121": {
                "apm-agent-plugins/apm-log-shader-plugin/apm-logback-plugin/apm-logback-plugin-impl/src/main/java/co/elastic/apm/agent/logback/LogbackLogShadingInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.logback.LogbackLogShadingInstrumentation.getClassLoaderMatcher()"
                ]
            },
            "e1935ebc4da40cbc4ee4d3b51a671a78b48b3a77": {
                "apm-agent-plugins/apm-log-shader-plugin/apm-logback-plugin/apm-logback-plugin-impl/src/main/java/co/elastic/apm/agent/logback/LogbackLogShadingInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.logback.LogbackLogShadingInstrumentation.getClassLoaderMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "279e7ffdbe0e4287ca92058151f8fd88622e7aa8",
        "previous_commit": "b2ac746be4d90fe9a7191c9d46f2fb0c364b3799",
        "date": 1584722995,
        "releases": {
            "previous": "279e7ffdbe0e4287ca92058151f8fd88622e7aa8",
            "next": "279e7ffdbe0e4287ca92058151f8fd88622e7aa8"
        },
        "commit_message": "Don't skip processing traces if there are ongoing transactions (#1091)\n\ncloses #1088",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "279e7ffdbe0e4287ca92058151f8fd88622e7aa8": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processTraces()"
                ]
            },
            "b2ac746be4d90fe9a7191c9d46f2fb0c364b3799": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.processTraces()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "78808a36a0cc07036337d63b2f45c5b60800fbe9",
        "previous_commit": "4ef35f746671d3fee75c8b3f3462e7dcc92b0089",
        "date": 1603809404,
        "releases": {
            "previous": "78808a36a0cc07036337d63b2f45c5b60800fbe9",
            "next": "78808a36a0cc07036337d63b2f45c5b60800fbe9"
        },
        "commit_message": "Reverting G1 GC restriction on Java 7 (#1455)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "78808a36a0cc07036337d63b2f45c5b60800fbe9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.bci.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ]
            },
            "4ef35f746671d3fee75c8b3f3462e7dcc92b0089": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.bci.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5b1b04a6b13cdc3d1741c4e567f64c72b6c8ae71",
        "previous_commit": "c85c347bb596dc0c88c52d84186ad49b628f6ca7",
        "date": 1529395118,
        "releases": {
            "previous": "5b1b04a6b13cdc3d1741c4e567f64c72b6c8ae71",
            "next": "5b1b04a6b13cdc3d1741c4e567f64c72b6c8ae71"
        },
        "commit_message": "Make ProcessFactory work with Java 7\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5b1b04a6b13cdc3d1741c4e567f64c72b6c8ae71": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/ProcessFactory.java": [
                    "static ProcessFactory co.elastic.apm.impl.payload.ForJava9CompatibleVM.make()"
                ]
            },
            "c85c347bb596dc0c88c52d84186ad49b628f6ca7": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/ProcessFactory.java": [
                    "public static ProcessFactory co.elastic.apm.impl.payload.ForJava9CompatibleVM.make()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "551c53893498e7d46efa169d2bac2268d44b6f7b",
        "previous_commit": "dd730d36655016f8a222bfa9ed358ada6087a9c0",
        "date": 1599649890,
        "releases": {
            "previous": "551c53893498e7d46efa169d2bac2268d44b6f7b",
            "next": "551c53893498e7d46efa169d2bac2268d44b6f7b"
        },
        "commit_message": "JMS - watch out from null Message property enumeration (#1392)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "551c53893498e7d46efa169d2bac2268d44b6f7b": {
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public void co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.addMessageDetails(@Nullable Message message, AbstractSpan span)"
                ]
            },
            "dd730d36655016f8a222bfa9ed358ada6087a9c0": {
                "apm-agent-plugins/apm-jms-plugin/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelperImpl.java": [
                    "public void co.elastic.apm.agent.jms.JmsInstrumentationHelperImpl.addMessageDetails(@Nullable Message message, AbstractSpan span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "cc4e3e6ce81fa5b0d2e5dbb052e417b4b4c56339",
        "previous_commit": "7e7946fb015e2193c1dcfdeaf065875265e17bb6",
        "date": 1665476651,
        "releases": {
            "previous": "cc4e3e6ce81fa5b0d2e5dbb052e417b4b4c56339",
            "next": "cc4e3e6ce81fa5b0d2e5dbb052e417b4b4c56339"
        },
        "commit_message": "Fixed Otel updateName behaviour (#2838)\n\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\nCo-authored-by: SylvainJuge <syl20j@gmail.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "cc4e3e6ce81fa5b0d2e5dbb052e417b4b4c56339": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelSpan.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.sdk.OTelSpan.updateName(String name)"
                ]
            },
            "7e7946fb015e2193c1dcfdeaf065875265e17bb6": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelSpan.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.sdk.OTelSpan.updateName(String name)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "812d1d97af3f90f8cc3cbee82294c3adc4606ec6",
        "previous_commit": "e5b347e51283e50c665ab237dd8259a782040695",
        "date": 1608644914,
        "releases": {
            "previous": "812d1d97af3f90f8cc3cbee82294c3adc4606ec6",
            "next": "812d1d97af3f90f8cc3cbee82294c3adc4606ec6"
        },
        "commit_message": "properly handle exception on ServletContext.getClassLoader() (#1576)\n\n* properly handle exception on getClassLoader()",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "812d1d97af3f90f8cc3cbee82294c3adc4606ec6": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ServletTransactionCreationHelper.java": [
                    "public Transaction co.elastic.apm.agent.servlet.helper.ServletTransactionCreationHelper.createAndActivateTransaction(HttpServletRequest request)"
                ]
            },
            "e5b347e51283e50c665ab237dd8259a782040695": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ServletTransactionCreationHelper.java": [
                    "public Transaction co.elastic.apm.agent.servlet.helper.ServletTransactionCreationHelper.createAndActivateTransaction(HttpServletRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "390eb2afdad7b7e5979b0f272ae2fe09bde10d7f",
        "previous_commit": "518afc790674f311b00fb188fe2444b1a6a81a6a",
        "date": 1594552932,
        "releases": {
            "previous": "390eb2afdad7b7e5979b0f272ae2fe09bde10d7f",
            "next": "390eb2afdad7b7e5979b0f272ae2fe09bde10d7f"
        },
        "commit_message": "add more verbose NPE diagnostics (#1283)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "390eb2afdad7b7e5979b0f272ae2fe09bde10d7f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "private static File co.elastic.apm.agent.bci.AgentMain.getAgentJarFile()"
                ]
            },
            "518afc790674f311b00fb188fe2444b1a6a81a6a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "private static File co.elastic.apm.agent.bci.AgentMain.getAgentJarFile()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "180769b85989c565030610577c3c114283b92b8b",
        "previous_commit": "ff8d686685acbf8d7fcd093238013918a7f7f42b",
        "date": 1661434471,
        "releases": {
            "previous": "180769b85989c565030610577c3c114283b92b8b",
            "next": "180769b85989c565030610577c3c114283b92b8b"
        },
        "commit_message": "Fix stack frames exclusion (#2758)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "180769b85989c565030610577c3c114283b92b8b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static boolean co.elastic.apm.agent.report.serialize.DslJsonSerializer.isExcluded(StackTraceElement stackTraceElement)"
                ]
            },
            "ff8d686685acbf8d7fcd093238013918a7f7f42b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private static boolean co.elastic.apm.agent.report.serialize.DslJsonSerializer.isExcluded(StackTraceElement stackTraceElement)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b68c803b2bb0d7019d62754f9666f97a9689a60a",
        "previous_commit": "a75b7c391c4e37801d59cf459bec8b7ad25d090b",
        "date": 1539847757,
        "releases": {
            "previous": "b68c803b2bb0d7019d62754f9666f97a9689a60a",
            "next": "b68c803b2bb0d7019d62754f9666f97a9689a60a"
        },
        "commit_message": "Fix compile error\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b68c803b2bb0d7019d62754f9666f97a9689a60a": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "public String co.elastic.apm.impl.transaction.TraceContext.toString()"
                ]
            },
            "a75b7c391c4e37801d59cf459bec8b7ad25d090b": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "public String co.elastic.apm.impl.transaction.TraceContext.toString()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a94b2dddb2e5131945c0e022fc7a838e59223594",
        "previous_commit": "db23e691becdd7ea59de68916bb9c777d5c64a8d",
        "date": 1604936397,
        "releases": {
            "previous": "a94b2dddb2e5131945c0e022fc7a838e59223594",
            "next": "a94b2dddb2e5131945c0e022fc7a838e59223594"
        },
        "commit_message": "Setting context class loader of agent threads to null (#1459)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a94b2dddb2e5131945c0e022fc7a838e59223594": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public Thread co.elastic.apm.agent.util.ExecutorUtils.newThread(Runnable r)"
                ]
            },
            "db23e691becdd7ea59de68916bb9c777d5c64a8d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public Thread co.elastic.apm.agent.util.ExecutorUtils.newThread(Runnable r)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "dfc996db709b34ac24ad481540e181fe081ad1a3",
        "previous_commit": "cac3158fcec52f203b71a3e52689defd9954b0c6",
        "date": 1583663327,
        "releases": {
            "previous": "dfc996db709b34ac24ad481540e181fe081ad1a3",
            "next": "dfc996db709b34ac24ad481540e181fe081ad1a3"
        },
        "commit_message": "JAX-RS transaction name should be based on first annotated method (#1076)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "dfc996db709b34ac24ad481540e181fe081ad1a3": {
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature, @JaxRsPath @Nullable String pathAnnotationValue)"
                ]
            },
            "cac3158fcec52f203b71a3e52689defd9954b0c6": {
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "private static void co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.setTransactionName(@SimpleMethodSignature String signature, @JaxRsPath @Nullable String pathAnnotationValue)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4a5817c37cdfb3bb1e860e43223e3becba65bf63",
        "previous_commit": "f4405b59a257846c97371c5339a6083c2f38001b",
        "date": 1582303546,
        "releases": {
            "previous": "4a5817c37cdfb3bb1e860e43223e3becba65bf63",
            "next": "4a5817c37cdfb3bb1e860e43223e3becba65bf63"
        },
        "commit_message": "Fix performance regression\n\nAvoid allocation caused by ArrayList#addAll\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4a5817c37cdfb3bb1e860e43223e3becba65bf63": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)"
                ]
            },
            "f4405b59a257846c97371c5339a6083c2f38001b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext parent)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e760b934e0eabb92e5af43aa56c0d249e08942f0",
        "previous_commit": "e78d187659ea77899c6f928de93f52ec0028ced6",
        "date": 1537433986,
        "releases": {
            "previous": "e760b934e0eabb92e5af43aa56c0d249e08942f0",
            "next": "e760b934e0eabb92e5af43aa56c0d249e08942f0"
        },
        "commit_message": "Add random jitter to backoff period (#210)\n\ncloses #209",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e760b934e0eabb92e5af43aa56c0d249e08942f0": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private static long co.elastic.apm.report.IntakeV2ReportingEventHandler.calculateEndOfGracePeriod(long errorCount)"
                ]
            },
            "e78d187659ea77899c6f928de93f52ec0028ced6": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/IntakeV2ReportingEventHandler.java": [
                    "private static long co.elastic.apm.report.IntakeV2ReportingEventHandler.calculateEndOfGracePeriod(long errorCount)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b14f6588f6c639de29cc19c9df8731ac494a185d",
        "previous_commit": "c339b002ddc60cdd4aee2f7ba823cf814d8658a7",
        "date": 1714654636,
        "releases": {
            "previous": "b14f6588f6c639de29cc19c9df8731ac494a185d",
            "next": "b14f6588f6c639de29cc19c9df8731ac494a185d"
        },
        "commit_message": "Fix NPE in dropped spans stats (#3590)\n\n* fix npe\r\n\r\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b14f6588f6c639de29cc19c9df8731ac494a185d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/DroppedSpanStats.java": [
                    "private Stats co.elastic.apm.agent.impl.transaction.DroppedSpanStats.getOrCreateStats(ServiceTarget serviceTarget, Outcome outcome)"
                ]
            },
            "c339b002ddc60cdd4aee2f7ba823cf814d8658a7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/DroppedSpanStats.java": [
                    "private Stats co.elastic.apm.agent.impl.transaction.DroppedSpanStats.getOrCreateStats(ServiceTarget serviceTarget, Outcome outcome)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e6ac20d7967264f0b280e8278a1174d91ecf9a71",
        "previous_commit": "93495c4dff46cf56765048bdb56fe9a6ac9caf24",
        "date": 1519929383,
        "releases": {
            "previous": "e6ac20d7967264f0b280e8278a1174d91ecf9a71",
            "next": "e6ac20d7967264f0b280e8278a1174d91ecf9a71"
        },
        "commit_message": "Test post data capturing\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e6ac20d7967264f0b280e8278a1174d91ecf9a71": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)"
                ]
            },
            "93495c4dff46cf56765048bdb56fe9a6ac9caf24": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "837fe7fa93bfc40ac74139650ebb516dc47d59f7",
        "previous_commit": "7505fdcb730d008ef23b35fc7959875756da1d39",
        "date": 1530003730,
        "releases": {
            "previous": "837fe7fa93bfc40ac74139650ebb516dc47d59f7",
            "next": "837fe7fa93bfc40ac74139650ebb516dc47d59f7"
        },
        "commit_message": "Use PhasedBackoffWaitStrategy.withLock to reduce CPU load\n\n* SleepingWaitStrategy consumes quite a lot of CPU\n  when the application is idle\n* Consume events with a single event handler to further reduce\n  CPU overhead in idle state.\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "837fe7fa93bfc40ac74139650ebb516dc47d59f7": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            },
            "7505fdcb730d008ef23b35fc7959875756da1d39": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8e7b38a19247b2695ad37d8cf05c534c72d3d765",
        "previous_commit": "25eb0dd6c72ea07d7491894d90ef506dda3b98a9",
        "date": 1521359957,
        "releases": {
            "previous": "8e7b38a19247b2695ad37d8cf05c534c72d3d765",
            "next": "8e7b38a19247b2695ad37d8cf05c534c72d3d765"
        },
        "commit_message": "Set to noop when missing required config\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8e7b38a19247b2695ad37d8cf05c534c72d3d765": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.build()"
                ]
            },
            "25eb0dd6c72ea07d7491894d90ef506dda3b98a9": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/ElasticApmTracer.java": [
                    "public ElasticApmTracer co.elastic.apm.impl.ElasticApmTracer.build()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3336faf7223b132a48e9450d7ab23dd211511ffe",
        "previous_commit": "d44b3849dbcbe6e37f9358fb1604be81171a5359",
        "date": 1585739365,
        "releases": {
            "previous": "3336faf7223b132a48e9450d7ab23dd211511ffe",
            "next": "3336faf7223b132a48e9450d7ab23dd211511ffe"
        },
        "commit_message": "Use span.name='empty query' if db.statement is an empty string (#1115)\n\nThis happens when a postgres connection is checked whether it's alive",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3336faf7223b132a48e9450d7ab23dd211511ffe": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.createJdbcSpan(@Nullable String sql, Object statement, @Nullable TraceContextHolder<?> parent, boolean preparedStatement)"
                ]
            },
            "d44b3849dbcbe6e37f9358fb1604be81171a5359": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelperImpl.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelperImpl.createJdbcSpan(@Nullable String sql, Object statement, @Nullable TraceContextHolder<?> parent, boolean preparedStatement)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c07e1762f4f9c28d7c7cc8001f0cb619747d4923",
        "previous_commit": "15cd941f15abac76348d39b27337e4dfa7082413",
        "date": 1624294163,
        "releases": {
            "previous": "c07e1762f4f9c28d7c7cc8001f0cb619747d4923",
            "next": "c07e1762f4f9c28d7c7cc8001f0cb619747d4923"
        },
        "commit_message": "Adding special wrapper for ChannelAwareMessageListener (#1872)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c07e1762f4f9c28d7c7cc8001f0cb619747d4923": {
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/MessageListenerHelper.java": [
                    "public MessageListener co.elastic.apm.agent.rabbitmq.MessageListenerHelper.registerAndWrapLambda(@Nullable MessageListener listener)"
                ]
            },
            "15cd941f15abac76348d39b27337e4dfa7082413": {
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/MessageListenerHelper.java": [
                    "public MessageListener co.elastic.apm.agent.rabbitmq.MessageListenerHelper.registerAndWrapLambda(@Nullable MessageListener listener)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "140f1a26d9a6671b7b82ead4ad792fd3ab9b3f7c",
        "previous_commit": "5e994ff5844f4effa2ffad47e183920c606df54f",
        "date": 1596601404,
        "releases": {
            "previous": "140f1a26d9a6671b7b82ead4ad792fd3ab9b3f7c",
            "next": "140f1a26d9a6671b7b82ead4ad792fd3ab9b3f7c"
        },
        "commit_message": "Fixing default service name configuration (#1324)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "140f1a26d9a6671b7b82ead4ad792fd3ab9b3f7c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.overrideServiceNameForClassLoader(@Nullable ClassLoader classLoader, @Nullable String serviceName)"
                ]
            },
            "5e994ff5844f4effa2ffad47e183920c606df54f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.overrideServiceNameForClassLoader(@Nullable ClassLoader classLoader, @Nullable String serviceName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f254571a8310e05624b32d303bf962c00e598d99",
        "previous_commit": "24424d6f38531865c99ef013caa49f7108e3785a",
        "date": 1548760938,
        "releases": {
            "previous": "f254571a8310e05624b32d303bf962c00e598d99",
            "next": "f254571a8310e05624b32d303bf962c00e598d99"
        },
        "commit_message": "Replacing active Object from Span to TraceContext on OT span finish (#459)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f254571a8310e05624b32d303bf962c00e598d99": {
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpan.java": [
                    "public void co.elastic.apm.opentracing.ApmSpan.finish(long finishMicros)"
                ]
            },
            "24424d6f38531865c99ef013caa49f7108e3785a": {
                "apm-opentracing/src/main/java/co/elastic/apm/opentracing/ApmSpan.java": [
                    "public void co.elastic.apm.opentracing.ApmSpan.finish(long finishMicros)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "73cece8b96475ef7f5ee8acc08ea13444342b834",
        "previous_commit": "a8cc3a0a586448a6f44ddcc56884284770e2f5df",
        "date": 1558606336,
        "releases": {
            "previous": "73cece8b96475ef7f5ee8acc08ea13444342b834",
            "next": "73cece8b96475ef7f5ee8acc08ea13444342b834"
        },
        "commit_message": "Fix elasticapm.properties loading (#643)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "73cece8b96475ef7f5ee8acc08ea13444342b834": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach()"
                ]
            },
            "a8cc3a0a586448a6f44ddcc56884284770e2f5df": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "public static void co.elastic.apm.attach.ElasticApmAttacher.attach()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "150aac8530df1e5667ecb1e4b0f50c7602ea738f",
        "previous_commit": "1dbb5112b12acc87a4f874d3eec972d5657fff75",
        "date": 1670311911,
        "releases": {
            "previous": "150aac8530df1e5667ecb1e4b0f50c7602ea738f",
            "next": "150aac8530df1e5667ecb1e4b0f50c7602ea738f"
        },
        "commit_message": "Fix mockito race conditions by memoizing transaction_max_spans. (#2900)\n\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "150aac8530df1e5667ecb1e4b0f50c7602ea738f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "protected ActiveStack co.elastic.apm.agent.impl.ElasticApmTracer.initialValue()"
                ]
            },
            "1dbb5112b12acc87a4f874d3eec972d5657fff75": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "protected ActiveStack co.elastic.apm.agent.impl.ElasticApmTracer.initialValue()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5904c588a643ef26e2f23d4c8950d080808cfc68",
        "previous_commit": "86fb00ec0707cf8cb0126dbb6c1da67a5ea93b26",
        "date": 1600845351,
        "releases": {
            "previous": "5904c588a643ef26e2f23d4c8950d080808cfc68",
            "next": "5904c588a643ef26e2f23d4c8950d080808cfc68"
        },
        "commit_message": "Avoid serializing the first global label twice (#1414)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5904c588a643ef26e2f23d4c8950d080808cfc68": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeGlobalLabels(ArrayList<String> globalLabelKeys, ArrayList<String> globalLabelValues)"
                ]
            },
            "86fb00ec0707cf8cb0126dbb6c1da67a5ea93b26": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeGlobalLabels(ArrayList<String> globalLabelKeys, ArrayList<String> globalLabelValues)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "99aed1613f99438ebc76ca76a3ea6369be7d65b9",
        "previous_commit": "6b28cba4a5ca0c9e1ff35d51c472fb3a5c190e8d",
        "date": 1680011506,
        "releases": {
            "previous": "99aed1613f99438ebc76ca76a3ea6369be7d65b9",
            "next": "99aed1613f99438ebc76ca76a3ea6369be7d65b9"
        },
        "commit_message": "set service name & version in ecs-logging (#3064)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "99aed1613f99438ebc76ca76a3ea6369be7d65b9": {
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/AbstractLogIntegrationInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.loginstr.AbstractLogIntegrationInstrumentation.getInstrumentationGroupNames()"
                ]
            },
            "6b28cba4a5ca0c9e1ff35d51c472fb3a5c190e8d": {
                "apm-agent-plugins/apm-logging-plugin/apm-logging-plugin-common/src/main/java/co/elastic/apm/agent/loginstr/AbstractLogIntegrationInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.loginstr.AbstractLogIntegrationInstrumentation.getInstrumentationGroupNames()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ec7781c7698b14ef2205960eb321689e5cf5d10c",
        "previous_commit": "4b63c1600965194ea2d34277eb7f18768af1dbdd",
        "date": 1625142224,
        "releases": {
            "previous": "ec7781c7698b14ef2205960eb321689e5cf5d10c",
            "next": "ec7781c7698b14ef2205960eb321689e5cf5d10c"
        },
        "commit_message": "Instrument javax.servlet.Filter the same way as javax.servlet.FilterChain (#1857) (#1858)\n\n* Instrument javax.servlet.Filter the same way as javax.servlet.FilterChain (#1857)\r\n\r\n* Added #1857 to the changelog\r\n\r\n* add test\r\n\r\n* fix source headers\r\n\r\n* add test for filter support\r\n\r\n* minor refactor to make shortcuts obvious\r\n\r\n* fix async servlet filter\r\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ec7781c7698b14ef2205960eb321689e5cf5d10c": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ServletTransactionCreationHelper.java": [
                    "public Transaction co.elastic.apm.agent.servlet.helper.ServletTransactionCreationHelper.createAndActivateTransaction(HttpServletRequest request)"
                ]
            },
            "4b63c1600965194ea2d34277eb7f18768af1dbdd": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ServletTransactionCreationHelper.java": [
                    "public Transaction co.elastic.apm.agent.servlet.helper.ServletTransactionCreationHelper.createAndActivateTransaction(HttpServletRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d2e894040b9dd71972b0e263c18323c457770740",
        "previous_commit": "1eaae2aea86cb70b5ff974d4b41a78a143119390",
        "date": 1630924734,
        "releases": {
            "previous": "d2e894040b9dd71972b0e263c18323c457770740",
            "next": "d2e894040b9dd71972b0e263c18323c457770740"
        },
        "commit_message": "use request URI when servlet path is not available (#2099)\n\n* use request URI when servlet path is not available\r\n\r\n* PEBKC\r\n\r\n* avoid NPE\r\n\r\n* add some logging for flaky test investigation\r\n\r\n* fix forgotten semicolon\r\n\r\nskip-checks: true\r\n\r\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d2e894040b9dd71972b0e263c18323c457770740": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ServletTransactionCreationHelper.java": [
                    "public Transaction co.elastic.apm.agent.servlet.helper.ServletTransactionCreationHelper.createAndActivateTransaction(HttpServletRequest request)"
                ]
            },
            "1eaae2aea86cb70b5ff974d4b41a78a143119390": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ServletTransactionCreationHelper.java": [
                    "public Transaction co.elastic.apm.agent.servlet.helper.ServletTransactionCreationHelper.createAndActivateTransaction(HttpServletRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c83381758741c1b83f16eb25804df8a5ef8ef237",
        "previous_commit": "6f681e9700cafc8a559db816f7e555db86afd5f4",
        "date": 1529734218,
        "releases": {
            "previous": "c83381758741c1b83f16eb25804df8a5ef8ef237",
            "next": "c83381758741c1b83f16eb25804df8a5ef8ef237"
        },
        "commit_message": "Fix setting username (#106)\n\nreported in https://discuss.elastic.co/t/transaction-setuser-not-working-properly-when-populating-username/137092",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c83381758741c1b83f16eb25804df8a5ef8ef237": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Exception exception, @Nullable String userName, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, Map<String, String[]> parameterMap, String remoteAddr, StringBuffer requestURL, boolean committed, int status)"
                ]
            },
            "6f681e9700cafc8a559db816f7e555db86afd5f4": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public void co.elastic.apm.servlet.ServletTransactionHelper.onAfter(Transaction transaction, @Nullable Exception exception, @Nullable String userName, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, Map<String, String[]> parameterMap, String remoteAddr, StringBuffer requestURL, boolean committed, int status)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "19de914779487117ae9b03d3e488286a9bbbc116",
        "previous_commit": "60f044ffff258e8e19ac357a6e295977b59b01bd",
        "date": 1633948854,
        "releases": {
            "previous": "19de914779487117ae9b03d3e488286a9bbbc116",
            "next": "19de914779487117ae9b03d3e488286a9bbbc116"
        },
        "commit_message": "Disable compression for localhost (#2162)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "19de914779487117ae9b03d3e488286a9bbbc116": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)"
                ]
            },
            "60f044ffff258e8e19ac357a6e295977b59b01bd": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "61e5456ab32ff9b77b3bda334d2f498e9137d527",
        "previous_commit": "e29f1e242f5ff9df86cf1843682c7e48fcdb4474",
        "date": 1539583872,
        "releases": {
            "previous": "61e5456ab32ff9b77b3bda334d2f498e9137d527",
            "next": "61e5456ab32ff9b77b3bda334d2f498e9137d527"
        },
        "commit_message": "Make it possible to start spans after parent has ended (#242)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "61e5456ab32ff9b77b3bda334d2f498e9137d527": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(Transaction transaction, @Nullable Span parentSpan, long epochMicros, boolean dropped)"
                ]
            },
            "e29f1e242f5ff9df86cf1843682c7e48fcdb4474": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(Transaction transaction, @Nullable Span parentSpan, long epochMicros, boolean dropped)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "11b7b96148ccbd20d0b7ca3a75e7b1c2adea1af6",
        "previous_commit": "f3390f2fe68c2f6fedd22053576a9b66c4ba5121",
        "date": 1646650148,
        "releases": {
            "previous": "11b7b96148ccbd20d0b7ca3a75e7b1c2adea1af6",
            "next": "11b7b96148ccbd20d0b7ca3a75e7b1c2adea1af6"
        },
        "commit_message": "fix windows hostname test (#2445)\n\n* allow to hide env variables\r\n\r\n* allow to return null env variable\r\n\r\n* Fix how Windows wants paths from file URLs\r\n\r\n* Windows needs the classloader to close the file before it can be auto-deleted\r\n\r\nCo-authored-by: Jack Shirazi <jack.shirazi@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "11b7b96148ccbd20d0b7ca3a75e7b1c2adea1af6": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentDownloadUtils.java": [
                    "public synchronized Path co.elastic.apm.attach.AgentDownloadUtils.getTargetAgentDir()"
                ]
            },
            "f3390f2fe68c2f6fedd22053576a9b66c4ba5121": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentDownloadUtils.java": [
                    "public synchronized Path co.elastic.apm.attach.AgentDownloadUtils.getTargetAgentDir()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2ca66d6db798dbb3c3fa5287c8154a177e0b1c3f",
        "previous_commit": "7b313e2f690d1efb5a15f58532a5c970c070a339",
        "date": 1553013507,
        "releases": {
            "previous": "2ca66d6db798dbb3c3fa5287c8154a177e0b1c3f",
            "next": "2ca66d6db798dbb3c3fa5287c8154a177e0b1c3f"
        },
        "commit_message": "Don't instrument Hazelcast Executors (#536)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2ca66d6db798dbb3c3fa5287c8154a177e0b1c3f": {
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/ExecutorInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getTypeMatcher()"
                ]
            },
            "7b313e2f690d1efb5a15f58532a5c970c070a339": {
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/ExecutorInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1d6c63d2c3a3e1d0656b6fb2996bf27e6c2df2e1",
        "previous_commit": "e6203e4d03c03ed19dfa49ac5f206e0942f815a0",
        "date": 1704797350,
        "releases": {
            "previous": "1d6c63d2c3a3e1d0656b6fb2996bf27e6c2df2e1",
            "next": "1d6c63d2c3a3e1d0656b6fb2996bf27e6c2df2e1"
        },
        "commit_message": "Add db.statement and user attributes to OpenTelemetry Plugin (#3475)\n\n* Update OTelSpan.java\r\n\r\nAdd parsing of db.statement and db.user attributes for OpenTelementy Plugin.\r\n\r\nThis will allow users to write an own Elastic APM Plugin for a not yet supported database and also add the executed statement to the span (like with the supported DBs)\r\n\r\n* Update CHANGELOG.asciidoc",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1d6c63d2c3a3e1d0656b6fb2996bf27e6c2df2e1": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpan.java": [
                    "private void co.elastic.apm.agent.opentelemetry.tracing.OTelSpan.onSpanEnd(co.elastic.apm.agent.impl.transaction.Span s)"
                ]
            },
            "e6203e4d03c03ed19dfa49ac5f206e0942f815a0": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpan.java": [
                    "private void co.elastic.apm.agent.opentelemetry.tracing.OTelSpan.onSpanEnd(co.elastic.apm.agent.impl.transaction.Span s)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "dbc4eb74d531108773cfad68f921e17e1aa47bed",
        "previous_commit": "f97af4278e34bd6aeb35d23c1cb479e5f0f62b3d",
        "date": 1556008949,
        "releases": {
            "previous": "dbc4eb74d531108773cfad68f921e17e1aa47bed",
            "next": "dbc4eb74d531108773cfad68f921e17e1aa47bed"
        },
        "commit_message": "Exclude DumbExecutor (#598)\n\nfixes #586",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "dbc4eb74d531108773cfad68f921e17e1aa47bed": {
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/ExecutorInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getTypeMatcher()"
                ]
            },
            "f97af4278e34bd6aeb35d23c1cb479e5f0f62b3d": {
                "apm-agent-plugins/apm-java-concurrent-plugin/src/main/java/co/elastic/apm/agent/concurrent/ExecutorInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.concurrent.ExecutorInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2c9cbfb02c28353384c5039444327c6a7b17cbbe",
        "previous_commit": "b062cfa9a71cd9c12731fa5b601b69ba8ba69f26",
        "date": 1570460607,
        "releases": {
            "previous": "2c9cbfb02c28353384c5039444327c6a7b17cbbe",
            "next": "2c9cbfb02c28353384c5039444327c6a7b17cbbe"
        },
        "commit_message": "Configurable ignored exceptions (#873)\n\n* add configurable exception ignore config",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2c9cbfb02c28353384c5039444327c6a7b17cbbe": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable TraceContextHolder<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ]
            },
            "b062cfa9a71cd9c12731fa5b601b69ba8ba69f26": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.captureException(long epochMicros, @Nullable Throwable e, @Nullable TraceContextHolder<?> parent, @Nullable ClassLoader initiatingClassLoader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d910788e30343d25be35468f863bbf4ef192f053",
        "previous_commit": "2b273d79a71bc259294ebf1464e576069f4cc104",
        "date": 1549296482,
        "releases": {
            "previous": "d910788e30343d25be35468f863bbf4ef192f053",
            "next": "d910788e30343d25be35468f863bbf4ef192f053"
        },
        "commit_message": "Use atlassian-specific bootdelegation defaults (#468)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d910788e30343d25be35468f863bbf4ef192f053": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/OsgiBootDelegationEnabler.java": [
                    "public void co.elastic.apm.agent.bci.OsgiBootDelegationEnabler.start(ElasticApmTracer tracer)"
                ]
            },
            "2b273d79a71bc259294ebf1464e576069f4cc104": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/OsgiBootDelegationEnabler.java": [
                    "public void co.elastic.apm.agent.bci.OsgiBootDelegationEnabler.start(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4b6fe47b57925e27b8cb6d068244a8d9e78475e9",
        "previous_commit": "54907d05c54aeb2a92ee31c58a1a47471a39d0fb",
        "date": 1555506610,
        "releases": {
            "previous": "4b6fe47b57925e27b8cb6d068244a8d9e78475e9",
            "next": "4b6fe47b57925e27b8cb6d068244a8d9e78475e9"
        },
        "commit_message": "Make log_file option work again (#594)\n\nfixes #593",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4b6fe47b57925e27b8cb6d068244a8d9e78475e9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)"
                ]
            },
            "54907d05c54aeb2a92ee31c58a1a47471a39d0fb": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d10d713e857bd9fe9ce72414f77b7578718a2bbc",
        "previous_commit": "5f3a4f951388cb27c0adfdbfbc9451b804d2b306",
        "date": 1587454356,
        "releases": {
            "previous": "d10d713e857bd9fe9ce72414f77b7578718a2bbc",
            "next": "d10d713e857bd9fe9ce72414f77b7578718a2bbc"
        },
        "commit_message": "Fix system metrics on J9 (#1148)\n\nfixes https://discuss.elastic.co/t/java-apm-agent-not-pushing-cpu-memory-metric-ibm-java-on-websphere-liberty/228064",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d10d713e857bd9fe9ce72414f77b7578718a2bbc": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/SystemMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.SystemMetrics.bindTo(MetricRegistry metricRegistry)"
                ]
            },
            "5f3a4f951388cb27c0adfdbfbc9451b804d2b306": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/SystemMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.SystemMetrics.bindTo(MetricRegistry metricRegistry)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5258956dbd7def2d556b212d00da57f7d9b6cb76",
        "previous_commit": "551e6421a58518527e183e9769c5e6a1dc26ffb1",
        "date": 1550072611,
        "releases": {
            "previous": "5258956dbd7def2d556b212d00da57f7d9b6cb76",
            "next": "5258956dbd7def2d556b212d00da57f7d9b6cb76"
        },
        "commit_message": "Support JAX-WS transaction naming (#486)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5258956dbd7def2d556b212d00da57f7d9b6cb76": {
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getInstrumentationGroupNames()"
                ]
            },
            "551e6421a58518527e183e9769c5e6a1dc26ffb1": {
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "public Collection<String> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getInstrumentationGroupNames()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9183a213cc463b4f9b90fd0393b710a9fe0168c8",
        "previous_commit": "35493e3ea7cf9d8120dffb1853b7f95292d68e2b",
        "date": 1571160421,
        "releases": {
            "previous": "9183a213cc463b4f9b90fd0393b710a9fe0168c8",
            "next": "9183a213cc463b4f9b90fd0393b710a9fe0168c8"
        },
        "commit_message": "Tracing not-excluded URLs (#874)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9183a213cc463b4f9b90fd0393b710a9fe0168c8": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private boolean co.elastic.apm.agent.servlet.ServletTransactionHelper.isExcluded(String servletPath, @Nullable String pathInfo, @Nullable String userAgentHeader)"
                ]
            },
            "35493e3ea7cf9d8120dffb1853b7f95292d68e2b": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private boolean co.elastic.apm.agent.servlet.ServletTransactionHelper.isExcluded(String servletPath, @Nullable String pathInfo, @Nullable String userAgentHeader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f70b917a95f40834a21a88aa3ce14231c94192fd",
        "previous_commit": "3c4f6e0c1dc9e5e863e4a8621f36586cd6f7c6b2",
        "date": 1587732774,
        "releases": {
            "previous": "f70b917a95f40834a21a88aa3ce14231c94192fd",
            "next": "f70b917a95f40834a21a88aa3ce14231c94192fd"
        },
        "commit_message": "make gRPC less flaky (again) (#1155)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f70b917a95f40834a21a88aa3ce14231c94192fd": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/helper/GrpcHelperImpl.java": [
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.endTransaction(Status status, @Nullable Throwable thrown, ServerCall<?, ?> serverCall)"
                ]
            },
            "3c4f6e0c1dc9e5e863e4a8621f36586cd6f7c6b2": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/helper/GrpcHelperImpl.java": [
                    "public void co.elastic.apm.agent.grpc.helper.GrpcHelperImpl.endTransaction(Status status, @Nullable Throwable thrown, ServerCall<?, ?> serverCall)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "303e875e87ccb9ba46fd57cb208af784363b6e49",
        "previous_commit": "bc221cf6367546bcdd33d7d7dd26dd0b9db3c1d8",
        "date": 1521450065,
        "releases": {
            "previous": "303e875e87ccb9ba46fd57cb208af784363b6e49",
            "next": "303e875e87ccb9ba46fd57cb208af784363b6e49"
        },
        "commit_message": "Add ability to disable ApmFilter\n\nrelates to #4\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "303e875e87ccb9ba46fd57cb208af784363b6e49": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)"
                ]
            },
            "bc221cf6367546bcdd33d7d7dd26dd0b9db3c1d8": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "public void co.elastic.apm.servlet.ApmFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d728615ffa46cc6520b0a674ea342c7b7abb9198",
        "previous_commit": "f1c5748e850c447c4bae7a59d1a639718eed24ff",
        "date": 1704380519,
        "releases": {
            "previous": "d728615ffa46cc6520b0a674ea342c7b7abb9198",
            "next": "d728615ffa46cc6520b0a674ea342c7b7abb9198"
        },
        "commit_message": "Fix NPE in ApacheHttpClientApiAdapter#getHostName  (#3479)\n\n* Fix NPE in ApacheHttpClientApiAdapter#getHostName.\r\n\r\n* Implement test for HttpClient#executeOpen\r\n\r\n* Update CHANGELOG.asciidoc",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d728615ffa46cc6520b0a674ea342c7b7abb9198": {
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient-common/src/main/java/co/elastic/apm/agent/httpclient/common/AbstractApacheHttpClientAdvice.java": [
                    "public static <REQUEST, WRAPPER extends REQUEST, HTTPHOST, RESPONSE,\n HeaderAccessor extends TextHeaderSetter<REQUEST> &\n TextHeaderGetter<REQUEST>> Object co.elastic.apm.agent.httpclient.common.AbstractApacheHttpClientAdvice.startSpan(final Tracer tracer, final ApacheHttpClientApiAdapter<REQUEST, WRAPPER, HTTPHOST, RESPONSE> adapter, final WRAPPER request, @Nullable final HTTPHOST httpHost, final HeaderAccessor headerAccessor)"
                ]
            },
            "f1c5748e850c447c4bae7a59d1a639718eed24ff": {
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient-common/src/main/java/co/elastic/apm/agent/httpclient/common/AbstractApacheHttpClientAdvice.java": [
                    "public static <REQUEST, WRAPPER extends REQUEST, HTTPHOST, RESPONSE,\n HeaderAccessor extends TextHeaderSetter<REQUEST> &\n TextHeaderGetter<REQUEST>> Object co.elastic.apm.agent.httpclient.common.AbstractApacheHttpClientAdvice.startSpan(final Tracer tracer, final ApacheHttpClientApiAdapter<REQUEST, WRAPPER, HTTPHOST, RESPONSE> adapter, final WRAPPER request, final HTTPHOST httpHost, final HeaderAccessor headerAccessor)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "72013cfd68998762cabc9b65d070a5a8c1792dfb",
        "previous_commit": "f40727f91b95e72ce19548c541922ed6b417757e",
        "date": 1645453835,
        "releases": {
            "previous": "72013cfd68998762cabc9b65d070a5a8c1792dfb",
            "next": "72013cfd68998762cabc9b65d070a5a8c1792dfb"
        },
        "commit_message": "Setting agent CL as context CL for agent threads (#2460)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "72013cfd68998762cabc9b65d070a5a8c1792dfb": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public Thread co.elastic.apm.agent.util.ExecutorUtils.newThread(Runnable r)"
                ]
            },
            "f40727f91b95e72ce19548c541922ed6b417757e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/ExecutorUtils.java": [
                    "public Thread co.elastic.apm.agent.util.ExecutorUtils.newThread(Runnable r)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9390fc5c6169e65ce8207fa539feef1ec0c78083",
        "previous_commit": "6da304319315cfe4041a8ec5b50cc6f976965eab",
        "date": 1668507042,
        "releases": {
            "previous": "9390fc5c6169e65ce8207fa539feef1ec0c78083",
            "next": "9390fc5c6169e65ce8207fa539feef1ec0c78083"
        },
        "commit_message": "Prevent race-condition on the span name when unnamed spans are ended. (#2867)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9390fc5c6169e65ce8207fa539feef1ec0c78083": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "protected Span co.elastic.apm.agent.profiler.CallTree.asSpan(Root root, TraceContext parentContext)"
                ]
            },
            "6da304319315cfe4041a8ec5b50cc6f976965eab": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java": [
                    "protected Span co.elastic.apm.agent.profiler.CallTree.asSpan(Root root, TraceContext parentContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "fd5e14cb2395fd340511970dc941ebbf4495d563",
        "previous_commit": "04b2e2480506437bc2b6a8ade4f72cc0535d3eeb",
        "date": 1685540189,
        "releases": {
            "previous": "fd5e14cb2395fd340511970dc941ebbf4495d563",
            "next": "fd5e14cb2395fd340511970dc941ebbf4495d563"
        },
        "commit_message": "Prevent overhead from excessive span creation (#3151)\n\n* allow to skip span creation\n\n* test skip span creation\n\n* enhance a bit javadoc\n\n* implement optimization for trace_methods\n\n* implement optimization for @CaptureSpan\n\n* implement optimization for @Traced\n\n* update changelog\n\n* turns out the ugly cast was useful :-)\n\n* add missing log debug statements",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "fd5e14cb2395fd340511970dc941ebbf4495d563": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/tracemethods/TraceMethodInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.tracemethods.TraceMethodInstrumentation.onMethodEnter(@Advice.Origin Class<?> clazz, @SimpleMethodSignatureOffsetMappingFactory.SimpleMethodSignature String signature)"
                ]
            },
            "04b2e2480506437bc2b6a8ade4f72cc0535d3eeb": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/tracemethods/TraceMethodInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.tracemethods.TraceMethodInstrumentation.onMethodEnter(@Advice.Origin Class<?> clazz, @SimpleMethodSignatureOffsetMappingFactory.SimpleMethodSignature String signature)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "addd23907633ca58e125ca74cf8c0104139e2377",
        "previous_commit": "b82a9dc1a05ad5c2257f4d5f89c14730db146463",
        "date": 1583486639,
        "releases": {
            "previous": "addd23907633ca58e125ca74cf8c0104139e2377",
            "next": "addd23907633ca58e125ca74cf8c0104139e2377"
        },
        "commit_message": "Disable agent on early Java 8 versions (#1075)\n\n* make java 8 before update 40 not supported",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "addd23907633ca58e125ca74cf8c0104139e2377": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.bci.AgentMain.init(String agentArguments, Instrumentation instrumentation)"
                ]
            },
            "b82a9dc1a05ad5c2257f4d5f89c14730db146463": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.bci.AgentMain.init(String agentArguments, Instrumentation instrumentation)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c2ea9302927368d5cfca877adcf58a3c96933ddc",
        "previous_commit": "bba4e6729b964be8cc09c171c4ab9babf794cac2",
        "date": 1602673245,
        "releases": {
            "previous": "c2ea9302927368d5cfca877adcf58a3c96933ddc",
            "next": "c2ea9302927368d5cfca877adcf58a3c96933ddc"
        },
        "commit_message": "Fix serializing NaN (#1432)\n\n* Fix serializing NaN\r\n\r\n* Add test",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c2ea9302927368d5cfca877adcf58a3c96933ddc": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            },
            "bba4e6729b964be8cc09c171c4ab9babf794cac2": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e4cdde0b860ff37ea57e0ca083c62b319c0ee940",
        "previous_commit": "1e8c41c216034c9b315685c0ca8c3ead513731b0",
        "date": 1573545079,
        "releases": {
            "previous": "e4cdde0b860ff37ea57e0ca083c62b319c0ee940",
            "next": "e4cdde0b860ff37ea57e0ca083c62b319c0ee940"
        },
        "commit_message": "Replace underscore with hyphen for OKD pod UID (#920)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e4cdde0b860ff37ea57e0ca083c62b319c0ee940": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.parseContainerId(String line)"
                ]
            },
            "1e8c41c216034c9b315685c0ca8c3ead513731b0": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.parseContainerId(String line)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a15c021f15625a4a45fb84c9fea9e0c053ae4b24",
        "previous_commit": "bcfa2d6beaf8e99dabc37b2da1917ff0bec540fd",
        "date": 1521638915,
        "releases": {
            "previous": "a15c021f15625a4a45fb84c9fea9e0c053ae4b24",
            "next": "a15c021f15625a4a45fb84c9fea9e0c053ae4b24"
        },
        "commit_message": "Get real ip from proxy headers\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a15c021f15625a4a45fb84c9fea9e0c053ae4b24": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)"
                ]
            },
            "bcfa2d6beaf8e99dabc37b2da1917ff0bec540fd": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ApmFilter.java": [
                    "private void co.elastic.apm.servlet.ApmFilter.fillRequest(Request request, HttpServletRequest httpServletRequest)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0ff529513265a51e8bbf9e38dbcaf85058227479",
        "previous_commit": "fb6873d9b0bd8c049be54c20f877174f83225496",
        "date": 1523025285,
        "releases": {
            "previous": "0ff529513265a51e8bbf9e38dbcaf85058227479",
            "next": "0ff529513265a51e8bbf9e38dbcaf85058227479"
        },
        "commit_message": "Remove Error.logs\n\nThis is currently not used in the Java agent\nAlso, the fact that we are always instantiate Logs\nleads to validation errors in the APM server,\nas Logs.message is required.\n\nThe reason we always instantiate Logs is that\nit is required for recycling the Error object.\n\nA future solution would be to have a boolean flag on Logs\nto indicate if it is actually populated.\nIf not, render as null in the JSON representation.\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0ff529513265a51e8bbf9e38dbcaf85058227479": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.resetState()"
                ]
            },
            "fb6873d9b0bd8c049be54c20f877174f83225496": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/error/ErrorCapture.java": [
                    "public void co.elastic.apm.impl.error.ErrorCapture.resetState()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2df1a4fb63322f64f8d13be2a5553cb1b5f8e26e",
        "previous_commit": "695913ea11e4b381f32ac50daed83b7ba9478899",
        "date": 1540997368,
        "releases": {
            "previous": "2df1a4fb63322f64f8d13be2a5553cb1b5f8e26e",
            "next": "2df1a4fb63322f64f8d13be2a5553cb1b5f8e26e"
        },
        "commit_message": "Using DescriptionStrategy.Default.POOL_ONLY (#274)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2df1a4fb63322f64f8d13be2a5553cb1b5f8e26e": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration)"
                ]
            },
            "695913ea11e4b381f32ac50daed83b7ba9478899": {
                "apm-agent-core/src/main/java/co/elastic/apm/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.bci.ElasticApmAgent.getAgentBuilder(final ByteBuddy byteBuddy, final CoreConfiguration coreConfiguration)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "97a3d763a9468fcbb2e9c8a0241a5afecb5186fe",
        "previous_commit": "f62625ae7edeedfce1e2c449cd8f2f6c837d36ca",
        "date": 1585636724,
        "releases": {
            "previous": "97a3d763a9468fcbb2e9c8a0241a5afecb5186fe",
            "next": "97a3d763a9468fcbb2e9c8a0241a5afecb5186fe"
        },
        "commit_message": "Make instrumentation tests more robust (#1089)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "97a3d763a9468fcbb2e9c8a0241a5afecb5186fe": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()"
                ]
            },
            "f62625ae7edeedfce1e2c449cd8f2f6c837d36ca": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "public static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.reset()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0173bebeea958eaf982964cdf14998f9eb9fc258",
        "previous_commit": "43665f3589709945f206b35ca9a0d0eda9b62ea5",
        "date": 1663929883,
        "releases": {
            "previous": "0173bebeea958eaf982964cdf14998f9eb9fc258",
            "next": "0173bebeea958eaf982964cdf14998f9eb9fc258"
        },
        "commit_message": "Fix imports in AWS SDK instrumentation (#2800)\n\n* Fix imports in AWS SDK instrumentation\r\n\r\n* added changelog entry",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0173bebeea958eaf982964cdf14998f9eb9fc258": {
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/ResponseHandlerWrapper.java": [
                    "public CompletableFuture<Response<T>> co.elastic.apm.agent.awssdk.v2.ResponseHandlerWrapper<T>.prepare()"
                ]
            },
            "43665f3589709945f206b35ca9a0d0eda9b62ea5": {
                "apm-agent-plugins/apm-aws-sdk/apm-aws-sdk-2-plugin/src/main/java/co/elastic/apm/agent/awssdk/v2/ResponseHandlerWrapper.java": [
                    "public CompletableFuture<Response<T>> co.elastic.apm.agent.awssdk.v2.ResponseHandlerWrapper<T>.prepare()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "0c07a703d5490c45e622c5e93eaee4963fb606ff",
        "previous_commit": "b1808854efac8014c7da7395b86cf20ccddf1db1",
        "date": 1575907385,
        "releases": {
            "previous": "0c07a703d5490c45e622c5e93eaee4963fb606ff",
            "next": "0c07a703d5490c45e622c5e93eaee4963fb606ff"
        },
        "commit_message": "Redis Lettuce support (#949)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "0c07a703d5490c45e622c5e93eaee4963fb606ff": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation)"
                ]
            },
            "b1808854efac8014c7da7395b86cf20ccddf1db1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder co.elastic.apm.agent.bci.ElasticApmAgent.applyAdvice(final ElasticApmTracer tracer, final AgentBuilder agentBuilder, final ElasticApmInstrumentation instrumentation)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a53182f17640de81470c1b2e8522972c8d5c1469",
        "previous_commit": "9d21f36308cc6874bb24c50df4d3ea2496c8b774",
        "date": 1707919666,
        "releases": {
            "previous": "a53182f17640de81470c1b2e8522972c8d5c1469",
            "next": "a53182f17640de81470c1b2e8522972c8d5c1469"
        },
        "commit_message": "cleanup servlet request attribute (#3527)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a53182f17640de81470c1b2e8522972c8d5c1469": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> void co.elastic.apm.agent.servlet.ServletApiAdvice.onExitServlet( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest, Object servletResponse, @Nullable Object transactionOrScopeOrSpan, @Nullable Throwable t, Object thiz)"
                ]
            },
            "9d21f36308cc6874bb24c50df4d3ea2496c8b774": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> void co.elastic.apm.agent.servlet.ServletApiAdvice.onExitServlet( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest, Object servletResponse, @Nullable Object transactionOrScopeOrSpan, @Nullable Throwable t, Object thiz)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "75b50b1c90a44967dff6c1faea3631747528163a",
        "previous_commit": "73cece8b96475ef7f5ee8acc08ea13444342b834",
        "date": 1558607644,
        "releases": {
            "previous": "75b50b1c90a44967dff6c1faea3631747528163a",
            "next": "75b50b1c90a44967dff6c1faea3631747528163a"
        },
        "commit_message": "Adding a configuration option for bootdelegation packages (#641)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "75b50b1c90a44967dff6c1faea3631747528163a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/OsgiBootDelegationEnabler.java": [
                    "public void co.elastic.apm.agent.bci.OsgiBootDelegationEnabler.start(ElasticApmTracer tracer)"
                ]
            },
            "73cece8b96475ef7f5ee8acc08ea13444342b834": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/OsgiBootDelegationEnabler.java": [
                    "public void co.elastic.apm.agent.bci.OsgiBootDelegationEnabler.start(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d1e4580954a0448b123c700900cb3b63a2e6ee11",
        "previous_commit": "0d27398584fc1674871526424935090f1d71c1da",
        "date": 1724755984,
        "releases": {
            "previous": "d1e4580954a0448b123c700900cb3b63a2e6ee11",
            "next": "d1e4580954a0448b123c700900cb3b63a2e6ee11"
        },
        "commit_message": "Add body capturing for reactive spring webclient (#3754)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d1e4580954a0448b123c700900cb3b63a2e6ee11": {
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient-common/src/main/java/co/elastic/apm/agent/httpclient/common/RequestBodyCaptureRegistry.java": [
                    "public static <REQUEST, HTTPENTITY> void co.elastic.apm.agent.httpclient.common.RequestBodyCaptureRegistry.potentiallyCaptureRequestBody( REQUEST request, @Nullable AbstractSpan<?> abstractSpan, ApacheHttpClientEntityAccessor<REQUEST, HTTPENTITY> adapter, TextHeaderGetter<REQUEST> headerGetter )"
                ]
            },
            "0d27398584fc1674871526424935090f1d71c1da": {
                "apm-agent-plugins/apm-apache-httpclient/apm-apache-httpclient-common/src/main/java/co/elastic/apm/agent/httpclient/common/RequestBodyCaptureRegistry.java": [
                    "public static <REQUEST, HTTPENTITY> void co.elastic.apm.agent.httpclient.common.RequestBodyCaptureRegistry.potentiallyCaptureRequestBody( REQUEST request, @Nullable AbstractSpan<?> abstractSpan, ApacheHttpClientEntityAccessor<REQUEST, HTTPENTITY> adapter, TextHeaderGetter<REQUEST> headerGetter )"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8068c1ff86420c7f296f680f6e5281d796f0313e",
        "previous_commit": "c66313fe51b2f2758560dd581a68a06f859b549c",
        "date": 1597913929,
        "releases": {
            "previous": "8068c1ff86420c7f296f680f6e5281d796f0313e",
            "next": "8068c1ff86420c7f296f680f6e5281d796f0313e"
        },
        "commit_message": "Fix only adding Java 7 to 8 (#1343)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8068c1ff86420c7f296f680f6e5281d796f0313e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private boolean co.elastic.apm.agent.impl.ElasticApmTracer.shouldDelayOnPremain()"
                ]
            },
            "c66313fe51b2f2758560dd581a68a06f859b549c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private boolean co.elastic.apm.agent.impl.ElasticApmTracer.shouldDelayOnPremain()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6ece42d7f13929af1d5a1c2857706b433b0bcc8a",
        "previous_commit": "539ae13a4c7a326c6ad190f4e983362b3c85ce96",
        "date": 1536312294,
        "releases": {
            "previous": "6ece42d7f13929af1d5a1c2857706b433b0bcc8a",
            "next": "6ece42d7f13929af1d5a1c2857706b433b0bcc8a"
        },
        "commit_message": "Slightly optimize setting servlet-based transaction name\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6ece42d7f13929af1d5a1c2857706b433b0bcc8a": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public static void co.elastic.apm.servlet.ServletTransactionHelper.setTransactionNameByServletClass(String method, @Nullable Class<?> servletClass, StringBuilder transactionName)"
                ]
            },
            "539ae13a4c7a326c6ad190f4e983362b3c85ce96": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/ServletTransactionHelper.java": [
                    "public static void co.elastic.apm.servlet.ServletTransactionHelper.setTransactionNameByServletClass(String method, @Nullable Class<?> servletClass, StringBuilder transactionName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a4b9685d171cdf2d88aa5ebd9af00104da1cc69d",
        "previous_commit": "344ee0c454e712e825ae74e79399e6933f1a3b3a",
        "date": 1591604188,
        "releases": {
            "previous": "a4b9685d171cdf2d88aa5ebd9af00104da1cc69d",
            "next": "a4b9685d171cdf2d88aa5ebd9af00104da1cc69d"
        },
        "commit_message": "Set default value of log_format_file to plain_text (#1219)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a4b9685d171cdf2d88aa5ebd9af00104da1cc69d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "private LogFormat co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.getFileLogFormat()"
                ]
            },
            "344ee0c454e712e825ae74e79399e6933f1a3b3a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/Log4j2ConfigurationFactory.java": [
                    "private LogFormat co.elastic.apm.agent.logging.Log4j2ConfigurationFactory.getFileLogFormat()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d32b5ded0ae1233474b53a0a177b820a9f00486d",
        "previous_commit": "7cf8a6550429569b216e01077760e3e01da56082",
        "date": 1692185505,
        "releases": {
            "previous": "d32b5ded0ae1233474b53a0a177b820a9f00486d",
            "next": "d32b5ded0ae1233474b53a0a177b820a9f00486d"
        },
        "commit_message": "Set transaction type only if unset (#3226)\n\n\r\n---------\r\n\r\nCo-authored-by: Jonas Kunz <jonas.kunz@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d32b5ded0ae1233474b53a0a177b820a9f00486d": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.doOnAfter(Transaction<?> transaction, @Nullable Throwable exception, boolean committed, int status, boolean overrideStatusCodeOnThrowable, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)"
                ]
            },
            "7cf8a6550429569b216e01077760e3e01da56082": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.doOnAfter(Transaction<?> transaction, @Nullable Throwable exception, boolean committed, int status, boolean overrideStatusCodeOnThrowable, String method, @Nullable Map<String, String[]> parameterMap, String servletPath, @Nullable String pathInfo, @Nullable String contentTypeHeader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "58ae2285e64a824f2997d80d6880cb937e4771ba",
        "previous_commit": "8c57af74b77f782c23a3fc8a21ff841dec05e5cc",
        "date": 1636349369,
        "releases": {
            "previous": "58ae2285e64a824f2997d80d6880cb937e4771ba",
            "next": "58ae2285e64a824f2997d80d6880cb937e4771ba"
        },
        "commit_message": "[CI] Stabilize flaky tests (#2242)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "58ae2285e64a824f2997d80d6880cb937e4771ba": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/MetaData.java": [
                    "public static Future<MetaData> co.elastic.apm.agent.impl.metadata.MetaData.create(ConfigurationRegistry configurationRegistry, @Nullable String ephemeralId)"
                ]
            },
            "8c57af74b77f782c23a3fc8a21ff841dec05e5cc": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/MetaData.java": [
                    "public static Future<MetaData> co.elastic.apm.agent.impl.metadata.MetaData.create(ConfigurationRegistry configurationRegistry, @Nullable String ephemeralId)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e390674d7a8e7788758c7bdf9279308b3b0bf593",
        "previous_commit": "3b767e62edbbec250ad6e845cdd7b1632a9e728b",
        "date": 1661949551,
        "releases": {
            "previous": "e390674d7a8e7788758c7bdf9279308b3b0bf593",
            "next": "e390674d7a8e7788758c7bdf9279308b3b0bf593"
        },
        "commit_message": "Interrupted thread callsite resolution (#2752)\n\n* work-around for interrupted thread",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e390674d7a8e7788758c7bdf9279308b3b0bf593": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PackageScanner.java": [
                    "public static List<String> co.elastic.apm.agent.util.PackageScanner.getClassNames(final String basePackage, ClassLoader classLoader)"
                ]
            },
            "3b767e62edbbec250ad6e845cdd7b1632a9e728b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/PackageScanner.java": [
                    "public static List<String> co.elastic.apm.agent.util.PackageScanner.getClassNames(final String basePackage, ClassLoader classLoader)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "93fb6d6db97613577a5923b6f3819a9ac833e495",
        "previous_commit": "4f2e3870c79e73c2cbecd791f13ec1a67f76d222",
        "date": 1542385854,
        "releases": {
            "previous": "93fb6d6db97613577a5923b6f3819a9ac833e495",
            "next": "93fb6d6db97613577a5923b6f3819a9ac833e495"
        },
        "commit_message": "Propagate transaction ID instead of span ID when not sampling (#311)\n\naddresses elastic/apm#16",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "93fb6d6db97613577a5923b6f3819a9ac833e495": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "public StringBuilder co.elastic.apm.impl.transaction.TraceContext.getOutgoingTraceParentHeader()"
                ]
            },
            "4f2e3870c79e73c2cbecd791f13ec1a67f76d222": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "public StringBuilder co.elastic.apm.impl.transaction.TraceContext.getOutgoingTraceParentHeader()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "715f6dbaccd26fb3db7fdd191b1c4f5da9d7ff98",
        "previous_commit": "9e64b19d4d041eadf0887b370c2e40f677d15f6b",
        "date": 1551791170,
        "releases": {
            "previous": "715f6dbaccd26fb3db7fdd191b1c4f5da9d7ff98",
            "next": "715f6dbaccd26fb3db7fdd191b1c4f5da9d7ff98"
        },
        "commit_message": "Fix logging integration (#500)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "715f6dbaccd26fb3db7fdd191b1c4f5da9d7ff98": {
                "apm-agent-plugins/apm-slf4j-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java": [
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.init(ElasticApmTracer tracer)"
                ]
            },
            "9e64b19d4d041eadf0887b370c2e40f677d15f6b": {
                "apm-agent-plugins/apm-slf4j-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java": [
                    "public void co.elastic.apm.agent.slf4j.Slf4JMdcActivationListener.init(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "bdbf40144e23e60aa8640a608aaee29436aedaef",
        "previous_commit": "db97e7e8d79d966fe821f9d5ea2fb4f30a78fab5",
        "date": 1642440237,
        "releases": {
            "previous": "bdbf40144e23e60aa8640a608aaee29436aedaef",
            "next": "bdbf40144e23e60aa8640a608aaee29436aedaef"
        },
        "commit_message": "Drop unsampled transactions when connected to APM Server 8.0+ (#2329)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "bdbf40144e23e60aa8640a608aaee29436aedaef": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endTransaction(Transaction transaction)"
                ]
            },
            "db97e7e8d79d966fe821f9d5ea2fb4f30a78fab5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endTransaction(Transaction transaction)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d2b19e7727fa9ca9227978f788cade6e237f5a0f",
        "previous_commit": "49d0db54eb66684451407d5a231ae03912a51a15",
        "date": 1620194736,
        "releases": {
            "previous": "d2b19e7727fa9ca9227978f788cade6e237f5a0f",
            "next": "d2b19e7727fa9ca9227978f788cade6e237f5a0f"
        },
        "commit_message": "Es client scenario cancellable query (#1795)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d2b19e7727fa9ca9227978f788cade6e237f5a0f": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java": [
                    "public void co.elastic.apm.agent.es.restclient.ElasticsearchRestClientInstrumentationHelperImpl.finishClientSpan(@Nullable Response response, Span span, @Nullable Throwable t)"
                ]
            },
            "49d0db54eb66684451407d5a231ae03912a51a15": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java": [
                    "public void co.elastic.apm.agent.es.restclient.ElasticsearchRestClientInstrumentationHelperImpl.finishClientSpan(@Nullable Response response, Span span, @Nullable Throwable t)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5dcda6fe2d8b05efe2e0103860fcef77240af0e6",
        "previous_commit": "565c2e8074b89e3d06d17714e9d9982e3ab80f55",
        "date": 1662553031,
        "releases": {
            "previous": "5dcda6fe2d8b05efe2e0103860fcef77240af0e6",
            "next": "5dcda6fe2d8b05efe2e0103860fcef77240af0e6"
        },
        "commit_message": "Capture user name with Azure SSO (#2767)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5dcda6fe2d8b05efe2e0103860fcef77240af0e6": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> void co.elastic.apm.agent.servlet.ServletApiAdvice.onExitServlet( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest, Object servletResponse, @Nullable Object transactionOrScopeOrSpan, @Nullable Throwable t, Object thiz)"
                ]
            },
            "565c2e8074b89e3d06d17714e9d9982e3ab80f55": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletApiAdvice.java": [
                    "public static <HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> void co.elastic.apm.agent.servlet.ServletApiAdvice.onExitServlet( ServletApiAdapter<HttpServletRequest, HttpServletResponse, ServletContext, ServletContextEvent, FilterConfig, ServletConfig> adapter, Object servletRequest, Object servletResponse, @Nullable Object transactionOrScopeOrSpan, @Nullable Throwable t, Object thiz)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2688c452335ea2915a19a742b0c74b0145091cd4",
        "previous_commit": "1c4bbd2b7bf3364c71c00202e798487e92c24239",
        "date": 1620055375,
        "releases": {
            "previous": "2688c452335ea2915a19a742b0c74b0145091cd4",
            "next": "2688c452335ea2915a19a742b0c74b0145091cd4"
        },
        "commit_message": "Prevent profiler flaky test (#1799)\n\n* avoid trying to re-schedule on pool shutdown\r\n* simple fix for async profiler test flakyness",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2688c452335ea2915a19a742b0c74b0145091cd4": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.run()"
                ]
            },
            "1c4bbd2b7bf3364c71c00202e798487e92c24239": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.run()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d1016a26ac7f30c7f35d74904a40bd11be779a00",
        "previous_commit": "649be46cefa0ab6131d5773d36aa560c69c3c9c5",
        "date": 1536657714,
        "releases": {
            "previous": "d1016a26ac7f30c7f35d74904a40bd11be779a00",
            "next": "d1016a26ac7f30c7f35d74904a40bd11be779a00"
        },
        "commit_message": "POC: set default service_name (#195)\n\n\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d1016a26ac7f30c7f35d74904a40bd11be779a00": {
                "apm-agent-core/src/main/java/co/elastic/apm/configuration/StartupInfo.java": [
                    "void co.elastic.apm.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ]
            },
            "649be46cefa0ab6131d5773d36aa560c69c3c9c5": {
                "apm-agent-core/src/main/java/co/elastic/apm/configuration/StartupInfo.java": [
                    "void co.elastic.apm.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f7fa06aa87076668fa45c205657b2a93c95f9515",
        "previous_commit": "1117166b2a7344a24d3af4b90e1dcbbc20e2e606",
        "date": 1532417164,
        "releases": {
            "previous": "f7fa06aa87076668fa45c205657b2a93c95f9515",
            "next": "f7fa06aa87076668fa45c205657b2a93c95f9515"
        },
        "commit_message": "Re-activate scope for async dispatches\n\nThis makes sure that the current transaction is propagated to the\nthread executing the async dispatch\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f7fa06aa87076668fa45c205657b2a93c95f9515": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/helper/StartAsyncAdviceHelperImpl.java": [
                    "public void co.elastic.apm.servlet.helper.StartAsyncAdviceHelperImpl.onExitStartAsync(AsyncContext asyncContext)"
                ]
            },
            "1117166b2a7344a24d3af4b90e1dcbbc20e2e606": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/servlet/helper/StartAsyncAdviceHelperImpl.java": [
                    "public void co.elastic.apm.servlet.helper.StartAsyncAdviceHelperImpl.onExitStartAsync(AsyncContext asyncContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "fe24b264efb4edad1581d55a4bf5a0f666d0e045",
        "previous_commit": "59f54e2f359c8d166d1cabe026ed4a2812341305",
        "date": 1640274929,
        "releases": {
            "previous": "fe24b264efb4edad1581d55a4bf5a0f666d0e045",
            "next": "fe24b264efb4edad1581d55a4bf5a0f666d0e045"
        },
        "commit_message": "Fix @Traced annotation outcome (#2370)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "fe24b264efb4edad1581d55a4bf5a0f666d0e045": {
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/TracedInstrumentation.java": [
                    "public static void co.elastic.apm.agent.pluginapi.TracedInstrumentation.onMethodExit(@Advice.Enter @Nullable Object abstractSpan, @Advice.Thrown @Nullable Throwable t)"
                ]
            },
            "59f54e2f359c8d166d1cabe026ed4a2812341305": {
                "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/pluginapi/TracedInstrumentation.java": [
                    "public static void co.elastic.apm.agent.pluginapi.TracedInstrumentation.onMethodExit(@Advice.Enter @Nullable Object abstractSpan, @Advice.Thrown @Nullable Throwable t)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1a888fda7905b39ea7b93dc22e61bc9f0aa2bbb1",
        "previous_commit": "fba6361e415c38de57370998a3df22a8257cb9e0",
        "date": 1603290319,
        "releases": {
            "previous": "1a888fda7905b39ea7b93dc22e61bc9f0aa2bbb1",
            "next": "1a888fda7905b39ea7b93dc22e61bc9f0aa2bbb1"
        },
        "commit_message": "Avoid instrumenting HttpsURLConnectionImpl (#1447)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1a888fda7905b39ea7b93dc22e61bc9f0aa2bbb1": {
                "apm-agent-plugins/apm-urlconnection-plugin/src/main/java/co/elastic/apm/agent/urlconnection/HttpUrlConnectionInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.urlconnection.HttpUrlConnectionInstrumentation.getTypeMatcher()"
                ]
            },
            "fba6361e415c38de57370998a3df22a8257cb9e0": {
                "apm-agent-plugins/apm-urlconnection-plugin/src/main/java/co/elastic/apm/agent/urlconnection/HttpUrlConnectionInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.urlconnection.HttpUrlConnectionInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4bbb558f45fcf4a5d0e94efcaa7bf500409b01df",
        "previous_commit": "965c6567186b91c179314570270ebff62a46f130",
        "date": 1669289960,
        "releases": {
            "previous": "4bbb558f45fcf4a5d0e94efcaa7bf500409b01df",
            "next": "4bbb558f45fcf4a5d0e94efcaa7bf500409b01df"
        },
        "commit_message": "Added instrumentation for Finagle Http client (#2795)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4bbb558f45fcf4a5d0e94efcaa7bf500409b01df": {
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.httpclient.HttpClientHelper.startHttpClientSpan(AbstractSpan<?> parent, String method, @Nullable String uri, @Nullable String scheme, @Nullable CharSequence hostName, int port)"
                ]
            },
            "965c6567186b91c179314570270ebff62a46f130": {
                "apm-agent-plugins/apm-httpclient-core/src/main/java/co/elastic/apm/agent/httpclient/HttpClientHelper.java": [
                    "public static Span co.elastic.apm.agent.httpclient.HttpClientHelper.startHttpClientSpan(AbstractSpan<?> parent, String method, @Nullable String uri, @Nullable String scheme, @Nullable CharSequence hostName, int port)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3ceb4819ac8026d706024ab5772af942af25a1db",
        "previous_commit": "c558ad4a01dd3f0b427b9bfdafcd9822e6d4464a",
        "date": 1651654639,
        "releases": {
            "previous": "3ceb4819ac8026d706024ab5772af942af25a1db",
            "next": "3ceb4819ac8026d706024ab5772af942af25a1db"
        },
        "commit_message": "Fix OTel span end with explicit timestamp (#2615)\n\n* fix otel span end with explicit timestamp\r\n\r\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3ceb4819ac8026d706024ab5772af942af25a1db": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelSpan.java": [
                    "public void co.elastic.apm.agent.opentelemetry.sdk.OTelSpan.end(long timestamp, TimeUnit unit)"
                ]
            },
            "c558ad4a01dd3f0b427b9bfdafcd9822e6d4464a": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelSpan.java": [
                    "public void co.elastic.apm.agent.opentelemetry.sdk.OTelSpan.end(long timestamp, TimeUnit unit)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4e69d669d07cd65c55ed586f54e702697e7e7d98",
        "previous_commit": "303305d9f2a848b4f1383d2e5660f5a72bc4c11b",
        "date": 1593446286,
        "releases": {
            "previous": "4e69d669d07cd65c55ed586f54e702697e7e7d98",
            "next": "4e69d669d07cd65c55ed586f54e702697e7e7d98"
        },
        "commit_message": "Fix var name\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4e69d669d07cd65c55ed586f54e702697e7e7d98": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ProbabilitySampler.java": [
                    "public boolean co.elastic.apm.agent.impl.sampling.ProbabilitySampler.isSampled(Id traceId)"
                ]
            },
            "303305d9f2a848b4f1383d2e5660f5a72bc4c11b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ProbabilitySampler.java": [
                    "public boolean co.elastic.apm.agent.impl.sampling.ProbabilitySampler.isSampled(Id traceId)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1bb2c28227a9cde2ec9d1593a1d18978d3b81836",
        "previous_commit": "0eac739b395e97860fe01bf8ff96ebaefcdee667",
        "date": 1542296106,
        "releases": {
            "previous": "1bb2c28227a9cde2ec9d1593a1d18978d3b81836",
            "next": "1bb2c28227a9cde2ec9d1593a1d18978d3b81836"
        },
        "commit_message": "Fix NoSuchMethodError CharBuffer.flip() on Java 8 (#313)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1bb2c28227a9cde2ec9d1593a1d18978d3b81836": {
                "apm-agent-core/src/main/java/co/elastic/apm/util/IOUtils.java": [
                    "public static boolean co.elastic.apm.util.IOUtils.readUtf8Stream(final InputStream is, final CharBuffer charBuffer)"
                ]
            },
            "0eac739b395e97860fe01bf8ff96ebaefcdee667": {
                "apm-agent-core/src/main/java/co/elastic/apm/util/IOUtils.java": [
                    "public static boolean co.elastic.apm.util.IOUtils.readUtf8Stream(final InputStream is, final CharBuffer charBuffer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "113167e11243dc72917ca863982123c4d715da1f",
        "previous_commit": "b796ce27614653cc6f3a0ee32b87024e674d0fdb",
        "date": 1564060942,
        "releases": {
            "previous": "113167e11243dc72917ca863982123c4d715da1f",
            "next": "113167e11243dc72917ca863982123c4d715da1f"
        },
        "commit_message": "Add support for JDBC executeBatch (#747)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "113167e11243dc72917ca863982123c4d715da1f": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jdbc.StatementInstrumentation.getMethodMatcher()"
                ]
            },
            "b796ce27614653cc6f3a0ee32b87024e674d0fdb": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.jdbc.StatementInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "230bb27381f1c1e781df26c8bc31661737295b8e",
        "previous_commit": "8abcf4e862b66f2693635caa577749c9868adb14",
        "date": 1569338868,
        "releases": {
            "previous": "230bb27381f1c1e781df26c8bc31661737295b8e",
            "next": "230bb27381f1c1e781df26c8bc31661737295b8e"
        },
        "commit_message": "Avoid creating a temp agent file for each attachment (#859)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "230bb27381f1c1e781df26c8bc31661737295b8e": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static File co.elastic.apm.attach.ElasticApmAttacher.getAgentJarFile()"
                ]
            },
            "8abcf4e862b66f2693635caa577749c9868adb14": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "private static File co.elastic.apm.attach.ElasticApmAttacher.getAgentJarFile()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c3233260f7cef434562240d6d6f234521678049f",
        "previous_commit": "71251b5af4e886f125df2d349254dd0d75454498",
        "date": 1647853860,
        "releases": {
            "previous": "c3233260f7cef434562240d6d6f234521678049f",
            "next": "c3233260f7cef434562240d6d6f234521678049f"
        },
        "commit_message": "Add warning for misconfigured security manager (#2510)\n\n* warn security manager without grant all for agent\r\n\r\n* update changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c3233260f7cef434562240d6d6f234521678049f": {
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.premain.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ]
            },
            "71251b5af4e886f125df2d349254dd0d75454498": {
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/AgentMain.java": [
                    "public synchronized static void co.elastic.apm.agent.premain.AgentMain.init(String agentArguments, Instrumentation instrumentation, boolean premain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6fb00daf21e8e69688258403fef59ae3a0d0d1e8",
        "previous_commit": "b570d30ff5953b8ce637a268169af6364af0cd68",
        "date": 1708438350,
        "releases": {
            "previous": "6fb00daf21e8e69688258403fef59ae3a0d0d1e8",
            "next": "6fb00daf21e8e69688258403fef59ae3a0d0d1e8"
        },
        "commit_message": "Added support for Otel TracerBuilder (#3535)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6fb00daf21e8e69688258403fef59ae3a0d0d1e8": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/AbstractOpenTelemetryInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.opentelemetry.AbstractOpenTelemetryInstrumentation.getClassLoaderMatcher()"
                ]
            },
            "b570d30ff5953b8ce637a268169af6364af0cd68": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/AbstractOpenTelemetryInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.opentelemetry.AbstractOpenTelemetryInstrumentation.getClassLoaderMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2226daba4254731dd2279eb4fdde7defd2776313",
        "previous_commit": "b39aa059a56f5cd4d7639dde348b53afc6e45044",
        "date": 1673975527,
        "releases": {
            "previous": "2226daba4254731dd2279eb4fdde7defd2776313",
            "next": "2226daba4254731dd2279eb4fdde7defd2776313"
        },
        "commit_message": "Fixed AgentOverheadMetricsTest flakyness (#2918)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2226daba4254731dd2279eb4fdde7defd2776313": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/AgentOverheadMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.AgentOverheadMetrics.bindTo(MetricRegistry metricRegistry, MetricsConfiguration config)"
                ]
            },
            "b39aa059a56f5cd4d7639dde348b53afc6e45044": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/builtin/AgentOverheadMetrics.java": [
                    "void co.elastic.apm.agent.metrics.builtin.AgentOverheadMetrics.bindTo(MetricRegistry metricRegistry, MetricsConfiguration config)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "02fc172ec28cf01a3ebb101885923c332cc5ff8e",
        "previous_commit": "edce63f51124db777fdb1d7780bff6712155d570",
        "date": 1666679864,
        "releases": {
            "previous": "02fc172ec28cf01a3ebb101885923c332cc5ff8e",
            "next": "02fc172ec28cf01a3ebb101885923c332cc5ff8e"
        },
        "commit_message": "Avoid NPE in afterEndSpan (#2859)\n\n* avoid NPE due to decrement after endSpan",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "02fc172ec28cf01a3ebb101885923c332cc5ff8e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()"
                ]
            },
            "edce63f51124db777fdb1d7780bff6712155d570": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Span.java": [
                    "protected void co.elastic.apm.agent.impl.transaction.Span.afterEnd()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1da38e642e779f515aa862f2bfc46d4398549050",
        "previous_commit": "e126d7f6a1b627b2e2e220aa59548e9b27338455",
        "date": 1632838083,
        "releases": {
            "previous": "1da38e642e779f515aa862f2bfc46d4398549050",
            "next": "1da38e642e779f515aa862f2bfc46d4398549050"
        },
        "commit_message": "Bump version.byte-buddy from 1.11.16 to 1.11.18 (#2155)\n\n* Bump version.byte-buddy from 1.11.16 to 1.11.18\r\n\r\nBumps `version.byte-buddy` from 1.11.16 to 1.11.18.\r\n\r\nUpdates `byte-buddy-agent` from 1.11.16 to 1.11.18\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.16...byte-buddy-1.11.18)\r\n\r\nUpdates `byte-buddy-dep` from 1.11.16 to 1.11.18\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.16...byte-buddy-1.11.18)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: net.bytebuddy:byte-buddy-agent\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-dep\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\n* fix compilation error\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1da38e642e779f515aa862f2bfc46d4398549050": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/FailSafeDeclaredMethodsCompiler.java": [
                    "public MethodGraph.Linked compile(TypeDescription typeDescription)"
                ]
            },
            "e126d7f6a1b627b2e2e220aa59548e9b27338455": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/FailSafeDeclaredMethodsCompiler.java": [
                    "public MethodGraph.Linked compile(TypeDescription typeDescription)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4f5d6a2d36795e4709d5865520f14579ce3f93d7",
        "previous_commit": "028d86a83f9c1bfb80c6eadf01669412cf81ed10",
        "date": 1655790156,
        "releases": {
            "previous": "4f5d6a2d36795e4709d5865520f14579ce3f93d7",
            "next": "4f5d6a2d36795e4709d5865520f14579ce3f93d7"
        },
        "commit_message": "Mark Java 7 support as deprecated (#2677)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4f5d6a2d36795e4709d5865520f14579ce3f93d7": {
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/JavaVersionBootstrapCheck.java": [
                    "public void co.elastic.apm.agent.premain.JavaVersionBootstrapCheck.doBootstrapCheck(BootstrapCheckResult result)"
                ]
            },
            "028d86a83f9c1bfb80c6eadf01669412cf81ed10": {
                "elastic-apm-agent/src/main/java/co/elastic/apm/agent/premain/JavaVersionBootstrapCheck.java": [
                    "public void co.elastic.apm.agent.premain.JavaVersionBootstrapCheck.doBootstrapCheck(BootstrapCheckResult result)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "036cfa476e840ebae52c57c55a9b965b40cc4691",
        "previous_commit": "acf1334cc9dfa209281ebdd724ba19a2a5548f66",
        "date": 1543227654,
        "releases": {
            "previous": "036cfa476e840ebae52c57c55a9b965b40cc4691",
            "next": "036cfa476e840ebae52c57c55a9b965b40cc4691"
        },
        "commit_message": " Reversing order of system.hostname and system.platform (#336)\n\n* Reversing order of system.hostname and system.platform\r\n\r\n* Add test for serialized system info\r\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "036cfa476e840ebae52c57c55a9b965b40cc4691": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/SystemInfo.java": [
                    "public static SystemInfo co.elastic.apm.impl.payload.SystemInfo.create()"
                ]
            },
            "acf1334cc9dfa209281ebdd724ba19a2a5548f66": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/payload/SystemInfo.java": [
                    "public static SystemInfo co.elastic.apm.impl.payload.SystemInfo.create()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b4f4a68aab2ff9a733d1b8eead76ee8e9b67f6ba",
        "previous_commit": "108967f18311d1936a36da5474bc5b170e0e4197",
        "date": 1596518213,
        "releases": {
            "previous": "b4f4a68aab2ff9a733d1b8eead76ee8e9b67f6ba",
            "next": "b4f4a68aab2ff9a733d1b8eead76ee8e9b67f6ba"
        },
        "commit_message": "Silencing log4j StatusLogger during initialization (#1322)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b4f4a68aab2ff9a733d1b8eead76ee8e9b67f6ba": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public static void co.elastic.apm.agent.logging.LoggingConfiguration.init(List<ConfigurationSource> sources, String ephemeralId)"
                ]
            },
            "108967f18311d1936a36da5474bc5b170e0e4197": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/logging/LoggingConfiguration.java": [
                    "public static void co.elastic.apm.agent.logging.LoggingConfiguration.init(List<ConfigurationSource> sources, String ephemeralId)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c6b43e1eb9e8edebc978dd1ae4f991f1852a620d",
        "previous_commit": "5a769394594f0344c15c745a596a2f56ba015d01",
        "date": 1540805662,
        "releases": {
            "previous": "c6b43e1eb9e8edebc978dd1ae4f991f1852a620d",
            "next": "c6b43e1eb9e8edebc978dd1ae4f991f1852a620d"
        },
        "commit_message": "Use java.time.Instant to get micros accurate timestamps (#261)\n\nfall back to System.currentTimeMillis() for Java 7",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c6b43e1eb9e8edebc978dd1ae4f991f1852a620d": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/EpochTickClock.java": [
                    "public long co.elastic.apm.impl.transaction.EpochTickClock.init()"
                ]
            },
            "5a769394594f0344c15c745a596a2f56ba015d01": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/EpochTickClock.java": [
                    "public long co.elastic.apm.impl.transaction.EpochTickClock.init()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e2ef2453c8a560922dfaabfaf9f9dbd0d3032337",
        "previous_commit": "ce3d9802e59df6d1d3ffdd7f02dcb897d1027fa7",
        "date": 1649156316,
        "releases": {
            "previous": "e2ef2453c8a560922dfaabfaf9f9dbd0d3032337",
            "next": "e2ef2453c8a560922dfaabfaf9f9dbd0d3032337"
        },
        "commit_message": "Allow square bracket in JMX config value (#2547)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e2ef2453c8a560922dfaabfaf9f9dbd0d3032337": {
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/MapsTokenScanner.java": [
                    "String co.elastic.apm.agent.jmx.MapsTokenScanner.scanValue()"
                ]
            },
            "ce3d9802e59df6d1d3ffdd7f02dcb897d1027fa7": {
                "apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/MapsTokenScanner.java": [
                    "String co.elastic.apm.agent.jmx.MapsTokenScanner.scanValue()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "53639138bd646e4ac57c67b9d1d99445291f1e9f",
        "previous_commit": "57fdc3240f6265c2344954fccc07b144d0bb399e",
        "date": 1544453969,
        "releases": {
            "previous": "53639138bd646e4ac57c67b9d1d99445291f1e9f",
            "next": "53639138bd646e4ac57c67b9d1d99445291f1e9f"
        },
        "commit_message": "Truncate tag keys and values (#381)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "53639138bd646e4ac57c67b9d1d99445291f1e9f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTags(Map<String, String> value)"
                ]
            },
            "57fdc3240f6265c2344954fccc07b144d0bb399e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeTags(Map<String, String> value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "3a1053133cfd7e5d9d30ee73e5601219fd209331",
        "previous_commit": "dc78d6d8bd2fe167bbf5d529caf3744249698c74",
        "date": 1547023254,
        "releases": {
            "previous": "3a1053133cfd7e5d9d30ee73e5601219fd209331",
            "next": "3a1053133cfd7e5d9d30ee73e5601219fd209331"
        },
        "commit_message": "Exclude constructors in TraceMethodInstrumentation (#412)\n\nbecause Byte Buddy complains about catching exceptions in constructors:\r\njava.lang.IllegalStateException: Cannot catch exception during constructor call",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "3a1053133cfd7e5d9d30ee73e5601219fd209331": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/TraceMethodInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.bci.methodmatching.TraceMethodInstrumentation.getMethodMatcher()"
                ]
            },
            "dc78d6d8bd2fe167bbf5d529caf3744249698c74": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/TraceMethodInstrumentation.java": [
                    "public ElementMatcher<? super MethodDescription> co.elastic.apm.agent.bci.methodmatching.TraceMethodInstrumentation.getMethodMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2d2057ffdcd4439d6ff7d78c6ec3cf4ff5d5073c",
        "previous_commit": "ed102c0c4af815ea0b0a1556049cc30f5006330a",
        "date": 1601390544,
        "releases": {
            "previous": "2d2057ffdcd4439d6ff7d78c6ec3cf4ff5d5073c",
            "next": "2d2057ffdcd4439d6ff7d78c6ec3cf4ff5d5073c"
        },
        "commit_message": "lazy-load jdbc helper (#1409)\n\nlazy-load jdbc helper",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2d2057ffdcd4439d6ff7d78c6ec3cf4ff5d5073c": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.jdbc.StatementInstrumentation.onBeforeExecute(@Advice.This Statement statement)"
                ]
            },
            "ed102c0c4af815ea0b0a1556049cc30f5006330a": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java": [
                    "public static Object co.elastic.apm.agent.jdbc.StatementInstrumentation.onBeforeExecute(@Advice.This Statement statement)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7ffa7dd3d73e5e01e24c0f6d03639b3ee0951393",
        "previous_commit": "57d0dbd903fb22b2f288c8faf468e5d9e027f4d8",
        "date": 1633441201,
        "releases": {
            "previous": "7ffa7dd3d73e5e01e24c0f6d03639b3ee0951393",
            "next": "7ffa7dd3d73e5e01e24c0f6d03639b3ee0951393"
        },
        "commit_message": "k8s pod ID discovery enhancement (#2126)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7ffa7dd3d73e5e01e24c0f6d03639b3ee0951393": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.parseContainerId(String line)"
                ]
            },
            "57d0dbd903fb22b2f288c8faf468e5d9e027f4d8": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/SystemInfo.java": [
                    "SystemInfo co.elastic.apm.agent.impl.payload.SystemInfo.parseContainerId(String line)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "481ee2536d79b6b54fb85d74fbae6c9d8112b15b",
        "previous_commit": "b5e4bf05128aadc72f80eecc528351c4d3c0bdf5",
        "date": 1694599511,
        "releases": {
            "previous": "481ee2536d79b6b54fb85d74fbae6c9d8112b15b",
            "next": "481ee2536d79b6b54fb85d74fbae6c9d8112b15b"
        },
        "commit_message": "Change 'cloud.project.id' for GCP metadata to be the 'project-id' (#3316)\n\nCloses: https://github.com/elastic/apm-agent-java/issues/3311\r\n\r\nCo-authored-by: Jonas Kunz <jonas.kunz@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "481ee2536d79b6b54fb85d74fbae6c9d8112b15b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/CloudMetadataProvider.java": [
                    "static CloudProviderInfo co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.deserializeGcpMetadata(@Nullable String rawMetadata)"
                ]
            },
            "b5e4bf05128aadc72f80eecc528351c4d3c0bdf5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/CloudMetadataProvider.java": [
                    "static CloudProviderInfo co.elastic.apm.agent.impl.metadata.CloudMetadataProvider.deserializeGcpMetadata(@Nullable String rawMetadata)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b53366662a3dad5a7da5f36569e72630b4b60269",
        "previous_commit": "fef8c0247d64cfce0b6fad833feb8176623d98b4",
        "date": 1634126087,
        "releases": {
            "previous": "b53366662a3dad5a7da5f36569e72630b4b60269",
            "next": "b53366662a3dad5a7da5f36569e72630b4b60269"
        },
        "commit_message": "Print the service version when starting the agent (#2189)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b53366662a3dad5a7da5f36569e72630b4b60269": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "void co.elastic.apm.agent.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ]
            },
            "fef8c0247d64cfce0b6fad833feb8176623d98b4": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "void co.elastic.apm.agent.configuration.StartupInfo.logConfiguration(ConfigurationRegistry configurationRegistry, Logger logger)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "89b3c963b54edce519547effce4a6352693dc439",
        "previous_commit": "74140270e13839070cce7a6631e5c8425409e162",
        "date": 1646117712,
        "releases": {
            "previous": "89b3c963b54edce519547effce4a6352693dc439",
            "next": "89b3c963b54edce519547effce4a6352693dc439"
        },
        "commit_message": "Create the Redis spans as exit spans (#2485)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "89b3c963b54edce519547effce4a6352693dc439": {
                "apm-agent-plugins/apm-redis-plugin/apm-redis-common/src/main/java/co/elastic/apm/agent/redis/RedisSpanUtils.java": [
                    "public static Span co.elastic.apm.agent.redis.RedisSpanUtils.createRedisSpan(String command)"
                ]
            },
            "74140270e13839070cce7a6631e5c8425409e162": {
                "apm-agent-plugins/apm-redis-plugin/apm-redis-common/src/main/java/co/elastic/apm/agent/redis/RedisSpanUtils.java": [
                    "public static Span co.elastic.apm.agent.redis.RedisSpanUtils.createRedisSpan(String command)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9437aa6e117aa6023038af2772bfd0d968ff4a00",
        "previous_commit": "71bbdf7ac53f3c7ac4b809167d514468df9dc3b6",
        "date": 1688999006,
        "releases": {
            "previous": "9437aa6e117aa6023038af2772bfd0d968ff4a00",
            "next": "9437aa6e117aa6023038af2772bfd0d968ff4a00"
        },
        "commit_message": "avoid double ending grpc transaction (#3223)\n\n* avoid double ending grpc transaction",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9437aa6e117aa6023038af2772bfd0d968ff4a00": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.exitServerListenerMethod(@Nullable Throwable thrown, ServerCall.Listener<?> listener, @Nullable Transaction<?> transaction, @Nullable Status terminateStatus)"
                ]
            },
            "71bbdf7ac53f3c7ac4b809167d514468df9dc3b6": {
                "apm-agent-plugins/apm-grpc/apm-grpc-plugin/src/main/java/co/elastic/apm/agent/grpc/GrpcHelper.java": [
                    "public void co.elastic.apm.agent.grpc.GrpcHelper.exitServerListenerMethod(@Nullable Throwable thrown, ServerCall.Listener<?> listener, @Nullable Transaction<?> transaction, @Nullable Status terminateStatus)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "344ee0c454e712e825ae74e79399e6933f1a3b3a",
        "previous_commit": "595a1b6b57e91122bdc545e0197bd93c0e764e71",
        "date": 1591599455,
        "releases": {
            "previous": "344ee0c454e712e825ae74e79399e6933f1a3b3a",
            "next": "344ee0c454e712e825ae74e79399e6933f1a3b3a"
        },
        "commit_message": "Fix failing tests due to url-encoded file paths (#1218)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "344ee0c454e712e825ae74e79399e6933f1a3b3a": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/IOUtils.java": [
                    "public static synchronized File co.elastic.apm.agent.util.IOUtils.exportResourceToTemp(String resource, String tempFileNamePrefix, String tempFileNameExtension)"
                ]
            },
            "595a1b6b57e91122bdc545e0197bd93c0e764e71": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/IOUtils.java": [
                    "public static synchronized File co.elastic.apm.agent.util.IOUtils.exportResourceToTemp(String resource, String tempFileNamePrefix, String tempFileNameExtension)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1961192cd72b6bb503fdc9f963f7115ce62cb5ff",
        "previous_commit": "5fad53be2ea6a6a09b3328c925f6eeba23949381",
        "date": 1673770678,
        "releases": {
            "previous": "1961192cd72b6bb503fdc9f963f7115ce62cb5ff",
            "next": "1961192cd72b6bb503fdc9f963f7115ce62cb5ff"
        },
        "commit_message": "Set service target for non-sampled ES client spans (#2959)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1961192cd72b6bb503fdc9f963f7115ce62cb5ff": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ]
            },
            "5fad53be2ea6a6a09b3328c925f6eeba23949381": {
                "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/esrestclient/ElasticsearchRestClientInstrumentationHelper.java": [
                    "public Span co.elastic.apm.agent.esrestclient.ElasticsearchRestClientInstrumentationHelper.createClientSpan(String method, String endpoint, @Nullable HttpEntity httpEntity)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ab16fbd23ad8ff482dfd7223f6c64946d3843c5c",
        "previous_commit": "d9264f4eaae7069d12b08ffaec38030ba2fc0cab",
        "date": 1675696152,
        "releases": {
            "previous": "ab16fbd23ad8ff482dfd7223f6c64946d3843c5c",
            "next": "ab16fbd23ad8ff482dfd7223f6c64946d3843c5c"
        },
        "commit_message": "Fix used instrumentations shown on shutdown (#3001)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ab16fbd23ad8ff482dfd7223f6c64946d3843c5c": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/InstrumentationStats.java": [
                    "public Collection<String> co.elastic.apm.agent.bci.InstrumentationStats.getUsedInstrumentationGroups()"
                ]
            },
            "d9264f4eaae7069d12b08ffaec38030ba2fc0cab": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/InstrumentationStats.java": [
                    "public Collection<String> co.elastic.apm.agent.bci.InstrumentationStats.getUsedInstrumentationGroups()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c5ed2e1cb4d496c8f36afd1610ccbf48ced88f22",
        "previous_commit": "6d4b20e6c4f2cf71a2fe5d928ed08d57448530c3",
        "date": 1710178176,
        "releases": {
            "previous": "c5ed2e1cb4d496c8f36afd1610ccbf48ced88f22",
            "next": "c5ed2e1cb4d496c8f36afd1610ccbf48ced88f22"
        },
        "commit_message": "powershell no-logo (#3556)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c5ed2e1cb4d496c8f36afd1610ccbf48ced88f22": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/SystemInfo.java": [
                    "static String co.elastic.apm.agent.impl.metadata.SystemInfo.discoverHostnameThroughCommand(boolean isWindows, long timeoutMillis)"
                ]
            },
            "6d4b20e6c4f2cf71a2fe5d928ed08d57448530c3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/metadata/SystemInfo.java": [
                    "static String co.elastic.apm.agent.impl.metadata.SystemInfo.discoverHostnameThroughCommand(boolean isWindows, long timeoutMillis)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f359ad0166e9d4fdba5b1544891fadb4dfafed38",
        "previous_commit": "76d3ce1c94e997cb288044388fec1ce331863ba7",
        "date": 1602003057,
        "releases": {
            "previous": "f359ad0166e9d4fdba5b1544891fadb4dfafed38",
            "next": "f359ad0166e9d4fdba5b1544891fadb4dfafed38"
        },
        "commit_message": "Add git rev to version (#1427)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f359ad0166e9d4fdba5b1544891fadb4dfafed38": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/ServiceFactory.java": [
                    "private String co.elastic.apm.agent.impl.payload.ServiceFactory.getAgentVersion()"
                ]
            },
            "76d3ce1c94e997cb288044388fec1ce331863ba7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/payload/ServiceFactory.java": [
                    "private String co.elastic.apm.agent.impl.payload.ServiceFactory.getAgentVersion()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "505e00b734c2c602a0b0c0648c00cd12ebb01187",
        "previous_commit": "1a888fda7905b39ea7b93dc22e61bc9f0aa2bbb1",
        "date": 1603729007,
        "releases": {
            "previous": "505e00b734c2c602a0b0c0648c00cd12ebb01187",
            "next": "505e00b734c2c602a0b0c0648c00cd12ebb01187"
        },
        "commit_message": "Adding config option to dump instrumented classes bytecode (#1442)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "505e00b734c2c602a0b0c0648c00cd12ebb01187": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)"
                ]
            },
            "1a888fda7905b39ea7b93dc22e61bc9f0aa2bbb1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static synchronized void co.elastic.apm.agent.bci.ElasticApmAgent.initInstrumentation(final ElasticApmTracer tracer, Instrumentation instrumentation, Iterable<ElasticApmInstrumentation> instrumentations, boolean premain)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4ef35f746671d3fee75c8b3f3462e7dcc92b0089",
        "previous_commit": "505e00b734c2c602a0b0c0648c00cd12ebb01187",
        "date": 1603729212,
        "releases": {
            "previous": "4ef35f746671d3fee75c8b3f3462e7dcc92b0089",
            "next": "4ef35f746671d3fee75c8b3f3462e7dcc92b0089"
        },
        "commit_message": "Async Profiler - add support for AArch64 (#1443)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4ef35f746671d3fee75c8b3f3462e7dcc92b0089": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java": [
                    "private static String co.elastic.apm.agent.profiler.asyncprofiler.AsyncProfiler.getLibraryFileName()"
                ]
            },
            "505e00b734c2c602a0b0c0648c00cd12ebb01187": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java": [
                    "private static String co.elastic.apm.agent.profiler.asyncprofiler.AsyncProfiler.getLibraryFileName()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7637d933f3db37dba101fd3592d3bc1d529436c6",
        "previous_commit": "66273d72f22b9c472de6433efaa59d3734ad7993",
        "date": 1675774480,
        "releases": {
            "previous": "7637d933f3db37dba101fd3592d3bc1d529436c6",
            "next": "7637d933f3db37dba101fd3592d3bc1d529436c6"
        },
        "commit_message": "Add configuration to suppress Async Profiler logging (#3002)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7637d933f3db37dba101fd3592d3bc1d529436c6": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.run()"
                ]
            },
            "66273d72f22b9c472de6433efaa59d3734ad7993": {
                "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java": [
                    "public void co.elastic.apm.agent.profiler.SamplingProfiler.run()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9e64b19d4d041eadf0887b370c2e40f677d15f6b",
        "previous_commit": "8fb72568e8783089ad6889e4c42b46865fddb016",
        "date": 1551784317,
        "releases": {
            "previous": "9e64b19d4d041eadf0887b370c2e40f677d15f6b",
            "next": "9e64b19d4d041eadf0887b370c2e40f677d15f6b"
        },
        "commit_message": "Executors instrumentation - select wrapper based on span lifecycle management (#509)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9e64b19d4d041eadf0887b370c2e40f677d15f6b": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <V> Callable<V> co.elastic.apm.agent.impl.ElasticApmTracer.wrapCallable(Callable<V> delegate, TraceContext traceContext)"
                ]
            },
            "8fb72568e8783089ad6889e4c42b46865fddb016": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <V> Callable<V> co.elastic.apm.agent.impl.ElasticApmTracer.wrapCallable(Callable<V> delegate, TraceContext traceContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7ff6adf9d2614eb0db6849ab38aeea2ac17d5df2",
        "previous_commit": "f68d362de11a55d51e57eea0e29408f2db976b50",
        "date": 1604397300,
        "releases": {
            "previous": "7ff6adf9d2614eb0db6849ab38aeea2ac17d5df2",
            "next": "7ff6adf9d2614eb0db6849ab38aeea2ac17d5df2"
        },
        "commit_message": "Fix attach external config (#1469)\n\nLoad external config on runtime attach",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7ff6adf9d2614eb0db6849ab38aeea2ac17d5df2": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "static File co.elastic.apm.attach.ElasticApmAttacher.createTempProperties(Map<String, String> configuration)"
                ]
            },
            "f68d362de11a55d51e57eea0e29408f2db976b50": {
                "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java": [
                    "static File co.elastic.apm.attach.ElasticApmAttacher.createTempProperties(Map<String, String> configuration)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "a8cc3a0a586448a6f44ddcc56884284770e2f5df",
        "previous_commit": "9888601afb5fd9a4cdecbffc43a3dc7d0acfba72",
        "date": 1558603141,
        "releases": {
            "previous": "a8cc3a0a586448a6f44ddcc56884284770e2f5df",
            "next": "a8cc3a0a586448a6f44ddcc56884284770e2f5df"
        },
        "commit_message": "Adding ephemeral_id field (#637)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "a8cc3a0a586448a6f44ddcc56884284770e2f5df": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeAgent(final Agent agent)"
                ]
            },
            "9888601afb5fd9a4cdecbffc43a3dc7d0acfba72": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeAgent(final Agent agent)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "25ebe0543b85c3d36640258fb7d6bd6f6007dc3f",
        "previous_commit": "a9de7631f8a8de4731538a3b86e550ebdc0bed19",
        "date": 1538656972,
        "releases": {
            "previous": "25ebe0543b85c3d36640258fb7d6bd6f6007dc3f",
            "next": "25ebe0543b85c3d36640258fb7d6bd6f6007dc3f"
        },
        "commit_message": "Save a call to System.nanoTime when starting Transactions\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "25ebe0543b85c3d36640258fb7d6bd6f6007dc3f": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(@Nullable String traceParentHeader, long epochMicros, Sampler sampler)"
                ]
            },
            "a9de7631f8a8de4731538a3b86e550ebdc0bed19": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Transaction.java": [
                    "public Transaction co.elastic.apm.impl.transaction.Transaction.start(@Nullable String traceParentHeader, long epochMicros, Sampler sampler)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "9ccfab202a5988cb5025753cad9b622cf90febb7",
        "previous_commit": "16194061a859e9d0569a29e9cc18f1b047de9228",
        "date": 1659023085,
        "releases": {
            "previous": "9ccfab202a5988cb5025753cad9b622cf90febb7",
            "next": "9ccfab202a5988cb5025753cad9b622cf90febb7"
        },
        "commit_message": "log user and current directory for attach debug (#2727)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "9ccfab202a5988cb5025753cad9b622cf90febb7": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "public static void co.elastic.apm.attach.AgentAttacher.main(String[] args)"
                ]
            },
            "16194061a859e9d0569a29e9cc18f1b047de9228": {
                "apm-agent-attach-cli/src/main/java/co/elastic/apm/attach/AgentAttacher.java": [
                    "public static void co.elastic.apm.attach.AgentAttacher.main(String[] args)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ac4de53768f9f57a2c20f92007bf4a438d3e50c1",
        "previous_commit": "42e951beb7a79036660d059884bbb8e96a882a02",
        "date": 1556189756,
        "releases": {
            "previous": "ac4de53768f9f57a2c20f92007bf4a438d3e50c1",
            "next": "ac4de53768f9f57a2c20f92007bf4a438d3e50c1"
        },
        "commit_message": "Exclude $view proxies from JAX-RS instrumentation (#600)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ac4de53768f9f57a2c20f92007bf4a438d3e50c1": {
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getTypeMatcher()"
                ]
            },
            "42e951beb7a79036660d059884bbb8e96a882a02": {
                "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.jaxrs.JaxRsTransactionNameInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "af562cdeb0de6a352e67198b8bdbf2bac103b8f2",
        "previous_commit": "3793e3c45b96c61b9b68033d4d3c9b1c387800d6",
        "date": 1548055980,
        "releases": {
            "previous": "af562cdeb0de6a352e67198b8bdbf2bac103b8f2",
            "next": "af562cdeb0de6a352e67198b8bdbf2bac103b8f2"
        },
        "commit_message": "Allow package-only matchers (#428)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "af562cdeb0de6a352e67198b8bdbf2bac103b8f2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/MethodMatcher.java": [
                    "public static MethodMatcher co.elastic.apm.agent.bci.methodmatching.MethodMatcher.of(String methodMatcher)"
                ]
            },
            "3793e3c45b96c61b9b68033d4d3c9b1c387800d6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/methodmatching/MethodMatcher.java": [
                    "public static MethodMatcher co.elastic.apm.agent.bci.methodmatching.MethodMatcher.of(String methodMatcher)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "60233f004f4f8d3bf2094427dbff8dcda7951346",
        "previous_commit": "f02e239f6611348d001c324604909fba0f2772c3",
        "date": 1643195200,
        "releases": {
            "previous": "60233f004f4f8d3bf2094427dbff8dcda7951346",
            "next": "60233f004f4f8d3bf2094427dbff8dcda7951346"
        },
        "commit_message": "Use Implementation-Title as default service name if it is available (#1921)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "60233f004f4f8d3bf2094427dbff8dcda7951346": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServiceNameUtil.java": [
                    "private static String co.elastic.apm.agent.configuration.ServiceNameUtil.parseJarCommand(String command)"
                ]
            },
            "f02e239f6611348d001c324604909fba0f2772c3": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/ServiceNameUtil.java": [
                    "private static String co.elastic.apm.agent.configuration.ServiceNameUtil.parseJarCommand(String command)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "025cf2a37e0e81d77c0075548aa8546e50bc6cd2",
        "previous_commit": "43595d36c133dcd445684040b31e2ff0e85f8fcf",
        "date": 1589182589,
        "releases": {
            "previous": "025cf2a37e0e81d77c0075548aa8546e50bc6cd2",
            "next": "025cf2a37e0e81d77c0075548aa8546e50bc6cd2"
        },
        "commit_message": "Fix currentTransaction() for async spans (#1174)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "025cf2a37e0e81d77c0075548aa8546e50bc6cd2": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()"
                ]
            },
            "43595d36c133dcd445684040b31e2ff0e85f8fcf": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public Transaction co.elastic.apm.agent.impl.ElasticApmTracer.currentTransaction()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "259cb5a22a46ce62fdba1d0f6e51d07db0620e0b",
        "previous_commit": "b335bd70a9e5d44fe332388d76efccc4e5510e37",
        "date": 1648474037,
        "releases": {
            "previous": "259cb5a22a46ce62fdba1d0f6e51d07db0620e0b",
            "next": "259cb5a22a46ce62fdba1d0f6e51d07db0620e0b"
        },
        "commit_message": "Fixed AWS lambda support for missing AWS events classes (#2551)\n\n* Fixed AWS lambda instrumentation for cases when no AWS events classes are used and are not available.\r\n\r\n* Update apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/RequestHandlerInstrumentation.java\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>\r\n\r\n* Update apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/RequestHandlerInstrumentation.java\r\n\r\n* Update CHANGELOG.asciidoc\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "259cb5a22a46ce62fdba1d0f6e51d07db0620e0b": {
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/RequestHandlerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.awslambda.RequestHandlerInstrumentation.handlerExit(@Nullable @Advice.Enter Object transactionObj, @Nullable @Advice.Thrown Throwable thrown, @Nullable @Advice.Return Object output)"
                ]
            },
            "b335bd70a9e5d44fe332388d76efccc4e5510e37": {
                "apm-agent-plugins/apm-awslambda-plugin/src/main/java/co/elastic/apm/agent/awslambda/RequestHandlerInstrumentation.java": [
                    "public static void co.elastic.apm.agent.awslambda.RequestHandlerInstrumentation.handlerExit(@Nullable @Advice.Enter Object transactionObj, @Nullable @Advice.Thrown Throwable thrown, @Nullable @Advice.Return Object output)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7265fe94af0e7e75ad5a4721e8a6d87217a68b18",
        "previous_commit": "101b369ff602eb7c5410d8e485a442cbd2fdf410",
        "date": 1524635513,
        "releases": {
            "previous": "7265fe94af0e7e75ad5a4721e8a6d87217a68b18",
            "next": "7265fe94af0e7e75ad5a4721e8a6d87217a68b18"
        },
        "commit_message": "Replace disallowed tag key chars\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7265fe94af0e7e75ad5a4721e8a6d87217a68b18": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeContext(final Context context)"
                ]
            },
            "101b369ff602eb7c5410d8e485a442cbd2fdf410": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.report.serialize.DslJsonSerializer.serializeContext(final Context context)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "609b3e325949b63ca72e7edc09c5264e0e5833bd",
        "previous_commit": "35fd21e855b15e13c001885c0ef1a30836161b84",
        "date": 1607430706,
        "releases": {
            "previous": "609b3e325949b63ca72e7edc09c5264e0e5833bd",
            "next": "609b3e325949b63ca72e7edc09c5264e0e5833bd"
        },
        "commit_message": "Fix handling of some more invalid Micrometer metric values (#1559)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "609b3e325949b63ca72e7edc09c5264e0e5833bd": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            },
            "35fd21e855b15e13c001885c0ef1a30836161b84": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeMetricSet(List<Tag> tags, List<Meter> meters, long epochMicros, StringBuilder replaceBuilder, JsonWriter jw)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ae6fc4a1952e97671a9ca6d312f28240725261c6",
        "previous_commit": "ec3683d3e64045c4f56ca443f4714d1e565cde68",
        "date": 1618918545,
        "releases": {
            "previous": "ae6fc4a1952e97671a9ca6d312f28240725261c6",
            "next": "ae6fc4a1952e97671a9ca6d312f28240725261c6"
        },
        "commit_message": "Make non-default settings observable even in INFO (#1777)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ae6fc4a1952e97671a9ca6d312f28240725261c6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "private void co.elastic.apm.agent.configuration.StartupInfo.logConfigWithNonDefaultValue(Logger logger, ConfigurationOption<?> option)"
                ]
            },
            "ec3683d3e64045c4f56ca443f4714d1e565cde68": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/StartupInfo.java": [
                    "private void co.elastic.apm.agent.configuration.StartupInfo.logConfigWithNonDefaultValue(Logger logger, ConfigurationOption<?> option)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "6bc92e3e8ce1e38c93825a9c02c9e8e2716c1078",
        "previous_commit": "8f5b5284cf16a65d159f61cebb9075e75234529e",
        "date": 1650894100,
        "releases": {
            "previous": "6bc92e3e8ce1e38c93825a9c02c9e8e2716c1078",
            "next": "6bc92e3e8ce1e38c93825a9c02c9e8e2716c1078"
        },
        "commit_message": "fix comma missing from json dropped stats, adding test case (#2589)\n\n* fix comma missing from json dropped stats, adding test case\r\n\r\n* add PR2589 bugfix to changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "6bc92e3e8ce1e38c93825a9c02c9e8e2716c1078": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeDroppedSpanStats(final DroppedSpanStats droppedSpanStats)"
                ]
            },
            "8f5b5284cf16a65d159f61cebb9075e75234529e": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeDroppedSpanStats(final DroppedSpanStats droppedSpanStats)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "688d796e269f5a4cb6cbca0ce903560df4b0058a",
        "previous_commit": "9448f60455b00ebdf682e24bd5e9759b3e05e734",
        "date": 1557311467,
        "releases": {
            "previous": "688d796e269f5a4cb6cbca0ce903560df4b0058a",
            "next": "688d796e269f5a4cb6cbca0ce903560df4b0058a"
        },
        "commit_message": "Excluding Pilotfish NTMThreadPool from Executor instr and fix NPE (#626)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "688d796e269f5a4cb6cbca0ce903560df4b0058a": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public static void co.elastic.apm.agent.servlet.ServletTransactionHelper.setTransactionNameByServletClass(@Nullable String method, @Nullable Class<?> servletClass, StringBuilder transactionName)"
                ]
            },
            "9448f60455b00ebdf682e24bd5e9759b3e05e734": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public static void co.elastic.apm.agent.servlet.ServletTransactionHelper.setTransactionNameByServletClass(String method, @Nullable Class<?> servletClass, StringBuilder transactionName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "06c6cc17e636b0bc8e82c009a31a7ef509e951f1",
        "previous_commit": "b7eb8a43ab49a6ac0379e5a73bf6e0081364c51c",
        "date": 1521492274,
        "releases": {
            "previous": "06c6cc17e636b0bc8e82c009a31a7ef509e951f1",
            "next": "06c6cc17e636b0bc8e82c009a31a7ef509e951f1"
        },
        "commit_message": "Implement secret_token option\n\ncloses #2\n\nSigned-off-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "06c6cc17e636b0bc8e82c009a31a7ef509e951f1": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)"
                ]
            },
            "b7eb8a43ab49a6ac0379e5a73bf6e0081364c51c": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ApmServerHttpPayloadSender.java": [
                    "public void co.elastic.apm.report.ApmServerHttpPayloadSender.sendPayload(final Payload payload)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ff04b0693b2de435f9e6111e475088d500ea6262",
        "previous_commit": "4a6d9dae785ebba08a090d1e0093e486dd4e07c9",
        "date": 1563181564,
        "releases": {
            "previous": "ff04b0693b2de435f9e6111e475088d500ea6262",
            "next": "ff04b0693b2de435f9e6111e475088d500ea6262"
        },
        "commit_message": "Do not let Reporter Timer thread die (#704)\n\ncloses #700",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ff04b0693b2de435f9e6111e475088d500ea6262": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.run()"
                ]
            },
            "4a6d9dae785ebba08a090d1e0093e486dd4e07c9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.java": [
                    "public void co.elastic.apm.agent.report.IntakeV2ReportingEventHandler.run()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d1aca85c53b8f215098bf12ba449dcfa141b1a3e",
        "previous_commit": "c7d205e469f28dffe187a97155bbbee2a3336886",
        "date": 1654186922,
        "releases": {
            "previous": "d1aca85c53b8f215098bf12ba449dcfa141b1a3e",
            "next": "d1aca85c53b8f215098bf12ba449dcfa141b1a3e"
        },
        "commit_message": "remove transaction.status from otel transactions (#2660)\n\n* remove transaction.status from otel transactions\r\n\r\n* Update apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/test/java/specs/OTelBridgeStepsDefinitions.java\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* slightly better wording\r\n\r\n* update changelog\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d1aca85c53b8f215098bf12ba449dcfa141b1a3e": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelSpan.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.sdk.OTelSpan.setStatus(StatusCode statusCode, String description)"
                ]
            },
            "c7d205e469f28dffe187a97155bbbee2a3336886": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/sdk/OTelSpan.java": [
                    "public Span co.elastic.apm.agent.opentelemetry.sdk.OTelSpan.setStatus(StatusCode statusCode, String description)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7b8508530ef464c9a57a4443794a70c7161adcec",
        "previous_commit": "68f28cd18d15b10de5db6af996bed23b0a53c953",
        "date": 1652707036,
        "releases": {
            "previous": "7b8508530ef464c9a57a4443794a70c7161adcec",
            "next": "7b8508530ef464c9a57a4443794a70c7161adcec"
        },
        "commit_message": "Exclude proxies in TimerTaskInstrumentation (#2620)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7b8508530ef464c9a57a4443794a70c7161adcec": {
                "apm-agent-plugins/apm-scheduled-annotation-plugin/src/main/java/co/elastic/apm/agent/scheduled/TimerTaskInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.scheduled.TimerTaskInstrumentation.getTypeMatcher()"
                ]
            },
            "68f28cd18d15b10de5db6af996bed23b0a53c953": {
                "apm-agent-plugins/apm-scheduled-annotation-plugin/src/main/java/co/elastic/apm/agent/scheduled/TimerTaskInstrumentation.java": [
                    "public ElementMatcher<? super TypeDescription> co.elastic.apm.agent.scheduled.TimerTaskInstrumentation.getTypeMatcher()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c46b17b9fe3d419a60b9c1371adcad10e3d6c82b",
        "previous_commit": "edde161051d71654959cd50ff7c8fc2f738e5354",
        "date": 1689171868,
        "releases": {
            "previous": "c46b17b9fe3d419a60b9c1371adcad10e3d6c82b",
            "next": "c46b17b9fe3d419a60b9c1371adcad10e3d6c82b"
        },
        "commit_message": "Jakarta jms (#3198)\n\n* add jakarta to Messaging config doc\r\n\r\n* rename all classes importing javax.jms from package *.jms.* to *.jms.javax.*\r\n\r\n* add jakarta.jms to package info\r\n\r\n* add jakarta.jms dependency\r\n\r\n* add jakarta.jms instrumentation\r\n\r\n* refactor text package names needed to get instrumentation working and tests passing\r\n\r\n* refactor to combine common code into base classes\r\n\r\n* fix a few broken things\r\n\r\n* fix Object/String break\r\n\r\n* fix remaining test failures\r\n\r\n* fix minor things while doing diff\r\n\r\n* refactor to split javax and jakarta instrumentations\r\n\r\n* fix javadoc break\r\n\r\n* add change log entry\r\n\r\n* minor whitespace difference\r\n\r\n* fixing merge conflicts\r\n\r\n---------\r\n\r\nCo-authored-by: Sylvain Juge <763082+SylvainJuge@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c46b17b9fe3d419a60b9c1371adcad10e3d6c82b": {
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/BaseJmsInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.jms.BaseJmsInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": []
            },
            "edde161051d71654959cd50ff7c8fc2f738e5354": {
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/BaseJmsInstrumentation.java": [
                    "public ElementMatcher.Junction<ClassLoader> co.elastic.apm.agent.jms.BaseJmsInstrumentation.getClassLoaderMatcher()"
                ],
                "apm-agent-plugins/apm-jms-plugin/apm-jms-plugin-base/src/main/java/co/elastic/apm/agent/jms/JmsInstrumentationHelper.java": [
                    "public void co.elastic.apm.agent.jms.JmsInstrumentationHelper.addMessageDetails(@Nullable Message message, AbstractSpan<?> span)",
                    "public void co.elastic.apm.agent.jms.JmsInstrumentationHelper.setMessageAge(Message message, AbstractSpan<?> span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "bc4c85c59c14dcb06559e87db27cb7f52275d808",
        "previous_commit": "012a9d6d7d4add80a65f3127abeb6e1d4c20cf1a",
        "date": 1553173180,
        "releases": {
            "previous": "bc4c85c59c14dcb06559e87db27cb7f52275d808",
            "next": "bc4c85c59c14dcb06559e87db27cb7f52275d808"
        },
        "commit_message": "Align default transaction name to '<method> unknown route' (#542)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "bc4c85c59c14dcb06559e87db27cb7f52275d808": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "void co.elastic.apm.agent.servlet.ServletTransactionHelper.applyDefaultTransactionName(String method, String servletPath, @Nullable String pathInfo, StringBuilder transactionName)"
                ]
            },
            "012a9d6d7d4add80a65f3127abeb6e1d4c20cf1a": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "void co.elastic.apm.agent.servlet.ServletTransactionHelper.applyDefaultTransactionName(String method, String servletPath, @Nullable String pathInfo, StringBuilder transactionName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "12e78a34a3274ae291fd1c6d1bc1a62fe8fab710",
        "previous_commit": "811e4efc0d1ddfa587119345a967120a3d87d78a",
        "date": 1688717468,
        "releases": {
            "previous": "12e78a34a3274ae291fd1c6d1bc1a62fe8fab710",
            "next": "12e78a34a3274ae291fd1c6d1bc1a62fe8fab710"
        },
        "commit_message": "Fix servlet path normalization (#3222)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "12e78a34a3274ae291fd1c6d1bc1a62fe8fab710": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public String co.elastic.apm.agent.servlet.ServletTransactionHelper.normalizeServletPath(String requestURI, @Nullable String contextPath, @Nullable String servletPath, @Nullable String pathInfo)"
                ]
            },
            "811e4efc0d1ddfa587119345a967120a3d87d78a": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "public String co.elastic.apm.agent.servlet.ServletTransactionHelper.normalizeServletPath(String requestURI, @Nullable String contextPath, @Nullable String servletPath, @Nullable String pathInfo)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "2d9f8cd3510963a90bd12bc06a1ceac886bbf5fe",
        "previous_commit": "4409da32aafb27608d2a195a8d9c97a85452a70f",
        "date": 1683292889,
        "releases": {
            "previous": "2d9f8cd3510963a90bd12bc06a1ceac886bbf5fe",
            "next": "2d9f8cd3510963a90bd12bc06a1ceac886bbf5fe"
        },
        "commit_message": "Capture S3 bucket+key as otel attributes (#3136)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "2d9f8cd3510963a90bd12bc06a1ceac886bbf5fe": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpan.java": [
                    "public <T> Span co.elastic.apm.agent.opentelemetry.tracing.OTelSpan.setAttribute(AttributeKey<T> key, @Nonnull T value)"
                ]
            },
            "4409da32aafb27608d2a195a8d9c97a85452a70f": {
                "apm-agent-plugins/apm-opentelemetry/apm-opentelemetry-plugin/src/main/java/co/elastic/apm/agent/opentelemetry/tracing/OTelSpan.java": [
                    "public <T> Span co.elastic.apm.agent.opentelemetry.tracing.OTelSpan.setAttribute(AttributeKey<T> key, @Nonnull T value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d9264f4eaae7069d12b08ffaec38030ba2fc0cab",
        "previous_commit": "dfe033d029e3d75e47c2028f052f67db5d41fc10",
        "date": 1675688474,
        "releases": {
            "previous": "d9264f4eaae7069d12b08ffaec38030ba2fc0cab",
            "next": "d9264f4eaae7069d12b08ffaec38030ba2fc0cab"
        },
        "commit_message": "Ensured that a connection is closed on connection failure (#2869)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d9264f4eaae7069d12b08ffaec38030ba2fc0cab": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)"
                ]
            },
            "dfe033d029e3d75e47c2028f052f67db5d41fc10": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java": [
                    "protected HttpURLConnection co.elastic.apm.agent.report.AbstractIntakeApiHandler.startRequest(String endpoint)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "92ff1afb577a9882e0187a14a1669057fbf29bae",
        "previous_commit": "78ec376cf0541244d329a3be0a3d3223e981ec73",
        "date": 1530345432,
        "releases": {
            "previous": "92ff1afb577a9882e0187a14a1669057fbf29bae",
            "next": "92ff1afb577a9882e0187a14a1669057fbf29bae"
        },
        "commit_message": "Avoid boxing of sequence when logging event\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "92ff1afb577a9882e0187a14a1669057fbf29bae": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            },
            "78ec376cf0541244d329a3be0a3d3223e981ec73": {
                "apm-agent-core/src/main/java/co/elastic/apm/report/ReportingEventHandler.java": [
                    "public void co.elastic.apm.report.ReportingEventHandler.onEvent(ReportingEvent event, long sequence, boolean endOfBatch)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "1175d6678cda533da36a387cb50cf227b7b1dd9f",
        "previous_commit": "72573b6667fc871f707216eb1d8ffcd52d081f25",
        "date": 1638369601,
        "releases": {
            "previous": "1175d6678cda533da36a387cb50cf227b7b1dd9f",
            "next": "1175d6678cda533da36a387cb50cf227b7b1dd9f"
        },
        "commit_message": "test: synchronizing gherkin spec (#2262)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "1175d6678cda533da36a387cb50cf227b7b1dd9f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private static String co.elastic.apm.agent.report.ApmServerClient.getUserAgent(CoreConfiguration coreConfiguration)"
                ]
            },
            "72573b6667fc871f707216eb1d8ffcd52d081f25": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerClient.java": [
                    "private static String co.elastic.apm.agent.report.ApmServerClient.getUserAgent(CoreConfiguration coreConfiguration)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "5893d1202a2f43e8770f5298cda31c66e5336096",
        "previous_commit": "6ece42d7f13929af1d5a1c2857706b433b0bcc8a",
        "date": 1536321445,
        "releases": {
            "previous": "5893d1202a2f43e8770f5298cda31c66e5336096",
            "next": "5893d1202a2f43e8770f5298cda31c66e5336096"
        },
        "commit_message": "Align configuration options with other agents (#188)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "5893d1202a2f43e8770f5298cda31c66e5336096": {
                "apm-agent-core/src/main/java/co/elastic/apm/configuration/StartupInfo.java": [
                    "public void co.elastic.apm.configuration.StartupInfo.start(ElasticApmTracer tracer)"
                ]
            },
            "6ece42d7f13929af1d5a1c2857706b433b0bcc8a": {
                "apm-agent-core/src/main/java/co/elastic/apm/configuration/StartupInfo.java": [
                    "public void co.elastic.apm.configuration.StartupInfo.start(ElasticApmTracer tracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4f2e3870c79e73c2cbecd791f13ec1a67f76d222",
        "previous_commit": "666eb4b54c53b9e180ac4ede524ea0918ae1a8fc",
        "date": 1542383830,
        "releases": {
            "previous": "4f2e3870c79e73c2cbecd791f13ec1a67f76d222",
            "next": "4f2e3870c79e73c2cbecd791f13ec1a67f76d222"
        },
        "commit_message": "Don't use Instant.now() (#307)\n\nThe JIT does not reliably allocate the instant on the stack.\r\nThe UI guards against clock skew and microsecond precision\r\nbetween services is not attainable anyway.",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4f2e3870c79e73c2cbecd791f13ec1a67f76d222": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/EpochTickClock.java": [
                    "public long co.elastic.apm.impl.transaction.EpochTickClock.init()"
                ]
            },
            "666eb4b54c53b9e180ac4ede524ea0918ae1a8fc": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/EpochTickClock.java": [
                    "public long co.elastic.apm.impl.transaction.EpochTickClock.init()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "bb102ea76137e9627e7716ee9ddf48cf2d3f4413",
        "previous_commit": "9ccfab202a5988cb5025753cad9b622cf90febb7",
        "date": 1659261695,
        "releases": {
            "previous": "bb102ea76137e9627e7716ee9ddf48cf2d3f4413",
            "next": "bb102ea76137e9627e7716ee9ddf48cf2d3f4413"
        },
        "commit_message": "guard against NPE in bb warmup error handling (#2720)\n\n* guard against NPE in bb warmup error handling\r\n\r\n* Update apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ErrorLoggingListener.java\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "bb102ea76137e9627e7716ee9ddf48cf2d3f4413": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ErrorLoggingListener.java": [
                    "public void co.elastic.apm.agent.bci.bytebuddy.ErrorLoggingListener.onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable)"
                ]
            },
            "9ccfab202a5988cb5025753cad9b622cf90febb7": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/ErrorLoggingListener.java": [
                    "public void co.elastic.apm.agent.bci.bytebuddy.ErrorLoggingListener.onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "15b9351dabc28e3d028407c8209fd435d4d1a9c4",
        "previous_commit": "53639138bd646e4ac57c67b9d1d99445291f1e9f",
        "date": 1544456156,
        "releases": {
            "previous": "15b9351dabc28e3d028407c8209fd435d4d1a9c4",
            "next": "15b9351dabc28e3d028407c8209fd435d4d1a9c4"
        },
        "commit_message": "Set correct user-agent header for health check (#365)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "15b9351dabc28e3d028407c8209fd435d4d1a9c4": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public void co.elastic.apm.agent.report.ApmServerHealthChecker.run()"
                ]
            },
            "53639138bd646e4ac57c67b9d1d99445291f1e9f": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ApmServerHealthChecker.java": [
                    "public void co.elastic.apm.agent.report.ApmServerHealthChecker.run()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "104af5c65ef2730f29161d487eac5428e23be0fb",
        "previous_commit": "cc4e3e6ce81fa5b0d2e5dbb052e417b4b4c56339",
        "date": 1665487147,
        "releases": {
            "previous": "104af5c65ef2730f29161d487eac5428e23be0fb",
            "next": "104af5c65ef2730f29161d487eac5428e23be0fb"
        },
        "commit_message": "Added debug logs for proxy settings when the agent initiates connections (#2837)\n\n\r\nCo-authored-by: Sylvain Juge <sylvain.juge@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "104af5c65ef2730f29161d487eac5428e23be0fb": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/UrlConnectionUtils.java": [
                    "public static URLConnection co.elastic.apm.agent.util.UrlConnectionUtils.openUrlConnectionThreadSafely(URL url)"
                ]
            },
            "cc4e3e6ce81fa5b0d2e5dbb052e417b4b4c56339": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/util/UrlConnectionUtils.java": [
                    "public static URLConnection co.elastic.apm.agent.util.UrlConnectionUtils.openUrlConnectionThreadSafely(URL url)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "ea2b539b7ca3d9061ab76cd7412eabe055a1cf83",
        "previous_commit": "eee6837731cffa2f5150d257cbb4dc9950d83ebc",
        "date": 1622014742,
        "releases": {
            "previous": "ea2b539b7ca3d9061ab76cd7412eabe055a1cf83",
            "next": "ea2b539b7ca3d9061ab76cd7412eabe055a1cf83"
        },
        "commit_message": "Give precedence to w3c traceparent header (#1821)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "ea2b539b7ca3d9061ab76cd7412eabe055a1cf83": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext child, @Nullable Object carrier, TextHeaderGetter<Object> traceContextHeaderGetter)"
                ]
            },
            "eee6837731cffa2f5150d257cbb4dc9950d83ebc": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "public boolean co.elastic.apm.agent.impl.transaction.TraceContext.asChildOf(TraceContext child, @Nullable Object carrier, TextHeaderGetter<Object> traceContextHeaderGetter)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8ad5e7119c9e9d254788a74408180e61aba3edf6",
        "previous_commit": "51fade7824197b62ed3fc2b5105ae08b5e44e3b0",
        "date": 1659426038,
        "releases": {
            "previous": "8ad5e7119c9e9d254788a74408180e61aba3edf6",
            "next": "8ad5e7119c9e9d254788a74408180e61aba3edf6"
        },
        "commit_message": "Capture db.instance for Cassandra (#2684)\n\ncapture keyspace for cassandra",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8ad5e7119c9e9d254788a74408180e61aba3edf6": {
                "apm-agent-plugins/apm-cassandra/apm-cassandra-core-plugin/src/main/java/co/elastic/apm/agent/cassandra/CassandraHelper.java": [
                    "public Span co.elastic.apm.agent.cassandra.CassandraHelper.startCassandraSpan(@Nullable String query, boolean preparedStatement, @Nullable String keyspace)"
                ]
            },
            "51fade7824197b62ed3fc2b5105ae08b5e44e3b0": {
                "apm-agent-plugins/apm-cassandra/apm-cassandra-core-plugin/src/main/java/co/elastic/apm/agent/cassandra/CassandraHelper.java": [
                    "public Span co.elastic.apm.agent.cassandra.CassandraHelper.startCassandraSpan(@Nullable String query, boolean preparedStatement)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4f212f98be4a17774cf3fc4cc423c52abc3864fc",
        "previous_commit": "eda55e716b0495473c9100348155b60acf383668",
        "date": 1646842949,
        "releases": {
            "previous": "4f212f98be4a17774cf3fc4cc423c52abc3864fc",
            "next": "4f212f98be4a17774cf3fc4cc423c52abc3864fc"
        },
        "commit_message": "Added support for dropping fast exit spans (#2491)\n\n* Added support for dropping fast exit spans\r\n\r\n* Added #2491 to the changelog\r\n\r\n* Update apm-agent-core/src/main/java/co/elastic/apm/agent/configuration/SpanConfiguration.java\r\n\r\nCo-authored-by: jackshirazi <jacks@fasterj.com>\r\n\r\n* Review by @jackshirazi\r\n\r\n* Adapt to the changed spec\r\n\r\n* Review by @felixbarny\r\n\r\nCo-authored-by: jackshirazi <jacks@fasterj.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4f212f98be4a17774cf3fc4cc423c52abc3864fc": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ]
            },
            "eda55e716b0495473c9100348155b60acf383668": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public void co.elastic.apm.agent.impl.ElasticApmTracer.endSpan(Span span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "d27c984f2c916fedd2f89c63c7b53befa3a5714b",
        "previous_commit": "7d480a9d95feef77e4da908b8e66746ae02e7239",
        "date": 1571305552,
        "releases": {
            "previous": "d27c984f2c916fedd2f89c63c7b53befa3a5714b",
            "next": "d27c984f2c916fedd2f89c63c7b53befa3a5714b"
        },
        "commit_message": "Do not extract request remote address from headers (#889)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "d27c984f2c916fedd2f89c63c7b53befa3a5714b": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequest(Request request, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr)"
                ]
            },
            "7d480a9d95feef77e4da908b8e66746ae02e7239": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/ServletTransactionHelper.java": [
                    "private void co.elastic.apm.agent.servlet.ServletTransactionHelper.fillRequest(Request request, String protocol, String method, boolean secure, String scheme, String serverName, int serverPort, String requestURI, String queryString, String remoteAddr)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "50104e9fc7f6c156b9343e3e9db55dba5f3cda3b",
        "previous_commit": "15e6803611d0894dffe97ec4dfcbb6250cd9af05",
        "date": 1638797037,
        "releases": {
            "previous": "50104e9fc7f6c156b9343e3e9db55dba5f3cda3b",
            "next": "50104e9fc7f6c156b9343e3e9db55dba5f3cda3b"
        },
        "commit_message": "Compatibility test JDK 17 (#2184)\n\n* enable jdk 17 + disable 15,16\r\n\r\n* Adding utility to mock environment variables\r\n\r\n* update war plugin\r\n\r\n* update maven to 3.8.3\r\n\r\n* update javadoc plugin version\r\n\r\n* log4j1 broken on Java 17, just disable tests\r\n\r\n* add log4j1 instrumentation for test\r\n\r\n* fix log4j1 to keep testing it\r\n\r\n* fix typo\r\n\r\n* fix log correlaction plugin\r\n\r\n* fix logging activation listener test\r\n\r\n* fix the url connection plugin test\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "50104e9fc7f6c156b9343e3e9db55dba5f3cda3b": {
                ".mvn/wrapper/MavenWrapperDownloader.java": [
                    "private static void MavenWrapperDownloader.downloadFileFromURL(String urlString, File destination)"
                ]
            },
            "15e6803611d0894dffe97ec4dfcbb6250cd9af05": {
                ".mvn/wrapper/MavenWrapperDownloader.java": [
                    "private static void MavenWrapperDownloader.downloadFileFromURL(String urlString, File destination)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "06ff9a7b9928b001171902b0e8c6ba90a50d8a12",
        "previous_commit": "4f2d976f7693b1a55d2910d6451a1fa450fb6b16",
        "date": 1538720656,
        "releases": {
            "previous": "06ff9a7b9928b001171902b0e8c6ba90a50d8a12",
            "next": "06ff9a7b9928b001171902b0e8c6ba90a50d8a12"
        },
        "commit_message": "Fix Span.start to be in millis instead of micros\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "06ff9a7b9928b001171902b0e8c6ba90a50d8a12": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(Transaction transaction, @Nullable Span parentSpan, long epochMicros, boolean dropped)"
                ]
            },
            "4f2d976f7693b1a55d2910d6451a1fa450fb6b16": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/Span.java": [
                    "public Span co.elastic.apm.impl.transaction.Span.start(Transaction transaction, @Nullable Span parentSpan, long epochMicros, boolean dropped)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "74be28289733efed8afe8196a728167993c78ad0",
        "previous_commit": "89b3c963b54edce519547effce4a6352693dc439",
        "date": 1646117761,
        "releases": {
            "previous": "74be28289733efed8afe8196a728167993c78ad0",
            "next": "74be28289733efed8afe8196a728167993c78ad0"
        },
        "commit_message": "Create the JDBC spans as exit spans (#2484)\n\n* Create the JDBC spans as exit spans\r\n\r\n* Added #2484 to the changelog",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "74be28289733efed8afe8196a728167993c78ad0": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)"
                ]
            },
            "89b3c963b54edce519547effce4a6352693dc439": {
                "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/helper/JdbcHelper.java": [
                    "public Span co.elastic.apm.agent.jdbc.helper.JdbcHelper.createJdbcSpan(@Nullable String sql, Object statement, @Nullable AbstractSpan<?> parent, boolean preparedStatement)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "efe97c9bf02dfcca62a94ff655b517326398d296",
        "previous_commit": "87dc99a5d00ba2a187e0a0e04569810b6014f4a9",
        "date": 1636452932,
        "releases": {
            "previous": "efe97c9bf02dfcca62a94ff655b517326398d296",
            "next": "efe97c9bf02dfcca62a94ff655b517326398d296"
        },
        "commit_message": "renamed span_frames_min_duration to span_stack_trace_min_duration. Ch\u2026 (#2220)\n\n* renamed span_frames_min_duration to span_stack_trace_min_duration. Changed logic when reporting.\r\n\r\n* added entry to changelog\r\n\r\n* fixed according to comments\r\n\r\n* fixed according to comments\r\n\r\n* added StacktraceConfigurationTest\r\n\r\n* added headers\r\n\r\n* updated logic and tests\r\n\r\n* Update apm-agent-core/src/main/java/co/elastic/apm/agent/impl/stacktrace/StacktraceConfiguration.java\r\n\r\ndeleted aliasKey\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* updated changelog\r\n\r\n* Update apm-agent-core/src/main/java/co/elastic/apm/agent/impl/stacktrace/StacktraceConfiguration.java\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* Update CHANGELOG.asciidoc\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* Update apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\n\r\n* added logic with check default value of spanFramesMinDurationMsValue\r\n\r\n* fixed remaining references to config-span-frames-min-duration\r\n\r\n* fixed reference in CoreConfiguration\r\n\r\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\r\nCo-authored-by: Felix Barnsteiner <felix.barnsteiner@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "efe97c9bf02dfcca62a94ff655b517326398d296": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private void co.elastic.apm.agent.impl.ElasticApmTracer.reportSpan(Span span)"
                ]
            },
            "87dc99a5d00ba2a187e0a0e04569810b6014f4a9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "private void co.elastic.apm.agent.impl.ElasticApmTracer.reportSpan(Span span)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "b45bf3ef67842ac26cf7f0b3207fb4b0b9b78bdb",
        "previous_commit": "86b7d18f64714fe037765362c7a2941b10f753b0",
        "date": 1588065594,
        "releases": {
            "previous": "b45bf3ef67842ac26cf7f0b3207fb4b0b9b78bdb",
            "next": "b45bf3ef67842ac26cf7f0b3207fb4b0b9b78bdb"
        },
        "commit_message": "Fix OpenTracing error tag handling (#1159)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "b45bf3ef67842ac26cf7f0b3207fb4b0b9b78bdb": {
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.agent.opentracing.impl.ApmSpanInstrumentation.handleSpecialTransactionTag(Transaction transaction, String key, Object value)"
                ]
            },
            "86b7d18f64714fe037765362c7a2941b10f753b0": {
                "apm-agent-plugins/apm-opentracing-plugin/src/main/java/co/elastic/apm/agent/opentracing/impl/ApmSpanInstrumentation.java": [
                    "private static boolean co.elastic.apm.agent.opentracing.impl.ApmSpanInstrumentation.handleSpecialTransactionTag(Transaction transaction, String key, Object value)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "247295a2288261d688581a5c9ac3cd3a355946b1",
        "previous_commit": "daa833e9229e0f9136b5746d805a7b2b312191f5",
        "date": 1648630296,
        "releases": {
            "previous": "247295a2288261d688581a5c9ac3cd3a355946b1",
            "next": "247295a2288261d688581a5c9ac3cd3a355946b1"
        },
        "commit_message": "Fix/refactor unsampled tests (#2553)\n\n* test fix & refactor\r\n\r\n* remove duplicated test\r\n\r\n* Update apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>\r\n\r\n* Revert \"Update apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java\"\r\n\r\nThis reverts commit 826f281bc84b443aa8438c8c8c885f477e2fe1c7.\r\n\r\n* thou shalt not write inconsistent comments\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "247295a2288261d688581a5c9ac3cd3a355946b1": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ]
            },
            "daa833e9229e0f9136b5746d805a7b2b312191f5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java": [
                    "private ElasticApmTracer co.elastic.apm.agent.impl.ElasticApmTracerBuilder.build(boolean startTracer)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7b52d0e32f46abd683b12eaa668b6744609d7335",
        "previous_commit": "231acb3027ba6cdc42c39a11eae829fc1dcdb9cf",
        "date": 1632420761,
        "releases": {
            "previous": "7b52d0e32f46abd683b12eaa668b6744609d7335",
            "next": "7b52d0e32f46abd683b12eaa668b6744609d7335"
        },
        "commit_message": "Fix ignore on request path (#2146)\n\n* use request path + extra tests\r\n\r\n\r\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7b52d0e32f46abd683b12eaa668b6744609d7335": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ServletTransactionCreationHelper.java": [
                    "boolean co.elastic.apm.agent.servlet.helper.ServletTransactionCreationHelper.isExcluded(HttpServletRequest request)"
                ]
            },
            "231acb3027ba6cdc42c39a11eae829fc1dcdb9cf": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/helper/ServletTransactionCreationHelper.java": [
                    "private boolean co.elastic.apm.agent.servlet.helper.ServletTransactionCreationHelper.isExcluded(HttpServletRequest request)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c8309f821e968bce86bdcf82b331d57a8cde15a5",
        "previous_commit": "1aaa043f9e441d75ada809f1c17f55b87a778a31",
        "date": 1571833740,
        "releases": {
            "previous": "c8309f821e968bce86bdcf82b331d57a8cde15a5",
            "next": "c8309f821e968bce86bdcf82b331d57a8cde15a5"
        },
        "commit_message": "Add warning message when transaction_max_spans is exceeded (#890)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c8309f821e968bce86bdcf82b331d57a8cde15a5": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <T> Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros)"
                ]
            },
            "1aaa043f9e441d75ada809f1c17f55b87a778a31": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java": [
                    "public <T> Span co.elastic.apm.agent.impl.ElasticApmTracer.startSpan(TraceContext.ChildContextCreator<T> childContextCreator, T parentContext, long epochMicros)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8abcf4e862b66f2693635caa577749c9868adb14",
        "previous_commit": "6ae11251c9f534fa6de88a646d314d0463256e84",
        "date": 1569316961,
        "releases": {
            "previous": "8abcf4e862b66f2693635caa577749c9868adb14",
            "next": "8abcf4e862b66f2693635caa577749c9868adb14"
        },
        "commit_message": "Add capture_jmx_metrics option (#801)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8abcf4e862b66f2693635caa577749c9868adb14": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java": [
                    "public double co.elastic.apm.agent.metrics.MetricRegistry.getGauge(String name, Labels labels)"
                ]
            },
            "6ae11251c9f534fa6de88a646d314d0463256e84": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java": [
                    "public double co.elastic.apm.agent.metrics.MetricRegistry.getGauge(String name, Labels labels)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "04aeded60533c097c2ed4996da758f7f6d89086b",
        "previous_commit": "2a2f8646c5c17ff3b467f67671529bfc65e032df",
        "date": 1690978093,
        "releases": {
            "previous": "04aeded60533c097c2ed4996da758f7f6d89086b",
            "next": "04aeded60533c097c2ed4996da758f7f6d89086b"
        },
        "commit_message": "Fixed micrometer histograms to be non-cumulative (#3264)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "04aeded60533c097c2ed4996da758f7f6d89086b": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "private static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeHistogram(Meter.Id id, HistogramSnapshot histogramSnapshot, JsonWriter jw, StringBuilder replaceBuilder, boolean dedotMetricName)"
                ]
            },
            "2a2f8646c5c17ff3b467f67671529bfc65e032df": {
                "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMeterRegistrySerializer.java": [
                    "private static void co.elastic.apm.agent.micrometer.MicrometerMeterRegistrySerializer.serializeHistogram(Meter.Id id, HistogramSnapshot histogramSnapshot, JsonWriter jw, StringBuilder replaceBuilder, boolean dedotMetricName)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "03638499be83e946050dc0d26cf465ba6e2d7195",
        "previous_commit": "ff83feb1f99cd6059ccaf31383f38b7aa2600892",
        "date": 1656506421,
        "releases": {
            "previous": "03638499be83e946050dc0d26cf465ba6e2d7195",
            "next": "03638499be83e946050dc0d26cf465ba6e2d7195"
        },
        "commit_message": "Fix API annotations `discardable` instrumentation (#2682)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "03638499be83e946050dc0d26cf465ba6e2d7195": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/AnnotationValueOffsetMappingFactory.java": [
                    "private Object co.elastic.apm.agent.bci.bytebuddy.AnnotationValueOffsetMappingFactory.getAnnotationValue(MethodDescription instrumentedMethod, AnnotationValueExtractor annotationValueExtractor)"
                ]
            },
            "ff83feb1f99cd6059ccaf31383f38b7aa2600892": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/bytebuddy/AnnotationValueOffsetMappingFactory.java": [
                    "private Object co.elastic.apm.agent.bci.bytebuddy.AnnotationValueOffsetMappingFactory.getAnnotationValue(MethodDescription instrumentedMethod, AnnotationValueExtractor annotationValueExtractor)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "475b8838387f5f885446e2506bb58e94d62a4f03",
        "previous_commit": "ee727ac4c786b64e73b7aaee6bf4981153b477b6",
        "date": 1560343915,
        "releases": {
            "previous": "475b8838387f5f885446e2506bb58e94d62a4f03",
            "next": "475b8838387f5f885446e2506bb58e94d62a4f03"
        },
        "commit_message": "Removing abs_path and adding module to serialized stack frames (#659)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "475b8838387f5f885446e2506bb58e94d62a4f03": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStackTraceElement(StackTraceElement stacktrace)"
                ]
            },
            "ee727ac4c786b64e73b7aaee6bf4981153b477b6": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/report/serialize/DslJsonSerializer.java": [
                    "private void co.elastic.apm.agent.report.serialize.DslJsonSerializer.serializeStackTraceElement(StackTraceElement stacktrace)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8808b9b1008f509d8fd75bc3b69c6096f818baa0",
        "previous_commit": "0c2e1f91aa73eb2e06423b7eabde27fb360e28f5",
        "date": 1686575838,
        "releases": {
            "previous": "8808b9b1008f509d8fd75bc3b69c6096f818baa0",
            "next": "8808b9b1008f509d8fd75bc3b69c6096f818baa0"
        },
        "commit_message": "Prevent NoSuchMethodErrors on pre Servlet-api 3.0 versions in spring instrumentation. (#3172)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8808b9b1008f509d8fd75bc3b69c6096f818baa0": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/adapter/JavaxServletApiAdapter.java": [
                    "public ClassLoader co.elastic.apm.agent.servlet.adapter.JavaxServletApiAdapter.getClassLoader(@Nullable ServletContext servletContext)"
                ]
            },
            "0c2e1f91aa73eb2e06423b7eabde27fb360e28f5": {
                "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/adapter/JavaxServletApiAdapter.java": [
                    "public ClassLoader co.elastic.apm.agent.servlet.adapter.JavaxServletApiAdapter.getClassLoader(@Nullable ServletContext servletContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "f40835108525af13c159490ef422fc17bcab6fab",
        "previous_commit": "83e6295b0392183773d1d555d4c7bfaeea1023c6",
        "date": 1533806433,
        "releases": {
            "previous": "f40835108525af13c159490ef422fc17bcab6fab",
            "next": "f40835108525af13c159490ef422fc17bcab6fab"
        },
        "commit_message": "Add more tests for TraceContext flag handling\n\nrelates to #155\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "f40835108525af13c159490ef422fc17bcab6fab": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.impl.transaction.TraceContext.asChildOf(TraceContext traceContext)"
                ]
            },
            "83e6295b0392183773d1d555d4c7bfaeea1023c6": {
                "apm-agent-core/src/main/java/co/elastic/apm/impl/transaction/TraceContext.java": [
                    "public void co.elastic.apm.impl.transaction.TraceContext.asChildOf(TraceContext traceContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "c0a4ee6b4f48d6e3eb74e8a103540ce658c6f6ac",
        "previous_commit": "a375d0936a8ecb221225fb18014aeaf94b1122fd",
        "date": 1635843520,
        "releases": {
            "previous": "c0a4ee6b4f48d6e3eb74e8a103540ce658c6f6ac",
            "next": "c0a4ee6b4f48d6e3eb74e8a103540ce658c6f6ac"
        },
        "commit_message": "added support to spring amqp batch (#1716)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "c0a4ee6b4f48d6e3eb74e8a103540ce658c6f6ac": {
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/SpringAmqpTransactionNameUtil.java": [
                    "public static String co.elastic.apm.agent.rabbitmq.SpringAmqpTransactionNameUtil.getTransactionNamePrefix(Object listener)"
                ]
            },
            "a375d0936a8ecb221225fb18014aeaf94b1122fd": {
                "apm-agent-plugins/apm-rabbitmq/apm-rabbitmq-spring/src/main/java/co/elastic/apm/agent/rabbitmq/SpringAmqpTransactionNameUtil.java": [
                    "public static String co.elastic.apm.agent.rabbitmq.SpringAmqpTransactionNameUtil.getTransactionNamePrefix(Object listener)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "7eeda8805e0296a40dc37dbbc5acf5980912a1e0",
        "previous_commit": "3e3f2e3ddffaa0bee8d2dbefee48c3492ad0b7a6",
        "date": 1604409902,
        "releases": {
            "previous": "7eeda8805e0296a40dc37dbbc5acf5980912a1e0",
            "next": "7eeda8805e0296a40dc37dbbc5acf5980912a1e0"
        },
        "commit_message": "Fix spring app name startup exception (#1464)\n\n* fix set app name on startup",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "7eeda8805e0296a40dc37dbbc5acf5980912a1e0": {
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            },
            "3e3f2e3ddffaa0bee8d2dbefee48c3492ad0b7a6": {
                "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/springwebmvc/SpringServiceNameInstrumentation.java": [
                    "public static void co.elastic.apm.agent.springwebmvc.SpringServiceNameInstrumentation.afterInitPropertySources(@Advice.This WebApplicationContext applicationContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "8a02a416cd50e97d9ff754d6aa5c6274f5a5ac84",
        "previous_commit": "c943c27b9e3864b06d5a1853b45b0341386d4db9",
        "date": 1643723344,
        "releases": {
            "previous": "8a02a416cd50e97d9ff754d6aa5c6274f5a5ac84",
            "next": "8a02a416cd50e97d9ff754d6aa5c6274f5a5ac84"
        },
        "commit_message": "Speedup instrumentation by not validating (only needed in tests) (#2439)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "8a02a416cd50e97d9ff754d6aa5c6274f5a5ac84": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ]
            },
            "c943c27b9e3864b06d5a1853b45b0341386d4db9": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java": [
                    "private static AgentBuilder.Transformer.ForAdvice co.elastic.apm.agent.bci.ElasticApmAgent.getTransformer(final ElasticApmInstrumentation instrumentation, final Logger logger, final ElementMatcher<? super MethodDescription> methodMatcher)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "e6e77491def25327d5fdd79ac9ac08451eb5599d",
        "previous_commit": "e9aacfdd2551dd52baae5881079c8597ea3d8cca",
        "date": 1662984608,
        "releases": {
            "previous": "e6e77491def25327d5fdd79ac9ac08451eb5599d",
            "next": "e6e77491def25327d5fdd79ac9ac08451eb5599d"
        },
        "commit_message": "Make traceparent header creation thread-safe (#2747)\n\n",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "e6e77491def25327d5fdd79ac9ac08451eb5599d": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "StringBuilder co.elastic.apm.agent.impl.transaction.TraceContext.getOutgoingTraceParentTextHeader()"
                ]
            },
            "e9aacfdd2551dd52baae5881079c8597ea3d8cca": {
                "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java": [
                    "StringBuilder co.elastic.apm.agent.impl.transaction.TraceContext.getOutgoingTraceParentTextHeader()"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    },
    {
        "commit": "4a71676aba36b9ec2b4bc29917f988681cf2207d",
        "previous_commit": "4c85b2ca5d5da2d9e5587d396f4d78e0659c18cf",
        "date": 1681373913,
        "releases": {
            "previous": "4a71676aba36b9ec2b4bc29917f988681cf2207d",
            "next": "4a71676aba36b9ec2b4bc29917f988681cf2207d"
        },
        "commit_message": "Added a integration test for Quarkus (#1765)\n\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>\r\nCo-authored-by: Jonas Kunz <jonas.kunz@elastic.co>",
        "jmh_dependency": {
            "benchmark_directory": "apm-agent-benchmarks",
            "benchmark_name": "benchmarks.jar",
            "benchmark_module": "apm-agent-benchmarks"
        },
        "method_changes": {
            "4a71676aba36b9ec2b4bc29917f988681cf2207d": {
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebHelper.java": [
                    "protected void co.elastic.apm.agent.vertx.AbstractVertxWebHelper.setRouteBasedTransactionName(Transaction<?> transaction, RoutingContext routingContext)"
                ]
            },
            "4c85b2ca5d5da2d9e5587d396f4d78e0659c18cf": {
                "apm-agent-plugins/apm-vertx/apm-vertx-common/src/main/java/co/elastic/apm/agent/vertx/AbstractVertxWebHelper.java": [
                    "protected void co.elastic.apm.agent.vertx.AbstractVertxWebHelper.setRouteBasedTransactionName(Transaction<?> transaction, RoutingContext routingContext)"
                ]
            }
        },
        "java_version": {
            "version": "1.8",
            "should_update_pom": true
        }
    }
]